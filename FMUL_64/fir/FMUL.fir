;buildInfoPackage: chisel3, version: 3.3.1, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit FMUL : 
  module CLZ : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<108>, out : UInt<7>}
    
    node _T = bits(io.in, 0, 0) @[CLZ.scala 16:35]
    node _T_1 = bits(io.in, 1, 1) @[CLZ.scala 16:35]
    node _T_2 = bits(io.in, 2, 2) @[CLZ.scala 16:35]
    node _T_3 = bits(io.in, 3, 3) @[CLZ.scala 16:35]
    node _T_4 = bits(io.in, 4, 4) @[CLZ.scala 16:35]
    node _T_5 = bits(io.in, 5, 5) @[CLZ.scala 16:35]
    node _T_6 = bits(io.in, 6, 6) @[CLZ.scala 16:35]
    node _T_7 = bits(io.in, 7, 7) @[CLZ.scala 16:35]
    node _T_8 = bits(io.in, 8, 8) @[CLZ.scala 16:35]
    node _T_9 = bits(io.in, 9, 9) @[CLZ.scala 16:35]
    node _T_10 = bits(io.in, 10, 10) @[CLZ.scala 16:35]
    node _T_11 = bits(io.in, 11, 11) @[CLZ.scala 16:35]
    node _T_12 = bits(io.in, 12, 12) @[CLZ.scala 16:35]
    node _T_13 = bits(io.in, 13, 13) @[CLZ.scala 16:35]
    node _T_14 = bits(io.in, 14, 14) @[CLZ.scala 16:35]
    node _T_15 = bits(io.in, 15, 15) @[CLZ.scala 16:35]
    node _T_16 = bits(io.in, 16, 16) @[CLZ.scala 16:35]
    node _T_17 = bits(io.in, 17, 17) @[CLZ.scala 16:35]
    node _T_18 = bits(io.in, 18, 18) @[CLZ.scala 16:35]
    node _T_19 = bits(io.in, 19, 19) @[CLZ.scala 16:35]
    node _T_20 = bits(io.in, 20, 20) @[CLZ.scala 16:35]
    node _T_21 = bits(io.in, 21, 21) @[CLZ.scala 16:35]
    node _T_22 = bits(io.in, 22, 22) @[CLZ.scala 16:35]
    node _T_23 = bits(io.in, 23, 23) @[CLZ.scala 16:35]
    node _T_24 = bits(io.in, 24, 24) @[CLZ.scala 16:35]
    node _T_25 = bits(io.in, 25, 25) @[CLZ.scala 16:35]
    node _T_26 = bits(io.in, 26, 26) @[CLZ.scala 16:35]
    node _T_27 = bits(io.in, 27, 27) @[CLZ.scala 16:35]
    node _T_28 = bits(io.in, 28, 28) @[CLZ.scala 16:35]
    node _T_29 = bits(io.in, 29, 29) @[CLZ.scala 16:35]
    node _T_30 = bits(io.in, 30, 30) @[CLZ.scala 16:35]
    node _T_31 = bits(io.in, 31, 31) @[CLZ.scala 16:35]
    node _T_32 = bits(io.in, 32, 32) @[CLZ.scala 16:35]
    node _T_33 = bits(io.in, 33, 33) @[CLZ.scala 16:35]
    node _T_34 = bits(io.in, 34, 34) @[CLZ.scala 16:35]
    node _T_35 = bits(io.in, 35, 35) @[CLZ.scala 16:35]
    node _T_36 = bits(io.in, 36, 36) @[CLZ.scala 16:35]
    node _T_37 = bits(io.in, 37, 37) @[CLZ.scala 16:35]
    node _T_38 = bits(io.in, 38, 38) @[CLZ.scala 16:35]
    node _T_39 = bits(io.in, 39, 39) @[CLZ.scala 16:35]
    node _T_40 = bits(io.in, 40, 40) @[CLZ.scala 16:35]
    node _T_41 = bits(io.in, 41, 41) @[CLZ.scala 16:35]
    node _T_42 = bits(io.in, 42, 42) @[CLZ.scala 16:35]
    node _T_43 = bits(io.in, 43, 43) @[CLZ.scala 16:35]
    node _T_44 = bits(io.in, 44, 44) @[CLZ.scala 16:35]
    node _T_45 = bits(io.in, 45, 45) @[CLZ.scala 16:35]
    node _T_46 = bits(io.in, 46, 46) @[CLZ.scala 16:35]
    node _T_47 = bits(io.in, 47, 47) @[CLZ.scala 16:35]
    node _T_48 = bits(io.in, 48, 48) @[CLZ.scala 16:35]
    node _T_49 = bits(io.in, 49, 49) @[CLZ.scala 16:35]
    node _T_50 = bits(io.in, 50, 50) @[CLZ.scala 16:35]
    node _T_51 = bits(io.in, 51, 51) @[CLZ.scala 16:35]
    node _T_52 = bits(io.in, 52, 52) @[CLZ.scala 16:35]
    node _T_53 = bits(io.in, 53, 53) @[CLZ.scala 16:35]
    node _T_54 = bits(io.in, 54, 54) @[CLZ.scala 16:35]
    node _T_55 = bits(io.in, 55, 55) @[CLZ.scala 16:35]
    node _T_56 = bits(io.in, 56, 56) @[CLZ.scala 16:35]
    node _T_57 = bits(io.in, 57, 57) @[CLZ.scala 16:35]
    node _T_58 = bits(io.in, 58, 58) @[CLZ.scala 16:35]
    node _T_59 = bits(io.in, 59, 59) @[CLZ.scala 16:35]
    node _T_60 = bits(io.in, 60, 60) @[CLZ.scala 16:35]
    node _T_61 = bits(io.in, 61, 61) @[CLZ.scala 16:35]
    node _T_62 = bits(io.in, 62, 62) @[CLZ.scala 16:35]
    node _T_63 = bits(io.in, 63, 63) @[CLZ.scala 16:35]
    node _T_64 = bits(io.in, 64, 64) @[CLZ.scala 16:35]
    node _T_65 = bits(io.in, 65, 65) @[CLZ.scala 16:35]
    node _T_66 = bits(io.in, 66, 66) @[CLZ.scala 16:35]
    node _T_67 = bits(io.in, 67, 67) @[CLZ.scala 16:35]
    node _T_68 = bits(io.in, 68, 68) @[CLZ.scala 16:35]
    node _T_69 = bits(io.in, 69, 69) @[CLZ.scala 16:35]
    node _T_70 = bits(io.in, 70, 70) @[CLZ.scala 16:35]
    node _T_71 = bits(io.in, 71, 71) @[CLZ.scala 16:35]
    node _T_72 = bits(io.in, 72, 72) @[CLZ.scala 16:35]
    node _T_73 = bits(io.in, 73, 73) @[CLZ.scala 16:35]
    node _T_74 = bits(io.in, 74, 74) @[CLZ.scala 16:35]
    node _T_75 = bits(io.in, 75, 75) @[CLZ.scala 16:35]
    node _T_76 = bits(io.in, 76, 76) @[CLZ.scala 16:35]
    node _T_77 = bits(io.in, 77, 77) @[CLZ.scala 16:35]
    node _T_78 = bits(io.in, 78, 78) @[CLZ.scala 16:35]
    node _T_79 = bits(io.in, 79, 79) @[CLZ.scala 16:35]
    node _T_80 = bits(io.in, 80, 80) @[CLZ.scala 16:35]
    node _T_81 = bits(io.in, 81, 81) @[CLZ.scala 16:35]
    node _T_82 = bits(io.in, 82, 82) @[CLZ.scala 16:35]
    node _T_83 = bits(io.in, 83, 83) @[CLZ.scala 16:35]
    node _T_84 = bits(io.in, 84, 84) @[CLZ.scala 16:35]
    node _T_85 = bits(io.in, 85, 85) @[CLZ.scala 16:35]
    node _T_86 = bits(io.in, 86, 86) @[CLZ.scala 16:35]
    node _T_87 = bits(io.in, 87, 87) @[CLZ.scala 16:35]
    node _T_88 = bits(io.in, 88, 88) @[CLZ.scala 16:35]
    node _T_89 = bits(io.in, 89, 89) @[CLZ.scala 16:35]
    node _T_90 = bits(io.in, 90, 90) @[CLZ.scala 16:35]
    node _T_91 = bits(io.in, 91, 91) @[CLZ.scala 16:35]
    node _T_92 = bits(io.in, 92, 92) @[CLZ.scala 16:35]
    node _T_93 = bits(io.in, 93, 93) @[CLZ.scala 16:35]
    node _T_94 = bits(io.in, 94, 94) @[CLZ.scala 16:35]
    node _T_95 = bits(io.in, 95, 95) @[CLZ.scala 16:35]
    node _T_96 = bits(io.in, 96, 96) @[CLZ.scala 16:35]
    node _T_97 = bits(io.in, 97, 97) @[CLZ.scala 16:35]
    node _T_98 = bits(io.in, 98, 98) @[CLZ.scala 16:35]
    node _T_99 = bits(io.in, 99, 99) @[CLZ.scala 16:35]
    node _T_100 = bits(io.in, 100, 100) @[CLZ.scala 16:35]
    node _T_101 = bits(io.in, 101, 101) @[CLZ.scala 16:35]
    node _T_102 = bits(io.in, 102, 102) @[CLZ.scala 16:35]
    node _T_103 = bits(io.in, 103, 103) @[CLZ.scala 16:35]
    node _T_104 = bits(io.in, 104, 104) @[CLZ.scala 16:35]
    node _T_105 = bits(io.in, 105, 105) @[CLZ.scala 16:35]
    node _T_106 = bits(io.in, 106, 106) @[CLZ.scala 16:35]
    node _T_107 = bits(io.in, 107, 107) @[CLZ.scala 16:35]
    node _T_108 = mux(_T_1, UInt<7>("h06a"), UInt<7>("h06b")) @[Mux.scala 47:69]
    node _T_109 = mux(_T_2, UInt<7>("h069"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_3, UInt<7>("h068"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_4, UInt<7>("h067"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_5, UInt<7>("h066"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_6, UInt<7>("h065"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_7, UInt<7>("h064"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_8, UInt<7>("h063"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_9, UInt<7>("h062"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_10, UInt<7>("h061"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_11, UInt<7>("h060"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_12, UInt<7>("h05f"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_13, UInt<7>("h05e"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_14, UInt<7>("h05d"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_15, UInt<7>("h05c"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_16, UInt<7>("h05b"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_17, UInt<7>("h05a"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_18, UInt<7>("h059"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_19, UInt<7>("h058"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_20, UInt<7>("h057"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_21, UInt<7>("h056"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_22, UInt<7>("h055"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_23, UInt<7>("h054"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_24, UInt<7>("h053"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_25, UInt<7>("h052"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_26, UInt<7>("h051"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_27, UInt<7>("h050"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_28, UInt<7>("h04f"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_29, UInt<7>("h04e"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_30, UInt<7>("h04d"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_31, UInt<7>("h04c"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_32, UInt<7>("h04b"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_33, UInt<7>("h04a"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_34, UInt<7>("h049"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_35, UInt<7>("h048"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_36, UInt<7>("h047"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_37, UInt<7>("h046"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_38, UInt<7>("h045"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_39, UInt<7>("h044"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_40, UInt<7>("h043"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_41, UInt<7>("h042"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_42, UInt<7>("h041"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_43, UInt<7>("h040"), _T_149) @[Mux.scala 47:69]
    node _T_151 = mux(_T_44, UInt<6>("h03f"), _T_150) @[Mux.scala 47:69]
    node _T_152 = mux(_T_45, UInt<6>("h03e"), _T_151) @[Mux.scala 47:69]
    node _T_153 = mux(_T_46, UInt<6>("h03d"), _T_152) @[Mux.scala 47:69]
    node _T_154 = mux(_T_47, UInt<6>("h03c"), _T_153) @[Mux.scala 47:69]
    node _T_155 = mux(_T_48, UInt<6>("h03b"), _T_154) @[Mux.scala 47:69]
    node _T_156 = mux(_T_49, UInt<6>("h03a"), _T_155) @[Mux.scala 47:69]
    node _T_157 = mux(_T_50, UInt<6>("h039"), _T_156) @[Mux.scala 47:69]
    node _T_158 = mux(_T_51, UInt<6>("h038"), _T_157) @[Mux.scala 47:69]
    node _T_159 = mux(_T_52, UInt<6>("h037"), _T_158) @[Mux.scala 47:69]
    node _T_160 = mux(_T_53, UInt<6>("h036"), _T_159) @[Mux.scala 47:69]
    node _T_161 = mux(_T_54, UInt<6>("h035"), _T_160) @[Mux.scala 47:69]
    node _T_162 = mux(_T_55, UInt<6>("h034"), _T_161) @[Mux.scala 47:69]
    node _T_163 = mux(_T_56, UInt<6>("h033"), _T_162) @[Mux.scala 47:69]
    node _T_164 = mux(_T_57, UInt<6>("h032"), _T_163) @[Mux.scala 47:69]
    node _T_165 = mux(_T_58, UInt<6>("h031"), _T_164) @[Mux.scala 47:69]
    node _T_166 = mux(_T_59, UInt<6>("h030"), _T_165) @[Mux.scala 47:69]
    node _T_167 = mux(_T_60, UInt<6>("h02f"), _T_166) @[Mux.scala 47:69]
    node _T_168 = mux(_T_61, UInt<6>("h02e"), _T_167) @[Mux.scala 47:69]
    node _T_169 = mux(_T_62, UInt<6>("h02d"), _T_168) @[Mux.scala 47:69]
    node _T_170 = mux(_T_63, UInt<6>("h02c"), _T_169) @[Mux.scala 47:69]
    node _T_171 = mux(_T_64, UInt<6>("h02b"), _T_170) @[Mux.scala 47:69]
    node _T_172 = mux(_T_65, UInt<6>("h02a"), _T_171) @[Mux.scala 47:69]
    node _T_173 = mux(_T_66, UInt<6>("h029"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_67, UInt<6>("h028"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_68, UInt<6>("h027"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_69, UInt<6>("h026"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_70, UInt<6>("h025"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_71, UInt<6>("h024"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_72, UInt<6>("h023"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_73, UInt<6>("h022"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_74, UInt<6>("h021"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_75, UInt<6>("h020"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_76, UInt<5>("h01f"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_77, UInt<5>("h01e"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_78, UInt<5>("h01d"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_79, UInt<5>("h01c"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_80, UInt<5>("h01b"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_81, UInt<5>("h01a"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_82, UInt<5>("h019"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_83, UInt<5>("h018"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_84, UInt<5>("h017"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_85, UInt<5>("h016"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_86, UInt<5>("h015"), _T_192) @[Mux.scala 47:69]
    node _T_194 = mux(_T_87, UInt<5>("h014"), _T_193) @[Mux.scala 47:69]
    node _T_195 = mux(_T_88, UInt<5>("h013"), _T_194) @[Mux.scala 47:69]
    node _T_196 = mux(_T_89, UInt<5>("h012"), _T_195) @[Mux.scala 47:69]
    node _T_197 = mux(_T_90, UInt<5>("h011"), _T_196) @[Mux.scala 47:69]
    node _T_198 = mux(_T_91, UInt<5>("h010"), _T_197) @[Mux.scala 47:69]
    node _T_199 = mux(_T_92, UInt<4>("h0f"), _T_198) @[Mux.scala 47:69]
    node _T_200 = mux(_T_93, UInt<4>("h0e"), _T_199) @[Mux.scala 47:69]
    node _T_201 = mux(_T_94, UInt<4>("h0d"), _T_200) @[Mux.scala 47:69]
    node _T_202 = mux(_T_95, UInt<4>("h0c"), _T_201) @[Mux.scala 47:69]
    node _T_203 = mux(_T_96, UInt<4>("h0b"), _T_202) @[Mux.scala 47:69]
    node _T_204 = mux(_T_97, UInt<4>("h0a"), _T_203) @[Mux.scala 47:69]
    node _T_205 = mux(_T_98, UInt<4>("h09"), _T_204) @[Mux.scala 47:69]
    node _T_206 = mux(_T_99, UInt<4>("h08"), _T_205) @[Mux.scala 47:69]
    node _T_207 = mux(_T_100, UInt<3>("h07"), _T_206) @[Mux.scala 47:69]
    node _T_208 = mux(_T_101, UInt<3>("h06"), _T_207) @[Mux.scala 47:69]
    node _T_209 = mux(_T_102, UInt<3>("h05"), _T_208) @[Mux.scala 47:69]
    node _T_210 = mux(_T_103, UInt<3>("h04"), _T_209) @[Mux.scala 47:69]
    node _T_211 = mux(_T_104, UInt<2>("h03"), _T_210) @[Mux.scala 47:69]
    node _T_212 = mux(_T_105, UInt<2>("h02"), _T_211) @[Mux.scala 47:69]
    node _T_213 = mux(_T_106, UInt<1>("h01"), _T_212) @[Mux.scala 47:69]
    node _T_214 = mux(_T_107, UInt<1>("h00"), _T_213) @[Mux.scala 47:69]
    io.out <= _T_214 @[CLZ.scala 16:10]
    
  module RoundingUnit : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<52>, flip roundIn : UInt<1>, flip stickyIn : UInt<1>, flip signIn : UInt<1>, flip rm : UInt<3>, out : UInt<52>, inexact : UInt<1>, cout : UInt<1>, r_up : UInt<1>}
    
    node _T = bits(io.in, 0, 0) @[RoundingUnit.scala 19:25]
    node g = bits(_T, 0, 0) @[RoundingUnit.scala 19:29]
    node inexact = or(io.roundIn, io.stickyIn) @[RoundingUnit.scala 20:19]
    node _T_1 = and(io.roundIn, io.stickyIn) @[RoundingUnit.scala 25:18]
    node _T_2 = eq(io.stickyIn, UInt<1>("h00")) @[RoundingUnit.scala 25:33]
    node _T_3 = and(io.roundIn, _T_2) @[RoundingUnit.scala 25:30]
    node _T_4 = and(_T_3, g) @[RoundingUnit.scala 25:36]
    node _T_5 = or(_T_1, _T_4) @[RoundingUnit.scala 25:24]
    node _T_6 = eq(io.signIn, UInt<1>("h00")) @[RoundingUnit.scala 27:25]
    node _T_7 = and(inexact, _T_6) @[RoundingUnit.scala 27:23]
    node _T_8 = and(inexact, io.signIn) @[RoundingUnit.scala 28:23]
    node _T_9 = eq(UInt<3>("h00"), io.rm) @[Mux.scala 80:60]
    node _T_10 = mux(_T_9, _T_5, UInt<1>("h00")) @[Mux.scala 80:57]
    node _T_11 = eq(UInt<3>("h01"), io.rm) @[Mux.scala 80:60]
    node _T_12 = mux(_T_11, UInt<1>("h00"), _T_10) @[Mux.scala 80:57]
    node _T_13 = eq(UInt<3>("h03"), io.rm) @[Mux.scala 80:60]
    node _T_14 = mux(_T_13, _T_7, _T_12) @[Mux.scala 80:57]
    node _T_15 = eq(UInt<3>("h02"), io.rm) @[Mux.scala 80:60]
    node _T_16 = mux(_T_15, _T_8, _T_14) @[Mux.scala 80:57]
    node _T_17 = eq(UInt<3>("h04"), io.rm) @[Mux.scala 80:60]
    node r_up = mux(_T_17, io.roundIn, _T_16) @[Mux.scala 80:57]
    node _T_18 = add(io.in, UInt<1>("h01")) @[RoundingUnit.scala 32:24]
    node out_r_up = tail(_T_18, 1) @[RoundingUnit.scala 32:24]
    node _T_19 = mux(r_up, out_r_up, io.in) @[RoundingUnit.scala 33:16]
    io.out <= _T_19 @[RoundingUnit.scala 33:10]
    io.inexact <= inexact @[RoundingUnit.scala 34:14]
    node _T_20 = andr(io.in) @[RoundingUnit.scala 36:28]
    node _T_21 = and(r_up, _T_20) @[RoundingUnit.scala 36:19]
    io.cout <= _T_21 @[RoundingUnit.scala 36:11]
    io.r_up <= r_up @[RoundingUnit.scala 37:11]
    
  module RoundingUnit_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<52>, flip roundIn : UInt<1>, flip stickyIn : UInt<1>, flip signIn : UInt<1>, flip rm : UInt<3>, out : UInt<52>, inexact : UInt<1>, cout : UInt<1>, r_up : UInt<1>}
    
    node _T = bits(io.in, 0, 0) @[RoundingUnit.scala 19:25]
    node g = bits(_T, 0, 0) @[RoundingUnit.scala 19:29]
    node inexact = or(io.roundIn, io.stickyIn) @[RoundingUnit.scala 20:19]
    node _T_1 = and(io.roundIn, io.stickyIn) @[RoundingUnit.scala 25:18]
    node _T_2 = eq(io.stickyIn, UInt<1>("h00")) @[RoundingUnit.scala 25:33]
    node _T_3 = and(io.roundIn, _T_2) @[RoundingUnit.scala 25:30]
    node _T_4 = and(_T_3, g) @[RoundingUnit.scala 25:36]
    node _T_5 = or(_T_1, _T_4) @[RoundingUnit.scala 25:24]
    node _T_6 = eq(io.signIn, UInt<1>("h00")) @[RoundingUnit.scala 27:25]
    node _T_7 = and(inexact, _T_6) @[RoundingUnit.scala 27:23]
    node _T_8 = and(inexact, io.signIn) @[RoundingUnit.scala 28:23]
    node _T_9 = eq(UInt<3>("h00"), io.rm) @[Mux.scala 80:60]
    node _T_10 = mux(_T_9, _T_5, UInt<1>("h00")) @[Mux.scala 80:57]
    node _T_11 = eq(UInt<3>("h01"), io.rm) @[Mux.scala 80:60]
    node _T_12 = mux(_T_11, UInt<1>("h00"), _T_10) @[Mux.scala 80:57]
    node _T_13 = eq(UInt<3>("h03"), io.rm) @[Mux.scala 80:60]
    node _T_14 = mux(_T_13, _T_7, _T_12) @[Mux.scala 80:57]
    node _T_15 = eq(UInt<3>("h02"), io.rm) @[Mux.scala 80:60]
    node _T_16 = mux(_T_15, _T_8, _T_14) @[Mux.scala 80:57]
    node _T_17 = eq(UInt<3>("h04"), io.rm) @[Mux.scala 80:60]
    node r_up = mux(_T_17, io.roundIn, _T_16) @[Mux.scala 80:57]
    node _T_18 = add(io.in, UInt<1>("h01")) @[RoundingUnit.scala 32:24]
    node out_r_up = tail(_T_18, 1) @[RoundingUnit.scala 32:24]
    node _T_19 = mux(r_up, out_r_up, io.in) @[RoundingUnit.scala 33:16]
    io.out <= _T_19 @[RoundingUnit.scala 33:10]
    io.inexact <= inexact @[RoundingUnit.scala 34:14]
    node _T_20 = andr(io.in) @[RoundingUnit.scala 36:28]
    node _T_21 = and(r_up, _T_20) @[RoundingUnit.scala 36:19]
    io.cout <= _T_21 @[RoundingUnit.scala 36:11]
    io.r_up <= r_up @[RoundingUnit.scala 37:11]
    
  module FMUL : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<64>, flip b : UInt<64>, flip rm : UInt<3>, result : UInt<64>, fflags : UInt<5>, to_fadd : {fp_prod : {sign : UInt<1>, exp : UInt<11>, sig : UInt<105>}, inter_flags : {isNaN : UInt<1>, isInf : UInt<1>, isInv : UInt<1>, overflow : UInt<1>}}}
    
    wire fp_a : {sign : UInt<1>, exp : UInt<11>, sig : UInt<52>} @[package.scala 58:20]
    node _T = bits(io.a, 63, 63) @[package.scala 59:19]
    fp_a.sign <= _T @[package.scala 59:15]
    node _T_1 = bits(io.a, 62, 52) @[package.scala 60:18]
    fp_a.exp <= _T_1 @[package.scala 60:14]
    node _T_2 = bits(io.a, 51, 0) @[package.scala 61:18]
    fp_a.sig <= _T_2 @[package.scala 61:14]
    wire fp_b : {sign : UInt<1>, exp : UInt<11>, sig : UInt<52>} @[package.scala 58:20]
    node _T_3 = bits(io.b, 63, 63) @[package.scala 59:19]
    fp_b.sign <= _T_3 @[package.scala 59:15]
    node _T_4 = bits(io.b, 62, 52) @[package.scala 60:18]
    fp_b.exp <= _T_4 @[package.scala 60:14]
    node _T_5 = bits(io.b, 51, 0) @[package.scala 61:18]
    fp_b.sig <= _T_5 @[package.scala 61:14]
    node _T_6 = orr(fp_a.exp) @[package.scala 32:28]
    node _T_7 = andr(fp_a.exp) @[package.scala 33:27]
    node _T_8 = orr(fp_a.sig) @[package.scala 34:28]
    wire decode_a : {expNotZero : UInt<1>, expIsZero : UInt<1>, expIsOnes : UInt<1>, sigNotZero : UInt<1>, sigIsZero : UInt<1>, isSubnormal : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, isNaN : UInt<1>, isSNaN : UInt<1>, isQNaN : UInt<1>} @[package.scala 35:24]
    decode_a.expNotZero <= _T_6 @[package.scala 36:25]
    node _T_9 = eq(_T_6, UInt<1>("h00")) @[package.scala 37:27]
    decode_a.expIsZero <= _T_9 @[package.scala 37:24]
    decode_a.expIsOnes <= _T_7 @[package.scala 38:24]
    decode_a.sigNotZero <= _T_8 @[package.scala 39:25]
    node _T_10 = eq(_T_8, UInt<1>("h00")) @[package.scala 40:27]
    decode_a.sigIsZero <= _T_10 @[package.scala 40:24]
    node _T_11 = and(decode_a.expIsZero, _T_8) @[package.scala 41:46]
    decode_a.isSubnormal <= _T_11 @[package.scala 41:26]
    node _T_12 = and(decode_a.expIsOnes, decode_a.sigIsZero) @[package.scala 42:40]
    decode_a.isInf <= _T_12 @[package.scala 42:20]
    node _T_13 = and(decode_a.expIsZero, decode_a.sigIsZero) @[package.scala 43:41]
    decode_a.isZero <= _T_13 @[package.scala 43:21]
    node _T_14 = and(decode_a.expIsOnes, decode_a.sigNotZero) @[package.scala 44:40]
    decode_a.isNaN <= _T_14 @[package.scala 44:20]
    node _T_15 = head(fp_a.sig, 1) @[package.scala 45:49]
    node _T_16 = bits(_T_15, 0, 0) @[package.scala 45:53]
    node _T_17 = eq(_T_16, UInt<1>("h00")) @[package.scala 45:40]
    node _T_18 = and(decode_a.isNaN, _T_17) @[package.scala 45:37]
    decode_a.isSNaN <= _T_18 @[package.scala 45:21]
    node _T_19 = head(fp_a.sig, 1) @[package.scala 46:48]
    node _T_20 = bits(_T_19, 0, 0) @[package.scala 46:52]
    node _T_21 = and(decode_a.isNaN, _T_20) @[package.scala 46:37]
    decode_a.isQNaN <= _T_21 @[package.scala 46:21]
    node _T_22 = orr(fp_b.exp) @[package.scala 32:28]
    node _T_23 = andr(fp_b.exp) @[package.scala 33:27]
    node _T_24 = orr(fp_b.sig) @[package.scala 34:28]
    wire decode_b : {expNotZero : UInt<1>, expIsZero : UInt<1>, expIsOnes : UInt<1>, sigNotZero : UInt<1>, sigIsZero : UInt<1>, isSubnormal : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, isNaN : UInt<1>, isSNaN : UInt<1>, isQNaN : UInt<1>} @[package.scala 35:24]
    decode_b.expNotZero <= _T_22 @[package.scala 36:25]
    node _T_25 = eq(_T_22, UInt<1>("h00")) @[package.scala 37:27]
    decode_b.expIsZero <= _T_25 @[package.scala 37:24]
    decode_b.expIsOnes <= _T_23 @[package.scala 38:24]
    decode_b.sigNotZero <= _T_24 @[package.scala 39:25]
    node _T_26 = eq(_T_24, UInt<1>("h00")) @[package.scala 40:27]
    decode_b.sigIsZero <= _T_26 @[package.scala 40:24]
    node _T_27 = and(decode_b.expIsZero, _T_24) @[package.scala 41:46]
    decode_b.isSubnormal <= _T_27 @[package.scala 41:26]
    node _T_28 = and(decode_b.expIsOnes, decode_b.sigIsZero) @[package.scala 42:40]
    decode_b.isInf <= _T_28 @[package.scala 42:20]
    node _T_29 = and(decode_b.expIsZero, decode_b.sigIsZero) @[package.scala 43:41]
    decode_b.isZero <= _T_29 @[package.scala 43:21]
    node _T_30 = and(decode_b.expIsOnes, decode_b.sigNotZero) @[package.scala 44:40]
    decode_b.isNaN <= _T_30 @[package.scala 44:20]
    node _T_31 = head(fp_b.sig, 1) @[package.scala 45:49]
    node _T_32 = bits(_T_31, 0, 0) @[package.scala 45:53]
    node _T_33 = eq(_T_32, UInt<1>("h00")) @[package.scala 45:40]
    node _T_34 = and(decode_b.isNaN, _T_33) @[package.scala 45:37]
    decode_b.isSNaN <= _T_34 @[package.scala 45:21]
    node _T_35 = head(fp_b.sig, 1) @[package.scala 46:48]
    node _T_36 = bits(_T_35, 0, 0) @[package.scala 46:52]
    node _T_37 = and(decode_b.isNaN, _T_36) @[package.scala 46:37]
    decode_b.isQNaN <= _T_37 @[package.scala 46:21]
    wire raw_a : {sign : UInt<1>, exp : UInt<11>, sig : UInt<53>} @[package.scala 80:23]
    raw_a.sign <= fp_a.sign @[package.scala 82:18]
    node _T_38 = eq(decode_a.expNotZero, UInt<1>("h00")) @[package.scala 83:29]
    node _T_39 = or(fp_a.exp, _T_38) @[package.scala 83:27]
    raw_a.exp <= _T_39 @[package.scala 83:17]
    node _T_40 = cat(decode_a.expNotZero, fp_a.sig) @[Cat.scala 29:58]
    raw_a.sig <= _T_40 @[package.scala 84:17]
    wire raw_b : {sign : UInt<1>, exp : UInt<11>, sig : UInt<53>} @[package.scala 80:23]
    raw_b.sign <= fp_b.sign @[package.scala 82:18]
    node _T_41 = eq(decode_b.expNotZero, UInt<1>("h00")) @[package.scala 83:29]
    node _T_42 = or(fp_b.exp, _T_41) @[package.scala 83:27]
    raw_b.exp <= _T_42 @[package.scala 83:17]
    node _T_43 = cat(decode_b.expNotZero, fp_b.sig) @[Cat.scala 29:58]
    raw_b.sig <= _T_43 @[package.scala 84:17]
    node prod_sign = xor(fp_a.sign, fp_b.sign) @[FMUL.scala 35:29]
    node exp_sum = add(raw_a.exp, raw_b.exp) @[FMUL.scala 52:27]
    node _T_44 = sub(exp_sum, UInt<10>("h03c7")) @[FMUL.scala 53:26]
    node prod_exp = tail(_T_44, 1) @[FMUL.scala 53:26]
    node _T_45 = cat(UInt<1>("h00"), exp_sum) @[Cat.scala 29:58]
    node _T_46 = sub(_T_45, UInt<10>("h03c8")) @[FMUL.scala 55:46]
    node shift_lim_sub = tail(_T_46, 1) @[FMUL.scala 55:46]
    node _T_47 = head(shift_lim_sub, 1) @[FMUL.scala 56:39]
    node prod_exp_uf = bits(_T_47, 0, 0) @[FMUL.scala 56:43]
    node shift_lim = tail(shift_lim_sub, 1) @[FMUL.scala 57:37]
    node prod_exp_ov = gt(exp_sum, UInt<12>("h0bfd")) @[FMUL.scala 59:29]
    node subnormal_sig = mux(decode_a.expIsZero, raw_a.sig, raw_b.sig) @[FMUL.scala 62:26]
    node _T_48 = cat(UInt<55>("h00"), subnormal_sig) @[Cat.scala 29:58]
    inst CLZ of CLZ @[CLZ.scala 21:21]
    CLZ.clock <= clock
    CLZ.reset <= reset
    CLZ.io.in <= _T_48 @[CLZ.scala 22:15]
    node exceed_lim = leq(shift_lim, CLZ.io.out) @[FMUL.scala 64:30]
    node _T_49 = mux(exceed_lim, shift_lim, CLZ.io.out) @[FMUL.scala 65:44]
    node shift_amt = mux(prod_exp_uf, UInt<1>("h00"), _T_49) @[FMUL.scala 65:22]
    node prod = mul(raw_a.sig, raw_b.sig) @[FMUL.scala 67:24]
    node sig_shifter_in = cat(UInt<55>("h00"), prod) @[Cat.scala 29:58]
    node _T_50 = dshl(sig_shifter_in, shift_amt) @[FMUL.scala 69:41]
    node sig_shifted_raw = bits(_T_50, 160, 0) @[FMUL.scala 69:54]
    node _T_51 = sub(prod_exp, shift_amt) @[FMUL.scala 70:30]
    node exp_shifted = tail(_T_51, 1) @[FMUL.scala 70:30]
    node _T_52 = or(exceed_lim, prod_exp_uf) @[FMUL.scala 71:38]
    node _T_53 = head(sig_shifted_raw, 1) @[FMUL.scala 71:78]
    node _T_54 = bits(_T_53, 0, 0) @[FMUL.scala 71:82]
    node _T_55 = eq(_T_54, UInt<1>("h00")) @[FMUL.scala 71:57]
    node exp_is_subnormal = and(_T_52, _T_55) @[FMUL.scala 71:54]
    node _T_56 = head(sig_shifted_raw, 1) @[FMUL.scala 72:44]
    node _T_57 = bits(_T_56, 0, 0) @[FMUL.scala 72:48]
    node no_extra_shift = or(_T_57, exp_is_subnormal) @[FMUL.scala 72:55]
    node _T_58 = sub(exp_shifted, UInt<1>("h01")) @[FMUL.scala 74:95]
    node _T_59 = tail(_T_58, 1) @[FMUL.scala 74:95]
    node _T_60 = mux(no_extra_shift, exp_shifted, _T_59) @[FMUL.scala 74:53]
    node exp_pre_round = mux(exp_is_subnormal, UInt<1>("h00"), _T_60) @[FMUL.scala 74:26]
    node _T_61 = tail(sig_shifted_raw, 1) @[FMUL.scala 75:82]
    node _T_62 = cat(_T_61, UInt<1>("h00")) @[Cat.scala 29:58]
    node sig_shifted = mux(no_extra_shift, sig_shifted_raw, _T_62) @[FMUL.scala 75:24]
    node _T_63 = tail(sig_shifted, 2) @[FMUL.scala 78:21]
    inst tininess_rounder of RoundingUnit @[RoundingUnit.scala 44:25]
    tininess_rounder.clock <= clock
    tininess_rounder.reset <= reset
    node _T_64 = head(_T_63, 52) @[RoundingUnit.scala 45:33]
    tininess_rounder.io.in <= _T_64 @[RoundingUnit.scala 45:19]
    node _T_65 = tail(_T_63, 52) @[RoundingUnit.scala 46:38]
    node _T_66 = head(_T_65, 1) @[RoundingUnit.scala 46:50]
    node _T_67 = bits(_T_66, 0, 0) @[RoundingUnit.scala 46:54]
    tininess_rounder.io.roundIn <= _T_67 @[RoundingUnit.scala 46:24]
    node _T_68 = tail(_T_63, 53) @[RoundingUnit.scala 47:39]
    node _T_69 = orr(_T_68) @[RoundingUnit.scala 47:51]
    tininess_rounder.io.stickyIn <= _T_69 @[RoundingUnit.scala 47:25]
    tininess_rounder.io.rm <= io.rm @[RoundingUnit.scala 48:19]
    tininess_rounder.io.signIn <= prod_sign @[RoundingUnit.scala 49:23]
    node _T_70 = head(sig_shifted, 2) @[FMUL.scala 84:34]
    node _T_71 = eq(_T_70, UInt<2>("h00")) @[FMUL.scala 84:38]
    node _T_72 = head(sig_shifted, 2) @[FMUL.scala 85:22]
    node _T_73 = eq(_T_72, UInt<2>("h01")) @[FMUL.scala 85:26]
    node _T_74 = eq(tininess_rounder.io.cout, UInt<1>("h00")) @[FMUL.scala 85:46]
    node _T_75 = and(_T_73, _T_74) @[FMUL.scala 85:43]
    node tininess = or(_T_71, _T_75) @[FMUL.scala 84:55]
    node _T_76 = tail(sig_shifted, 1) @[FMUL.scala 88:21]
    inst rounder of RoundingUnit_1 @[RoundingUnit.scala 44:25]
    rounder.clock <= clock
    rounder.reset <= reset
    node _T_77 = head(_T_76, 52) @[RoundingUnit.scala 45:33]
    rounder.io.in <= _T_77 @[RoundingUnit.scala 45:19]
    node _T_78 = tail(_T_76, 52) @[RoundingUnit.scala 46:38]
    node _T_79 = head(_T_78, 1) @[RoundingUnit.scala 46:50]
    node _T_80 = bits(_T_79, 0, 0) @[RoundingUnit.scala 46:54]
    rounder.io.roundIn <= _T_80 @[RoundingUnit.scala 46:24]
    node _T_81 = tail(_T_76, 53) @[RoundingUnit.scala 47:39]
    node _T_82 = orr(_T_81) @[RoundingUnit.scala 47:51]
    rounder.io.stickyIn <= _T_82 @[RoundingUnit.scala 47:25]
    rounder.io.rm <= io.rm @[RoundingUnit.scala 48:19]
    rounder.io.signIn <= prod_sign @[RoundingUnit.scala 49:23]
    node _T_83 = add(rounder.io.cout, exp_pre_round) @[FMUL.scala 94:37]
    node exp_rounded = tail(_T_83, 1) @[FMUL.scala 94:37]
    node _T_84 = eq(exp_pre_round, UInt<11>("h07fe")) @[FMUL.scala 99:19]
    node _T_85 = eq(exp_pre_round, UInt<11>("h07ff")) @[FMUL.scala 100:19]
    node _T_86 = mux(rounder.io.cout, _T_84, _T_85) @[FMUL.scala 97:22]
    node common_of = or(_T_86, prod_exp_ov) @[FMUL.scala 101:5]
    node common_ix = or(rounder.io.inexact, common_of) @[FMUL.scala 102:38]
    node common_uf = and(tininess, common_ix) @[FMUL.scala 103:28]
    node _T_87 = eq(io.rm, UInt<3>("h01")) @[RoundingUnit.scala 54:8]
    node _T_88 = eq(io.rm, UInt<3>("h02")) @[RoundingUnit.scala 54:23]
    node _T_89 = eq(prod_sign, UInt<1>("h00")) @[RoundingUnit.scala 54:34]
    node _T_90 = and(_T_88, _T_89) @[RoundingUnit.scala 54:31]
    node _T_91 = or(_T_87, _T_90) @[RoundingUnit.scala 54:16]
    node _T_92 = eq(io.rm, UInt<3>("h03")) @[RoundingUnit.scala 54:48]
    node _T_93 = and(_T_92, prod_sign) @[RoundingUnit.scala 54:56]
    node rmin = or(_T_91, _T_93) @[RoundingUnit.scala 54:41]
    node of_exp = mux(rmin, UInt<11>("h07fe"), UInt<11>("h07ff")) @[FMUL.scala 107:19]
    node _T_94 = bits(exp_rounded, 10, 0) @[FMUL.scala 114:16]
    node common_exp = mux(common_of, of_exp, _T_94) @[FMUL.scala 111:23]
    node _T_95 = mux(UInt<1>("h01"), UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node _T_96 = mux(rmin, _T_95, UInt<52>("h00")) @[FMUL.scala 118:8]
    node common_sig = mux(common_of, _T_96, rounder.io.out) @[FMUL.scala 116:23]
    node _T_97 = cat(prod_sign, common_exp) @[Cat.scala 29:58]
    node common_result = cat(_T_97, common_sig) @[Cat.scala 29:58]
    node _T_98 = cat(common_uf, common_ix) @[Cat.scala 29:58]
    node _T_99 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 29:58]
    node _T_100 = cat(_T_99, common_of) @[Cat.scala 29:58]
    node common_fflags = cat(_T_100, _T_98) @[Cat.scala 29:58]
    node hasZero = or(decode_a.isZero, decode_b.isZero) @[FMUL.scala 129:33]
    node hasNaN = or(decode_a.isNaN, decode_b.isNaN) @[FMUL.scala 130:31]
    node hasSNaN = or(decode_a.isSNaN, decode_b.isSNaN) @[FMUL.scala 131:33]
    node hasInf = or(decode_a.isInf, decode_b.isInf) @[FMUL.scala 132:31]
    node _T_101 = or(hasZero, hasNaN) @[FMUL.scala 133:37]
    node special_case_happen = or(_T_101, hasInf) @[FMUL.scala 133:47]
    node zero_mul_inf = and(hasZero, hasInf) @[FMUL.scala 135:30]
    node nan_result = or(hasNaN, zero_mul_inf) @[FMUL.scala 136:27]
    node _T_102 = eq(prod_sign, UInt<1>("h00")) @[FMUL.scala 138:16]
    node inf_of = and(_T_102, hasInf) @[FMUL.scala 138:27]
    node special_iv = or(hasSNaN, zero_mul_inf) @[FMUL.scala 140:28]
    node _T_103 = eq(hasNaN, UInt<1>("h00")) @[FMUL.scala 141:20]
    node special_of = and(_T_103, inf_of) @[FMUL.scala 141:28]
    node _T_104 = mux(UInt<1>("h01"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node _T_105 = cat(UInt<1>("h00"), _T_104) @[Cat.scala 29:58]
    node _T_106 = cat(_T_105, UInt<51>("h00")) @[Cat.scala 29:58]
    node _T_107 = cat(prod_sign, UInt<11>("h07ff")) @[Cat.scala 29:58]
    node _T_108 = cat(_T_107, UInt<52>("h00")) @[Cat.scala 29:58]
    node _T_109 = cat(prod_sign, UInt<63>("h00")) @[Cat.scala 29:58]
    node _T_110 = mux(hasInf, _T_108, _T_109) @[FMUL.scala 145:8]
    node special_result = mux(nan_result, _T_106, _T_110) @[FMUL.scala 143:27]
    node _T_111 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 29:58]
    node _T_112 = cat(special_iv, UInt<1>("h00")) @[Cat.scala 29:58]
    node _T_113 = cat(_T_112, UInt<1>("h00")) @[Cat.scala 29:58]
    node special_fflags = cat(_T_113, _T_111) @[Cat.scala 29:58]
    node _T_114 = mux(special_case_happen, special_result, common_result) @[FMUL.scala 152:19]
    io.result <= _T_114 @[FMUL.scala 152:13]
    node _T_115 = mux(special_case_happen, special_fflags, common_fflags) @[FMUL.scala 153:19]
    io.fflags <= _T_115 @[FMUL.scala 153:13]
    io.to_fadd.fp_prod.sign <= prod_sign @[FMUL.scala 155:27]
    node _T_116 = mux(hasZero, UInt<1>("h00"), exp_pre_round) @[FMUL.scala 156:32]
    io.to_fadd.fp_prod.exp <= _T_116 @[FMUL.scala 156:26]
    node _T_117 = tail(sig_shifted, 1) @[FMUL.scala 159:21]
    node _T_118 = head(_T_117, 105) @[FMUL.scala 159:29]
    node _T_119 = tail(sig_shifted, 106) @[FMUL.scala 159:67]
    node _T_120 = orr(_T_119) @[FMUL.scala 159:83]
    node _T_121 = or(_T_118, _T_120) @[FMUL.scala 159:49]
    node _T_122 = mux(hasZero, UInt<1>("h00"), _T_121) @[FMUL.scala 157:32]
    io.to_fadd.fp_prod.sig <= _T_122 @[FMUL.scala 157:26]
    io.to_fadd.inter_flags.isInv <= special_iv @[FMUL.scala 161:32]
    node _T_123 = eq(nan_result, UInt<1>("h00")) @[FMUL.scala 162:45]
    node _T_124 = and(hasInf, _T_123) @[FMUL.scala 162:42]
    io.to_fadd.inter_flags.isInf <= _T_124 @[FMUL.scala 162:32]
    io.to_fadd.inter_flags.isNaN <= nan_result @[FMUL.scala 163:32]
    node _T_125 = mux(UInt<1>("h01"), UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
    node _T_126 = gt(exp_pre_round, _T_125) @[FMUL.scala 164:52]
    io.to_fadd.inter_flags.overflow <= _T_126 @[FMUL.scala 164:35]
    
