module {
  firrtl.circuit "SimTop" {
    hw.hierpath private @nla_84 [@SimpleBusCrossbar1toN_1::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_83 [@SimpleBusCrossbar1toN_1::@sym, @LogPerfHelper]
    hw.hierpath private @nla_78 [@SimpleBusCrossbar1toN::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_77 [@SimpleBusCrossbar1toN::@sym, @LogPerfHelper]
    hw.hierpath private @nla_76 [@Cache_2::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_73 [@CacheStage3_2::@sym, @LogPerfHelper]
    hw.hierpath private @nla_72 [@CacheStage2_2::@sym_1, @LogPerfHelper]
    hw.hierpath private @nla_71 [@CacheStage2_2::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_70 [@CacheStage2_2::@sym, @LogPerfHelper]
    hw.hierpath private @nla_69 [@CacheStage1_2::@sym, @LogPerfHelper]
    hw.hierpath private @nla_68 [@Prefetcher::@sym, @LogPerfHelper]
    hw.hierpath private @nla_61 [@Cache_1::@sym_1, @LogPerfHelper]
    hw.hierpath private @nla_40 [@CacheStage3_1::@sym_1, @LogPerfHelper]
    hw.hierpath private @nla_35 [@CacheStage2_1::@sym_1, @LogPerfHelper]
    hw.hierpath private @nla_34 [@CacheStage2_1::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_33 [@CacheStage2_1::@sym, @LogPerfHelper]
    hw.hierpath private @nla_32 [@CacheStage1_1::@sym, @LogPerfHelper]
    hw.hierpath private @nla_31 [@EmbeddedTLB_1::@sym, @LogPerfHelper]
    hw.hierpath private @nla_30 [@EmbeddedTLBExec_1::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_29 [@EmbeddedTLBExec_1::@sym, @LogPerfHelper]
    hw.hierpath private @nla_28 [@Cache::@sym, @LogPerfHelper]
    hw.hierpath private @nla_27 [@CacheStage3::@sym, @LogPerfHelper]
    hw.hierpath private @nla_26 [@CacheStage2::@sym_1, @LogPerfHelper]
    hw.hierpath private @nla_25 [@CacheStage2::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_24 [@CacheStage2::@sym, @LogPerfHelper]
    hw.hierpath private @nla_23 [@CacheStage1::@sym, @LogPerfHelper]
    hw.hierpath private @nla_22 [@EmbeddedTLB::@sym, @LogPerfHelper]
    hw.hierpath private @nla_21 [@EmbeddedTLBExec::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_20 [@EmbeddedTLBExec::@sym, @LogPerfHelper]
    hw.hierpath private @nla_19 [@NutCore::@sym, @LogPerfHelper]
    hw.hierpath private @nla_18 [@WBU::@sym, @LogPerfHelper]
    hw.hierpath private @nla_17 [@EXU::@sym, @LogPerfHelper]
    hw.hierpath private @nla_16 [@MOU::@sym, @LogPerfHelper]
    hw.hierpath private @nla_15 [@CSR::@sym, @LogPerfHelper]
    hw.hierpath private @nla_14 [@MDU::@sym, @LogPerfHelper]
    hw.hierpath private @nla_13 [@UnpipelinedLSU::@sym_4, @LogPerfHelper]
    hw.hierpath private @nla_12 [@UnpipelinedLSU::@sym_3, @LogPerfHelper]
    hw.hierpath private @nla_11 [@UnpipelinedLSU::@sym_2, @LogPerfHelper]
    hw.hierpath private @nla_10 [@UnpipelinedLSU::@sym_1, @LogPerfHelper]
    hw.hierpath private @nla_9 [@UnpipelinedLSU::@sym_0, @LogPerfHelper]
    hw.hierpath private @nla_8 [@UnpipelinedLSU::@sym, @LogPerfHelper]
    hw.hierpath private @nla_7 [@LSExecUnit::@sym, @LogPerfHelper]
    hw.hierpath private @nla_6 [@ALU::@sym, @LogPerfHelper]
    hw.hierpath private @nla_5 [@ISU::@sym, @LogPerfHelper]
    hw.hierpath private @nla_4 [@Frontend_inorder::@sym, @LogPerfHelper]
    hw.hierpath private @nla_3 [@Decoder_1::@sym, @LogPerfHelper]
    hw.hierpath private @nla_2 [@Decoder::@sym, @LogPerfHelper]
    hw.hierpath private @nla_1 [@NaiveRVCAlignBuffer::@sym, @LogPerfHelper]
    hw.hierpath private @nla_0 [@IFU_inorder::@sym, @LogPerfHelper]
    hw.hierpath private @nla [@BPU_inorder::@sym, @LogPerfHelper]
    firrtl.module private @SRAMTemplate(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_r_req_ready: !firrtl.uint<1>, in %io_r_req_valid: !firrtl.uint<1>, in %io_r_req_bits_setIdx: !firrtl.uint<9>, out %io_r_resp_data_0_tag: !firrtl.uint<28>, out %io_r_resp_data_0__type: !firrtl.uint<2>, out %io_r_resp_data_0_target: !firrtl.uint<39>, out %io_r_resp_data_0_brIdx: !firrtl.uint<3>, out %io_r_resp_data_0_valid: !firrtl.uint<1>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<9>, in %io_w_req_bits_data_tag: !firrtl.uint<28>, in %io_w_req_bits_data__type: !firrtl.uint<2>, in %io_w_req_bits_data_target: !firrtl.uint<39>, in %io_w_req_bits_data_brIdx: !firrtl.uint<3>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui73 = firrtl.constant 0 : !firrtl.uint<73> {name = "_rdata_WIRE_1_0"}
      %c0_ui9 = firrtl.constant 0 : !firrtl.uint<9>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_r_req_ready_0 = firrtl.wire {name = "io_r_req_ready"} : !firrtl.uint<1>
      %io_r_resp_data_0_tag_1 = firrtl.wire {name = "io_r_resp_data_0_tag"} : !firrtl.uint<28>
      %io_r_resp_data_0__type_2 = firrtl.wire {name = "io_r_resp_data_0__type"} : !firrtl.uint<2>
      %io_r_resp_data_0_target_3 = firrtl.wire {name = "io_r_resp_data_0_target"} : !firrtl.uint<39>
      %io_r_resp_data_0_brIdx_4 = firrtl.wire {name = "io_r_resp_data_0_brIdx"} : !firrtl.uint<3>
      %io_r_resp_data_0_valid_5 = firrtl.wire {name = "io_r_resp_data_0_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_r_req_ready, %io_r_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_tag, %io_r_resp_data_0_tag_1 : !firrtl.uint<28>
      firrtl.strictconnect %io_r_resp_data_0__type, %io_r_resp_data_0__type_2 : !firrtl.uint<2>
      firrtl.strictconnect %io_r_resp_data_0_target, %io_r_resp_data_0_target_3 : !firrtl.uint<39>
      firrtl.strictconnect %io_r_resp_data_0_brIdx, %io_r_resp_data_0_brIdx_4 : !firrtl.uint<3>
      firrtl.strictconnect %io_r_resp_data_0_valid, %io_r_resp_data_0_valid_5 : !firrtl.uint<1>
      %array_MPORT_addr = firrtl.wire : !firrtl.uint<9>
      %array_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_data_0 = firrtl.wire : !firrtl.uint<73>
      %array_rdata_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_rdata_MPORT_data_0 = firrtl.wire : !firrtl.uint<73>
      %array_0_rw = firrtl.mem Undefined {depth = 512 : i64, name = "array_0", portNames = ["rw"], prefix = "", readLatency = 1 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %0 = firrtl.subfield %array_0_rw[addr] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %1 = firrtl.subfield %array_0_rw[en] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %2 = firrtl.subfield %array_0_rw[clk] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %3 = firrtl.subfield %array_0_rw[rdata] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %4 = firrtl.subfield %array_0_rw[wmode] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %5 = firrtl.subfield %array_0_rw[wdata] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %6 = firrtl.subfield %array_0_rw[wmask] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<73>, wmode: uint<1>, wdata: uint<73>, wmask: uint<1>>
      %writeAddr = firrtl.wire : !firrtl.uint<9>
      %writeEnable = firrtl.wire : !firrtl.uint<1>
      %readEnable = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.mux(%writeEnable, %writeAddr, %io_r_req_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      firrtl.strictconnect %0, %7 : !firrtl.uint<9>
      %8 = firrtl.or %readEnable, %writeEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %1, %8 : !firrtl.uint<1>
      firrtl.strictconnect %writeAddr, %array_MPORT_addr : !firrtl.uint<9>
      firrtl.strictconnect %writeEnable, %array_MPORT_en : !firrtl.uint<1>
      firrtl.strictconnect %5, %array_MPORT_data_0 : !firrtl.uint<73>
      firrtl.strictconnect %6, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %readEnable, %array_rdata_MPORT_en : !firrtl.uint<1>
      firrtl.strictconnect %2, %clock : !firrtl.clock
      firrtl.strictconnect %array_rdata_MPORT_data_0, %3 : !firrtl.uint<73>
      %resetState = firrtl.wire : !firrtl.uint<1>
      %resetSet = firrtl.wire : !firrtl.uint<9>
      %_resetState = firrtl.regreset %clock, %reset, %c1_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %_resetSet = firrtl.regreset %clock, %reset, %c0_ui9 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>
      %resetFinish = firrtl.wire : !firrtl.uint<1>
      %wrap_wrap = firrtl.andr %_resetSet {name = "wrap_wrap"} : (!firrtl.uint<9>) -> !firrtl.uint<1>
      %_wrap_value_T = firrtl.add %_resetSet, %c1_ui1 {name = "_wrap_value_T"} : (!firrtl.uint<9>, !firrtl.uint<1>) -> !firrtl.uint<10>
      %_wrap_value_T_1 = firrtl.bits %_wrap_value_T 8 to 0 {name = "_wrap_value_T_1"} : (!firrtl.uint<10>) -> !firrtl.uint<9>
      %9 = firrtl.mux(%_resetState, %_wrap_value_T_1, %_resetSet) : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      firrtl.strictconnect %_resetSet, %9 : !firrtl.uint<9>
      %10 = firrtl.mux(%_resetState, %wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %resetFinish, %10 : !firrtl.uint<1>
      %11 = firrtl.mux(%resetFinish, %c0_ui1, %_resetState) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %_resetState, %11 : !firrtl.uint<1>
      firrtl.strictconnect %resetState, %_resetState : !firrtl.uint<1>
      firrtl.strictconnect %resetSet, %_resetSet : !firrtl.uint<9>
      %wen = firrtl.or %io_w_req_valid, %resetState {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_r_req_ready_T_1 = firrtl.not %wen {name = "_io_r_req_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %realRen = firrtl.and %io_r_req_valid, %_io_r_req_ready_T_1 {name = "realRen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %setIdx = firrtl.mux(%resetState, %resetSet, %io_w_req_bits_setIdx) {name = "setIdx"} : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      %wdataword_lo = firrtl.cat %io_w_req_bits_data_brIdx, %c1_ui1 {name = "wdataword_lo"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %wdataword_hi_hi = firrtl.cat %io_w_req_bits_data_tag, %io_w_req_bits_data__type {name = "wdataword_hi_hi"} : (!firrtl.uint<28>, !firrtl.uint<2>) -> !firrtl.uint<30>
      %wdataword_hi = firrtl.cat %wdataword_hi_hi, %io_w_req_bits_data_target {name = "wdataword_hi"} : (!firrtl.uint<30>, !firrtl.uint<39>) -> !firrtl.uint<69>
      %_wdataword_T = firrtl.cat %wdataword_hi, %wdataword_lo {name = "_wdataword_T"} : (!firrtl.uint<69>, !firrtl.uint<4>) -> !firrtl.uint<73>
      %wdataword = firrtl.mux(%resetState, %c0_ui73, %_wdataword_T) {name = "wdataword"} : (!firrtl.uint<1>, !firrtl.uint<73>, !firrtl.uint<73>) -> !firrtl.uint<73>
      %wdata_0 = firrtl.wire : !firrtl.uint<73>
      firrtl.strictconnect %wdata_0, %wdataword : !firrtl.uint<73>
      firrtl.strictconnect %array_MPORT_addr, %setIdx : !firrtl.uint<9>
      firrtl.strictconnect %array_MPORT_en, %wen : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_0, %wdata_0 : !firrtl.uint<73>
      firrtl.strictconnect %array_rdata_MPORT_en, %realRen : !firrtl.uint<1>
      %rdata_REG = firrtl.reg %clock {firrtl.random_init_start = 10 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %rdata_REG, %realRen : !firrtl.uint<1>
      %rdata_r_0 = firrtl.regreset %clock, %reset, %c0_ui73 {firrtl.random_init_start = 11 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<73>, !firrtl.uint<73>
      %12 = firrtl.mux(%rdata_REG, %array_rdata_MPORT_data_0, %rdata_r_0) : (!firrtl.uint<1>, !firrtl.uint<73>, !firrtl.uint<73>) -> !firrtl.uint<73>
      firrtl.strictconnect %rdata_r_0, %12 : !firrtl.uint<73>
      %_rdata_T_0 = firrtl.mux(%rdata_REG, %array_rdata_MPORT_data_0, %rdata_r_0) {name = "_rdata_T_0"} : (!firrtl.uint<1>, !firrtl.uint<73>, !firrtl.uint<73>) -> !firrtl.uint<73>
      %rdata_0_tag = firrtl.wire : !firrtl.uint<28>
      %rdata_0__type = firrtl.wire : !firrtl.uint<2>
      %rdata_0_target = firrtl.wire : !firrtl.uint<39>
      %rdata_0_brIdx = firrtl.wire : !firrtl.uint<3>
      %rdata_0_valid = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_2 = firrtl.wire : !firrtl.uint<73>
      firrtl.strictconnect %_rdata_WIRE_2, %_rdata_T_0 : !firrtl.uint<73>
      %_rdata_T_1 = firrtl.bits %_rdata_WIRE_2 0 to 0 {name = "_rdata_T_1"} : (!firrtl.uint<73>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_0_valid, %_rdata_T_1 : !firrtl.uint<1>
      %_rdata_T_2 = firrtl.bits %_rdata_WIRE_2 3 to 1 {name = "_rdata_T_2"} : (!firrtl.uint<73>) -> !firrtl.uint<3>
      firrtl.strictconnect %rdata_0_brIdx, %_rdata_T_2 : !firrtl.uint<3>
      %_rdata_T_3 = firrtl.bits %_rdata_WIRE_2 42 to 4 {name = "_rdata_T_3"} : (!firrtl.uint<73>) -> !firrtl.uint<39>
      firrtl.strictconnect %rdata_0_target, %_rdata_T_3 : !firrtl.uint<39>
      %_rdata_T_4 = firrtl.bits %_rdata_WIRE_2 44 to 43 {name = "_rdata_T_4"} : (!firrtl.uint<73>) -> !firrtl.uint<2>
      firrtl.strictconnect %rdata_0__type, %_rdata_T_4 : !firrtl.uint<2>
      %_rdata_T_5 = firrtl.bits %_rdata_WIRE_2 72 to 45 {name = "_rdata_T_5"} : (!firrtl.uint<73>) -> !firrtl.uint<28>
      firrtl.strictconnect %rdata_0_tag, %_rdata_T_5 : !firrtl.uint<28>
      %13 = firrtl.wire : !firrtl.uint<28>
      %14 = firrtl.wire : !firrtl.uint<2>
      %15 = firrtl.wire : !firrtl.uint<39>
      %16 = firrtl.wire : !firrtl.uint<3>
      %17 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %13, %rdata_0_tag : !firrtl.uint<28>
      firrtl.strictconnect %14, %rdata_0__type : !firrtl.uint<2>
      firrtl.strictconnect %15, %rdata_0_target : !firrtl.uint<39>
      firrtl.strictconnect %16, %rdata_0_brIdx : !firrtl.uint<3>
      firrtl.strictconnect %17, %rdata_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_tag_1, %13 : !firrtl.uint<28>
      firrtl.strictconnect %io_r_resp_data_0__type_2, %14 : !firrtl.uint<2>
      firrtl.strictconnect %io_r_resp_data_0_target_3, %15 : !firrtl.uint<39>
      firrtl.strictconnect %io_r_resp_data_0_brIdx_4, %16 : !firrtl.uint<3>
      firrtl.strictconnect %io_r_resp_data_0_valid_5, %17 : !firrtl.uint<1>
      %_io_r_req_ready_T = firrtl.not %resetState {name = "_io_r_req_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_r_req_ready_T_2 = firrtl.and %_io_r_req_ready_T, %_io_r_req_ready_T_1 {name = "_io_r_req_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_r_req_ready_0, %_io_r_req_ready_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %4, %wen : !firrtl.uint<1>
    }
    firrtl.extmodule private @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>) attributes {annotations = [{circt.nonlocal = @nla, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_0, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_1, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_2, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_3, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_4, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_5, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_6, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_7, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_8, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_9, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_10, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_11, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_12, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_13, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_14, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_15, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_16, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_17, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_18, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_19, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_20, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_21, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_22, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_23, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_24, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_25, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_26, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_27, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_28, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_29, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_30, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_31, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_32, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_33, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_34, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_35, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_40, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_61, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_68, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_69, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_70, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_71, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_72, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_73, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_76, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_77, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_78, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_83, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {circt.nonlocal = @nla_84, class = "firrtl.transforms.DedupGroupAnnotation", group = "LogPerfHelper"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "LogPerfHelper"}
    firrtl.module private @BPU_inorder(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_pc_valid: !firrtl.uint<1>, in %io_in_pc_bits: !firrtl.uint<39>, out %io_out_target: !firrtl.uint<39>, out %io_out_valid: !firrtl.uint<1>, in %io_flush: !firrtl.uint<1>, out %io_brIdx: !firrtl.uint<3>, out %io_crosslineJump: !firrtl.uint<1>, in %req__bore_valid: !firrtl.uint<1>, in %req__bore_pc: !firrtl.uint<39>, in %req__bore_isMissPredict: !firrtl.uint<1>, in %req__bore_actualTarget: !firrtl.uint<39>, in %req__bore_actualTaken: !firrtl.uint<1>, in %req__bore_fuOpType: !firrtl.uint<7>, in %req__bore_btbType: !firrtl.uint<2>, in %req__bore_isRVC: !firrtl.uint<1>, in %flushTLB__bore: !firrtl.uint<1>, in %flushBTB__bore: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "btbWrite_valid"}
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_out_rtype"}
      %c94_ui7 = firrtl.constant 94 : !firrtl.uint<7>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c92_ui7 = firrtl.constant 92 : !firrtl.uint<7>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %io_out_target_0 = firrtl.wire {name = "io_out_target"} : !firrtl.uint<39>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_brIdx_2 = firrtl.wire {name = "io_brIdx"} : !firrtl.uint<3>
      %io_crosslineJump_3 = firrtl.wire {name = "io_crosslineJump"} : !firrtl.uint<1>
      firrtl.strictconnect %io_out_target, %io_out_target_0 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_brIdx, %io_brIdx_2 : !firrtl.uint<3>
      firrtl.strictconnect %io_crosslineJump, %io_crosslineJump_3 : !firrtl.uint<1>
      %flush = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%io_in_pc_valid, %c0_ui1, %flush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%io_flush, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %flush, %1 : !firrtl.uint<1>
      %btb_clock, %btb_reset, %btb_io_r_req_ready, %btb_io_r_req_valid, %btb_io_r_req_bits_setIdx, %btb_io_r_resp_data_0_tag, %btb_io_r_resp_data_0__type, %btb_io_r_resp_data_0_target, %btb_io_r_resp_data_0_brIdx, %btb_io_r_resp_data_0_valid, %btb_io_w_req_valid, %btb_io_w_req_bits_setIdx, %btb_io_w_req_bits_data_tag, %btb_io_w_req_bits_data__type, %btb_io_w_req_bits_data_target, %btb_io_w_req_bits_data_brIdx = firrtl.instance btb @SRAMTemplate(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_req_ready: !firrtl.uint<1>, in io_r_req_valid: !firrtl.uint<1>, in io_r_req_bits_setIdx: !firrtl.uint<9>, out io_r_resp_data_0_tag: !firrtl.uint<28>, out io_r_resp_data_0__type: !firrtl.uint<2>, out io_r_resp_data_0_target: !firrtl.uint<39>, out io_r_resp_data_0_brIdx: !firrtl.uint<3>, out io_r_resp_data_0_valid: !firrtl.uint<1>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<9>, in io_w_req_bits_data_tag: !firrtl.uint<28>, in io_w_req_bits_data__type: !firrtl.uint<2>, in io_w_req_bits_data_target: !firrtl.uint<39>, in io_w_req_bits_data_brIdx: !firrtl.uint<3>)
      %2 = firrtl.wire : !firrtl.uint<1>
      %3 = firrtl.wire : !firrtl.uint<9>
      %4 = firrtl.wire : !firrtl.uint<28>
      %5 = firrtl.wire : !firrtl.uint<2>
      %6 = firrtl.wire : !firrtl.uint<39>
      %7 = firrtl.wire : !firrtl.uint<3>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<9>
      %11 = firrtl.wire : !firrtl.uint<28>
      %12 = firrtl.wire : !firrtl.uint<3>
      firrtl.strictconnect %2, %btb_io_r_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %btb_io_r_req_valid, %io_in_pc_valid : !firrtl.uint<1>
      firrtl.strictconnect %btb_io_r_req_bits_setIdx, %3 : !firrtl.uint<9>
      firrtl.strictconnect %4, %btb_io_r_resp_data_0_tag : !firrtl.uint<28>
      firrtl.strictconnect %5, %btb_io_r_resp_data_0__type : !firrtl.uint<2>
      firrtl.strictconnect %6, %btb_io_r_resp_data_0_target : !firrtl.uint<39>
      firrtl.strictconnect %7, %btb_io_r_resp_data_0_brIdx : !firrtl.uint<3>
      firrtl.strictconnect %8, %btb_io_r_resp_data_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %btb_io_w_req_valid, %9 : !firrtl.uint<1>
      firrtl.strictconnect %btb_io_w_req_bits_setIdx, %10 : !firrtl.uint<9>
      firrtl.strictconnect %btb_io_w_req_bits_data_tag, %11 : !firrtl.uint<28>
      firrtl.strictconnect %btb_io_w_req_bits_data__type, %req__bore_btbType : !firrtl.uint<2>
      firrtl.strictconnect %btb_io_w_req_bits_data_target, %req__bore_actualTarget : !firrtl.uint<39>
      firrtl.strictconnect %btb_io_w_req_bits_data_brIdx, %12 : !firrtl.uint<3>
      firrtl.strictconnect %btb_clock, %clock : !firrtl.clock
      %_btb_reset_T_1 = firrtl.or %flushBTB__bore, %flushTLB__bore {name = "_btb_reset_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_btb_reset_T_2 = firrtl.or %reset, %_btb_reset_T_1 {name = "_btb_reset_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %btb_reset, %_btb_reset_T_2 : !firrtl.uint<1>
      %13 = firrtl.or %reset, %_btb_reset_T_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %14 = firrtl.and %13, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.and %14, %15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %16, "[%d] BPU_inorder: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %17 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.and %14, %17 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %18, "[BPU-RESET] bpu-reset flushBTB:%d flushTLB:%d\0A" {name = "printf_1"} (%flushBTB__bore, %flushTLB__bore) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %_btb_io_r_req_bits_setIdx_WIRE_1_idx = firrtl.wire : !firrtl.uint<9>
      %_btb_io_r_req_bits_setIdx_T_1 = firrtl.bits %io_in_pc_bits 10 to 2 {name = "_btb_io_r_req_bits_setIdx_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<9>
      firrtl.strictconnect %_btb_io_r_req_bits_setIdx_WIRE_1_idx, %_btb_io_r_req_bits_setIdx_T_1 : !firrtl.uint<9>
      firrtl.strictconnect %3, %_btb_io_r_req_bits_setIdx_WIRE_1_idx : !firrtl.uint<9>
      %btbRead_tag = firrtl.wire : !firrtl.uint<28>
      %btbRead__type = firrtl.wire : !firrtl.uint<2>
      %btbRead_target = firrtl.wire : !firrtl.uint<39>
      %btbRead_brIdx = firrtl.wire : !firrtl.uint<3>
      %btbRead_valid = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %btbRead_tag, %4 : !firrtl.uint<28>
      firrtl.strictconnect %btbRead__type, %5 : !firrtl.uint<2>
      firrtl.strictconnect %btbRead_target, %6 : !firrtl.uint<39>
      firrtl.strictconnect %btbRead_brIdx, %7 : !firrtl.uint<3>
      firrtl.strictconnect %btbRead_valid, %8 : !firrtl.uint<1>
      %pcLatch = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %19 = firrtl.mux(%io_in_pc_valid, %io_in_pc_bits, %pcLatch) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %pcLatch, %19 : !firrtl.uint<39>
      %_btbHit_WIRE = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %_btbHit_WIRE, %pcLatch : !firrtl.uint<39>
      %_btbHit_WIRE_1_tag = firrtl.wire : !firrtl.uint<28>
      %_btbHit_WIRE_2 = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %_btbHit_WIRE_2, %_btbHit_WIRE : !firrtl.uint<39>
      %_btbHit_T_2 = firrtl.bits %_btbHit_WIRE_2 38 to 11 {name = "_btbHit_T_2"} : (!firrtl.uint<39>) -> !firrtl.uint<28>
      firrtl.strictconnect %_btbHit_WIRE_1_tag, %_btbHit_T_2 : !firrtl.uint<28>
      %_btbHit_T_3 = firrtl.eq %btbRead_tag, %_btbHit_WIRE_1_tag {name = "_btbHit_T_3"} : (!firrtl.uint<28>, !firrtl.uint<28>) -> !firrtl.uint<1>
      %_btbHit_T_4 = firrtl.and %btbRead_valid, %_btbHit_T_3 {name = "_btbHit_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_btbHit_T_5 = firrtl.not %flush {name = "_btbHit_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_btbHit_T_6 = firrtl.and %_btbHit_T_4, %_btbHit_T_5 {name = "_btbHit_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %btbHit_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %btbHit_REG, %2 : !firrtl.uint<1>
      %_btbHit_T_7 = firrtl.and %_btbHit_T_6, %btbHit_REG {name = "_btbHit_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_btbHit_T_8 = firrtl.bits %pcLatch 1 to 1 {name = "_btbHit_T_8"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_btbHit_T_9 = firrtl.bits %btbRead_brIdx 0 to 0 {name = "_btbHit_T_9"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_btbHit_T_10 = firrtl.and %_btbHit_T_8, %_btbHit_T_9 {name = "_btbHit_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_btbHit_T_11 = firrtl.not %_btbHit_T_10 {name = "_btbHit_T_11"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %btbHit = firrtl.and %_btbHit_T_7, %_btbHit_T_11 {name = "btbHit"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_crosslineJump_T = firrtl.bits %btbRead_brIdx 2 to 2 {name = "_crosslineJump_T"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %crosslineJump = firrtl.and %_crosslineJump_T, %btbHit {name = "crosslineJump"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_crosslineJump_3, %crosslineJump : !firrtl.uint<1>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 41 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %20 = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %20, %pcLatch : !firrtl.uint<39>
      %21 = firrtl.wire : !firrtl.uint<28>
      %22 = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %22, %20 : !firrtl.uint<39>
      %23 = firrtl.bits %22 38 to 11 : (!firrtl.uint<39>) -> !firrtl.uint<28>
      firrtl.strictconnect %21, %23 : !firrtl.uint<28>
      %24 = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %24, %pcLatch : !firrtl.uint<39>
      %25 = firrtl.wire : !firrtl.uint<9>
      %26 = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %26, %24 : !firrtl.uint<39>
      %27 = firrtl.bits %26 10 to 2 : (!firrtl.uint<39>) -> !firrtl.uint<9>
      firrtl.strictconnect %25, %27 : !firrtl.uint<9>
      %28 = firrtl.and %btbHit, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.and %28, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %30, "[%d] BPU_inorder: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %31 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %28, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %32, "[BTBHT1] %d pc=%x tag=%x,%x index=%x bridx=%x tgt=%x,%x flush %x type:%x\0A" {name = "printf_3"} (%c, %pcLatch, %btbRead_tag, %21, %25, %btbRead_brIdx, %btbRead_target, %io_out_target_0, %flush, %btbRead__type) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<39>, !firrtl.uint<28>, !firrtl.uint<28>, !firrtl.uint<9>, !firrtl.uint<3>, !firrtl.uint<39>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<2>
      %_io_brIdx_T = firrtl.mux(%io_out_valid_1, %c3_ui2, %c0_ui2) {name = "_io_brIdx_T"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %33 = firrtl.cat %crosslineJump, %_io_brIdx_T : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %34 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.and %28, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %35, "[%d] BPU_inorder: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %36 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.and %28, %36 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %37, "[BTBHT2] btbRead.brIdx %x mask %x\0A" {name = "printf_5"} (%btbRead_brIdx, %33) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %pht_MPORT, %pht_cnt_MPORT, %pht_phtTaken_MPORT = firrtl.mem Undefined {depth = 512 : i64, name = "pht", portNames = ["MPORT", "cnt_MPORT", "phtTaken_MPORT"], prefix = "", readLatency = 0 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data: uint<2>, mask: uint<1>>, !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>, !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %38 = firrtl.subfield %pht_MPORT[addr] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data: uint<2>, mask: uint<1>>
      %39 = firrtl.subfield %pht_MPORT[en] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data: uint<2>, mask: uint<1>>
      %40 = firrtl.subfield %pht_MPORT[clk] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data: uint<2>, mask: uint<1>>
      %41 = firrtl.subfield %pht_MPORT[data] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data: uint<2>, mask: uint<1>>
      %42 = firrtl.subfield %pht_MPORT[mask] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data: uint<2>, mask: uint<1>>
      %43 = firrtl.subfield %pht_cnt_MPORT[addr] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %44 = firrtl.subfield %pht_cnt_MPORT[en] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %45 = firrtl.subfield %pht_cnt_MPORT[clk] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %46 = firrtl.subfield %pht_cnt_MPORT[data] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %47 = firrtl.subfield %pht_phtTaken_MPORT[addr] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %48 = firrtl.subfield %pht_phtTaken_MPORT[en] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %49 = firrtl.subfield %pht_phtTaken_MPORT[clk] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %50 = firrtl.subfield %pht_phtTaken_MPORT[data] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, data flip: uint<2>>
      %_phtTaken_WIRE_1_idx = firrtl.wire : !firrtl.uint<9>
      %_phtTaken_T_1 = firrtl.bits %io_in_pc_bits 10 to 2 {name = "_phtTaken_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<9>
      firrtl.strictconnect %_phtTaken_WIRE_1_idx, %_phtTaken_T_1 : !firrtl.uint<9>
      firrtl.strictconnect %47, %_phtTaken_WIRE_1_idx : !firrtl.uint<9>
      firrtl.strictconnect %48, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %49, %clock : !firrtl.clock
      %_phtTaken_T_3 = firrtl.bits %50 1 to 1 {name = "_phtTaken_T_3"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %phtTaken = firrtl.reg %clock {firrtl.random_init_start = 105 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %51 = firrtl.mux(%io_in_pc_valid, %_phtTaken_T_3, %phtTaken) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %phtTaken, %51 : !firrtl.uint<1>
      %ras_MPORT_1, %ras_rasTarget_MPORT = firrtl.mem Undefined {depth = 16 : i64, name = "ras", portNames = ["MPORT_1", "rasTarget_MPORT"], prefix = "", readLatency = 0 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data: uint<39>, mask: uint<1>>, !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data flip: uint<39>>
      %52 = firrtl.subfield %ras_MPORT_1[addr] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data: uint<39>, mask: uint<1>>
      %53 = firrtl.subfield %ras_MPORT_1[en] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data: uint<39>, mask: uint<1>>
      %54 = firrtl.subfield %ras_MPORT_1[clk] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data: uint<39>, mask: uint<1>>
      %55 = firrtl.subfield %ras_MPORT_1[data] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data: uint<39>, mask: uint<1>>
      %56 = firrtl.subfield %ras_MPORT_1[mask] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data: uint<39>, mask: uint<1>>
      %57 = firrtl.subfield %ras_rasTarget_MPORT[addr] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data flip: uint<39>>
      %58 = firrtl.subfield %ras_rasTarget_MPORT[en] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data flip: uint<39>>
      %59 = firrtl.subfield %ras_rasTarget_MPORT[clk] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data flip: uint<39>>
      %60 = firrtl.subfield %ras_rasTarget_MPORT[data] : !firrtl.bundle<addr: uint<4>, en: uint<1>, clk: clock, data flip: uint<39>>
      %sp_value = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 106 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      firrtl.strictconnect %57, %sp_value : !firrtl.uint<4>
      firrtl.strictconnect %58, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %59, %clock : !firrtl.clock
      %rasTarget = firrtl.reg %clock {firrtl.random_init_start = 110 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %61 = firrtl.mux(%io_in_pc_valid, %60, %rasTarget) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %rasTarget, %61 : !firrtl.uint<39>
      %btbWrite_tag = firrtl.wire : !firrtl.uint<28>
      %btbWrite_brIdx = firrtl.wire : !firrtl.uint<3>
      %62 = firrtl.wire : !firrtl.uint<28>
      %63 = firrtl.bits %req__bore_pc 38 to 11 : (!firrtl.uint<39>) -> !firrtl.uint<28>
      firrtl.strictconnect %62, %63 : !firrtl.uint<28>
      %64 = firrtl.wire : !firrtl.uint<9>
      %65 = firrtl.bits %req__bore_pc 10 to 2 : (!firrtl.uint<39>) -> !firrtl.uint<9>
      firrtl.strictconnect %64, %65 : !firrtl.uint<9>
      %_btbWrite_brIdx_T_5 = firrtl.bits %req__bore_pc 1 to 1 {name = "_btbWrite_brIdx_T_5"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %66 = firrtl.not %_btbWrite_brIdx_T_5 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.cat %_btbWrite_brIdx_T_5, %66 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %68 = firrtl.and %req__bore_valid, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %69 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %70 = firrtl.and %68, %69 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %70, "[%d] BPU_inorder: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %71 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %72 = firrtl.and %68, %71 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %72, "[BTBUP] pc=%x tag=%x index=%x bridx=%x tgt=%x type=%x\0A" {name = "printf_7"} (%req__bore_pc, %62, %64, %67, %req__bore_actualTarget, %req__bore_btbType) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<28>, !firrtl.uint<9>, !firrtl.uint<2>, !firrtl.uint<39>, !firrtl.uint<2>
      %_btbWrite_tag_WIRE_1_tag = firrtl.wire : !firrtl.uint<28>
      %_btbWrite_tag_T_2 = firrtl.bits %req__bore_pc 38 to 11 {name = "_btbWrite_tag_T_2"} : (!firrtl.uint<39>) -> !firrtl.uint<28>
      firrtl.strictconnect %_btbWrite_tag_WIRE_1_tag, %_btbWrite_tag_T_2 : !firrtl.uint<28>
      firrtl.strictconnect %btbWrite_tag, %_btbWrite_tag_WIRE_1_tag : !firrtl.uint<28>
      %_btbWrite_brIdx_T = firrtl.bits %req__bore_pc 2 to 0 {name = "_btbWrite_brIdx_T"} : (!firrtl.uint<39>) -> !firrtl.uint<3>
      %_btbWrite_brIdx_T_1 = firrtl.eq %_btbWrite_brIdx_T, %c6_ui3 {name = "_btbWrite_brIdx_T_1"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_btbWrite_brIdx_T_2 = firrtl.not %req__bore_isRVC {name = "_btbWrite_brIdx_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_btbWrite_brIdx_T_3 = firrtl.and %_btbWrite_brIdx_T_1, %_btbWrite_brIdx_T_2 {name = "_btbWrite_brIdx_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_btbWrite_brIdx_T_6 = firrtl.not %_btbWrite_brIdx_T_5 {name = "_btbWrite_brIdx_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %btbWrite_brIdx_hi = firrtl.cat %_btbWrite_brIdx_T_3, %_btbWrite_brIdx_T_5 {name = "btbWrite_brIdx_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_btbWrite_brIdx_T_7 = firrtl.cat %btbWrite_brIdx_hi, %_btbWrite_brIdx_T_6 {name = "_btbWrite_brIdx_T_7"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      firrtl.strictconnect %btbWrite_brIdx, %_btbWrite_brIdx_T_7 : !firrtl.uint<3>
      %_btb_io_w_req_valid_T = firrtl.and %req__bore_isMissPredict, %req__bore_valid {name = "_btb_io_w_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %9, %_btb_io_w_req_valid_T : !firrtl.uint<1>
      %_btb_io_w_req_bits_setIdx_WIRE_1_idx = firrtl.wire : !firrtl.uint<9>
      %_btb_io_w_req_bits_setIdx_T_1 = firrtl.bits %req__bore_pc 10 to 2 {name = "_btb_io_w_req_bits_setIdx_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<9>
      firrtl.strictconnect %_btb_io_w_req_bits_setIdx_WIRE_1_idx, %_btb_io_w_req_bits_setIdx_T_1 : !firrtl.uint<9>
      firrtl.strictconnect %10, %_btb_io_w_req_bits_setIdx_WIRE_1_idx : !firrtl.uint<9>
      firrtl.strictconnect %12, %btbWrite_brIdx : !firrtl.uint<3>
      firrtl.strictconnect %11, %btbWrite_tag : !firrtl.uint<28>
      %_cnt_WIRE_1_idx = firrtl.wire : !firrtl.uint<9>
      %_cnt_T_1 = firrtl.bits %req__bore_pc 10 to 2 {name = "_cnt_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<9>
      firrtl.strictconnect %_cnt_WIRE_1_idx, %_cnt_T_1 : !firrtl.uint<9>
      firrtl.strictconnect %43, %_cnt_WIRE_1_idx : !firrtl.uint<9>
      firrtl.strictconnect %44, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %45, %clock : !firrtl.clock
      %cnt = firrtl.reg %clock {firrtl.random_init_start = 149 : ui64} : !firrtl.clock, !firrtl.uint<2>
      firrtl.strictconnect %cnt, %46 : !firrtl.uint<2>
      %reqLatch_valid = firrtl.reg %clock {firrtl.random_init_start = 151 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %reqLatch_pc = firrtl.reg %clock {firrtl.random_init_start = 152 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %reqLatch_actualTaken = firrtl.reg %clock {firrtl.random_init_start = 231 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %reqLatch_fuOpType = firrtl.reg %clock {firrtl.random_init_start = 232 : ui64} : !firrtl.clock, !firrtl.uint<7>
      firrtl.strictconnect %reqLatch_valid, %req__bore_valid : !firrtl.uint<1>
      firrtl.strictconnect %reqLatch_pc, %req__bore_pc : !firrtl.uint<39>
      firrtl.strictconnect %reqLatch_actualTaken, %req__bore_actualTaken : !firrtl.uint<1>
      firrtl.strictconnect %reqLatch_fuOpType, %req__bore_fuOpType : !firrtl.uint<7>
      %73 = firrtl.bits %reqLatch_fuOpType 3 to 3 : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %74 = firrtl.not %73 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %75 = firrtl.and %reqLatch_valid, %74 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_newCnt_T = firrtl.add %cnt, %c1_ui1 {name = "_newCnt_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_newCnt_T_1 = firrtl.bits %_newCnt_T 1 to 0 {name = "_newCnt_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %_newCnt_T_2 = firrtl.sub %cnt, %c1_ui1 {name = "_newCnt_T_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_newCnt_T_3 = firrtl.bits %_newCnt_T_2 1 to 0 {name = "_newCnt_T_3"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %newCnt = firrtl.mux(%reqLatch_actualTaken, %_newCnt_T_1, %_newCnt_T_3) {name = "newCnt"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %76 = firrtl.andr %cnt : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_wen_T = firrtl.not %76 {name = "_wen_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_wen_T_1 = firrtl.and %reqLatch_actualTaken, %_wen_T {name = "_wen_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wen_T_2 = firrtl.not %reqLatch_actualTaken {name = "_wen_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_wen_T_3 = firrtl.orr %cnt {name = "_wen_T_3"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_wen_T_4 = firrtl.and %_wen_T_2, %_wen_T_3 {name = "_wen_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %wen = firrtl.or %_wen_T_1, %_wen_T_4 {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %77, %reqLatch_pc : !firrtl.uint<39>
      %78 = firrtl.wire : !firrtl.uint<9>
      %79 = firrtl.wire : !firrtl.uint<39>
      firrtl.strictconnect %79, %77 : !firrtl.uint<39>
      %80 = firrtl.bits %79 10 to 2 : (!firrtl.uint<39>) -> !firrtl.uint<9>
      firrtl.strictconnect %78, %80 : !firrtl.uint<9>
      firrtl.strictconnect %38, %78 : !firrtl.uint<9>
      %81 = firrtl.mux(%75, %wen, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %39, %81 : !firrtl.uint<1>
      firrtl.strictconnect %40, %clock : !firrtl.clock
      firrtl.strictconnect %42, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %41, %newCnt : !firrtl.uint<2>
      %82 = firrtl.eq %req__bore_fuOpType, %c92_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_value_T = firrtl.add %sp_value, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %83 = firrtl.bits %_value_T 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %84 = firrtl.add %req__bore_pc, %c2_ui2 : (!firrtl.uint<39>, !firrtl.uint<2>) -> !firrtl.uint<40>
      %85 = firrtl.bits %84 38 to 0 : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %86 = firrtl.add %req__bore_pc, %c4_ui3 : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %87 = firrtl.bits %86 38 to 0 : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %88 = firrtl.mux(%req__bore_isRVC, %85, %87) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %52, %83 : !firrtl.uint<4>
      %89 = firrtl.mux(%req__bore_valid, %82, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %53, %89 : !firrtl.uint<1>
      firrtl.strictconnect %54, %clock : !firrtl.clock
      firrtl.strictconnect %56, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %55, %88 : !firrtl.uint<39>
      %_value_T_1 = firrtl.bits %_value_T 3 to 0 {name = "_value_T_1"} : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %90 = firrtl.eq %req__bore_fuOpType, %c94_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %91 = firrtl.orr %sp_value : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_value_T_2 = firrtl.not %91 {name = "_value_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_3 = firrtl.sub %sp_value, %c1_ui1 {name = "_value_T_3"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %_value_T_4 = firrtl.bits %_value_T_3 3 to 0 {name = "_value_T_4"} : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %_value_T_5 = firrtl.mux(%_value_T_2, %c0_ui4, %_value_T_4) {name = "_value_T_5"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %92 = firrtl.mux(%90, %_value_T_5, %sp_value) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %93 = firrtl.mux(%82, %_value_T_1, %92) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %94 = firrtl.mux(%req__bore_valid, %93, %sp_value) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %sp_value, %94 : !firrtl.uint<4>
      %_io_out_target_T = firrtl.andr %btbRead__type {name = "_io_out_target_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_target_T_1 = firrtl.mux(%_io_out_target_T, %rasTarget, %btbRead_target) {name = "_io_out_target_T_1"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %io_out_target_0, %_io_out_target_T_1 : !firrtl.uint<39>
      %io_brIdx_hi = firrtl.cat %c1_ui1, %crosslineJump {name = "io_brIdx_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_io_brIdx_T_1 = firrtl.cat %io_brIdx_hi, %_io_brIdx_T {name = "_io_brIdx_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %95 = firrtl.bits %_io_brIdx_T_1 2 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %96 = firrtl.and %95, %btbRead_brIdx : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %io_brIdx_2, %96 : !firrtl.uint<3>
      %97 = firrtl.orr %btbRead__type : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_valid_T = firrtl.not %97 {name = "_io_out_valid_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_2 = firrtl.orr %rasTarget {name = "_io_out_valid_T_2"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_io_out_valid_T_3 = firrtl.mux(%_io_out_valid_T, %phtTaken, %_io_out_valid_T_2) {name = "_io_out_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_4 = firrtl.and %btbHit, %_io_out_valid_T_3 {name = "_io_out_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_4 : !firrtl.uint<1>
    }
    firrtl.module private @IFU_inorder(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_imem_req_ready: !firrtl.uint<1>, out %io_imem_req_valid: !firrtl.uint<1>, out %io_imem_req_bits_addr: !firrtl.uint<39>, out %io_imem_req_bits_user: !firrtl.uint<82>, out %io_imem_resp_ready: !firrtl.uint<1>, in %io_imem_resp_valid: !firrtl.uint<1>, in %io_imem_resp_bits_rdata: !firrtl.uint<64>, in %io_imem_resp_bits_user: !firrtl.uint<82>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_instr: !firrtl.uint<64>, out %io_out_bits_pc: !firrtl.uint<39>, out %io_out_bits_pnpc: !firrtl.uint<39>, out %io_out_bits_exceptionVec_12: !firrtl.uint<1>, out %io_out_bits_brIdx: !firrtl.uint<4>, in %io_redirect_target: !firrtl.uint<39>, in %io_redirect_valid: !firrtl.uint<1>, out %io_flushVec: !firrtl.uint<4>, in %io_ipf: !firrtl.uint<1>, in %bp1_req__bore_valid: !firrtl.uint<1>, in %bp1_req__bore_pc: !firrtl.uint<39>, in %bp1_req__bore_isMissPredict: !firrtl.uint<1>, in %bp1_req__bore_actualTarget: !firrtl.uint<39>, in %bp1_req__bore_actualTaken: !firrtl.uint<1>, in %bp1_req__bore_fuOpType: !firrtl.uint<7>, in %bp1_req__bore_btbType: !firrtl.uint<2>, in %bp1_req__bore_isRVC: !firrtl.uint<1>, out %r__bore: !firrtl.uint<1>, in %bp1_flushTLB__bore: !firrtl.uint<1>, in %bp1_flushBTB__bore: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_bpFlush"}
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4> {name = "io_imem_req_bits_cmd"}
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c2147483648_ui39 = firrtl.constant 2147483648 : !firrtl.uint<39>
      %io_imem_req_bits_addr_0 = firrtl.wire {name = "io_imem_req_bits_addr"} : !firrtl.uint<39>
      %io_imem_req_bits_user_1 = firrtl.wire {name = "io_imem_req_bits_user"} : !firrtl.uint<82>
      %io_imem_resp_ready_2 = firrtl.wire {name = "io_imem_resp_ready"} : !firrtl.uint<1>
      %io_out_valid_3 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_pc_4 = firrtl.wire {name = "io_out_bits_pc"} : !firrtl.uint<39>
      %io_out_bits_pnpc_5 = firrtl.wire {name = "io_out_bits_pnpc"} : !firrtl.uint<39>
      %io_out_bits_brIdx_6 = firrtl.wire {name = "io_out_bits_brIdx"} : !firrtl.uint<4>
      %io_flushVec_7 = firrtl.wire {name = "io_flushVec"} : !firrtl.uint<4>
      firrtl.strictconnect %io_imem_req_valid, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_req_bits_addr, %io_imem_req_bits_addr_0 : !firrtl.uint<39>
      firrtl.strictconnect %io_imem_req_bits_user, %io_imem_req_bits_user_1 : !firrtl.uint<82>
      firrtl.strictconnect %io_imem_resp_ready, %io_imem_resp_ready_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_instr, %io_imem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_pc, %io_out_bits_pc_4 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_pnpc, %io_out_bits_pnpc_5 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_exceptionVec_12, %io_ipf : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_brIdx, %io_out_bits_brIdx_6 : !firrtl.uint<4>
      firrtl.strictconnect %io_flushVec, %io_flushVec_7 : !firrtl.uint<4>
      %pc = firrtl.regreset %clock, %reset, %c2147483648_ui39 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %_bp1_io_in_pc_valid_T = firrtl.and %io_imem_req_ready, %io_out_ready {name = "_bp1_io_in_pc_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %pcUpdate = firrtl.or %io_redirect_valid, %_bp1_io_in_pc_valid_T {name = "pcUpdate"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_snpc_T = firrtl.bits %pc 1 to 1 {name = "_snpc_T"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_snpc_T_1 = firrtl.add %pc, %c2_ui2 {name = "_snpc_T_1"} : (!firrtl.uint<39>, !firrtl.uint<2>) -> !firrtl.uint<40>
      %_snpc_T_2 = firrtl.bits %_snpc_T_1 38 to 0 {name = "_snpc_T_2"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_snpc_T_3 = firrtl.add %pc, %c4_ui3 {name = "_snpc_T_3"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_snpc_T_4 = firrtl.bits %_snpc_T_3 38 to 0 {name = "_snpc_T_4"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %snpc = firrtl.mux(%_snpc_T, %_snpc_T_2, %_snpc_T_4) {name = "snpc"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %bp1_clock, %bp1_reset, %bp1_io_in_pc_valid, %bp1_io_in_pc_bits, %bp1_io_out_target, %bp1_io_out_valid, %bp1_io_flush, %bp1_io_brIdx, %bp1_io_crosslineJump, %bp1_req__bore_valid_8, %bp1_req__bore_pc_9, %bp1_req__bore_isMissPredict_10, %bp1_req__bore_actualTarget_11, %bp1_req__bore_actualTaken_12, %bp1_req__bore_fuOpType_13, %bp1_req__bore_btbType_14, %bp1_req__bore_isRVC_15, %bp1_flushTLB__bore_16, %bp1_flushBTB__bore_17 = firrtl.instance bp1 @BPU_inorder(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_pc_valid: !firrtl.uint<1>, in io_in_pc_bits: !firrtl.uint<39>, out io_out_target: !firrtl.uint<39>, out io_out_valid: !firrtl.uint<1>, in io_flush: !firrtl.uint<1>, out io_brIdx: !firrtl.uint<3>, out io_crosslineJump: !firrtl.uint<1>, in req__bore_valid: !firrtl.uint<1>, in req__bore_pc: !firrtl.uint<39>, in req__bore_isMissPredict: !firrtl.uint<1>, in req__bore_actualTarget: !firrtl.uint<39>, in req__bore_actualTaken: !firrtl.uint<1>, in req__bore_fuOpType: !firrtl.uint<7>, in req__bore_btbType: !firrtl.uint<2>, in req__bore_isRVC: !firrtl.uint<1>, in flushTLB__bore: !firrtl.uint<1>, in flushBTB__bore: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<39>
      %2 = firrtl.wire : !firrtl.uint<39>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<3>
      %5 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %bp1_io_in_pc_valid, %0 : !firrtl.uint<1>
      firrtl.strictconnect %bp1_io_in_pc_bits, %1 : !firrtl.uint<39>
      firrtl.strictconnect %2, %bp1_io_out_target : !firrtl.uint<39>
      firrtl.strictconnect %3, %bp1_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %bp1_io_flush, %io_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %4, %bp1_io_brIdx : !firrtl.uint<3>
      firrtl.strictconnect %5, %bp1_io_crosslineJump : !firrtl.uint<1>
      firrtl.strictconnect %bp1_clock, %clock : !firrtl.clock
      firrtl.strictconnect %bp1_reset, %reset : !firrtl.uint<1>
      %crosslineJumpLatch = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 39 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.or %pcUpdate, %io_redirect_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_crosslineJumpLatch_T = firrtl.not %crosslineJumpLatch {name = "_crosslineJumpLatch_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_crosslineJumpLatch_T_1 = firrtl.and %5, %_crosslineJumpLatch_T {name = "_crosslineJumpLatch_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_crosslineJumpLatch_T_2 = firrtl.mux(%io_redirect_valid, %c0_ui1, %_crosslineJumpLatch_T_1) {name = "_crosslineJumpLatch_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%6, %_crosslineJumpLatch_T_2, %crosslineJumpLatch) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %crosslineJumpLatch, %7 : !firrtl.uint<1>
      %crosslineJumpTarget = firrtl.reg %clock {firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %8 = firrtl.mux(%5, %2, %crosslineJumpTarget) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %crosslineJumpTarget, %8 : !firrtl.uint<39>
      %pnpc = firrtl.mux(%5, %snpc, %2) {name = "pnpc"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_npc_T = firrtl.mux(%3, %pnpc, %snpc) {name = "_npc_T"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_npc_T_1 = firrtl.mux(%crosslineJumpLatch, %crosslineJumpTarget, %_npc_T) {name = "_npc_T_1"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %npc = firrtl.mux(%io_redirect_valid, %io_redirect_target, %_npc_T_1) {name = "npc"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_npcIsSeq_T = firrtl.not %3 {name = "_npcIsSeq_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_npcIsSeq_T_1 = firrtl.mux(%5, %c1_ui1, %_npcIsSeq_T) {name = "_npcIsSeq_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %9 = firrtl.or %io_redirect_valid, %crosslineJumpLatch : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %npcIsSeq = firrtl.mux(%9, %c0_ui1, %_npcIsSeq_T_1) {name = "npcIsSeq"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %brIdx = firrtl.wire : !firrtl.uint<4>
      %_brIdx_T = firrtl.mux(%io_redirect_valid, %c0_ui3, %4) {name = "_brIdx_T"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_brIdx_T_1 = firrtl.cat %npcIsSeq, %_brIdx_T {name = "_brIdx_T_1"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %brIdx, %_brIdx_T_1 : !firrtl.uint<4>
      firrtl.strictconnect %0, %_bp1_io_in_pc_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %1, %npc : !firrtl.uint<39>
      %10 = firrtl.mux(%pcUpdate, %npc, %pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %pc, %10 : !firrtl.uint<39>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %11 = firrtl.and %pcUpdate, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.and %11, %12 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %13, "[%d] IFU_inorder: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %14 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.and %11, %14 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %15, "[IFUPC] pc:%x pcUpdate:%d npc:%x RedValid:%d RedTarget:%x LJL:%d LJTarget:%x LJ:%d snpc:%x bpValid:%d pnpn:%x \0A" {name = "printf_1"} (%pc, %pcUpdate, %npc, %io_redirect_valid, %io_redirect_target, %crosslineJumpLatch, %crosslineJumpTarget, %5, %snpc, %3, %pnpc) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<39>
      %_io_flushVec_T = firrtl.mux(%io_redirect_valid, %c15_ui4, %c0_ui4) {name = "_io_flushVec_T"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_flushVec_7, %_io_flushVec_T : !firrtl.uint<4>
      %_x1_T = firrtl.bits %pc 38 to 1 {name = "_x1_T"} : (!firrtl.uint<39>) -> !firrtl.uint<38>
      %x1 = firrtl.cat %_x1_T, %c0_ui1 {name = "x1"} : (!firrtl.uint<38>, !firrtl.uint<1>) -> !firrtl.uint<39>
      %x6_hi = firrtl.cat %brIdx, %npc {name = "x6_hi"} : (!firrtl.uint<4>, !firrtl.uint<39>) -> !firrtl.uint<43>
      %x6 = firrtl.cat %x6_hi, %pc {name = "x6"} : (!firrtl.uint<43>, !firrtl.uint<39>) -> !firrtl.uint<82>
      firrtl.strictconnect %io_imem_req_bits_addr_0, %x1 : !firrtl.uint<39>
      firrtl.strictconnect %io_imem_req_bits_user_1, %x6 : !firrtl.uint<82>
      %_io_out_valid_T = firrtl.bits %io_flushVec_7 0 to 0 {name = "_io_out_valid_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_imem_resp_ready_T_1 = firrtl.or %io_out_ready, %_io_out_valid_T {name = "_io_imem_resp_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_imem_resp_ready_2, %_io_imem_resp_ready_T_1 : !firrtl.uint<1>
      %16 = firrtl.and %_bp1_io_in_pc_valid_T, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.and %16, %17 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %18, "[%d] IFU_inorder: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %19 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.and %16, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %20, "[IFI] pc=%x user=%x %x %x %x \0A" {name = "printf_3"} (%io_imem_req_bits_addr_0, %io_imem_req_bits_user_1, %io_redirect_valid, %4, %brIdx) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<82>, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<4>
      %21 = firrtl.and %io_out_ready, %io_out_valid_3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %21, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.and %22, %23 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %24, "[%d] IFU_inorder: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %25 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.and %22, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %26, "[IFO] pc=%x inst=%x\0A" {name = "printf_5"} (%io_out_bits_pc_4, %io_imem_resp_bits_rdata) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<64>
      %_io_out_bits_pc_T = firrtl.bits %io_imem_resp_bits_user 38 to 0 {name = "_io_out_bits_pc_T"} : (!firrtl.uint<82>) -> !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_pc_4, %_io_out_bits_pc_T : !firrtl.uint<39>
      %_io_out_bits_pnpc_T = firrtl.bits %io_imem_resp_bits_user 77 to 39 {name = "_io_out_bits_pnpc_T"} : (!firrtl.uint<82>) -> !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_pnpc_5, %_io_out_bits_pnpc_T : !firrtl.uint<39>
      %_io_out_bits_brIdx_T = firrtl.bits %io_imem_resp_bits_user 81 to 78 {name = "_io_out_bits_brIdx_T"} : (!firrtl.uint<82>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_brIdx_6, %_io_out_bits_brIdx_T : !firrtl.uint<4>
      %_io_out_valid_T_1 = firrtl.not %_io_out_valid_T {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_2 = firrtl.and %io_imem_resp_valid, %_io_out_valid_T_1 {name = "_io_out_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_3, %_io_out_valid_T_2 : !firrtl.uint<1>
      %27 = firrtl.and %io_imem_resp_ready_2, %io_imem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r = firrtl.regreset %clock, %reset, %c0_ui1 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 79 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %28 = firrtl.mux(%io_out_ready, %c1_ui1, %r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.mux(%27, %c0_ui1, %28) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r, %29 : !firrtl.uint<1>
      %30 = firrtl.orr %io_flushVec_7 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %31 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %31, %30 : !firrtl.uint<1>
      firrtl.strictconnect %bp1_req__bore_valid_8, %bp1_req__bore_valid : !firrtl.uint<1>
      firrtl.strictconnect %bp1_req__bore_pc_9, %bp1_req__bore_pc : !firrtl.uint<39>
      firrtl.strictconnect %bp1_req__bore_isMissPredict_10, %bp1_req__bore_isMissPredict : !firrtl.uint<1>
      firrtl.strictconnect %bp1_req__bore_actualTarget_11, %bp1_req__bore_actualTarget : !firrtl.uint<39>
      firrtl.strictconnect %bp1_req__bore_actualTaken_12, %bp1_req__bore_actualTaken : !firrtl.uint<1>
      firrtl.strictconnect %bp1_req__bore_fuOpType_13, %bp1_req__bore_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %bp1_req__bore_btbType_14, %bp1_req__bore_btbType : !firrtl.uint<2>
      firrtl.strictconnect %bp1_req__bore_isRVC_15, %bp1_req__bore_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %r__bore, %r : !firrtl.uint<1>
      firrtl.strictconnect %bp1_flushTLB__bore_16, %bp1_flushTLB__bore : !firrtl.uint<1>
      firrtl.strictconnect %bp1_flushBTB__bore_17, %bp1_flushBTB__bore : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %31 : !firrtl.uint<1>
    }
    firrtl.module private @NaiveRVCAlignBuffer(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_instr: !firrtl.uint<64>, in %io_in_bits_pc: !firrtl.uint<39>, in %io_in_bits_pnpc: !firrtl.uint<39>, in %io_in_bits_exceptionVec_12: !firrtl.uint<1>, in %io_in_bits_brIdx: !firrtl.uint<4>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_instr: !firrtl.uint<64>, out %io_out_bits_pc: !firrtl.uint<39>, out %io_out_bits_pnpc: !firrtl.uint<39>, out %io_out_bits_exceptionVec_12: !firrtl.uint<1>, out %io_out_bits_brIdx: !firrtl.uint<4>, out %io_out_bits_crossPageIPFFix: !firrtl.uint<1>, in %io_flush: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_out_bits_isRVC"}
      %c0_ui39 = firrtl.constant 0 : !firrtl.uint<39> {name = "io_out_bits_redirect_target"}
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c0_ui16 = firrtl.constant 0 : !firrtl.uint<16>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_instr_2 = firrtl.wire {name = "io_out_bits_instr"} : !firrtl.uint<64>
      %io_out_bits_pc_3 = firrtl.wire {name = "io_out_bits_pc"} : !firrtl.uint<39>
      %io_out_bits_pnpc_4 = firrtl.wire {name = "io_out_bits_pnpc"} : !firrtl.uint<39>
      %io_out_bits_exceptionVec_12_5 = firrtl.wire {name = "io_out_bits_exceptionVec_12"} : !firrtl.uint<1>
      %io_out_bits_brIdx_6 = firrtl.wire {name = "io_out_bits_brIdx"} : !firrtl.uint<4>
      %io_out_bits_crossPageIPFFix_7 = firrtl.wire {name = "io_out_bits_crossPageIPFFix"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_instr, %io_out_bits_instr_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_pc, %io_out_bits_pc_3 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_pnpc, %io_out_bits_pnpc_4 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_exceptionVec_12, %io_out_bits_exceptionVec_12_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_brIdx, %io_out_bits_brIdx_6 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_crossPageIPFFix, %io_out_bits_crossPageIPFFix_7 : !firrtl.uint<1>
      %instr = firrtl.wire : !firrtl.uint<32>
      %_isRVC_T = firrtl.bits %instr 1 to 0 {name = "_isRVC_T"} : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %_io_out_bits_brIdx_T_3 = firrtl.andr %_isRVC_T {name = "_io_out_bits_brIdx_T_3"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %isRVC = firrtl.not %_io_out_bits_brIdx_T_3 {name = "isRVC"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %pcOffsetR = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<3>
      %0 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_loadNextInstline_T = firrtl.not %0 {name = "_loadNextInstline_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_pcOffset_T_1 = firrtl.bits %io_in_bits_pc 2 to 0 {name = "_pcOffset_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<3>
      %pcOffset = firrtl.mux(%_loadNextInstline_T, %_pcOffset_T_1, %pcOffsetR) {name = "pcOffset"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %instIn = firrtl.cat %c0_ui16, %io_in_bits_instr {name = "instIn"} : (!firrtl.uint<16>, !firrtl.uint<64>) -> !firrtl.uint<80>
      %canGo = firrtl.wire : !firrtl.uint<1>
      %canIn = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.orr %pcOffset : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvcNext_T = firrtl.not %1 {name = "_rvcNext_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_6 = firrtl.bits %io_in_bits_brIdx 0 to 0 {name = "_rvcNext_T_6"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvcFinish_T_3 = firrtl.or %_io_out_bits_brIdx_T_3, %_rvcNext_T_6 {name = "_rvcFinish_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcFinish_T_4 = firrtl.and %_rvcNext_T, %_rvcFinish_T_3 {name = "_rvcFinish_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_5 = firrtl.eq %pcOffset, %c4_ui3 {name = "_rvcNext_T_5"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvcFinish_T_8 = firrtl.or %_io_out_bits_brIdx_T_3, %_rvcNext_T_6 {name = "_rvcFinish_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcFinish_T_9 = firrtl.and %_rvcNext_T_5, %_rvcFinish_T_8 {name = "_rvcFinish_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcFinish_T_10 = firrtl.or %_rvcFinish_T_4, %_rvcFinish_T_9 {name = "_rvcFinish_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcForceLoadNext_T = firrtl.eq %pcOffset, %c2_ui2 {name = "_rvcForceLoadNext_T"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rvcForceLoadNext_T_6 = firrtl.bits %io_in_bits_brIdx 1 to 1 {name = "_rvcForceLoadNext_T_6"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvcFinish_T_13 = firrtl.or %isRVC, %_rvcForceLoadNext_T_6 {name = "_rvcFinish_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcFinish_T_14 = firrtl.and %_rvcForceLoadNext_T, %_rvcFinish_T_13 {name = "_rvcFinish_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcFinish_T_15 = firrtl.or %_rvcFinish_T_10, %_rvcFinish_T_14 {name = "_rvcFinish_T_15"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcSpecialJump_T = firrtl.eq %pcOffset, %c6_ui3 {name = "_rvcSpecialJump_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvcFinish_T_17 = firrtl.and %_rvcSpecialJump_T, %isRVC {name = "_rvcFinish_T_17"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %rvcFinish = firrtl.or %_rvcFinish_T_15, %_rvcFinish_T_17 {name = "rvcFinish"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_2 = firrtl.not %_rvcNext_T_6 {name = "_rvcNext_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_3 = firrtl.and %isRVC, %_rvcNext_T_2 {name = "_rvcNext_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_4 = firrtl.and %_rvcNext_T, %_rvcNext_T_3 {name = "_rvcNext_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_7 = firrtl.not %_rvcNext_T_6 {name = "_rvcNext_T_7"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_8 = firrtl.and %isRVC, %_rvcNext_T_7 {name = "_rvcNext_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_9 = firrtl.and %_rvcNext_T_5, %_rvcNext_T_8 {name = "_rvcNext_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_10 = firrtl.or %_rvcNext_T_4, %_rvcNext_T_9 {name = "_rvcNext_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_13 = firrtl.and %_rvcForceLoadNext_T, %_io_out_bits_brIdx_T_3 {name = "_rvcNext_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_15 = firrtl.not %_rvcForceLoadNext_T_6 {name = "_rvcNext_T_15"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcNext_T_16 = firrtl.and %_rvcNext_T_13, %_rvcNext_T_15 {name = "_rvcNext_T_16"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %rvcNext = firrtl.or %_rvcNext_T_10, %_rvcNext_T_16 {name = "rvcNext"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcSpecial_T_2 = firrtl.and %_rvcSpecialJump_T, %_io_out_bits_brIdx_T_3 {name = "_rvcSpecial_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcSpecialJump_T_3 = firrtl.bits %io_in_bits_brIdx 2 to 2 {name = "_rvcSpecialJump_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvcSpecial_T_4 = firrtl.not %_rvcSpecialJump_T_3 {name = "_rvcSpecial_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %rvcSpecial = firrtl.and %_rvcSpecial_T_2, %_rvcSpecial_T_4 {name = "rvcSpecial"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcSpecialJump_T_2 = firrtl.and %_rvcSpecialJump_T, %_io_out_bits_brIdx_T_3 {name = "_rvcSpecialJump_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %rvcSpecialJump = firrtl.and %_rvcSpecialJump_T_2, %_rvcSpecialJump_T_3 {name = "rvcSpecialJump"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %pnpcIsSeq = firrtl.bits %io_in_bits_brIdx 3 to 3 {name = "pnpcIsSeq"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_loadNextInstline_T_1 = firrtl.eq %state, %c1_ui2 {name = "_loadNextInstline_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_flushIFU_T_2 = firrtl.or %_loadNextInstline_T, %_loadNextInstline_T_1 {name = "_flushIFU_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_flushIFU_T_3 = firrtl.and %_flushIFU_T_2, %rvcSpecial {name = "_flushIFU_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_flushIFU_T_4 = firrtl.and %_flushIFU_T_3, %io_in_valid {name = "_flushIFU_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_flushIFU_T_5 = firrtl.not %pnpcIsSeq {name = "_flushIFU_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %flushIFU = firrtl.and %_flushIFU_T_4, %_flushIFU_T_5 {name = "flushIFU"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %2 = firrtl.and %flushIFU, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %4 = firrtl.and %2, %3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %4, "[%d] NaiveRVCAlignBuffer: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %5 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.and %2, %5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %6, "flushIFU at pc %x offset %x\0A" {name = "printf_1"} (%io_in_bits_pc, %pcOffset) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<3>
      %7 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.not %flushIFU : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %8, %7, "Assertion failed\0A    at NaiveIBF.scala:59 assert(!flushIFU)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %_loadNextInstline_T_2 = firrtl.or %_loadNextInstline_T, %_loadNextInstline_T_1 {name = "_loadNextInstline_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadNextInstline_T_3 = firrtl.or %rvcSpecial, %rvcSpecialJump {name = "_loadNextInstline_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadNextInstline_T_4 = firrtl.and %_loadNextInstline_T_2, %_loadNextInstline_T_3 {name = "_loadNextInstline_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadNextInstline_T_5 = firrtl.and %_loadNextInstline_T_4, %io_in_valid {name = "_loadNextInstline_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %loadNextInstline = firrtl.and %_loadNextInstline_T_5, %pnpcIsSeq {name = "loadNextInstline"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %pcOut = firrtl.wire : !firrtl.uint<39>
      %pnpcOut = firrtl.wire : !firrtl.uint<39>
      %specialPCR = firrtl.reg %clock {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %specialNPCR = firrtl.reg %clock {firrtl.random_init_start = 44 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %specialInstR = firrtl.reg %clock {firrtl.random_init_start = 83 : ui64} : !firrtl.clock, !firrtl.uint<16>
      %specialIPFR = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 99 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %_pcOut_T = firrtl.bits %io_in_bits_pc 38 to 3 {name = "_pcOut_T"} : (!firrtl.uint<39>) -> !firrtl.uint<36>
      %_rvcForceLoadNext_T_2 = firrtl.and %_rvcForceLoadNext_T, %_io_out_bits_brIdx_T_3 {name = "_rvcForceLoadNext_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcForceLoadNext_T_3 = firrtl.bits %io_in_bits_pnpc 2 to 0 {name = "_rvcForceLoadNext_T_3"} : (!firrtl.uint<39>) -> !firrtl.uint<3>
      %_rvcForceLoadNext_T_4 = firrtl.eq %_rvcForceLoadNext_T_3, %c4_ui3 {name = "_rvcForceLoadNext_T_4"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvcForceLoadNext_T_5 = firrtl.and %_rvcForceLoadNext_T_2, %_rvcForceLoadNext_T_4 {name = "_rvcForceLoadNext_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvcForceLoadNext_T_7 = firrtl.not %_rvcForceLoadNext_T_6 {name = "_rvcForceLoadNext_T_7"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %rvcForceLoadNext = firrtl.and %_rvcForceLoadNext_T_5, %_rvcForceLoadNext_T_7 {name = "rvcForceLoadNext"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_crossPageIPFFix_T_1 = firrtl.eq %state, %c2_ui2 {name = "_io_out_bits_crossPageIPFFix_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_bits_crossPageIPFFix_T = firrtl.andr %state {name = "_io_out_bits_crossPageIPFFix_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_instr_T_2 = firrtl.or %_io_out_bits_crossPageIPFFix_T_1, %_io_out_bits_crossPageIPFFix_T {name = "_instr_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_instr_T_3 = firrtl.bits %instIn 15 to 0 {name = "_instr_T_3"} : (!firrtl.uint<80>) -> !firrtl.uint<16>
      %_instr_T_4 = firrtl.cat %_instr_T_3, %specialInstR {name = "_instr_T_4"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %_instr_T_5 = firrtl.bits %instIn 31 to 0 {name = "_instr_T_5"} : (!firrtl.uint<80>) -> !firrtl.uint<32>
      %_instr_T_6 = firrtl.bits %instIn 47 to 16 {name = "_instr_T_6"} : (!firrtl.uint<80>) -> !firrtl.uint<32>
      %_instr_T_7 = firrtl.bits %instIn 63 to 32 {name = "_instr_T_7"} : (!firrtl.uint<80>) -> !firrtl.uint<32>
      %_instr_T_8 = firrtl.bits %instIn 79 to 48 {name = "_instr_T_8"} : (!firrtl.uint<80>) -> !firrtl.uint<32>
      %9 = firrtl.orr %pcOffset : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_instr_T_9 = firrtl.not %9 {name = "_instr_T_9"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_instr_T_10 = firrtl.eq %pcOffset, %c2_ui2 {name = "_instr_T_10"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_instr_T_11 = firrtl.eq %pcOffset, %c4_ui3 {name = "_instr_T_11"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_instr_T_12 = firrtl.eq %pcOffset, %c6_ui3 {name = "_instr_T_12"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_instr_T_13 = firrtl.mux(%_instr_T_9, %_instr_T_5, %c0_ui32) {name = "_instr_T_13"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_instr_T_14 = firrtl.mux(%_instr_T_10, %_instr_T_6, %c0_ui32) {name = "_instr_T_14"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_instr_T_15 = firrtl.mux(%_instr_T_11, %_instr_T_7, %c0_ui32) {name = "_instr_T_15"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_instr_T_16 = firrtl.mux(%_instr_T_12, %_instr_T_8, %c0_ui32) {name = "_instr_T_16"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_instr_T_17 = firrtl.or %_instr_T_13, %_instr_T_14 {name = "_instr_T_17"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_instr_T_18 = firrtl.or %_instr_T_17, %_instr_T_15 {name = "_instr_T_18"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_instr_T_19 = firrtl.or %_instr_T_18, %_instr_T_16 {name = "_instr_T_19"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_instr_WIRE = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %_instr_WIRE, %_instr_T_19 : !firrtl.uint<32>
      %_instr_T_20 = firrtl.mux(%_instr_T_2, %_instr_T_4, %_instr_WIRE) {name = "_instr_T_20"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %instr, %_instr_T_20 : !firrtl.uint<32>
      %10 = firrtl.not %io_flush : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %11 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %12 = firrtl.not %11 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_canGo_T = firrtl.or %rvcFinish, %rvcNext {name = "_canGo_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_canIn_T = firrtl.or %rvcFinish, %rvcForceLoadNext {name = "_canIn_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_pnpcOut_T = firrtl.add %io_in_bits_pc, %c2_ui2 {name = "_pnpcOut_T"} : (!firrtl.uint<39>, !firrtl.uint<2>) -> !firrtl.uint<40>
      %_pnpcOut_T_1 = firrtl.bits %_pnpcOut_T 38 to 0 {name = "_pnpcOut_T_1"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_pnpcOut_T_2 = firrtl.add %io_in_bits_pc, %c4_ui3 {name = "_pnpcOut_T_2"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_pnpcOut_T_3 = firrtl.bits %_pnpcOut_T_2 38 to 0 {name = "_pnpcOut_T_3"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_pnpcOut_T_4 = firrtl.mux(%isRVC, %_pnpcOut_T_1, %_pnpcOut_T_3) {name = "_pnpcOut_T_4"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_pnpcOut_T_5 = firrtl.mux(%rvcFinish, %io_in_bits_pnpc, %_pnpcOut_T_4) {name = "_pnpcOut_T_5"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %13 = firrtl.and %io_out_ready, %io_out_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.and %13, %rvcFinish : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.mux(%14, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %16 = firrtl.and %13, %rvcNext : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.mux(%16, %c1_ui2, %15) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_pcOffsetR_T = firrtl.mux(%isRVC, %c2_ui3, %c4_ui3) {name = "_pcOffsetR_T"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_pcOffsetR_T_1 = firrtl.add %pcOffset, %_pcOffsetR_T {name = "_pcOffsetR_T_1"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_pcOffsetR_T_2 = firrtl.bits %_pcOffsetR_T_1 2 to 0 {name = "_pcOffsetR_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %18 = firrtl.mux(%16, %_pcOffsetR_T_2, %pcOffsetR) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %19 = firrtl.and %rvcSpecial, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.mux(%19, %c2_ui2, %17) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_specialInstR_T = firrtl.bits %io_in_bits_instr 63 to 48 {name = "_specialInstR_T"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %21 = firrtl.mux(%19, %_specialInstR_T, %specialInstR) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %22 = firrtl.and %rvcSpecialJump, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.mux(%22, %c3_ui2, %20) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %24 = firrtl.or %22, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.mux(%24, %pcOut, %specialPCR) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %26 = firrtl.mux(%22, %io_in_bits_pnpc, %specialNPCR) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_specialInstR_T_1 = firrtl.bits %io_in_bits_instr 63 to 48 {name = "_specialInstR_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %27 = firrtl.mux(%22, %_specialInstR_T_1, %21) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %28 = firrtl.or %22, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.mux(%28, %io_in_bits_exceptionVec_12, %specialIPFR) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.eq %state, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_canGo_T_1 = firrtl.or %rvcFinish, %rvcNext {name = "_canGo_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_canIn_T_1 = firrtl.or %rvcFinish, %rvcForceLoadNext {name = "_canIn_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_pcOut_T_2 = firrtl.cat %_pcOut_T, %pcOffsetR {name = "_pcOut_T_2"} : (!firrtl.uint<36>, !firrtl.uint<3>) -> !firrtl.uint<39>
      %_pnpcOut_T_6 = firrtl.add %pcOut, %c2_ui2 {name = "_pnpcOut_T_6"} : (!firrtl.uint<39>, !firrtl.uint<2>) -> !firrtl.uint<40>
      %_pnpcOut_T_7 = firrtl.bits %_pnpcOut_T_6 38 to 0 {name = "_pnpcOut_T_7"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_pnpcOut_T_8 = firrtl.add %pcOut, %c4_ui3 {name = "_pnpcOut_T_8"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_pnpcOut_T_9 = firrtl.bits %_pnpcOut_T_8 38 to 0 {name = "_pnpcOut_T_9"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_pnpcOut_T_10 = firrtl.mux(%isRVC, %_pnpcOut_T_7, %_pnpcOut_T_9) {name = "_pnpcOut_T_10"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_pnpcOut_T_11 = firrtl.mux(%rvcFinish, %io_in_bits_pnpc, %_pnpcOut_T_10) {name = "_pnpcOut_T_11"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %31 = firrtl.and %io_out_ready, %io_out_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %31, %rvcFinish : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.mux(%32, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %34 = firrtl.and %31, %rvcNext : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.mux(%34, %c1_ui2, %33) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_pcOffsetR_T_3 = firrtl.mux(%isRVC, %c2_ui3, %c4_ui3) {name = "_pcOffsetR_T_3"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_pcOffsetR_T_4 = firrtl.add %pcOffset, %_pcOffsetR_T_3 {name = "_pcOffsetR_T_4"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_pcOffsetR_T_5 = firrtl.bits %_pcOffsetR_T_4 2 to 0 {name = "_pcOffsetR_T_5"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %36 = firrtl.mux(%34, %_pcOffsetR_T_5, %pcOffsetR) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %37 = firrtl.and %rvcSpecial, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.mux(%37, %c2_ui2, %35) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_specialInstR_T_2 = firrtl.bits %io_in_bits_instr 63 to 48 {name = "_specialInstR_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %39 = firrtl.mux(%37, %_specialInstR_T_2, %specialInstR) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %40 = firrtl.and %rvcSpecialJump, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.mux(%40, %c3_ui2, %38) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %42 = firrtl.or %40, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.and %30, %42 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.mux(%43, %pcOut, %specialPCR) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %45 = firrtl.mux(%12, %25, %44) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %46 = firrtl.mux(%10, %45, %specialPCR) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %specialPCR, %46 : !firrtl.uint<39>
      %47 = firrtl.and %30, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.mux(%47, %io_in_bits_pnpc, %specialNPCR) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %49 = firrtl.mux(%12, %26, %48) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %50 = firrtl.mux(%10, %49, %specialNPCR) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %specialNPCR, %50 : !firrtl.uint<39>
      %_specialInstR_T_3 = firrtl.bits %io_in_bits_instr 63 to 48 {name = "_specialInstR_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %51 = firrtl.mux(%40, %_specialInstR_T_3, %39) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %52 = firrtl.mux(%30, %51, %specialInstR) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %53 = firrtl.mux(%12, %27, %52) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %54 = firrtl.mux(%10, %53, %specialInstR) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      firrtl.strictconnect %specialInstR, %54 : !firrtl.uint<16>
      %55 = firrtl.or %40, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.and %30, %55 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.mux(%56, %io_in_bits_exceptionVec_12, %specialIPFR) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %58 = firrtl.mux(%12, %29, %57) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.mux(%10, %58, %specialIPFR) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %specialIPFR, %59 : !firrtl.uint<1>
      %60 = firrtl.eq %state, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_pnpcOut_T_12 = firrtl.add %specialPCR, %c4_ui3 {name = "_pnpcOut_T_12"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_pnpcOut_T_13 = firrtl.bits %_pnpcOut_T_12 38 to 0 {name = "_pnpcOut_T_13"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %61 = firrtl.and %io_out_ready, %io_out_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.mux(%61, %c1_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %63 = firrtl.and %60, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.mux(%63, %c2_ui3, %pcOffsetR) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %65 = firrtl.mux(%30, %36, %64) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %66 = firrtl.mux(%12, %18, %65) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %67 = firrtl.mux(%10, %66, %pcOffsetR) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %pcOffsetR, %67 : !firrtl.uint<3>
      %68 = firrtl.andr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %69 = firrtl.or %60, %68 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %70 = firrtl.mux(%69, %specialPCR, %c0_ui39) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %71 = firrtl.mux(%30, %_pcOut_T_2, %70) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %72 = firrtl.mux(%12, %io_in_bits_pc, %71) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %73 = firrtl.mux(%68, %specialNPCR, %c0_ui39) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %74 = firrtl.mux(%60, %_pnpcOut_T_13, %73) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %75 = firrtl.mux(%30, %_pnpcOut_T_11, %74) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %76 = firrtl.mux(%12, %_pnpcOut_T_5, %75) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %77 = firrtl.or %60, %68 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %78 = firrtl.mux(%77, %io_in_valid, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %79 = firrtl.mux(%30, %_canGo_T_1, %78) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.mux(%12, %_canGo_T, %79) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.mux(%60, %c0_ui1, %68) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %82 = firrtl.mux(%30, %_canIn_T_1, %81) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.mux(%12, %_canIn_T, %82) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %84 = firrtl.and %io_out_ready, %io_out_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %85 = firrtl.and %68, %84 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.mux(%85, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %87 = firrtl.mux(%60, %62, %86) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %88 = firrtl.mux(%30, %41, %87) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %89 = firrtl.mux(%12, %23, %88) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %90 = firrtl.mux(%10, %89, %c0_ui2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state, %90 : !firrtl.uint<2>
      firrtl.strictconnect %canGo, %80 : !firrtl.uint<1>
      firrtl.strictconnect %canIn, %83 : !firrtl.uint<1>
      firrtl.strictconnect %pcOut, %72 : !firrtl.uint<39>
      firrtl.strictconnect %pnpcOut, %76 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_pc_3, %pcOut : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_pnpc_4, %pnpcOut : !firrtl.uint<39>
      %91 = firrtl.pad %instr, 64 : (!firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_instr_2, %91 : !firrtl.uint<64>
      %_io_out_bits_brIdx_T = firrtl.add %pcOut, %c4_ui3 {name = "_io_out_bits_brIdx_T"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_io_out_bits_brIdx_T_1 = firrtl.bits %_io_out_bits_brIdx_T 38 to 0 {name = "_io_out_bits_brIdx_T_1"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_io_out_bits_brIdx_T_2 = firrtl.eq %pnpcOut, %_io_out_bits_brIdx_T_1 {name = "_io_out_bits_brIdx_T_2"} : (!firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<1>
      %_io_out_bits_brIdx_T_4 = firrtl.and %_io_out_bits_brIdx_T_2, %_io_out_bits_brIdx_T_3 {name = "_io_out_bits_brIdx_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_brIdx_T_5 = firrtl.add %pcOut, %c2_ui2 {name = "_io_out_bits_brIdx_T_5"} : (!firrtl.uint<39>, !firrtl.uint<2>) -> !firrtl.uint<40>
      %_io_out_bits_brIdx_T_6 = firrtl.bits %_io_out_bits_brIdx_T_5 38 to 0 {name = "_io_out_bits_brIdx_T_6"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_io_out_bits_brIdx_T_7 = firrtl.eq %pnpcOut, %_io_out_bits_brIdx_T_6 {name = "_io_out_bits_brIdx_T_7"} : (!firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<1>
      %_io_out_bits_brIdx_T_8 = firrtl.and %_io_out_bits_brIdx_T_7, %isRVC {name = "_io_out_bits_brIdx_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_brIdx_T_9 = firrtl.or %_io_out_bits_brIdx_T_4, %_io_out_bits_brIdx_T_8 {name = "_io_out_bits_brIdx_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_brIdx_T_10 = firrtl.not %_io_out_bits_brIdx_T_9 {name = "_io_out_bits_brIdx_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.pad %_io_out_bits_brIdx_T_10, 4 : (!firrtl.uint<1>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_brIdx_6, %92 : !firrtl.uint<4>
      %_io_out_valid_T = firrtl.and %io_in_valid, %canGo {name = "_io_out_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T : !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.and %_io_in_ready_T_1, %canIn {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_2 {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.or %_io_in_ready_T_3, %loadNextInstline {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_4 : !firrtl.uint<1>
      %_io_out_bits_exceptionVec_12_T_2 = firrtl.or %_io_out_bits_crossPageIPFFix_T, %_io_out_bits_crossPageIPFFix_T_1 {name = "_io_out_bits_exceptionVec_12_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_exceptionVec_12_T_3 = firrtl.and %specialIPFR, %_io_out_bits_exceptionVec_12_T_2 {name = "_io_out_bits_exceptionVec_12_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_exceptionVec_12_T_4 = firrtl.or %io_in_bits_exceptionVec_12, %_io_out_bits_exceptionVec_12_T_3 {name = "_io_out_bits_exceptionVec_12_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_exceptionVec_12_5, %_io_out_bits_exceptionVec_12_T_4 : !firrtl.uint<1>
      %_io_out_bits_crossPageIPFFix_T_2 = firrtl.or %_io_out_bits_crossPageIPFFix_T, %_io_out_bits_crossPageIPFFix_T_1 {name = "_io_out_bits_crossPageIPFFix_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_crossPageIPFFix_T_3 = firrtl.and %io_in_bits_exceptionVec_12, %_io_out_bits_crossPageIPFFix_T_2 {name = "_io_out_bits_crossPageIPFFix_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_crossPageIPFFix_T_4 = firrtl.not %specialIPFR {name = "_io_out_bits_crossPageIPFFix_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_crossPageIPFFix_T_5 = firrtl.and %_io_out_bits_crossPageIPFFix_T_3, %_io_out_bits_crossPageIPFFix_T_4 {name = "_io_out_bits_crossPageIPFFix_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_crossPageIPFFix_7, %_io_out_bits_crossPageIPFFix_T_5 : !firrtl.uint<1>
    }
    firrtl.module private @Decoder(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_instr: !firrtl.uint<64>, in %io_in_bits_pc: !firrtl.uint<39>, in %io_in_bits_pnpc: !firrtl.uint<39>, in %io_in_bits_exceptionVec_12: !firrtl.uint<1>, in %io_in_bits_brIdx: !firrtl.uint<4>, in %io_in_bits_crossPageIPFFix: !firrtl.uint<1>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_cf_instr: !firrtl.uint<64>, out %io_out_bits_cf_pc: !firrtl.uint<39>, out %io_out_bits_cf_pnpc: !firrtl.uint<39>, out %io_out_bits_cf_exceptionVec_1: !firrtl.uint<1>, out %io_out_bits_cf_exceptionVec_2: !firrtl.uint<1>, out %io_out_bits_cf_exceptionVec_12: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_0: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_1: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_2: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_3: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_4: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_5: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_6: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_7: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_8: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_9: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_10: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_11: !firrtl.uint<1>, out %io_out_bits_cf_brIdx: !firrtl.uint<4>, out %io_out_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out %io_out_bits_ctrl_src1Type: !firrtl.uint<1>, out %io_out_bits_ctrl_src2Type: !firrtl.uint<1>, out %io_out_bits_ctrl_fuType: !firrtl.uint<3>, out %io_out_bits_ctrl_fuOpType: !firrtl.uint<7>, out %io_out_bits_ctrl_rfSrc1: !firrtl.uint<5>, out %io_out_bits_ctrl_rfSrc2: !firrtl.uint<5>, out %io_out_bits_ctrl_rfWen: !firrtl.uint<1>, out %io_out_bits_ctrl_rfDest: !firrtl.uint<5>, out %io_out_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out %io_out_bits_data_imm: !firrtl.uint<64>, out %io_isWFI: !firrtl.uint<1>, in %vmEnable__bore: !firrtl.uint<1>, in %intrVec__bore: !firrtl.uint<12>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_out_bits_ctrl_isSrc2Forward"}
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64> {name = "io_out_bits_data_src2"}
      %c0_ui5 = firrtl.constant 0 : !firrtl.uint<5>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c7_ui4 = firrtl.constant 7 : !firrtl.uint<4>
      %c2_ui4 = firrtl.constant 2 : !firrtl.uint<4>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c4_ui4 = firrtl.constant 4 : !firrtl.uint<4>
      %c5_ui4 = firrtl.constant 5 : !firrtl.uint<4>
      %c14_ui5 = firrtl.constant 14 : !firrtl.uint<5>
      %c6_ui5 = firrtl.constant 6 : !firrtl.uint<5>
      %c7_ui5 = firrtl.constant 7 : !firrtl.uint<5>
      %c4_ui5 = firrtl.constant 4 : !firrtl.uint<5>
      %c5_ui5 = firrtl.constant 5 : !firrtl.uint<5>
      %c12_ui5 = firrtl.constant 12 : !firrtl.uint<5>
      %c10_ui5 = firrtl.constant 10 : !firrtl.uint<5>
      %c13_ui5 = firrtl.constant 13 : !firrtl.uint<5>
      %c11_ui5 = firrtl.constant 11 : !firrtl.uint<5>
      %c8_ui5 = firrtl.constant 8 : !firrtl.uint<5>
      %c9_ui5 = firrtl.constant 9 : !firrtl.uint<5>
      %c1_ui5 = firrtl.constant 1 : !firrtl.uint<5>
      %c15_ui5 = firrtl.constant 15 : !firrtl.uint<5>
      %c2_ui5 = firrtl.constant 2 : !firrtl.uint<5>
      %c3_ui5 = firrtl.constant 3 : !firrtl.uint<5>
      %c0_ui7 = firrtl.constant 0 : !firrtl.uint<7>
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c1_ui7 = firrtl.constant 1 : !firrtl.uint<7>
      %c2_ui7 = firrtl.constant 2 : !firrtl.uint<7>
      %c3_ui7 = firrtl.constant 3 : !firrtl.uint<7>
      %c4_ui7 = firrtl.constant 4 : !firrtl.uint<7>
      %c5_ui7 = firrtl.constant 5 : !firrtl.uint<7>
      %c6_ui7 = firrtl.constant 6 : !firrtl.uint<7>
      %c7_ui7 = firrtl.constant 7 : !firrtl.uint<7>
      %c13_ui7 = firrtl.constant 13 : !firrtl.uint<7>
      %c8_ui7 = firrtl.constant 8 : !firrtl.uint<7>
      %c16_ui7 = firrtl.constant 16 : !firrtl.uint<7>
      %c17_ui7 = firrtl.constant 17 : !firrtl.uint<7>
      %c20_ui7 = firrtl.constant 20 : !firrtl.uint<7>
      %c21_ui7 = firrtl.constant 21 : !firrtl.uint<7>
      %c22_ui7 = firrtl.constant 22 : !firrtl.uint<7>
      %c23_ui7 = firrtl.constant 23 : !firrtl.uint<7>
      %c9_ui7 = firrtl.constant 9 : !firrtl.uint<7>
      %c10_ui7 = firrtl.constant 10 : !firrtl.uint<7>
      %c33_ui7 = firrtl.constant 33 : !firrtl.uint<7>
      %c37_ui7 = firrtl.constant 37 : !firrtl.uint<7>
      %c45_ui7 = firrtl.constant 45 : !firrtl.uint<7>
      %c40_ui7 = firrtl.constant 40 : !firrtl.uint<7>
      %c11_ui7 = firrtl.constant 11 : !firrtl.uint<7>
      %c12_ui7 = firrtl.constant 12 : !firrtl.uint<7>
      %c14_ui7 = firrtl.constant 14 : !firrtl.uint<7>
      %c15_ui7 = firrtl.constant 15 : !firrtl.uint<7>
      %c32_ui7 = firrtl.constant 32 : !firrtl.uint<7>
      %c34_ui7 = firrtl.constant 34 : !firrtl.uint<7>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3>
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c1_ui4 = firrtl.constant 1 : !firrtl.uint<4>
      %c94_ui7 = firrtl.constant 94 : !firrtl.uint<7>
      %c92_ui7 = firrtl.constant 92 : !firrtl.uint<7>
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64>
      %c0_ui54 = firrtl.constant 0 : !firrtl.uint<54>
      %c18014398509481983_ui54 = firrtl.constant 18014398509481983 : !firrtl.uint<54>
      %c0_ui46 = firrtl.constant 0 : !firrtl.uint<46>
      %c70368744177663_ui46 = firrtl.constant 70368744177663 : !firrtl.uint<46>
      %c0_ui58 = firrtl.constant 0 : !firrtl.uint<58>
      %c288230376151711743_ui58 = firrtl.constant 288230376151711743 : !firrtl.uint<58>
      %c36028797018963967_ui55 = firrtl.constant 36028797018963967 : !firrtl.uint<55>
      %c0_ui57 = firrtl.constant 0 : !firrtl.uint<57>
      %c0_ui55 = firrtl.constant 0 : !firrtl.uint<55>
      %c0_ui56 = firrtl.constant 0 : !firrtl.uint<56>
      %c0_ui43 = firrtl.constant 0 : !firrtl.uint<43>
      %c8796093022207_ui43 = firrtl.constant 8796093022207 : !firrtl.uint<43>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c0_ui12 = firrtl.constant 0 : !firrtl.uint<12>
      %c0_ui51 = firrtl.constant 0 : !firrtl.uint<51>
      %c2251799813685247_ui51 = firrtl.constant 2251799813685247 : !firrtl.uint<51>
      %c0_ui52 = firrtl.constant 0 : !firrtl.uint<52>
      %c4503599627370495_ui52 = firrtl.constant 4503599627370495 : !firrtl.uint<52>
      %c9_ui4 = firrtl.constant 9 : !firrtl.uint<4>
      %c12_ui4 = firrtl.constant 12 : !firrtl.uint<4>
      %c14_ui4 = firrtl.constant 14 : !firrtl.uint<4>
      %c13_ui4 = firrtl.constant 13 : !firrtl.uint<4>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c96_ui7 = firrtl.constant 96 : !firrtl.uint<7>
      %c88_ui7 = firrtl.constant 88 : !firrtl.uint<7>
      %c16_ui5 = firrtl.constant 16 : !firrtl.uint<5>
      %c90_ui7 = firrtl.constant 90 : !firrtl.uint<7>
      %c10_ui4 = firrtl.constant 10 : !firrtl.uint<4>
      %c11_ui4 = firrtl.constant 11 : !firrtl.uint<4>
      %c64_ui7 = firrtl.constant 64 : !firrtl.uint<7>
      %c36_ui6 = firrtl.constant 36 : !firrtl.uint<6>
      %c37_ui6 = firrtl.constant 37 : !firrtl.uint<6>
      %c38_ui6 = firrtl.constant 38 : !firrtl.uint<6>
      %c48_ui6 = firrtl.constant 48 : !firrtl.uint<6>
      %c49_ui6 = firrtl.constant 49 : !firrtl.uint<6>
      %c50_ui6 = firrtl.constant 50 : !firrtl.uint<6>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c4111_ui13 = firrtl.constant 4111 : !firrtl.uint<13>
      %c28787_ui15 = firrtl.constant 28787 : !firrtl.uint<15>
      %c24691_ui15 = firrtl.constant 24691 : !firrtl.uint<15>
      %c20595_ui15 = firrtl.constant 20595 : !firrtl.uint<15>
      %c12403_ui14 = firrtl.constant 12403 : !firrtl.uint<14>
      %c8307_ui14 = firrtl.constant 8307 : !firrtl.uint<14>
      %c4211_ui13 = firrtl.constant 4211 : !firrtl.uint<13>
      %c3758104623_ui32 = firrtl.constant 3758104623 : !firrtl.uint<32>
      %c3221233711_ui32 = firrtl.constant 3221233711 : !firrtl.uint<32>
      %c2684362799_ui32 = firrtl.constant 2684362799 : !firrtl.uint<32>
      %c2147491887_ui32 = firrtl.constant 2147491887 : !firrtl.uint<32>
      %c1073750063_ui31 = firrtl.constant 1073750063 : !firrtl.uint<31>
      %c1610620975_ui31 = firrtl.constant 1610620975 : !firrtl.uint<31>
      %c536879151_ui30 = firrtl.constant 536879151 : !firrtl.uint<30>
      %c8239_ui14 = firrtl.constant 8239 : !firrtl.uint<14>
      %c134225967_ui28 = firrtl.constant 134225967 : !firrtl.uint<28>
      %c4160774271_ui32 = firrtl.constant 4160774271 : !firrtl.uint<32>
      %c402661423_ui29 = firrtl.constant 402661423 : !firrtl.uint<29>
      %c402665519_ui29 = firrtl.constant 402665519 : !firrtl.uint<29>
      %c4160778367_ui32 = firrtl.constant 4160778367 : !firrtl.uint<32>
      %c268443695_ui29 = firrtl.constant 268443695 : !firrtl.uint<29>
      %c268447791_ui29 = firrtl.constant 268447791 : !firrtl.uint<29>
      %c4193284223_ui32 = firrtl.constant 4193284223 : !firrtl.uint<32>
      %c301990003_ui29 = firrtl.constant 301990003 : !firrtl.uint<29>
      %c4261445631_ui32 = firrtl.constant 4261445631 : !firrtl.uint<32>
      %c270532723_ui29 = firrtl.constant 270532723 : !firrtl.uint<29>
      %c273678451_ui29 = firrtl.constant 273678451 : !firrtl.uint<29>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c807403635_ui30 = firrtl.constant 807403635 : !firrtl.uint<30>
      %c1048691_ui21 = firrtl.constant 1048691 : !firrtl.uint<21>
      %c115_ui7 = firrtl.constant 115 : !firrtl.uint<7>
      %c57346_ui16 = firrtl.constant 57346 : !firrtl.uint<16>
      %c49154_ui16 = firrtl.constant 49154 : !firrtl.uint<16>
      %c36866_ui16 = firrtl.constant 36866 : !firrtl.uint<16>
      %c61443_ui16 = firrtl.constant 61443 : !firrtl.uint<16>
      %c32770_ui16 = firrtl.constant 32770 : !firrtl.uint<16>
      %c61567_ui16 = firrtl.constant 61567 : !firrtl.uint<16>
      %c24578_ui15 = firrtl.constant 24578 : !firrtl.uint<15>
      %c16386_ui15 = firrtl.constant 16386 : !firrtl.uint<15>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c57345_ui16 = firrtl.constant 57345 : !firrtl.uint<16>
      %c49153_ui16 = firrtl.constant 49153 : !firrtl.uint<16>
      %c40961_ui16 = firrtl.constant 40961 : !firrtl.uint<16>
      %c39969_ui16 = firrtl.constant 39969 : !firrtl.uint<16>
      %c39937_ui16 = firrtl.constant 39937 : !firrtl.uint<16>
      %c35937_ui16 = firrtl.constant 35937 : !firrtl.uint<16>
      %c35905_ui16 = firrtl.constant 35905 : !firrtl.uint<16>
      %c35873_ui16 = firrtl.constant 35873 : !firrtl.uint<16>
      %c35841_ui16 = firrtl.constant 35841 : !firrtl.uint<16>
      %c64611_ui16 = firrtl.constant 64611 : !firrtl.uint<16>
      %c34817_ui16 = firrtl.constant 34817 : !firrtl.uint<16>
      %c33793_ui16 = firrtl.constant 33793 : !firrtl.uint<16>
      %c32769_ui16 = firrtl.constant 32769 : !firrtl.uint<16>
      %c60419_ui16 = firrtl.constant 60419 : !firrtl.uint<16>
      %c24577_ui15 = firrtl.constant 24577 : !firrtl.uint<15>
      %c24833_ui15 = firrtl.constant 24833 : !firrtl.uint<15>
      %c16385_ui15 = firrtl.constant 16385 : !firrtl.uint<15>
      %c8193_ui14 = firrtl.constant 8193 : !firrtl.uint<14>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c61315_ui16 = firrtl.constant 61315 : !firrtl.uint<16>
      %c57344_ui16 = firrtl.constant 57344 : !firrtl.uint<16>
      %c49152_ui16 = firrtl.constant 49152 : !firrtl.uint<16>
      %c24576_ui15 = firrtl.constant 24576 : !firrtl.uint<15>
      %c16384_ui15 = firrtl.constant 16384 : !firrtl.uint<15>
      %c57347_ui16 = firrtl.constant 57347 : !firrtl.uint<16>
      %c4294967295_ui32 = firrtl.constant 4294967295 : !firrtl.uint<32>
      %c33583163_ui26 = firrtl.constant 33583163 : !firrtl.uint<26>
      %c33579067_ui26 = firrtl.constant 33579067 : !firrtl.uint<26>
      %c33574971_ui26 = firrtl.constant 33574971 : !firrtl.uint<26>
      %c33570875_ui26 = firrtl.constant 33570875 : !firrtl.uint<26>
      %c33554491_ui26 = firrtl.constant 33554491 : !firrtl.uint<26>
      %c33583155_ui26 = firrtl.constant 33583155 : !firrtl.uint<26>
      %c33579059_ui26 = firrtl.constant 33579059 : !firrtl.uint<26>
      %c33574963_ui26 = firrtl.constant 33574963 : !firrtl.uint<26>
      %c33570867_ui26 = firrtl.constant 33570867 : !firrtl.uint<26>
      %c33566771_ui26 = firrtl.constant 33566771 : !firrtl.uint<26>
      %c33562675_ui26 = firrtl.constant 33562675 : !firrtl.uint<26>
      %c33558579_ui26 = firrtl.constant 33558579 : !firrtl.uint<26>
      %c33554483_ui26 = firrtl.constant 33554483 : !firrtl.uint<26>
      %c107_ui7 = firrtl.constant 107 : !firrtl.uint<7>
      %c12323_ui14 = firrtl.constant 12323 : !firrtl.uint<14>
      %c12291_ui14 = firrtl.constant 12291 : !firrtl.uint<14>
      %c24579_ui15 = firrtl.constant 24579 : !firrtl.uint<15>
      %c1073741883_ui31 = firrtl.constant 1073741883 : !firrtl.uint<31>
      %c59_ui6 = firrtl.constant 59 : !firrtl.uint<6>
      %c1073762363_ui31 = firrtl.constant 1073762363 : !firrtl.uint<31>
      %c20539_ui15 = firrtl.constant 20539 : !firrtl.uint<15>
      %c4155_ui13 = firrtl.constant 4155 : !firrtl.uint<13>
      %c1073762331_ui31 = firrtl.constant 1073762331 : !firrtl.uint<31>
      %c20507_ui15 = firrtl.constant 20507 : !firrtl.uint<15>
      %c4123_ui13 = firrtl.constant 4123 : !firrtl.uint<13>
      %c27_ui5 = firrtl.constant 27 : !firrtl.uint<5>
      %c8227_ui14 = firrtl.constant 8227 : !firrtl.uint<14>
      %c4131_ui13 = firrtl.constant 4131 : !firrtl.uint<13>
      %c35_ui6 = firrtl.constant 35 : !firrtl.uint<6>
      %c20483_ui15 = firrtl.constant 20483 : !firrtl.uint<15>
      %c16387_ui15 = firrtl.constant 16387 : !firrtl.uint<15>
      %c8195_ui14 = firrtl.constant 8195 : !firrtl.uint<14>
      %c4099_ui13 = firrtl.constant 4099 : !firrtl.uint<13>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c28771_ui15 = firrtl.constant 28771 : !firrtl.uint<15>
      %c24675_ui15 = firrtl.constant 24675 : !firrtl.uint<15>
      %c20579_ui15 = firrtl.constant 20579 : !firrtl.uint<15>
      %c16483_ui15 = firrtl.constant 16483 : !firrtl.uint<15>
      %c4195_ui13 = firrtl.constant 4195 : !firrtl.uint<13>
      %c99_ui7 = firrtl.constant 99 : !firrtl.uint<7>
      %c103_ui7 = firrtl.constant 103 : !firrtl.uint<7>
      %c111_ui7 = firrtl.constant 111 : !firrtl.uint<7>
      %c55_ui6 = firrtl.constant 55 : !firrtl.uint<6>
      %c23_ui5 = firrtl.constant 23 : !firrtl.uint<5>
      %c1073762355_ui31 = firrtl.constant 1073762355 : !firrtl.uint<31>
      %c1073741875_ui31 = firrtl.constant 1073741875 : !firrtl.uint<31>
      %c28723_ui15 = firrtl.constant 28723 : !firrtl.uint<15>
      %c24627_ui15 = firrtl.constant 24627 : !firrtl.uint<15>
      %c20531_ui15 = firrtl.constant 20531 : !firrtl.uint<15>
      %c16435_ui15 = firrtl.constant 16435 : !firrtl.uint<15>
      %c12339_ui14 = firrtl.constant 12339 : !firrtl.uint<14>
      %c8243_ui14 = firrtl.constant 8243 : !firrtl.uint<14>
      %c4147_ui13 = firrtl.constant 4147 : !firrtl.uint<13>
      %c51_ui6 = firrtl.constant 51 : !firrtl.uint<6>
      %c4261441663_ui32 = firrtl.constant 4261441663 : !firrtl.uint<32>
      %c1073762323_ui31 = firrtl.constant 1073762323 : !firrtl.uint<31>
      %c28691_ui15 = firrtl.constant 28691 : !firrtl.uint<15>
      %c24595_ui15 = firrtl.constant 24595 : !firrtl.uint<15>
      %c20499_ui15 = firrtl.constant 20499 : !firrtl.uint<15>
      %c16403_ui15 = firrtl.constant 16403 : !firrtl.uint<15>
      %c12307_ui14 = firrtl.constant 12307 : !firrtl.uint<14>
      %c8211_ui14 = firrtl.constant 8211 : !firrtl.uint<14>
      %c4115_ui13 = firrtl.constant 4115 : !firrtl.uint<13>
      %c4227887231_ui32 = firrtl.constant 4227887231 : !firrtl.uint<32>
      %c19_ui5 = firrtl.constant 19 : !firrtl.uint<5>
      %c28799_ui15 = firrtl.constant 28799 : !firrtl.uint<15>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_bits_cf_exceptionVec_1_1 = firrtl.wire {name = "io_out_bits_cf_exceptionVec_1"} : !firrtl.uint<1>
      %io_out_bits_cf_exceptionVec_2_2 = firrtl.wire {name = "io_out_bits_cf_exceptionVec_2"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_0_3 = firrtl.wire {name = "io_out_bits_cf_intrVec_0"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_1_4 = firrtl.wire {name = "io_out_bits_cf_intrVec_1"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_2_5 = firrtl.wire {name = "io_out_bits_cf_intrVec_2"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_3_6 = firrtl.wire {name = "io_out_bits_cf_intrVec_3"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_4_7 = firrtl.wire {name = "io_out_bits_cf_intrVec_4"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_5_8 = firrtl.wire {name = "io_out_bits_cf_intrVec_5"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_6_9 = firrtl.wire {name = "io_out_bits_cf_intrVec_6"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_7_10 = firrtl.wire {name = "io_out_bits_cf_intrVec_7"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_8_11 = firrtl.wire {name = "io_out_bits_cf_intrVec_8"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_9_12 = firrtl.wire {name = "io_out_bits_cf_intrVec_9"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_10_13 = firrtl.wire {name = "io_out_bits_cf_intrVec_10"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_11_14 = firrtl.wire {name = "io_out_bits_cf_intrVec_11"} : !firrtl.uint<1>
      %io_out_bits_ctrl_src1Type_15 = firrtl.wire {name = "io_out_bits_ctrl_src1Type"} : !firrtl.uint<1>
      %io_out_bits_ctrl_src2Type_16 = firrtl.wire {name = "io_out_bits_ctrl_src2Type"} : !firrtl.uint<1>
      %io_out_bits_ctrl_fuType_17 = firrtl.wire {name = "io_out_bits_ctrl_fuType"} : !firrtl.uint<3>
      %io_out_bits_ctrl_fuOpType_18 = firrtl.wire {name = "io_out_bits_ctrl_fuOpType"} : !firrtl.uint<7>
      %io_out_bits_ctrl_rfSrc1_19 = firrtl.wire {name = "io_out_bits_ctrl_rfSrc1"} : !firrtl.uint<5>
      %io_out_bits_ctrl_rfSrc2_20 = firrtl.wire {name = "io_out_bits_ctrl_rfSrc2"} : !firrtl.uint<5>
      %io_out_bits_ctrl_rfWen_21 = firrtl.wire {name = "io_out_bits_ctrl_rfWen"} : !firrtl.uint<1>
      %io_out_bits_ctrl_rfDest_22 = firrtl.wire {name = "io_out_bits_ctrl_rfDest"} : !firrtl.uint<5>
      %io_out_bits_ctrl_isNutCoreTrap_23 = firrtl.wire {name = "io_out_bits_ctrl_isNutCoreTrap"} : !firrtl.uint<1>
      %io_out_bits_data_imm_24 = firrtl.wire {name = "io_out_bits_data_imm"} : !firrtl.uint<64>
      %io_isWFI_25 = firrtl.wire {name = "io_isWFI"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_instr, %io_in_bits_instr : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_cf_pc, %io_in_bits_pc : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_cf_pnpc, %io_in_bits_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_1, %io_out_bits_cf_exceptionVec_1_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_2, %io_out_bits_cf_exceptionVec_2_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_12, %io_in_bits_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_0, %io_out_bits_cf_intrVec_0_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_1, %io_out_bits_cf_intrVec_1_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_2, %io_out_bits_cf_intrVec_2_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_3, %io_out_bits_cf_intrVec_3_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_4, %io_out_bits_cf_intrVec_4_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_5, %io_out_bits_cf_intrVec_5_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_6, %io_out_bits_cf_intrVec_6_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_7, %io_out_bits_cf_intrVec_7_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_8, %io_out_bits_cf_intrVec_8_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_9, %io_out_bits_cf_intrVec_9_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_10, %io_out_bits_cf_intrVec_10_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_11, %io_out_bits_cf_intrVec_11_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_brIdx, %io_in_bits_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_cf_crossPageIPFFix, %io_in_bits_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_src1Type, %io_out_bits_ctrl_src1Type_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_src2Type, %io_out_bits_ctrl_src2Type_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_fuType, %io_out_bits_ctrl_fuType_17 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_ctrl_fuOpType, %io_out_bits_ctrl_fuOpType_18 : !firrtl.uint<7>
      firrtl.strictconnect %io_out_bits_ctrl_rfSrc1, %io_out_bits_ctrl_rfSrc1_19 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_ctrl_rfSrc2, %io_out_bits_ctrl_rfSrc2_20 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_ctrl_rfWen, %io_out_bits_ctrl_rfWen_21 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_rfDest, %io_out_bits_ctrl_rfDest_22 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_ctrl_isNutCoreTrap, %io_out_bits_ctrl_isNutCoreTrap_23 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_data_imm, %io_out_bits_data_imm_24 : !firrtl.uint<64>
      firrtl.strictconnect %io_isWFI, %io_isWFI_25 : !firrtl.uint<1>
      %hasIntr = firrtl.wire : !firrtl.uint<1>
      %0 = firrtl.bits %io_in_bits_instr 14 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<15>
      %1 = firrtl.and %0, %c28799_ui15 : (!firrtl.uint<15>, !firrtl.uint<15>) -> !firrtl.uint<15>
      %_io_out_bits_ctrl_isNutCoreTrap_T_4 = firrtl.pad %1, 64 {name = "_io_out_bits_ctrl_isNutCoreTrap_T_4"} : (!firrtl.uint<15>) -> !firrtl.uint<64>
      %_decodeList_T_1 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c19_ui5 {name = "_decodeList_T_1"} : (!firrtl.uint<64>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %2 = firrtl.bits %io_in_bits_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %3 = firrtl.and %2, %c4227887231_ui32 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_decodeList_T_16 = firrtl.pad %3, 64 {name = "_decodeList_T_16"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %_decodeList_T_3 = firrtl.eq %_decodeList_T_16, %c4115_ui13 {name = "_decodeList_T_3"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_5 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c8211_ui14 {name = "_decodeList_T_5"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_7 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c12307_ui14 {name = "_decodeList_T_7"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_9 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c16403_ui15 {name = "_decodeList_T_9"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_11 = firrtl.eq %_decodeList_T_16, %c20499_ui15 {name = "_decodeList_T_11"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_13 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c24595_ui15 {name = "_decodeList_T_13"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_15 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c28691_ui15 {name = "_decodeList_T_15"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_17 = firrtl.eq %_decodeList_T_16, %c1073762323_ui31 {name = "_decodeList_T_17"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %4 = firrtl.bits %io_in_bits_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %5 = firrtl.and %4, %c4261441663_ui32 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_decodeList_T_124 = firrtl.pad %5, 64 {name = "_decodeList_T_124"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %_decodeList_T_19 = firrtl.eq %_decodeList_T_124, %c51_ui6 {name = "_decodeList_T_19"} : (!firrtl.uint<64>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_decodeList_T_21 = firrtl.eq %_decodeList_T_124, %c4147_ui13 {name = "_decodeList_T_21"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_23 = firrtl.eq %_decodeList_T_124, %c8243_ui14 {name = "_decodeList_T_23"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_25 = firrtl.eq %_decodeList_T_124, %c12339_ui14 {name = "_decodeList_T_25"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_27 = firrtl.eq %_decodeList_T_124, %c16435_ui15 {name = "_decodeList_T_27"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_29 = firrtl.eq %_decodeList_T_124, %c20531_ui15 {name = "_decodeList_T_29"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_31 = firrtl.eq %_decodeList_T_124, %c24627_ui15 {name = "_decodeList_T_31"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_33 = firrtl.eq %_decodeList_T_124, %c28723_ui15 {name = "_decodeList_T_33"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_35 = firrtl.eq %_decodeList_T_124, %c1073741875_ui31 {name = "_decodeList_T_35"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_decodeList_T_37 = firrtl.eq %_decodeList_T_124, %c1073762355_ui31 {name = "_decodeList_T_37"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %6 = firrtl.bits %io_in_bits_instr 6 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<7>
      %_decodeList_T_42 = firrtl.pad %6, 64 {name = "_decodeList_T_42"} : (!firrtl.uint<7>) -> !firrtl.uint<64>
      %_decodeList_T_39 = firrtl.eq %_decodeList_T_42, %c23_ui5 {name = "_decodeList_T_39"} : (!firrtl.uint<64>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_decodeList_T_41 = firrtl.eq %_decodeList_T_42, %c55_ui6 {name = "_decodeList_T_41"} : (!firrtl.uint<64>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_decodeList_T_43 = firrtl.eq %_decodeList_T_42, %c111_ui7 {name = "_decodeList_T_43"} : (!firrtl.uint<64>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_decodeList_T_45 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c103_ui7 {name = "_decodeList_T_45"} : (!firrtl.uint<64>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_decodeList_T_47 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c99_ui7 {name = "_decodeList_T_47"} : (!firrtl.uint<64>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_decodeList_T_49 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c4195_ui13 {name = "_decodeList_T_49"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_51 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c16483_ui15 {name = "_decodeList_T_51"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_53 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c20579_ui15 {name = "_decodeList_T_53"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_55 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c24675_ui15 {name = "_decodeList_T_55"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_57 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c28771_ui15 {name = "_decodeList_T_57"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_59 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c3_ui2 {name = "_decodeList_T_59"} : (!firrtl.uint<64>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_decodeList_T_61 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c4099_ui13 {name = "_decodeList_T_61"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_63 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c8195_ui14 {name = "_decodeList_T_63"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_65 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c16387_ui15 {name = "_decodeList_T_65"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_67 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c20483_ui15 {name = "_decodeList_T_67"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_69 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c35_ui6 {name = "_decodeList_T_69"} : (!firrtl.uint<64>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_decodeList_T_71 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c4131_ui13 {name = "_decodeList_T_71"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_73 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c8227_ui14 {name = "_decodeList_T_73"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_75 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c27_ui5 {name = "_decodeList_T_75"} : (!firrtl.uint<64>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_decodeList_T_77 = firrtl.eq %_decodeList_T_124, %c4123_ui13 {name = "_decodeList_T_77"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_79 = firrtl.eq %_decodeList_T_124, %c20507_ui15 {name = "_decodeList_T_79"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_81 = firrtl.eq %_decodeList_T_124, %c1073762331_ui31 {name = "_decodeList_T_81"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_decodeList_T_83 = firrtl.eq %_decodeList_T_124, %c4155_ui13 {name = "_decodeList_T_83"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_85 = firrtl.eq %_decodeList_T_124, %c20539_ui15 {name = "_decodeList_T_85"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_87 = firrtl.eq %_decodeList_T_124, %c1073762363_ui31 {name = "_decodeList_T_87"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_decodeList_T_89 = firrtl.eq %_decodeList_T_124, %c59_ui6 {name = "_decodeList_T_89"} : (!firrtl.uint<64>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_decodeList_T_91 = firrtl.eq %_decodeList_T_124, %c1073741883_ui31 {name = "_decodeList_T_91"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_decodeList_T_93 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c24579_ui15 {name = "_decodeList_T_93"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_95 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c12291_ui14 {name = "_decodeList_T_95"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_97 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c12323_ui14 {name = "_decodeList_T_97"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_99 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c107_ui7 {name = "_decodeList_T_99"} : (!firrtl.uint<64>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_decodeList_T_101 = firrtl.eq %_decodeList_T_124, %c33554483_ui26 {name = "_decodeList_T_101"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_103 = firrtl.eq %_decodeList_T_124, %c33558579_ui26 {name = "_decodeList_T_103"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_105 = firrtl.eq %_decodeList_T_124, %c33562675_ui26 {name = "_decodeList_T_105"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_107 = firrtl.eq %_decodeList_T_124, %c33566771_ui26 {name = "_decodeList_T_107"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_109 = firrtl.eq %_decodeList_T_124, %c33570867_ui26 {name = "_decodeList_T_109"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_111 = firrtl.eq %_decodeList_T_124, %c33574963_ui26 {name = "_decodeList_T_111"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_113 = firrtl.eq %_decodeList_T_124, %c33579059_ui26 {name = "_decodeList_T_113"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_115 = firrtl.eq %_decodeList_T_124, %c33583155_ui26 {name = "_decodeList_T_115"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_117 = firrtl.eq %_decodeList_T_124, %c33554491_ui26 {name = "_decodeList_T_117"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_119 = firrtl.eq %_decodeList_T_124, %c33570875_ui26 {name = "_decodeList_T_119"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_121 = firrtl.eq %_decodeList_T_124, %c33574971_ui26 {name = "_decodeList_T_121"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_123 = firrtl.eq %_decodeList_T_124, %c33579067_ui26 {name = "_decodeList_T_123"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %_decodeList_T_125 = firrtl.eq %_decodeList_T_124, %c33583163_ui26 {name = "_decodeList_T_125"} : (!firrtl.uint<64>, !firrtl.uint<26>) -> !firrtl.uint<1>
      %7 = firrtl.bits %io_in_bits_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_io_isWFI_T = firrtl.pad %7, 64 {name = "_io_isWFI_T"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %8 = firrtl.orr %7 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_decodeList_T_127 = firrtl.not %8 {name = "_decodeList_T_127"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %9 = firrtl.bits %io_in_bits_instr 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %10 = firrtl.and %9, %c57347_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_decodeList_T_192 = firrtl.pad %10, 64 {name = "_decodeList_T_192"} : (!firrtl.uint<16>) -> !firrtl.uint<64>
      %11 = firrtl.orr %10 : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_129 = firrtl.not %11 {name = "_decodeList_T_129"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_131 = firrtl.eq %_decodeList_T_192, %c16384_ui15 {name = "_decodeList_T_131"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_133 = firrtl.eq %_decodeList_T_192, %c24576_ui15 {name = "_decodeList_T_133"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_135 = firrtl.eq %_decodeList_T_192, %c49152_ui16 {name = "_decodeList_T_135"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_137 = firrtl.eq %_decodeList_T_192, %c57344_ui16 {name = "_decodeList_T_137"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %12 = firrtl.bits %io_in_bits_instr 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %13 = firrtl.and %12, %c61315_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_decodeList_T_146 = firrtl.pad %13, 64 {name = "_decodeList_T_146"} : (!firrtl.uint<16>) -> !firrtl.uint<64>
      %_decodeList_T_139 = firrtl.eq %_decodeList_T_146, %c1_ui1 {name = "_decodeList_T_139"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_141 = firrtl.eq %_decodeList_T_192, %c1_ui1 {name = "_decodeList_T_141"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_143 = firrtl.eq %_decodeList_T_192, %c8193_ui14 {name = "_decodeList_T_143"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_145 = firrtl.eq %_decodeList_T_192, %c16385_ui15 {name = "_decodeList_T_145"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_147 = firrtl.eq %_decodeList_T_146, %c24833_ui15 {name = "_decodeList_T_147"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_149 = firrtl.eq %_decodeList_T_192, %c24577_ui15 {name = "_decodeList_T_149"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %14 = firrtl.bits %io_in_bits_instr 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %15 = firrtl.and %14, %c60419_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_decodeList_T_154 = firrtl.pad %15, 64 {name = "_decodeList_T_154"} : (!firrtl.uint<16>) -> !firrtl.uint<64>
      %_decodeList_T_151 = firrtl.eq %_decodeList_T_154, %c32769_ui16 {name = "_decodeList_T_151"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_153 = firrtl.eq %_decodeList_T_154, %c33793_ui16 {name = "_decodeList_T_153"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_155 = firrtl.eq %_decodeList_T_154, %c34817_ui16 {name = "_decodeList_T_155"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %16 = firrtl.bits %io_in_bits_instr 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %17 = firrtl.and %16, %c64611_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_decodeList_T_166 = firrtl.pad %17, 64 {name = "_decodeList_T_166"} : (!firrtl.uint<16>) -> !firrtl.uint<64>
      %_decodeList_T_157 = firrtl.eq %_decodeList_T_166, %c35841_ui16 {name = "_decodeList_T_157"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_159 = firrtl.eq %_decodeList_T_166, %c35873_ui16 {name = "_decodeList_T_159"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_161 = firrtl.eq %_decodeList_T_166, %c35905_ui16 {name = "_decodeList_T_161"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_163 = firrtl.eq %_decodeList_T_166, %c35937_ui16 {name = "_decodeList_T_163"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_165 = firrtl.eq %_decodeList_T_166, %c39937_ui16 {name = "_decodeList_T_165"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_167 = firrtl.eq %_decodeList_T_166, %c39969_ui16 {name = "_decodeList_T_167"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_169 = firrtl.eq %_decodeList_T_192, %c40961_ui16 {name = "_decodeList_T_169"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_171 = firrtl.eq %_decodeList_T_192, %c49153_ui16 {name = "_decodeList_T_171"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_173 = firrtl.eq %_decodeList_T_192, %c57345_ui16 {name = "_decodeList_T_173"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_175 = firrtl.eq %_decodeList_T_192, %c2_ui2 {name = "_decodeList_T_175"} : (!firrtl.uint<64>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_decodeList_T_177 = firrtl.eq %_decodeList_T_192, %c16386_ui15 {name = "_decodeList_T_177"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_179 = firrtl.eq %_decodeList_T_192, %c24578_ui15 {name = "_decodeList_T_179"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %18 = firrtl.bits %io_in_bits_instr 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %19 = firrtl.and %18, %c61567_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_decodeList_T_186 = firrtl.pad %19, 64 {name = "_decodeList_T_186"} : (!firrtl.uint<16>) -> !firrtl.uint<64>
      %_decodeList_T_181 = firrtl.eq %_decodeList_T_186, %c32770_ui16 {name = "_decodeList_T_181"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %20 = firrtl.bits %io_in_bits_instr 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %21 = firrtl.and %20, %c61443_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_decodeList_T_188 = firrtl.pad %21, 64 {name = "_decodeList_T_188"} : (!firrtl.uint<16>) -> !firrtl.uint<64>
      %_decodeList_T_183 = firrtl.eq %_decodeList_T_188, %c32770_ui16 {name = "_decodeList_T_183"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %22 = firrtl.bits %io_in_bits_instr 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %_decodeList_T_184 = firrtl.pad %22, 64 {name = "_decodeList_T_184"} : (!firrtl.uint<16>) -> !firrtl.uint<64>
      %_decodeList_T_185 = firrtl.eq %_decodeList_T_184, %c36866_ui16 {name = "_decodeList_T_185"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_187 = firrtl.eq %_decodeList_T_186, %c36866_ui16 {name = "_decodeList_T_187"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_189 = firrtl.eq %_decodeList_T_188, %c36866_ui16 {name = "_decodeList_T_189"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_191 = firrtl.eq %_decodeList_T_192, %c49154_ui16 {name = "_decodeList_T_191"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_193 = firrtl.eq %_decodeList_T_192, %c57346_ui16 {name = "_decodeList_T_193"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_decodeList_T_195 = firrtl.eq %_io_isWFI_T, %c115_ui7 {name = "_decodeList_T_195"} : (!firrtl.uint<64>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_decodeList_T_197 = firrtl.eq %_io_isWFI_T, %c1048691_ui21 {name = "_decodeList_T_197"} : (!firrtl.uint<64>, !firrtl.uint<21>) -> !firrtl.uint<1>
      %_decodeList_T_199 = firrtl.eq %_io_isWFI_T, %c807403635_ui30 {name = "_decodeList_T_199"} : (!firrtl.uint<64>, !firrtl.uint<30>) -> !firrtl.uint<1>
      %_decodeList_T_201 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c15_ui4 {name = "_decodeList_T_201"} : (!firrtl.uint<64>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_decodeList_T_203 = firrtl.eq %_io_isWFI_T, %c273678451_ui29 {name = "_decodeList_T_203"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %_decodeList_T_205 = firrtl.eq %_io_isWFI_T, %c270532723_ui29 {name = "_decodeList_T_205"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %23 = firrtl.bits %io_in_bits_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %24 = firrtl.and %23, %c4261445631_ui32 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_decodeList_T_206 = firrtl.pad %24, 64 {name = "_decodeList_T_206"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %_decodeList_T_207 = firrtl.eq %_decodeList_T_206, %c301990003_ui29 {name = "_decodeList_T_207"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %25 = firrtl.bits %io_in_bits_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %26 = firrtl.and %25, %c4193284223_ui32 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_decodeList_T_210 = firrtl.pad %26, 64 {name = "_decodeList_T_210"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %_decodeList_T_209 = firrtl.eq %_decodeList_T_210, %c268447791_ui29 {name = "_decodeList_T_209"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %_decodeList_T_211 = firrtl.eq %_decodeList_T_210, %c268443695_ui29 {name = "_decodeList_T_211"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %27 = firrtl.bits %io_in_bits_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %28 = firrtl.and %27, %c4160778367_ui32 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_decodeList_T_214 = firrtl.pad %28, 64 {name = "_decodeList_T_214"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %_decodeList_T_213 = firrtl.eq %_decodeList_T_214, %c402665519_ui29 {name = "_decodeList_T_213"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %_decodeList_T_215 = firrtl.eq %_decodeList_T_214, %c402661423_ui29 {name = "_decodeList_T_215"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %29 = firrtl.bits %io_in_bits_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %30 = firrtl.and %29, %c4160774271_ui32 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_decodeList_T_232 = firrtl.pad %30, 64 {name = "_decodeList_T_232"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %_decodeList_T_217 = firrtl.eq %_decodeList_T_232, %c134225967_ui28 {name = "_decodeList_T_217"} : (!firrtl.uint<64>, !firrtl.uint<28>) -> !firrtl.uint<1>
      %_decodeList_T_219 = firrtl.eq %_decodeList_T_232, %c8239_ui14 {name = "_decodeList_T_219"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_221 = firrtl.eq %_decodeList_T_232, %c536879151_ui30 {name = "_decodeList_T_221"} : (!firrtl.uint<64>, !firrtl.uint<30>) -> !firrtl.uint<1>
      %_decodeList_T_223 = firrtl.eq %_decodeList_T_232, %c1610620975_ui31 {name = "_decodeList_T_223"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_decodeList_T_225 = firrtl.eq %_decodeList_T_232, %c1073750063_ui31 {name = "_decodeList_T_225"} : (!firrtl.uint<64>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_decodeList_T_227 = firrtl.eq %_decodeList_T_232, %c2147491887_ui32 {name = "_decodeList_T_227"} : (!firrtl.uint<64>, !firrtl.uint<32>) -> !firrtl.uint<1>
      %_decodeList_T_229 = firrtl.eq %_decodeList_T_232, %c2684362799_ui32 {name = "_decodeList_T_229"} : (!firrtl.uint<64>, !firrtl.uint<32>) -> !firrtl.uint<1>
      %_decodeList_T_231 = firrtl.eq %_decodeList_T_232, %c3221233711_ui32 {name = "_decodeList_T_231"} : (!firrtl.uint<64>, !firrtl.uint<32>) -> !firrtl.uint<1>
      %_decodeList_T_233 = firrtl.eq %_decodeList_T_232, %c3758104623_ui32 {name = "_decodeList_T_233"} : (!firrtl.uint<64>, !firrtl.uint<32>) -> !firrtl.uint<1>
      %_decodeList_T_235 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c4211_ui13 {name = "_decodeList_T_235"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_decodeList_T_237 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c8307_ui14 {name = "_decodeList_T_237"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_239 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c12403_ui14 {name = "_decodeList_T_239"} : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_decodeList_T_241 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c20595_ui15 {name = "_decodeList_T_241"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_243 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c24691_ui15 {name = "_decodeList_T_243"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_245 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c28787_ui15 {name = "_decodeList_T_245"} : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_decodeList_T_494 = firrtl.eq %_io_isWFI_T, %c4111_ui13 {name = "_decodeList_T_494"} : (!firrtl.uint<64>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %31 = firrtl.pad %_decodeList_T_494, 3 : (!firrtl.uint<1>) -> !firrtl.uint<3>
      %32 = firrtl.or %_decodeList_T_243, %_decodeList_T_245 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.or %_decodeList_T_241, %32 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.or %_decodeList_T_239, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.or %_decodeList_T_237, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.or %_decodeList_T_235, %35 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_254 = firrtl.mux(%36, %c4_ui3, %31) {name = "_decodeList_T_254"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %37 = firrtl.or %_decodeList_T_231, %_decodeList_T_233 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.or %_decodeList_T_229, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.or %_decodeList_T_227, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.or %_decodeList_T_225, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.or %_decodeList_T_223, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.or %_decodeList_T_221, %41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.or %_decodeList_T_219, %42 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.or %_decodeList_T_217, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_263 = firrtl.mux(%44, %c5_ui3, %_decodeList_T_254) {name = "_decodeList_T_263"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %45 = firrtl.pad %_decodeList_T_263, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %46 = firrtl.or %_decodeList_T_213, %_decodeList_T_215 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_265 = firrtl.mux(%46, %c15_ui4, %45) {name = "_decodeList_T_265"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %47 = firrtl.or %_decodeList_T_209, %_decodeList_T_211 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_267 = firrtl.mux(%47, %c4_ui4, %_decodeList_T_265) {name = "_decodeList_T_267"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_268 = firrtl.mux(%_decodeList_T_207, %c5_ui4, %_decodeList_T_267) {name = "_decodeList_T_268"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %48 = firrtl.or %_decodeList_T_203, %_decodeList_T_205 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_270 = firrtl.mux(%48, %c4_ui4, %_decodeList_T_268) {name = "_decodeList_T_270"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_271 = firrtl.mux(%_decodeList_T_201, %c2_ui4, %_decodeList_T_270) {name = "_decodeList_T_271"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %49 = firrtl.or %_decodeList_T_197, %_decodeList_T_199 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.or %_decodeList_T_195, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_274 = firrtl.mux(%50, %c4_ui4, %_decodeList_T_271) {name = "_decodeList_T_274"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %51 = firrtl.or %_decodeList_T_191, %_decodeList_T_193 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_276 = firrtl.mux(%51, %c2_ui4, %_decodeList_T_274) {name = "_decodeList_T_276"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_277 = firrtl.mux(%_decodeList_T_189, %c5_ui4, %_decodeList_T_276) {name = "_decodeList_T_277"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %52 = firrtl.or %_decodeList_T_185, %_decodeList_T_187 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_279 = firrtl.mux(%52, %c4_ui4, %_decodeList_T_277) {name = "_decodeList_T_279"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_280 = firrtl.mux(%_decodeList_T_183, %c5_ui4, %_decodeList_T_279) {name = "_decodeList_T_280"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %53 = firrtl.or %_decodeList_T_179, %_decodeList_T_181 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.or %_decodeList_T_177, %53 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %55 = firrtl.or %_decodeList_T_175, %54 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_284 = firrtl.mux(%55, %c4_ui4, %_decodeList_T_280) {name = "_decodeList_T_284"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %56 = firrtl.or %_decodeList_T_171, %_decodeList_T_173 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_286 = firrtl.mux(%56, %c1_ui4, %_decodeList_T_284) {name = "_decodeList_T_286"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_287 = firrtl.mux(%_decodeList_T_169, %c7_ui4, %_decodeList_T_286) {name = "_decodeList_T_287"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %57 = firrtl.or %_decodeList_T_165, %_decodeList_T_167 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %58 = firrtl.or %_decodeList_T_163, %57 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.or %_decodeList_T_161, %58 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.or %_decodeList_T_159, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %61 = firrtl.or %_decodeList_T_157, %60 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_293 = firrtl.mux(%61, %c5_ui4, %_decodeList_T_287) {name = "_decodeList_T_293"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %62 = firrtl.or %_decodeList_T_153, %_decodeList_T_155 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %63 = firrtl.or %_decodeList_T_151, %62 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.or %_decodeList_T_149, %63 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.or %_decodeList_T_147, %64 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %66 = firrtl.or %_decodeList_T_145, %65 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.or %_decodeList_T_143, %66 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %68 = firrtl.or %_decodeList_T_141, %67 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %69 = firrtl.or %_decodeList_T_139, %68 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_302 = firrtl.mux(%69, %c4_ui4, %_decodeList_T_293) {name = "_decodeList_T_302"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %70 = firrtl.or %_decodeList_T_135, %_decodeList_T_137 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_304 = firrtl.mux(%70, %c2_ui4, %_decodeList_T_302) {name = "_decodeList_T_304"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %71 = firrtl.or %_decodeList_T_131, %_decodeList_T_133 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %72 = firrtl.or %_decodeList_T_129, %71 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_307 = firrtl.mux(%72, %c4_ui4, %_decodeList_T_304) {name = "_decodeList_T_307"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_308 = firrtl.mux(%_decodeList_T_127, %c0_ui4, %_decodeList_T_307) {name = "_decodeList_T_308"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %73 = firrtl.or %_decodeList_T_123, %_decodeList_T_125 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %74 = firrtl.or %_decodeList_T_121, %73 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %75 = firrtl.or %_decodeList_T_119, %74 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.or %_decodeList_T_117, %75 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %77 = firrtl.or %_decodeList_T_115, %76 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %78 = firrtl.or %_decodeList_T_113, %77 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %79 = firrtl.or %_decodeList_T_111, %78 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.or %_decodeList_T_109, %79 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.or %_decodeList_T_107, %80 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %82 = firrtl.or %_decodeList_T_105, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.or %_decodeList_T_103, %82 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %84 = firrtl.or %_decodeList_T_101, %83 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_321 = firrtl.mux(%84, %c5_ui4, %_decodeList_T_308) {name = "_decodeList_T_321"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_322 = firrtl.mux(%_decodeList_T_99, %c4_ui4, %_decodeList_T_321) {name = "_decodeList_T_322"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_323 = firrtl.mux(%_decodeList_T_97, %c2_ui4, %_decodeList_T_322) {name = "_decodeList_T_323"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %85 = firrtl.or %_decodeList_T_93, %_decodeList_T_95 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_325 = firrtl.mux(%85, %c4_ui4, %_decodeList_T_323) {name = "_decodeList_T_325"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %86 = firrtl.or %_decodeList_T_89, %_decodeList_T_91 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %87 = firrtl.or %_decodeList_T_87, %86 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.or %_decodeList_T_85, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.or %_decodeList_T_83, %88 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_330 = firrtl.mux(%89, %c5_ui4, %_decodeList_T_325) {name = "_decodeList_T_330"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %90 = firrtl.or %_decodeList_T_79, %_decodeList_T_81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.or %_decodeList_T_77, %90 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.or %_decodeList_T_75, %91 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_334 = firrtl.mux(%92, %c4_ui4, %_decodeList_T_330) {name = "_decodeList_T_334"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %93 = firrtl.or %_decodeList_T_71, %_decodeList_T_73 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.or %_decodeList_T_69, %93 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_337 = firrtl.mux(%94, %c2_ui4, %_decodeList_T_334) {name = "_decodeList_T_337"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %95 = firrtl.or %_decodeList_T_65, %_decodeList_T_67 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %96 = firrtl.or %_decodeList_T_63, %95 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %97 = firrtl.or %_decodeList_T_61, %96 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.or %_decodeList_T_59, %97 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_342 = firrtl.mux(%98, %c4_ui4, %_decodeList_T_337) {name = "_decodeList_T_342"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %99 = firrtl.or %_decodeList_T_55, %_decodeList_T_57 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.or %_decodeList_T_53, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %101 = firrtl.or %_decodeList_T_51, %100 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %102 = firrtl.or %_decodeList_T_49, %101 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %103 = firrtl.or %_decodeList_T_47, %102 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_348 = firrtl.mux(%103, %c1_ui4, %_decodeList_T_342) {name = "_decodeList_T_348"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_349 = firrtl.mux(%_decodeList_T_45, %c4_ui4, %_decodeList_T_348) {name = "_decodeList_T_349"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_350 = firrtl.mux(%_decodeList_T_43, %c7_ui4, %_decodeList_T_349) {name = "_decodeList_T_350"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %104 = firrtl.or %_decodeList_T_39, %_decodeList_T_41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_352 = firrtl.mux(%104, %c6_ui4, %_decodeList_T_350) {name = "_decodeList_T_352"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %105 = firrtl.or %_decodeList_T_35, %_decodeList_T_37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.or %_decodeList_T_33, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.or %_decodeList_T_31, %106 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %108 = firrtl.or %_decodeList_T_29, %107 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %109 = firrtl.or %_decodeList_T_27, %108 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.or %_decodeList_T_25, %109 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %111 = firrtl.or %_decodeList_T_23, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %112 = firrtl.or %_decodeList_T_21, %111 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %113 = firrtl.or %_decodeList_T_19, %112 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_362 = firrtl.mux(%113, %c5_ui4, %_decodeList_T_352) {name = "_decodeList_T_362"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %114 = firrtl.or %_decodeList_T_15, %_decodeList_T_17 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %115 = firrtl.or %_decodeList_T_13, %114 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.or %_decodeList_T_11, %115 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %117 = firrtl.or %_decodeList_T_9, %116 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.or %_decodeList_T_7, %117 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.or %_decodeList_T_5, %118 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.or %_decodeList_T_3, %119 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %121 = firrtl.or %_decodeList_T_1, %120 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %decodeList_0 = firrtl.mux(%121, %c4_ui4, %_decodeList_T_362) {name = "decodeList_0"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_decodeList_T_371 = firrtl.mux(%_decodeList_T_494, %c4_ui3, %c3_ui3) {name = "_decodeList_T_371"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %122 = firrtl.or %_decodeList_T_243, %_decodeList_T_245 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.or %_decodeList_T_241, %122 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %124 = firrtl.or %_decodeList_T_239, %123 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %125 = firrtl.or %_decodeList_T_237, %124 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %126 = firrtl.or %_decodeList_T_235, %125 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_377 = firrtl.mux(%126, %c3_ui3, %_decodeList_T_371) {name = "_decodeList_T_377"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %127 = firrtl.or %_decodeList_T_231, %_decodeList_T_233 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %128 = firrtl.or %_decodeList_T_229, %127 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %129 = firrtl.or %_decodeList_T_227, %128 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %130 = firrtl.or %_decodeList_T_225, %129 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %131 = firrtl.or %_decodeList_T_223, %130 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %132 = firrtl.or %_decodeList_T_221, %131 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %133 = firrtl.or %_decodeList_T_219, %132 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %134 = firrtl.or %_decodeList_T_217, %133 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %135 = firrtl.or %_decodeList_T_215, %134 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %136 = firrtl.or %_decodeList_T_213, %135 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %137 = firrtl.or %_decodeList_T_211, %136 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %138 = firrtl.or %_decodeList_T_209, %137 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_390 = firrtl.mux(%138, %c1_ui3, %_decodeList_T_377) {name = "_decodeList_T_390"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_391 = firrtl.mux(%_decodeList_T_207, %c4_ui3, %_decodeList_T_390) {name = "_decodeList_T_391"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_392 = firrtl.mux(%_decodeList_T_205, %c3_ui3, %_decodeList_T_391) {name = "_decodeList_T_392"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_393 = firrtl.mux(%_decodeList_T_203, %c0_ui3, %_decodeList_T_392) {name = "_decodeList_T_393"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_394 = firrtl.mux(%_decodeList_T_201, %c4_ui3, %_decodeList_T_393) {name = "_decodeList_T_394"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %139 = firrtl.or %_decodeList_T_197, %_decodeList_T_199 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %140 = firrtl.or %_decodeList_T_195, %139 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_397 = firrtl.mux(%140, %c3_ui3, %_decodeList_T_394) {name = "_decodeList_T_397"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %141 = firrtl.or %_decodeList_T_191, %_decodeList_T_193 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_399 = firrtl.mux(%141, %c1_ui3, %_decodeList_T_397) {name = "_decodeList_T_399"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %142 = firrtl.or %_decodeList_T_187, %_decodeList_T_189 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_401 = firrtl.mux(%142, %c0_ui3, %_decodeList_T_399) {name = "_decodeList_T_401"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_402 = firrtl.mux(%_decodeList_T_185, %c3_ui3, %_decodeList_T_401) {name = "_decodeList_T_402"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %143 = firrtl.or %_decodeList_T_181, %_decodeList_T_183 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_404 = firrtl.mux(%143, %c0_ui3, %_decodeList_T_402) {name = "_decodeList_T_404"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %144 = firrtl.or %_decodeList_T_177, %_decodeList_T_179 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_406 = firrtl.mux(%144, %c1_ui3, %_decodeList_T_404) {name = "_decodeList_T_406"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %145 = firrtl.or %_decodeList_T_173, %_decodeList_T_175 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %146 = firrtl.or %_decodeList_T_171, %145 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %147 = firrtl.or %_decodeList_T_169, %146 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %148 = firrtl.or %_decodeList_T_167, %147 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %149 = firrtl.or %_decodeList_T_165, %148 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %150 = firrtl.or %_decodeList_T_163, %149 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %151 = firrtl.or %_decodeList_T_161, %150 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %152 = firrtl.or %_decodeList_T_159, %151 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %153 = firrtl.or %_decodeList_T_157, %152 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %154 = firrtl.or %_decodeList_T_155, %153 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %155 = firrtl.or %_decodeList_T_153, %154 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %156 = firrtl.or %_decodeList_T_151, %155 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %157 = firrtl.or %_decodeList_T_149, %156 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %158 = firrtl.or %_decodeList_T_147, %157 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %159 = firrtl.or %_decodeList_T_145, %158 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %160 = firrtl.or %_decodeList_T_143, %159 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %161 = firrtl.or %_decodeList_T_141, %160 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %162 = firrtl.or %_decodeList_T_139, %161 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_425 = firrtl.mux(%162, %c0_ui3, %_decodeList_T_406) {name = "_decodeList_T_425"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %163 = firrtl.or %_decodeList_T_135, %_decodeList_T_137 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %164 = firrtl.or %_decodeList_T_133, %163 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %165 = firrtl.or %_decodeList_T_131, %164 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_429 = firrtl.mux(%165, %c1_ui3, %_decodeList_T_425) {name = "_decodeList_T_429"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_430 = firrtl.mux(%_decodeList_T_129, %c0_ui3, %_decodeList_T_429) {name = "_decodeList_T_430"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_431 = firrtl.mux(%_decodeList_T_127, %c3_ui3, %_decodeList_T_430) {name = "_decodeList_T_431"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %166 = firrtl.or %_decodeList_T_123, %_decodeList_T_125 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %167 = firrtl.or %_decodeList_T_121, %166 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %168 = firrtl.or %_decodeList_T_119, %167 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %169 = firrtl.or %_decodeList_T_117, %168 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %170 = firrtl.or %_decodeList_T_115, %169 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %171 = firrtl.or %_decodeList_T_113, %170 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %172 = firrtl.or %_decodeList_T_111, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %173 = firrtl.or %_decodeList_T_109, %172 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %174 = firrtl.or %_decodeList_T_107, %173 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %175 = firrtl.or %_decodeList_T_105, %174 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %176 = firrtl.or %_decodeList_T_103, %175 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %177 = firrtl.or %_decodeList_T_101, %176 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_444 = firrtl.mux(%177, %c2_ui3, %_decodeList_T_431) {name = "_decodeList_T_444"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_445 = firrtl.mux(%_decodeList_T_99, %c0_ui3, %_decodeList_T_444) {name = "_decodeList_T_445"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %178 = firrtl.or %_decodeList_T_95, %_decodeList_T_97 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %179 = firrtl.or %_decodeList_T_93, %178 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_448 = firrtl.mux(%179, %c1_ui3, %_decodeList_T_445) {name = "_decodeList_T_448"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %180 = firrtl.or %_decodeList_T_89, %_decodeList_T_91 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %181 = firrtl.or %_decodeList_T_87, %180 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %182 = firrtl.or %_decodeList_T_85, %181 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %183 = firrtl.or %_decodeList_T_83, %182 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %184 = firrtl.or %_decodeList_T_81, %183 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %185 = firrtl.or %_decodeList_T_79, %184 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %186 = firrtl.or %_decodeList_T_77, %185 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %187 = firrtl.or %_decodeList_T_75, %186 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_457 = firrtl.mux(%187, %c0_ui3, %_decodeList_T_448) {name = "_decodeList_T_457"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %188 = firrtl.or %_decodeList_T_71, %_decodeList_T_73 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %189 = firrtl.or %_decodeList_T_69, %188 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %190 = firrtl.or %_decodeList_T_67, %189 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %191 = firrtl.or %_decodeList_T_65, %190 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %192 = firrtl.or %_decodeList_T_63, %191 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %193 = firrtl.or %_decodeList_T_61, %192 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %194 = firrtl.or %_decodeList_T_59, %193 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_465 = firrtl.mux(%194, %c1_ui3, %_decodeList_T_457) {name = "_decodeList_T_465"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %195 = firrtl.or %_decodeList_T_55, %_decodeList_T_57 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %196 = firrtl.or %_decodeList_T_53, %195 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %197 = firrtl.or %_decodeList_T_51, %196 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %198 = firrtl.or %_decodeList_T_49, %197 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %199 = firrtl.or %_decodeList_T_47, %198 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %200 = firrtl.or %_decodeList_T_45, %199 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %201 = firrtl.or %_decodeList_T_43, %200 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %202 = firrtl.or %_decodeList_T_41, %201 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %203 = firrtl.or %_decodeList_T_39, %202 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %204 = firrtl.or %_decodeList_T_37, %203 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %205 = firrtl.or %_decodeList_T_35, %204 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %206 = firrtl.or %_decodeList_T_33, %205 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %207 = firrtl.or %_decodeList_T_31, %206 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %208 = firrtl.or %_decodeList_T_29, %207 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %209 = firrtl.or %_decodeList_T_27, %208 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %210 = firrtl.or %_decodeList_T_25, %209 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %211 = firrtl.or %_decodeList_T_23, %210 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %212 = firrtl.or %_decodeList_T_21, %211 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %213 = firrtl.or %_decodeList_T_19, %212 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %214 = firrtl.or %_decodeList_T_17, %213 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %215 = firrtl.or %_decodeList_T_15, %214 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %216 = firrtl.or %_decodeList_T_13, %215 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %217 = firrtl.or %_decodeList_T_11, %216 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %218 = firrtl.or %_decodeList_T_9, %217 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %219 = firrtl.or %_decodeList_T_7, %218 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %220 = firrtl.or %_decodeList_T_5, %219 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %221 = firrtl.or %_decodeList_T_3, %220 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %222 = firrtl.or %_decodeList_T_1, %221 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %decodeList_1 = firrtl.mux(%222, %c0_ui3, %_decodeList_T_465) {name = "decodeList_1"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %223 = firrtl.pad %_decodeList_T_494, 3 : (!firrtl.uint<1>) -> !firrtl.uint<3>
      %_decodeList_T_495 = firrtl.mux(%_decodeList_T_245, %c7_ui3, %223) {name = "_decodeList_T_495"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_496 = firrtl.mux(%_decodeList_T_243, %c6_ui3, %_decodeList_T_495) {name = "_decodeList_T_496"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_497 = firrtl.mux(%_decodeList_T_241, %c5_ui3, %_decodeList_T_496) {name = "_decodeList_T_497"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_498 = firrtl.mux(%_decodeList_T_239, %c3_ui3, %_decodeList_T_497) {name = "_decodeList_T_498"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_499 = firrtl.mux(%_decodeList_T_237, %c2_ui3, %_decodeList_T_498) {name = "_decodeList_T_499"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_decodeList_T_500 = firrtl.mux(%_decodeList_T_235, %c1_ui3, %_decodeList_T_499) {name = "_decodeList_T_500"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %224 = firrtl.pad %_decodeList_T_500, 6 : (!firrtl.uint<3>) -> !firrtl.uint<6>
      %_decodeList_T_501 = firrtl.mux(%_decodeList_T_233, %c50_ui6, %224) {name = "_decodeList_T_501"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_decodeList_T_502 = firrtl.mux(%_decodeList_T_231, %c49_ui6, %_decodeList_T_501) {name = "_decodeList_T_502"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_decodeList_T_503 = firrtl.mux(%_decodeList_T_229, %c48_ui6, %_decodeList_T_502) {name = "_decodeList_T_503"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_decodeList_T_504 = firrtl.mux(%_decodeList_T_227, %c55_ui6, %_decodeList_T_503) {name = "_decodeList_T_504"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_decodeList_T_505 = firrtl.mux(%_decodeList_T_225, %c38_ui6, %_decodeList_T_504) {name = "_decodeList_T_505"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_decodeList_T_506 = firrtl.mux(%_decodeList_T_223, %c37_ui6, %_decodeList_T_505) {name = "_decodeList_T_506"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_decodeList_T_507 = firrtl.mux(%_decodeList_T_221, %c36_ui6, %_decodeList_T_506) {name = "_decodeList_T_507"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %225 = firrtl.pad %_decodeList_T_507, 7 : (!firrtl.uint<6>) -> !firrtl.uint<7>
      %_decodeList_T_508 = firrtl.mux(%_decodeList_T_219, %c99_ui7, %225) {name = "_decodeList_T_508"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_509 = firrtl.mux(%_decodeList_T_217, %c34_ui7, %_decodeList_T_508) {name = "_decodeList_T_509"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %226 = firrtl.or %_decodeList_T_213, %_decodeList_T_215 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_511 = firrtl.mux(%226, %c33_ui7, %_decodeList_T_509) {name = "_decodeList_T_511"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %227 = firrtl.or %_decodeList_T_209, %_decodeList_T_211 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_513 = firrtl.mux(%227, %c32_ui7, %_decodeList_T_511) {name = "_decodeList_T_513"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_514 = firrtl.mux(%_decodeList_T_207, %c2_ui7, %_decodeList_T_513) {name = "_decodeList_T_514"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_515 = firrtl.mux(%_decodeList_T_205, %c0_ui7, %_decodeList_T_514) {name = "_decodeList_T_515"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_516 = firrtl.mux(%_decodeList_T_203, %c64_ui7, %_decodeList_T_515) {name = "_decodeList_T_516"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %228 = firrtl.or %_decodeList_T_199, %_decodeList_T_201 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %229 = firrtl.or %_decodeList_T_197, %228 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %230 = firrtl.or %_decodeList_T_195, %229 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_520 = firrtl.mux(%230, %c0_ui7, %_decodeList_T_516) {name = "_decodeList_T_520"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_521 = firrtl.mux(%_decodeList_T_193, %c11_ui7, %_decodeList_T_520) {name = "_decodeList_T_521"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_522 = firrtl.mux(%_decodeList_T_191, %c10_ui7, %_decodeList_T_521) {name = "_decodeList_T_522"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_523 = firrtl.mux(%_decodeList_T_189, %c64_ui7, %_decodeList_T_522) {name = "_decodeList_T_523"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_524 = firrtl.mux(%_decodeList_T_187, %c90_ui7, %_decodeList_T_523) {name = "_decodeList_T_524"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_525 = firrtl.mux(%_decodeList_T_185, %c0_ui7, %_decodeList_T_524) {name = "_decodeList_T_525"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_526 = firrtl.mux(%_decodeList_T_183, %c64_ui7, %_decodeList_T_525) {name = "_decodeList_T_526"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_527 = firrtl.mux(%_decodeList_T_181, %c90_ui7, %_decodeList_T_526) {name = "_decodeList_T_527"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_528 = firrtl.mux(%_decodeList_T_179, %c3_ui7, %_decodeList_T_527) {name = "_decodeList_T_528"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_529 = firrtl.mux(%_decodeList_T_177, %c2_ui7, %_decodeList_T_528) {name = "_decodeList_T_529"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_530 = firrtl.mux(%_decodeList_T_175, %c1_ui7, %_decodeList_T_529) {name = "_decodeList_T_530"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_531 = firrtl.mux(%_decodeList_T_173, %c17_ui7, %_decodeList_T_530) {name = "_decodeList_T_531"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_532 = firrtl.mux(%_decodeList_T_171, %c16_ui7, %_decodeList_T_531) {name = "_decodeList_T_532"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_533 = firrtl.mux(%_decodeList_T_169, %c88_ui7, %_decodeList_T_532) {name = "_decodeList_T_533"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_534 = firrtl.mux(%_decodeList_T_167, %c96_ui7, %_decodeList_T_533) {name = "_decodeList_T_534"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_535 = firrtl.mux(%_decodeList_T_165, %c40_ui7, %_decodeList_T_534) {name = "_decodeList_T_535"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_536 = firrtl.mux(%_decodeList_T_163, %c7_ui7, %_decodeList_T_535) {name = "_decodeList_T_536"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_537 = firrtl.mux(%_decodeList_T_161, %c6_ui7, %_decodeList_T_536) {name = "_decodeList_T_537"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_538 = firrtl.mux(%_decodeList_T_159, %c4_ui7, %_decodeList_T_537) {name = "_decodeList_T_538"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_539 = firrtl.mux(%_decodeList_T_157, %c8_ui7, %_decodeList_T_538) {name = "_decodeList_T_539"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_540 = firrtl.mux(%_decodeList_T_155, %c7_ui7, %_decodeList_T_539) {name = "_decodeList_T_540"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_541 = firrtl.mux(%_decodeList_T_153, %c13_ui7, %_decodeList_T_540) {name = "_decodeList_T_541"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_542 = firrtl.mux(%_decodeList_T_151, %c5_ui7, %_decodeList_T_541) {name = "_decodeList_T_542"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %231 = firrtl.or %_decodeList_T_147, %_decodeList_T_149 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %232 = firrtl.or %_decodeList_T_145, %231 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_545 = firrtl.mux(%232, %c64_ui7, %_decodeList_T_542) {name = "_decodeList_T_545"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_546 = firrtl.mux(%_decodeList_T_143, %c96_ui7, %_decodeList_T_545) {name = "_decodeList_T_546"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %233 = firrtl.or %_decodeList_T_139, %_decodeList_T_141 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_548 = firrtl.mux(%233, %c64_ui7, %_decodeList_T_546) {name = "_decodeList_T_548"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_549 = firrtl.mux(%_decodeList_T_137, %c11_ui7, %_decodeList_T_548) {name = "_decodeList_T_549"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_550 = firrtl.mux(%_decodeList_T_135, %c10_ui7, %_decodeList_T_549) {name = "_decodeList_T_550"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_551 = firrtl.mux(%_decodeList_T_133, %c3_ui7, %_decodeList_T_550) {name = "_decodeList_T_551"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_552 = firrtl.mux(%_decodeList_T_131, %c2_ui7, %_decodeList_T_551) {name = "_decodeList_T_552"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_553 = firrtl.mux(%_decodeList_T_129, %c64_ui7, %_decodeList_T_552) {name = "_decodeList_T_553"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_554 = firrtl.mux(%_decodeList_T_127, %c0_ui7, %_decodeList_T_553) {name = "_decodeList_T_554"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_555 = firrtl.mux(%_decodeList_T_125, %c15_ui7, %_decodeList_T_554) {name = "_decodeList_T_555"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_556 = firrtl.mux(%_decodeList_T_123, %c14_ui7, %_decodeList_T_555) {name = "_decodeList_T_556"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_557 = firrtl.mux(%_decodeList_T_121, %c13_ui7, %_decodeList_T_556) {name = "_decodeList_T_557"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_558 = firrtl.mux(%_decodeList_T_119, %c12_ui7, %_decodeList_T_557) {name = "_decodeList_T_558"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_559 = firrtl.mux(%_decodeList_T_117, %c8_ui7, %_decodeList_T_558) {name = "_decodeList_T_559"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_560 = firrtl.mux(%_decodeList_T_115, %c7_ui7, %_decodeList_T_559) {name = "_decodeList_T_560"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_561 = firrtl.mux(%_decodeList_T_113, %c6_ui7, %_decodeList_T_560) {name = "_decodeList_T_561"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_562 = firrtl.mux(%_decodeList_T_111, %c5_ui7, %_decodeList_T_561) {name = "_decodeList_T_562"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_563 = firrtl.mux(%_decodeList_T_109, %c4_ui7, %_decodeList_T_562) {name = "_decodeList_T_563"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_564 = firrtl.mux(%_decodeList_T_107, %c3_ui7, %_decodeList_T_563) {name = "_decodeList_T_564"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_565 = firrtl.mux(%_decodeList_T_105, %c2_ui7, %_decodeList_T_564) {name = "_decodeList_T_565"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_566 = firrtl.mux(%_decodeList_T_103, %c1_ui7, %_decodeList_T_565) {name = "_decodeList_T_566"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_567 = firrtl.mux(%_decodeList_T_101, %c0_ui7, %_decodeList_T_566) {name = "_decodeList_T_567"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_568 = firrtl.mux(%_decodeList_T_99, %c64_ui7, %_decodeList_T_567) {name = "_decodeList_T_568"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_569 = firrtl.mux(%_decodeList_T_97, %c11_ui7, %_decodeList_T_568) {name = "_decodeList_T_569"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_570 = firrtl.mux(%_decodeList_T_95, %c3_ui7, %_decodeList_T_569) {name = "_decodeList_T_570"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_571 = firrtl.mux(%_decodeList_T_93, %c6_ui7, %_decodeList_T_570) {name = "_decodeList_T_571"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_572 = firrtl.mux(%_decodeList_T_91, %c40_ui7, %_decodeList_T_571) {name = "_decodeList_T_572"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_573 = firrtl.mux(%_decodeList_T_89, %c96_ui7, %_decodeList_T_572) {name = "_decodeList_T_573"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_574 = firrtl.mux(%_decodeList_T_87, %c45_ui7, %_decodeList_T_573) {name = "_decodeList_T_574"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_575 = firrtl.mux(%_decodeList_T_85, %c37_ui7, %_decodeList_T_574) {name = "_decodeList_T_575"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_576 = firrtl.mux(%_decodeList_T_83, %c33_ui7, %_decodeList_T_575) {name = "_decodeList_T_576"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_577 = firrtl.mux(%_decodeList_T_81, %c45_ui7, %_decodeList_T_576) {name = "_decodeList_T_577"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_578 = firrtl.mux(%_decodeList_T_79, %c37_ui7, %_decodeList_T_577) {name = "_decodeList_T_578"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_579 = firrtl.mux(%_decodeList_T_77, %c33_ui7, %_decodeList_T_578) {name = "_decodeList_T_579"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_580 = firrtl.mux(%_decodeList_T_75, %c96_ui7, %_decodeList_T_579) {name = "_decodeList_T_580"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_581 = firrtl.mux(%_decodeList_T_73, %c10_ui7, %_decodeList_T_580) {name = "_decodeList_T_581"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_582 = firrtl.mux(%_decodeList_T_71, %c9_ui7, %_decodeList_T_581) {name = "_decodeList_T_582"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_583 = firrtl.mux(%_decodeList_T_69, %c8_ui7, %_decodeList_T_582) {name = "_decodeList_T_583"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_584 = firrtl.mux(%_decodeList_T_67, %c5_ui7, %_decodeList_T_583) {name = "_decodeList_T_584"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_585 = firrtl.mux(%_decodeList_T_65, %c4_ui7, %_decodeList_T_584) {name = "_decodeList_T_585"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_586 = firrtl.mux(%_decodeList_T_63, %c2_ui7, %_decodeList_T_585) {name = "_decodeList_T_586"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_587 = firrtl.mux(%_decodeList_T_61, %c1_ui7, %_decodeList_T_586) {name = "_decodeList_T_587"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_588 = firrtl.mux(%_decodeList_T_59, %c0_ui7, %_decodeList_T_587) {name = "_decodeList_T_588"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_589 = firrtl.mux(%_decodeList_T_57, %c23_ui7, %_decodeList_T_588) {name = "_decodeList_T_589"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_590 = firrtl.mux(%_decodeList_T_55, %c22_ui7, %_decodeList_T_589) {name = "_decodeList_T_590"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_591 = firrtl.mux(%_decodeList_T_53, %c21_ui7, %_decodeList_T_590) {name = "_decodeList_T_591"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_592 = firrtl.mux(%_decodeList_T_51, %c20_ui7, %_decodeList_T_591) {name = "_decodeList_T_592"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_593 = firrtl.mux(%_decodeList_T_49, %c17_ui7, %_decodeList_T_592) {name = "_decodeList_T_593"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_594 = firrtl.mux(%_decodeList_T_47, %c16_ui7, %_decodeList_T_593) {name = "_decodeList_T_594"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_595 = firrtl.mux(%_decodeList_T_45, %c90_ui7, %_decodeList_T_594) {name = "_decodeList_T_595"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_596 = firrtl.mux(%_decodeList_T_43, %c88_ui7, %_decodeList_T_595) {name = "_decodeList_T_596"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %234 = firrtl.or %_decodeList_T_39, %_decodeList_T_41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_decodeList_T_598 = firrtl.mux(%234, %c64_ui7, %_decodeList_T_596) {name = "_decodeList_T_598"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_599 = firrtl.mux(%_decodeList_T_37, %c13_ui7, %_decodeList_T_598) {name = "_decodeList_T_599"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_600 = firrtl.mux(%_decodeList_T_35, %c8_ui7, %_decodeList_T_599) {name = "_decodeList_T_600"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_601 = firrtl.mux(%_decodeList_T_33, %c7_ui7, %_decodeList_T_600) {name = "_decodeList_T_601"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_602 = firrtl.mux(%_decodeList_T_31, %c6_ui7, %_decodeList_T_601) {name = "_decodeList_T_602"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_603 = firrtl.mux(%_decodeList_T_29, %c5_ui7, %_decodeList_T_602) {name = "_decodeList_T_603"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_604 = firrtl.mux(%_decodeList_T_27, %c4_ui7, %_decodeList_T_603) {name = "_decodeList_T_604"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_605 = firrtl.mux(%_decodeList_T_25, %c3_ui7, %_decodeList_T_604) {name = "_decodeList_T_605"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_606 = firrtl.mux(%_decodeList_T_23, %c2_ui7, %_decodeList_T_605) {name = "_decodeList_T_606"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_607 = firrtl.mux(%_decodeList_T_21, %c1_ui7, %_decodeList_T_606) {name = "_decodeList_T_607"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_608 = firrtl.mux(%_decodeList_T_19, %c64_ui7, %_decodeList_T_607) {name = "_decodeList_T_608"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_609 = firrtl.mux(%_decodeList_T_17, %c13_ui7, %_decodeList_T_608) {name = "_decodeList_T_609"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_610 = firrtl.mux(%_decodeList_T_15, %c7_ui7, %_decodeList_T_609) {name = "_decodeList_T_610"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_611 = firrtl.mux(%_decodeList_T_13, %c6_ui7, %_decodeList_T_610) {name = "_decodeList_T_611"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_612 = firrtl.mux(%_decodeList_T_11, %c5_ui7, %_decodeList_T_611) {name = "_decodeList_T_612"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_613 = firrtl.mux(%_decodeList_T_9, %c4_ui7, %_decodeList_T_612) {name = "_decodeList_T_613"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_614 = firrtl.mux(%_decodeList_T_7, %c3_ui7, %_decodeList_T_613) {name = "_decodeList_T_614"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_615 = firrtl.mux(%_decodeList_T_5, %c2_ui7, %_decodeList_T_614) {name = "_decodeList_T_615"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_decodeList_T_616 = firrtl.mux(%_decodeList_T_3, %c1_ui7, %_decodeList_T_615) {name = "_decodeList_T_616"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %decodeList_2 = firrtl.mux(%_decodeList_T_1, %c64_ui7, %_decodeList_T_616) {name = "decodeList_2"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %235 = firrtl.or %hasIntr, %io_in_bits_exceptionVec_12 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %236 = firrtl.or %235, %io_out_bits_cf_exceptionVec_1_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %instrType = firrtl.mux(%236, %c0_ui4, %decodeList_0) {name = "instrType"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %237 = firrtl.or %235, %io_out_bits_cf_exceptionVec_1_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %fuType = firrtl.mux(%237, %c3_ui3, %decodeList_1) {name = "fuType"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %238 = firrtl.or %235, %io_out_bits_cf_exceptionVec_1_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %fuOpType = firrtl.mux(%238, %c0_ui7, %decodeList_2) {name = "fuOpType"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_isRVC_T = firrtl.bits %io_in_bits_instr 1 to 0 {name = "_isRVC_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %239 = firrtl.andr %_isRVC_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %isRVC = firrtl.not %239 {name = "isRVC"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %240 = firrtl.orr %10 : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %241 = firrtl.not %240 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %242 = firrtl.eq %_decodeList_T_192, %c16384_ui15 : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %243 = firrtl.eq %_decodeList_T_192, %c24576_ui15 : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %244 = firrtl.eq %_decodeList_T_192, %c49152_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %245 = firrtl.eq %_decodeList_T_192, %c57344_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %246 = firrtl.eq %_decodeList_T_146, %c1_ui1 : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %247 = firrtl.eq %_decodeList_T_192, %c1_ui1 : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %248 = firrtl.eq %_decodeList_T_192, %c8193_ui14 : (!firrtl.uint<64>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %249 = firrtl.eq %_decodeList_T_192, %c16385_ui15 : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %250 = firrtl.eq %_decodeList_T_146, %c24833_ui15 : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %251 = firrtl.eq %_decodeList_T_192, %c24577_ui15 : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %252 = firrtl.eq %_decodeList_T_154, %c32769_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %253 = firrtl.eq %_decodeList_T_154, %c33793_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %254 = firrtl.eq %_decodeList_T_154, %c34817_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %255 = firrtl.eq %_decodeList_T_166, %c35841_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %256 = firrtl.eq %_decodeList_T_166, %c35873_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %257 = firrtl.eq %_decodeList_T_166, %c35905_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %258 = firrtl.eq %_decodeList_T_166, %c35937_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %259 = firrtl.eq %_decodeList_T_166, %c39937_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %260 = firrtl.eq %_decodeList_T_166, %c39969_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %261 = firrtl.eq %_decodeList_T_192, %c40961_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %262 = firrtl.eq %_decodeList_T_192, %c49153_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %263 = firrtl.eq %_decodeList_T_192, %c57345_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %264 = firrtl.eq %_decodeList_T_192, %c2_ui2 : (!firrtl.uint<64>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %265 = firrtl.eq %_decodeList_T_192, %c16386_ui15 : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %266 = firrtl.eq %_decodeList_T_192, %c24578_ui15 : (!firrtl.uint<64>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %267 = firrtl.eq %_decodeList_T_186, %c32770_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %268 = firrtl.eq %_decodeList_T_188, %c32770_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %269 = firrtl.eq %_decodeList_T_184, %c36866_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %270 = firrtl.eq %_decodeList_T_186, %c36866_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %271 = firrtl.eq %_decodeList_T_188, %c36866_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %272 = firrtl.eq %_decodeList_T_192, %c49154_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %273 = firrtl.eq %_decodeList_T_192, %c57346_ui16 : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %274 = firrtl.mux(%273, %c3_ui5, %c16_ui5) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %275 = firrtl.mux(%272, %c2_ui5, %274) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %276 = firrtl.or %270, %271 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %277 = firrtl.mux(%276, %c16_ui5, %275) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %278 = firrtl.mux(%269, %c15_ui5, %277) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %279 = firrtl.or %267, %268 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %280 = firrtl.mux(%279, %c16_ui5, %278) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %281 = firrtl.mux(%266, %c1_ui5, %280) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %282 = firrtl.mux(%265, %c0_ui5, %281) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %283 = firrtl.mux(%264, %c10_ui5, %282) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %284 = firrtl.or %262, %263 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %285 = firrtl.mux(%284, %c9_ui5, %283) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %286 = firrtl.mux(%261, %c8_ui5, %285) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %287 = firrtl.or %259, %260 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %288 = firrtl.or %258, %287 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %289 = firrtl.or %257, %288 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %290 = firrtl.or %256, %289 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %291 = firrtl.or %255, %290 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %292 = firrtl.mux(%291, %c16_ui5, %286) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %293 = firrtl.or %253, %254 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %294 = firrtl.or %252, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %295 = firrtl.mux(%294, %c10_ui5, %292) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %296 = firrtl.mux(%251, %c11_ui5, %295) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %297 = firrtl.mux(%250, %c13_ui5, %296) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %298 = firrtl.mux(%249, %c10_ui5, %297) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %299 = firrtl.or %247, %248 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %300 = firrtl.mux(%299, %c12_ui5, %298) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %301 = firrtl.mux(%246, %c16_ui5, %300) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %302 = firrtl.mux(%245, %c5_ui5, %301) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %303 = firrtl.mux(%244, %c4_ui5, %302) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %304 = firrtl.mux(%243, %c7_ui5, %303) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %305 = firrtl.mux(%242, %c6_ui5, %304) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %rvcImmType = firrtl.mux(%241, %c14_ui5, %305) {name = "rvcImmType"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %306 = firrtl.or %272, %273 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %307 = firrtl.mux(%306, %c9_ui4, %c0_ui4) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %308 = firrtl.mux(%271, %c2_ui4, %307) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %309 = firrtl.mux(%270, %c4_ui4, %308) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %310 = firrtl.mux(%269, %c0_ui4, %309) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %311 = firrtl.mux(%268, %c5_ui4, %310) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %312 = firrtl.mux(%267, %c4_ui4, %311) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %313 = firrtl.or %265, %266 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %314 = firrtl.mux(%313, %c9_ui4, %312) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %315 = firrtl.mux(%264, %c2_ui4, %314) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %316 = firrtl.or %262, %263 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %317 = firrtl.mux(%316, %c6_ui4, %315) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %318 = firrtl.mux(%261, %c0_ui4, %317) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %319 = firrtl.or %259, %260 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %320 = firrtl.or %258, %319 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %321 = firrtl.or %257, %320 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %322 = firrtl.or %256, %321 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %323 = firrtl.or %255, %322 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %324 = firrtl.or %254, %323 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %325 = firrtl.or %253, %324 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %326 = firrtl.or %252, %325 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %327 = firrtl.mux(%326, %c6_ui4, %318) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %328 = firrtl.mux(%251, %c0_ui4, %327) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %329 = firrtl.mux(%250, %c9_ui4, %328) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %330 = firrtl.mux(%249, %c0_ui4, %329) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %331 = firrtl.or %247, %248 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %332 = firrtl.mux(%331, %c2_ui4, %330) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %333 = firrtl.mux(%246, %c0_ui4, %332) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %334 = firrtl.or %244, %245 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %335 = firrtl.or %243, %334 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %336 = firrtl.or %242, %335 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %337 = firrtl.mux(%336, %c6_ui4, %333) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %rvcSrc1Type = firrtl.mux(%241, %c9_ui4, %337) {name = "rvcSrc1Type"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %338 = firrtl.or %272, %273 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %339 = firrtl.or %271, %338 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %340 = firrtl.mux(%339, %c5_ui3, %c0_ui3) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %341 = firrtl.or %269, %270 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %342 = firrtl.or %268, %341 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %343 = firrtl.or %267, %342 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %344 = firrtl.or %266, %343 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %345 = firrtl.or %265, %344 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %346 = firrtl.or %264, %345 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %347 = firrtl.or %263, %346 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %348 = firrtl.or %262, %347 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %349 = firrtl.or %261, %348 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %350 = firrtl.mux(%349, %c0_ui3, %340) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %351 = firrtl.or %259, %260 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %352 = firrtl.or %258, %351 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %353 = firrtl.or %257, %352 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %354 = firrtl.or %256, %353 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %355 = firrtl.or %255, %354 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %356 = firrtl.mux(%355, %c7_ui3, %350) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %357 = firrtl.or %253, %254 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %358 = firrtl.or %252, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %359 = firrtl.or %251, %358 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %360 = firrtl.or %250, %359 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %361 = firrtl.or %249, %360 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %362 = firrtl.or %248, %361 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %363 = firrtl.or %247, %362 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %364 = firrtl.or %246, %363 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %365 = firrtl.mux(%364, %c0_ui3, %356) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %366 = firrtl.or %244, %245 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %367 = firrtl.mux(%366, %c7_ui3, %365) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %368 = firrtl.or %242, %243 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %369 = firrtl.or %241, %368 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %rvcSrc2Type = firrtl.mux(%369, %c0_ui3, %367) {name = "rvcSrc2Type"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %370 = firrtl.mux(%271, %c2_ui2, %c0_ui2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %371 = firrtl.pad %370, 4 : (!firrtl.uint<2>) -> !firrtl.uint<4>
      %372 = firrtl.mux(%270, %c8_ui4, %371) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %373 = firrtl.mux(%269, %c0_ui4, %372) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %374 = firrtl.mux(%268, %c2_ui4, %373) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %375 = firrtl.mux(%267, %c0_ui4, %374) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %376 = firrtl.or %265, %266 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %377 = firrtl.or %264, %376 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %378 = firrtl.mux(%377, %c2_ui4, %375) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %379 = firrtl.or %262, %263 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %380 = firrtl.or %261, %379 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %381 = firrtl.mux(%380, %c0_ui4, %378) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %382 = firrtl.or %259, %260 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %383 = firrtl.or %258, %382 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %384 = firrtl.or %257, %383 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %385 = firrtl.or %256, %384 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %386 = firrtl.or %255, %385 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %387 = firrtl.or %254, %386 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %388 = firrtl.or %253, %387 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %389 = firrtl.or %252, %388 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %390 = firrtl.mux(%389, %c6_ui4, %381) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %391 = firrtl.mux(%251, %c2_ui4, %390) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %392 = firrtl.mux(%250, %c9_ui4, %391) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %393 = firrtl.or %248, %249 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %394 = firrtl.or %247, %393 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %395 = firrtl.mux(%394, %c2_ui4, %392) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %396 = firrtl.or %245, %246 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %397 = firrtl.or %244, %396 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %398 = firrtl.mux(%397, %c0_ui4, %395) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %399 = firrtl.or %242, %243 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %400 = firrtl.or %241, %399 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %rvcDestType = firrtl.mux(%400, %c7_ui4, %398) {name = "rvcDestType"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_ctrl_fuType_17, %fuType : !firrtl.uint<3>
      %_imm_T_31 = firrtl.eq %instrType, %c4_ui3 {name = "_imm_T_31"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_imm_T_32 = firrtl.eq %instrType, %c2_ui2 {name = "_imm_T_32"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_imm_T_33 = firrtl.andr %instrType {name = "_imm_T_33"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_imm_T_34 = firrtl.eq %instrType, %c1_ui1 {name = "_imm_T_34"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_imm_T_35 = firrtl.eq %instrType, %c6_ui3 {name = "_imm_T_35"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_imm_T_36 = firrtl.eq %instrType, %c7_ui3 {name = "_imm_T_36"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %401 = firrtl.orr %instrType : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_src2Type_T_15 = firrtl.not %401 {name = "_src2Type_T_15"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_src1Type_T_21 = firrtl.or %_imm_T_35, %_imm_T_36 {name = "_src1Type_T_21"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src1Type_T_22 = firrtl.or %_src1Type_T_21, %_src2Type_T_15 {name = "_src1Type_T_22"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src1Type = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %src1Type, %_src1Type_T_22 : !firrtl.uint<1>
      %_src2Type_T_20 = firrtl.or %_imm_T_31, %_imm_T_35 {name = "_src2Type_T_20"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2Type_T_21 = firrtl.or %_src2Type_T_20, %_imm_T_36 {name = "_src2Type_T_21"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2Type_T_22 = firrtl.or %_src2Type_T_21, %_src2Type_T_15 {name = "_src2Type_T_22"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src2Type = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %src2Type, %_src2Type_T_22 : !firrtl.uint<1>
      %rs = firrtl.bits %io_in_bits_instr 19 to 15 {name = "rs"} : (!firrtl.uint<64>) -> !firrtl.uint<5>
      %rt = firrtl.bits %io_in_bits_instr 24 to 20 {name = "rt"} : (!firrtl.uint<64>) -> !firrtl.uint<5>
      %rd = firrtl.bits %io_in_bits_instr 11 to 7 {name = "rd"} : (!firrtl.uint<64>) -> !firrtl.uint<5>
      %rs2 = firrtl.bits %io_in_bits_instr 6 to 2 {name = "rs2"} : (!firrtl.uint<64>) -> !firrtl.uint<5>
      %_immrvc_T_14 = firrtl.bits %io_in_bits_instr 9 to 7 {name = "_immrvc_T_14"} : (!firrtl.uint<64>) -> !firrtl.uint<3>
      %402 = firrtl.orr %_immrvc_T_14 : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs1p_T_1 = firrtl.not %402 {name = "_rs1p_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rs1p_T_2 = firrtl.eq %_immrvc_T_14, %c1_ui1 {name = "_rs1p_T_2"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rs1p_T_3 = firrtl.eq %_immrvc_T_14, %c2_ui2 {name = "_rs1p_T_3"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rs1p_T_4 = firrtl.eq %_immrvc_T_14, %c3_ui2 {name = "_rs1p_T_4"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rs1p_T_5 = firrtl.eq %_immrvc_T_14, %c4_ui3 {name = "_rs1p_T_5"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs1p_T_6 = firrtl.eq %_immrvc_T_14, %c5_ui3 {name = "_rs1p_T_6"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs1p_T_7 = firrtl.eq %_immrvc_T_14, %c6_ui3 {name = "_rs1p_T_7"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs1p_T_8 = firrtl.andr %_immrvc_T_14 {name = "_rs1p_T_8"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs1p_T_9 = firrtl.mux(%_rs1p_T_1, %c8_ui4, %c0_ui4) {name = "_rs1p_T_9"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_10 = firrtl.mux(%_rs1p_T_2, %c9_ui4, %c0_ui4) {name = "_rs1p_T_10"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_11 = firrtl.mux(%_rs1p_T_3, %c10_ui4, %c0_ui4) {name = "_rs1p_T_11"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_12 = firrtl.mux(%_rs1p_T_4, %c11_ui4, %c0_ui4) {name = "_rs1p_T_12"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_13 = firrtl.mux(%_rs1p_T_5, %c12_ui4, %c0_ui4) {name = "_rs1p_T_13"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_14 = firrtl.mux(%_rs1p_T_6, %c13_ui4, %c0_ui4) {name = "_rs1p_T_14"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_15 = firrtl.mux(%_rs1p_T_7, %c14_ui4, %c0_ui4) {name = "_rs1p_T_15"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_16 = firrtl.mux(%_rs1p_T_8, %c15_ui4, %c0_ui4) {name = "_rs1p_T_16"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_17 = firrtl.or %_rs1p_T_9, %_rs1p_T_10 {name = "_rs1p_T_17"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_18 = firrtl.or %_rs1p_T_17, %_rs1p_T_11 {name = "_rs1p_T_18"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_19 = firrtl.or %_rs1p_T_18, %_rs1p_T_12 {name = "_rs1p_T_19"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_20 = firrtl.or %_rs1p_T_19, %_rs1p_T_13 {name = "_rs1p_T_20"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_21 = firrtl.or %_rs1p_T_20, %_rs1p_T_14 {name = "_rs1p_T_21"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_22 = firrtl.or %_rs1p_T_21, %_rs1p_T_15 {name = "_rs1p_T_22"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs1p_T_23 = firrtl.or %_rs1p_T_22, %_rs1p_T_16 {name = "_rs1p_T_23"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %rs1p = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %rs1p, %_rs1p_T_23 : !firrtl.uint<4>
      %_immrvc_T_5 = firrtl.bits %io_in_bits_instr 4 to 2 {name = "_immrvc_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<3>
      %403 = firrtl.orr %_immrvc_T_5 : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs2p_T_1 = firrtl.not %403 {name = "_rs2p_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rs2p_T_2 = firrtl.eq %_immrvc_T_5, %c1_ui1 {name = "_rs2p_T_2"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rs2p_T_3 = firrtl.eq %_immrvc_T_5, %c2_ui2 {name = "_rs2p_T_3"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rs2p_T_4 = firrtl.eq %_immrvc_T_5, %c3_ui2 {name = "_rs2p_T_4"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rs2p_T_5 = firrtl.eq %_immrvc_T_5, %c4_ui3 {name = "_rs2p_T_5"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs2p_T_6 = firrtl.eq %_immrvc_T_5, %c5_ui3 {name = "_rs2p_T_6"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs2p_T_7 = firrtl.eq %_immrvc_T_5, %c6_ui3 {name = "_rs2p_T_7"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs2p_T_8 = firrtl.andr %_immrvc_T_5 {name = "_rs2p_T_8"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rs2p_T_9 = firrtl.mux(%_rs2p_T_1, %c8_ui4, %c0_ui4) {name = "_rs2p_T_9"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_10 = firrtl.mux(%_rs2p_T_2, %c9_ui4, %c0_ui4) {name = "_rs2p_T_10"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_11 = firrtl.mux(%_rs2p_T_3, %c10_ui4, %c0_ui4) {name = "_rs2p_T_11"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_12 = firrtl.mux(%_rs2p_T_4, %c11_ui4, %c0_ui4) {name = "_rs2p_T_12"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_13 = firrtl.mux(%_rs2p_T_5, %c12_ui4, %c0_ui4) {name = "_rs2p_T_13"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_14 = firrtl.mux(%_rs2p_T_6, %c13_ui4, %c0_ui4) {name = "_rs2p_T_14"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_15 = firrtl.mux(%_rs2p_T_7, %c14_ui4, %c0_ui4) {name = "_rs2p_T_15"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_16 = firrtl.mux(%_rs2p_T_8, %c15_ui4, %c0_ui4) {name = "_rs2p_T_16"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_17 = firrtl.or %_rs2p_T_9, %_rs2p_T_10 {name = "_rs2p_T_17"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_18 = firrtl.or %_rs2p_T_17, %_rs2p_T_11 {name = "_rs2p_T_18"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_19 = firrtl.or %_rs2p_T_18, %_rs2p_T_12 {name = "_rs2p_T_19"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_20 = firrtl.or %_rs2p_T_19, %_rs2p_T_13 {name = "_rs2p_T_20"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_21 = firrtl.or %_rs2p_T_20, %_rs2p_T_14 {name = "_rs2p_T_21"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_22 = firrtl.or %_rs2p_T_21, %_rs2p_T_15 {name = "_rs2p_T_22"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rs2p_T_23 = firrtl.or %_rs2p_T_22, %_rs2p_T_16 {name = "_rs2p_T_23"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %rs2p = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %rs2p, %_rs2p_T_23 : !firrtl.uint<4>
      %_immrvc_T_70 = firrtl.bits %io_in_bits_instr 12 to 12 {name = "_immrvc_T_70"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_rvc_src1_T_1 = firrtl.eq %rvcSrc1Type, %c3_ui2 {name = "_rvc_src1_T_1"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rvc_src1_T_2 = firrtl.eq %rvcSrc1Type, %c1_ui1 {name = "_rvc_src1_T_2"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvc_src1_T_3 = firrtl.eq %rvcSrc1Type, %c2_ui2 {name = "_rvc_src1_T_3"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rvc_src1_T_4 = firrtl.eq %rvcSrc1Type, %c4_ui3 {name = "_rvc_src1_T_4"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src1_T_5 = firrtl.eq %rvcSrc1Type, %c5_ui3 {name = "_rvc_src1_T_5"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src1_T_6 = firrtl.eq %rvcSrc1Type, %c6_ui3 {name = "_rvc_src1_T_6"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src1_T_7 = firrtl.eq %rvcSrc1Type, %c7_ui3 {name = "_rvc_src1_T_7"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src1_T_18 = firrtl.eq %rvcSrc1Type, %c8_ui4 {name = "_rvc_src1_T_18"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvc_src1_T_9 = firrtl.eq %rvcSrc1Type, %c9_ui4 {name = "_rvc_src1_T_9"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvc_src1_T_20 = firrtl.mux(%_rvc_src1_T_1, %rs, %c0_ui5) {name = "_rvc_src1_T_20"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_12 = firrtl.mux(%_rvc_src1_T_2, %rt, %c0_ui5) {name = "_rvc_src1_T_12"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_13 = firrtl.mux(%_rvc_src1_T_3, %rd, %c0_ui5) {name = "_rvc_src1_T_13"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_14 = firrtl.mux(%_rvc_src1_T_4, %rd, %c0_ui5) {name = "_rvc_src1_T_14"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_15 = firrtl.mux(%_rvc_src1_T_5, %rs2, %c0_ui5) {name = "_rvc_src1_T_15"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_16 = firrtl.mux(%_rvc_src1_T_6, %rs1p, %c0_ui4) {name = "_rvc_src1_T_16"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src1_T_17 = firrtl.mux(%_rvc_src1_T_7, %rs2p, %c0_ui4) {name = "_rvc_src1_T_17"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src1_T_19 = firrtl.mux(%_rvc_src1_T_9, %c2_ui2, %c0_ui2) {name = "_rvc_src1_T_19"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_rvc_src1_T_21 = firrtl.or %_rvc_src1_T_20, %_rvc_src1_T_12 {name = "_rvc_src1_T_21"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_22 = firrtl.or %_rvc_src1_T_21, %_rvc_src1_T_13 {name = "_rvc_src1_T_22"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_23 = firrtl.or %_rvc_src1_T_22, %_rvc_src1_T_14 {name = "_rvc_src1_T_23"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src1_T_24 = firrtl.or %_rvc_src1_T_23, %_rvc_src1_T_15 {name = "_rvc_src1_T_24"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %404 = firrtl.bits %_rvc_src1_T_24 4 to 4 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %405 = firrtl.bits %_rvc_src1_T_24 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %406 = firrtl.or %405, %_rvc_src1_T_16 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src1_T_25 = firrtl.cat %404, %406 {name = "_rvc_src1_T_25"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %407 = firrtl.bits %_rvc_src1_T_25 4 to 4 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %408 = firrtl.bits %_rvc_src1_T_25 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %409 = firrtl.or %408, %_rvc_src1_T_17 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src1_T_26 = firrtl.cat %407, %409 {name = "_rvc_src1_T_26"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %410 = firrtl.bits %_rvc_src1_T_26 4 to 1 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %411 = firrtl.bits %_rvc_src1_T_26 0 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %412 = firrtl.or %411, %_rvc_src1_T_18 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvc_src1_T_27 = firrtl.cat %410, %412 {name = "_rvc_src1_T_27"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %413 = firrtl.bits %_rvc_src1_T_27 4 to 2 : (!firrtl.uint<5>) -> !firrtl.uint<3>
      %414 = firrtl.bits %_rvc_src1_T_27 1 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<2>
      %415 = firrtl.or %414, %_rvc_src1_T_19 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_rvc_src1_T_28 = firrtl.cat %413, %415 {name = "_rvc_src1_T_28"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<5>
      %rvc_src1 = firrtl.wire : !firrtl.uint<5>
      firrtl.strictconnect %rvc_src1, %_rvc_src1_T_28 : !firrtl.uint<5>
      %_rvc_src2_T_1 = firrtl.eq %rvcSrc2Type, %c3_ui2 {name = "_rvc_src2_T_1"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rvc_src2_T_2 = firrtl.eq %rvcSrc2Type, %c1_ui1 {name = "_rvc_src2_T_2"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvc_src2_T_3 = firrtl.eq %rvcSrc2Type, %c2_ui2 {name = "_rvc_src2_T_3"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rvc_src2_T_4 = firrtl.eq %rvcSrc2Type, %c4_ui3 {name = "_rvc_src2_T_4"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src2_T_5 = firrtl.eq %rvcSrc2Type, %c5_ui3 {name = "_rvc_src2_T_5"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src2_T_6 = firrtl.eq %rvcSrc2Type, %c6_ui3 {name = "_rvc_src2_T_6"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src2_T_7 = firrtl.andr %rvcSrc2Type {name = "_rvc_src2_T_7"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_src2_T_18 = firrtl.eq %rvcSrc2Type, %c8_ui4 {name = "_rvc_src2_T_18"} : (!firrtl.uint<3>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvc_src2_T_9 = firrtl.eq %rvcSrc2Type, %c9_ui4 {name = "_rvc_src2_T_9"} : (!firrtl.uint<3>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvc_src2_T_20 = firrtl.mux(%_rvc_src2_T_1, %rs, %c0_ui5) {name = "_rvc_src2_T_20"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_12 = firrtl.mux(%_rvc_src2_T_2, %rt, %c0_ui5) {name = "_rvc_src2_T_12"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_13 = firrtl.mux(%_rvc_src2_T_3, %rd, %c0_ui5) {name = "_rvc_src2_T_13"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_14 = firrtl.mux(%_rvc_src2_T_4, %rd, %c0_ui5) {name = "_rvc_src2_T_14"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_15 = firrtl.mux(%_rvc_src2_T_5, %rs2, %c0_ui5) {name = "_rvc_src2_T_15"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_16 = firrtl.mux(%_rvc_src2_T_6, %rs1p, %c0_ui4) {name = "_rvc_src2_T_16"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src2_T_17 = firrtl.mux(%_rvc_src2_T_7, %rs2p, %c0_ui4) {name = "_rvc_src2_T_17"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src2_T_19 = firrtl.mux(%_rvc_src2_T_9, %c2_ui2, %c0_ui2) {name = "_rvc_src2_T_19"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_rvc_src2_T_21 = firrtl.or %_rvc_src2_T_20, %_rvc_src2_T_12 {name = "_rvc_src2_T_21"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_22 = firrtl.or %_rvc_src2_T_21, %_rvc_src2_T_13 {name = "_rvc_src2_T_22"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_23 = firrtl.or %_rvc_src2_T_22, %_rvc_src2_T_14 {name = "_rvc_src2_T_23"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_src2_T_24 = firrtl.or %_rvc_src2_T_23, %_rvc_src2_T_15 {name = "_rvc_src2_T_24"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %416 = firrtl.bits %_rvc_src2_T_24 4 to 4 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %417 = firrtl.bits %_rvc_src2_T_24 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %418 = firrtl.or %417, %_rvc_src2_T_16 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src2_T_25 = firrtl.cat %416, %418 {name = "_rvc_src2_T_25"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %419 = firrtl.bits %_rvc_src2_T_25 4 to 4 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %420 = firrtl.bits %_rvc_src2_T_25 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %421 = firrtl.or %420, %_rvc_src2_T_17 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_src2_T_26 = firrtl.cat %419, %421 {name = "_rvc_src2_T_26"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %422 = firrtl.bits %_rvc_src2_T_26 4 to 1 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %423 = firrtl.bits %_rvc_src2_T_26 0 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %424 = firrtl.or %423, %_rvc_src2_T_18 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvc_src2_T_27 = firrtl.cat %422, %424 {name = "_rvc_src2_T_27"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %425 = firrtl.bits %_rvc_src2_T_27 4 to 2 : (!firrtl.uint<5>) -> !firrtl.uint<3>
      %426 = firrtl.bits %_rvc_src2_T_27 1 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<2>
      %427 = firrtl.or %426, %_rvc_src2_T_19 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_rvc_src2_T_28 = firrtl.cat %425, %427 {name = "_rvc_src2_T_28"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<5>
      %rvc_src2 = firrtl.wire : !firrtl.uint<5>
      firrtl.strictconnect %rvc_src2, %_rvc_src2_T_28 : !firrtl.uint<5>
      %_rvc_dest_T_1 = firrtl.eq %rvcDestType, %c3_ui2 {name = "_rvc_dest_T_1"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rvc_dest_T_2 = firrtl.eq %rvcDestType, %c1_ui1 {name = "_rvc_dest_T_2"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvc_dest_T_3 = firrtl.eq %rvcDestType, %c2_ui2 {name = "_rvc_dest_T_3"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rvc_dest_T_4 = firrtl.eq %rvcDestType, %c4_ui3 {name = "_rvc_dest_T_4"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_dest_T_5 = firrtl.eq %rvcDestType, %c5_ui3 {name = "_rvc_dest_T_5"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_dest_T_6 = firrtl.eq %rvcDestType, %c6_ui3 {name = "_rvc_dest_T_6"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_dest_T_7 = firrtl.eq %rvcDestType, %c7_ui3 {name = "_rvc_dest_T_7"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rvc_dest_T_18 = firrtl.eq %rvcDestType, %c8_ui4 {name = "_rvc_dest_T_18"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvc_dest_T_9 = firrtl.eq %rvcDestType, %c9_ui4 {name = "_rvc_dest_T_9"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_rvc_dest_T_20 = firrtl.mux(%_rvc_dest_T_1, %rs, %c0_ui5) {name = "_rvc_dest_T_20"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_12 = firrtl.mux(%_rvc_dest_T_2, %rt, %c0_ui5) {name = "_rvc_dest_T_12"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_13 = firrtl.mux(%_rvc_dest_T_3, %rd, %c0_ui5) {name = "_rvc_dest_T_13"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_14 = firrtl.mux(%_rvc_dest_T_4, %rd, %c0_ui5) {name = "_rvc_dest_T_14"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_15 = firrtl.mux(%_rvc_dest_T_5, %rs2, %c0_ui5) {name = "_rvc_dest_T_15"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_16 = firrtl.mux(%_rvc_dest_T_6, %rs1p, %c0_ui4) {name = "_rvc_dest_T_16"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_dest_T_17 = firrtl.mux(%_rvc_dest_T_7, %rs2p, %c0_ui4) {name = "_rvc_dest_T_17"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_dest_T_19 = firrtl.mux(%_rvc_dest_T_9, %c2_ui2, %c0_ui2) {name = "_rvc_dest_T_19"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_rvc_dest_T_21 = firrtl.or %_rvc_dest_T_20, %_rvc_dest_T_12 {name = "_rvc_dest_T_21"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_22 = firrtl.or %_rvc_dest_T_21, %_rvc_dest_T_13 {name = "_rvc_dest_T_22"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_23 = firrtl.or %_rvc_dest_T_22, %_rvc_dest_T_14 {name = "_rvc_dest_T_23"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_rvc_dest_T_24 = firrtl.or %_rvc_dest_T_23, %_rvc_dest_T_15 {name = "_rvc_dest_T_24"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %428 = firrtl.bits %_rvc_dest_T_24 4 to 4 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %429 = firrtl.bits %_rvc_dest_T_24 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %430 = firrtl.or %429, %_rvc_dest_T_16 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_dest_T_25 = firrtl.cat %428, %430 {name = "_rvc_dest_T_25"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %431 = firrtl.bits %_rvc_dest_T_25 4 to 4 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %432 = firrtl.bits %_rvc_dest_T_25 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %433 = firrtl.or %432, %_rvc_dest_T_17 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_rvc_dest_T_26 = firrtl.cat %431, %433 {name = "_rvc_dest_T_26"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %434 = firrtl.bits %_rvc_dest_T_26 4 to 1 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %435 = firrtl.bits %_rvc_dest_T_26 0 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %436 = firrtl.or %435, %_rvc_dest_T_18 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rvc_dest_T_27 = firrtl.cat %434, %436 {name = "_rvc_dest_T_27"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %437 = firrtl.bits %_rvc_dest_T_27 4 to 2 : (!firrtl.uint<5>) -> !firrtl.uint<3>
      %438 = firrtl.bits %_rvc_dest_T_27 1 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<2>
      %439 = firrtl.or %438, %_rvc_dest_T_19 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_rvc_dest_T_28 = firrtl.cat %437, %439 {name = "_rvc_dest_T_28"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<5>
      %rvc_dest = firrtl.wire : !firrtl.uint<5>
      firrtl.strictconnect %rvc_dest, %_rvc_dest_T_28 : !firrtl.uint<5>
      %rfSrc1 = firrtl.mux(%isRVC, %rvc_src1, %rs) {name = "rfSrc1"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %rfSrc2 = firrtl.mux(%isRVC, %rvc_src2, %rt) {name = "rfSrc2"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %rfDest = firrtl.mux(%isRVC, %rvc_dest, %rd) {name = "rfDest"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_io_out_bits_ctrl_rfSrc1_T_1 = firrtl.mux(%src1Type, %c0_ui5, %rfSrc1) {name = "_io_out_bits_ctrl_rfSrc1_T_1"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_ctrl_rfSrc1_19, %_io_out_bits_ctrl_rfSrc1_T_1 : !firrtl.uint<5>
      %_io_out_bits_ctrl_rfSrc2_T = firrtl.not %src2Type {name = "_io_out_bits_ctrl_rfSrc2_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_ctrl_rfSrc2_T_1 = firrtl.mux(%_io_out_bits_ctrl_rfSrc2_T, %rfSrc2, %c0_ui5) {name = "_io_out_bits_ctrl_rfSrc2_T_1"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_ctrl_rfSrc2_20, %_io_out_bits_ctrl_rfSrc2_T_1 : !firrtl.uint<5>
      %_io_out_bits_ctrl_rfDest_T = firrtl.bits %instrType 2 to 2 {name = "_io_out_bits_ctrl_rfDest_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_rfWen_21, %_io_out_bits_ctrl_rfDest_T : !firrtl.uint<1>
      %_io_out_bits_ctrl_rfDest_T_1 = firrtl.mux(%_io_out_bits_ctrl_rfDest_T, %rfDest, %c0_ui5) {name = "_io_out_bits_ctrl_rfDest_T_1"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_ctrl_rfDest_22, %_io_out_bits_ctrl_rfDest_T_1 : !firrtl.uint<5>
      %_imm_T = firrtl.bits %io_in_bits_instr 31 to 20 {name = "_imm_T"} : (!firrtl.uint<64>) -> !firrtl.uint<12>
      %imm_signBit = firrtl.bits %io_in_bits_instr 31 to 31 {name = "imm_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_imm_T_1 = firrtl.mux(%imm_signBit, %c4503599627370495_ui52, %c0_ui52) {name = "_imm_T_1"} : (!firrtl.uint<1>, !firrtl.uint<52>, !firrtl.uint<52>) -> !firrtl.uint<52>
      %_imm_T_2 = firrtl.cat %_imm_T_1, %_imm_T {name = "_imm_T_2"} : (!firrtl.uint<52>, !firrtl.uint<12>) -> !firrtl.uint<64>
      %_imm_T_8 = firrtl.bits %io_in_bits_instr 31 to 25 {name = "_imm_T_8"} : (!firrtl.uint<64>) -> !firrtl.uint<7>
      %_imm_T_5 = firrtl.cat %_imm_T_8, %rd {name = "_imm_T_5"} : (!firrtl.uint<7>, !firrtl.uint<5>) -> !firrtl.uint<12>
      %imm_signBit_1 = firrtl.bits %_imm_T_5 11 to 11 {name = "imm_signBit_1"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %_imm_T_6 = firrtl.mux(%imm_signBit_1, %c4503599627370495_ui52, %c0_ui52) {name = "_imm_T_6"} : (!firrtl.uint<1>, !firrtl.uint<52>, !firrtl.uint<52>) -> !firrtl.uint<52>
      %_imm_T_7 = firrtl.cat %_imm_T_6, %_imm_T_5 {name = "_imm_T_7"} : (!firrtl.uint<52>, !firrtl.uint<12>) -> !firrtl.uint<64>
      %_imm_T_10 = firrtl.cat %_imm_T_8, %rd {name = "_imm_T_10"} : (!firrtl.uint<7>, !firrtl.uint<5>) -> !firrtl.uint<12>
      %imm_signBit_2 = firrtl.bits %_imm_T_10 11 to 11 {name = "imm_signBit_2"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %_imm_T_11 = firrtl.mux(%imm_signBit_2, %c4503599627370495_ui52, %c0_ui52) {name = "_imm_T_11"} : (!firrtl.uint<1>, !firrtl.uint<52>, !firrtl.uint<52>) -> !firrtl.uint<52>
      %_imm_T_12 = firrtl.cat %_imm_T_11, %_imm_T_10 {name = "_imm_T_12"} : (!firrtl.uint<52>, !firrtl.uint<12>) -> !firrtl.uint<64>
      %_imm_T_24 = firrtl.bits %io_in_bits_instr 31 to 31 {name = "_imm_T_24"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_immrvc_T_40 = firrtl.bits %io_in_bits_instr 7 to 7 {name = "_immrvc_T_40"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_imm_T_15 = firrtl.bits %io_in_bits_instr 30 to 25 {name = "_imm_T_15"} : (!firrtl.uint<64>) -> !firrtl.uint<6>
      %_imm_T_16 = firrtl.bits %io_in_bits_instr 11 to 8 {name = "_imm_T_16"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %imm_lo = firrtl.cat %_imm_T_16, %c0_ui1 {name = "imm_lo"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %imm_hi_hi = firrtl.cat %_imm_T_24, %_immrvc_T_40 {name = "imm_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %imm_hi = firrtl.cat %imm_hi_hi, %_imm_T_15 {name = "imm_hi"} : (!firrtl.uint<2>, !firrtl.uint<6>) -> !firrtl.uint<8>
      %_imm_T_17 = firrtl.cat %imm_hi, %imm_lo {name = "_imm_T_17"} : (!firrtl.uint<8>, !firrtl.uint<5>) -> !firrtl.uint<13>
      %imm_signBit_3 = firrtl.bits %_imm_T_17 12 to 12 {name = "imm_signBit_3"} : (!firrtl.uint<13>) -> !firrtl.uint<1>
      %_imm_T_18 = firrtl.mux(%imm_signBit_3, %c2251799813685247_ui51, %c0_ui51) {name = "_imm_T_18"} : (!firrtl.uint<1>, !firrtl.uint<51>, !firrtl.uint<51>) -> !firrtl.uint<51>
      %_imm_T_19 = firrtl.cat %_imm_T_18, %_imm_T_17 {name = "_imm_T_19"} : (!firrtl.uint<51>, !firrtl.uint<13>) -> !firrtl.uint<64>
      %_imm_T_20 = firrtl.bits %io_in_bits_instr 31 to 12 {name = "_imm_T_20"} : (!firrtl.uint<64>) -> !firrtl.uint<20>
      %_imm_T_21 = firrtl.cat %_imm_T_20, %c0_ui12 {name = "_imm_T_21"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %imm_signBit_4 = firrtl.bits %_imm_T_21 31 to 31 {name = "imm_signBit_4"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_imm_T_22 = firrtl.mux(%imm_signBit_4, %c4294967295_ui32, %c0_ui32) {name = "_imm_T_22"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_imm_T_23 = firrtl.cat %_imm_T_22, %_imm_T_21 {name = "_imm_T_23"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_imm_T_25 = firrtl.bits %io_in_bits_instr 19 to 12 {name = "_imm_T_25"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_imm_T_26 = firrtl.bits %io_in_bits_instr 20 to 20 {name = "_imm_T_26"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_imm_T_27 = firrtl.bits %io_in_bits_instr 30 to 21 {name = "_imm_T_27"} : (!firrtl.uint<64>) -> !firrtl.uint<10>
      %imm_lo_1 = firrtl.cat %_imm_T_27, %c0_ui1 {name = "imm_lo_1"} : (!firrtl.uint<10>, !firrtl.uint<1>) -> !firrtl.uint<11>
      %imm_hi_hi_1 = firrtl.cat %_imm_T_24, %_imm_T_25 {name = "imm_hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<8>) -> !firrtl.uint<9>
      %imm_hi_1 = firrtl.cat %imm_hi_hi_1, %_imm_T_26 {name = "imm_hi_1"} : (!firrtl.uint<9>, !firrtl.uint<1>) -> !firrtl.uint<10>
      %_imm_T_28 = firrtl.cat %imm_hi_1, %imm_lo_1 {name = "_imm_T_28"} : (!firrtl.uint<10>, !firrtl.uint<11>) -> !firrtl.uint<21>
      %imm_signBit_5 = firrtl.bits %_imm_T_28 20 to 20 {name = "imm_signBit_5"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      %_imm_T_29 = firrtl.mux(%imm_signBit_5, %c8796093022207_ui43, %c0_ui43) {name = "_imm_T_29"} : (!firrtl.uint<1>, !firrtl.uint<43>, !firrtl.uint<43>) -> !firrtl.uint<43>
      %_imm_T_30 = firrtl.cat %_imm_T_29, %_imm_T_28 {name = "_imm_T_30"} : (!firrtl.uint<43>, !firrtl.uint<21>) -> !firrtl.uint<64>
      %_imm_T_37 = firrtl.mux(%_imm_T_31, %_imm_T_2, %c0_ui64) {name = "_imm_T_37"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_38 = firrtl.mux(%_imm_T_32, %_imm_T_7, %c0_ui64) {name = "_imm_T_38"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_39 = firrtl.mux(%_imm_T_33, %_imm_T_12, %c0_ui64) {name = "_imm_T_39"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_40 = firrtl.mux(%_imm_T_34, %_imm_T_19, %c0_ui64) {name = "_imm_T_40"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_41 = firrtl.mux(%_imm_T_35, %_imm_T_23, %c0_ui64) {name = "_imm_T_41"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_42 = firrtl.mux(%_imm_T_36, %_imm_T_30, %c0_ui64) {name = "_imm_T_42"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_43 = firrtl.or %_imm_T_37, %_imm_T_38 {name = "_imm_T_43"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_44 = firrtl.or %_imm_T_43, %_imm_T_39 {name = "_imm_T_44"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_45 = firrtl.or %_imm_T_44, %_imm_T_40 {name = "_imm_T_45"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_46 = firrtl.or %_imm_T_45, %_imm_T_41 {name = "_imm_T_46"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_imm_T_47 = firrtl.or %_imm_T_46, %_imm_T_42 {name = "_imm_T_47"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %imm = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %imm, %_imm_T_47 : !firrtl.uint<64>
      %_immrvc_T = firrtl.bits %io_in_bits_instr 3 to 2 {name = "_immrvc_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %_immrvc_T_2 = firrtl.bits %io_in_bits_instr 6 to 4 {name = "_immrvc_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<3>
      %immrvc_lo = firrtl.cat %_immrvc_T_2, %c0_ui2 {name = "immrvc_lo"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<5>
      %immrvc_hi = firrtl.cat %_immrvc_T, %_immrvc_T_70 {name = "immrvc_hi"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_immrvc_T_3 = firrtl.cat %immrvc_hi, %immrvc_lo {name = "_immrvc_T_3"} : (!firrtl.uint<3>, !firrtl.uint<5>) -> !firrtl.uint<8>
      %_immrvc_T_4 = firrtl.cat %c0_ui56, %_immrvc_T_3 {name = "_immrvc_T_4"} : (!firrtl.uint<56>, !firrtl.uint<8>) -> !firrtl.uint<64>
      %_immrvc_T_48 = firrtl.bits %io_in_bits_instr 6 to 5 {name = "_immrvc_T_48"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %immrvc_lo_1 = firrtl.cat %_immrvc_T_48, %c0_ui3 {name = "immrvc_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<3>) -> !firrtl.uint<5>
      %immrvc_hi_1 = firrtl.cat %_immrvc_T_5, %_immrvc_T_70 {name = "immrvc_hi_1"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_immrvc_T_8 = firrtl.cat %immrvc_hi_1, %immrvc_lo_1 {name = "_immrvc_T_8"} : (!firrtl.uint<4>, !firrtl.uint<5>) -> !firrtl.uint<9>
      %_immrvc_T_9 = firrtl.cat %c0_ui55, %_immrvc_T_8 {name = "_immrvc_T_9"} : (!firrtl.uint<55>, !firrtl.uint<9>) -> !firrtl.uint<64>
      %_immrvc_T_10 = firrtl.bits %io_in_bits_instr 8 to 7 {name = "_immrvc_T_10"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %_immrvc_T_11 = firrtl.bits %io_in_bits_instr 12 to 9 {name = "_immrvc_T_11"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %immrvc_hi_2 = firrtl.cat %_immrvc_T_10, %_immrvc_T_11 {name = "immrvc_hi_2"} : (!firrtl.uint<2>, !firrtl.uint<4>) -> !firrtl.uint<6>
      %_immrvc_T_12 = firrtl.cat %immrvc_hi_2, %c0_ui2 {name = "_immrvc_T_12"} : (!firrtl.uint<6>, !firrtl.uint<2>) -> !firrtl.uint<8>
      %_immrvc_T_13 = firrtl.cat %c0_ui56, %_immrvc_T_12 {name = "_immrvc_T_13"} : (!firrtl.uint<56>, !firrtl.uint<8>) -> !firrtl.uint<64>
      %_immrvc_T_33 = firrtl.bits %io_in_bits_instr 12 to 10 {name = "_immrvc_T_33"} : (!firrtl.uint<64>) -> !firrtl.uint<3>
      %immrvc_hi_3 = firrtl.cat %_immrvc_T_14, %_immrvc_T_33 {name = "immrvc_hi_3"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<6>
      %_immrvc_T_16 = firrtl.cat %immrvc_hi_3, %c0_ui3 {name = "_immrvc_T_16"} : (!firrtl.uint<6>, !firrtl.uint<3>) -> !firrtl.uint<9>
      %_immrvc_T_17 = firrtl.cat %c0_ui55, %_immrvc_T_16 {name = "_immrvc_T_17"} : (!firrtl.uint<55>, !firrtl.uint<9>) -> !firrtl.uint<64>
      %_immrvc_T_80 = firrtl.bits %io_in_bits_instr 5 to 5 {name = "_immrvc_T_80"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_immrvc_T_81 = firrtl.bits %io_in_bits_instr 6 to 6 {name = "_immrvc_T_81"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %immrvc_lo_2 = firrtl.cat %_immrvc_T_81, %c0_ui2 {name = "immrvc_lo_2"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %immrvc_hi_4 = firrtl.cat %_immrvc_T_80, %_immrvc_T_33 {name = "immrvc_hi_4"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_immrvc_T_21 = firrtl.cat %immrvc_hi_4, %immrvc_lo_2 {name = "_immrvc_T_21"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<7>
      %_immrvc_T_22 = firrtl.cat %c0_ui57, %_immrvc_T_21 {name = "_immrvc_T_22"} : (!firrtl.uint<57>, !firrtl.uint<7>) -> !firrtl.uint<64>
      %immrvc_hi_5 = firrtl.cat %_immrvc_T_48, %_immrvc_T_33 {name = "immrvc_hi_5"} : (!firrtl.uint<2>, !firrtl.uint<3>) -> !firrtl.uint<5>
      %_immrvc_T_25 = firrtl.cat %immrvc_hi_5, %c0_ui3 {name = "_immrvc_T_25"} : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<8>
      %_immrvc_T_26 = firrtl.cat %c0_ui56, %_immrvc_T_25 {name = "_immrvc_T_26"} : (!firrtl.uint<56>, !firrtl.uint<8>) -> !firrtl.uint<64>
      %immrvc_lo_3 = firrtl.cat %_immrvc_T_81, %c0_ui2 {name = "immrvc_lo_3"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %immrvc_hi_6 = firrtl.cat %_immrvc_T_80, %_immrvc_T_33 {name = "immrvc_hi_6"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_immrvc_T_30 = firrtl.cat %immrvc_hi_6, %immrvc_lo_3 {name = "_immrvc_T_30"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<7>
      %_immrvc_T_31 = firrtl.cat %c0_ui57, %_immrvc_T_30 {name = "_immrvc_T_31"} : (!firrtl.uint<57>, !firrtl.uint<7>) -> !firrtl.uint<64>
      %immrvc_hi_7 = firrtl.cat %_immrvc_T_48, %_immrvc_T_33 {name = "immrvc_hi_7"} : (!firrtl.uint<2>, !firrtl.uint<3>) -> !firrtl.uint<5>
      %_immrvc_T_34 = firrtl.cat %immrvc_hi_7, %c0_ui3 {name = "_immrvc_T_34"} : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<8>
      %_immrvc_T_35 = firrtl.cat %c0_ui56, %_immrvc_T_34 {name = "_immrvc_T_35"} : (!firrtl.uint<56>, !firrtl.uint<8>) -> !firrtl.uint<64>
      %_immrvc_T_37 = firrtl.bits %io_in_bits_instr 8 to 8 {name = "_immrvc_T_37"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_immrvc_T_38 = firrtl.bits %io_in_bits_instr 10 to 9 {name = "_immrvc_T_38"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %_immrvc_T_73 = firrtl.bits %io_in_bits_instr 2 to 2 {name = "_immrvc_T_73"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_immrvc_T_42 = firrtl.bits %io_in_bits_instr 11 to 11 {name = "_immrvc_T_42"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_immrvc_T_43 = firrtl.bits %io_in_bits_instr 5 to 3 {name = "_immrvc_T_43"} : (!firrtl.uint<64>) -> !firrtl.uint<3>
      %immrvc_lo_lo = firrtl.cat %_immrvc_T_43, %c0_ui1 {name = "immrvc_lo_lo"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %immrvc_lo_hi = firrtl.cat %_immrvc_T_73, %_immrvc_T_42 {name = "immrvc_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %immrvc_lo_4 = firrtl.cat %immrvc_lo_hi, %immrvc_lo_lo {name = "immrvc_lo_4"} : (!firrtl.uint<2>, !firrtl.uint<4>) -> !firrtl.uint<6>
      %immrvc_hi_lo = firrtl.cat %_immrvc_T_81, %_immrvc_T_40 {name = "immrvc_hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %immrvc_hi_hi_hi = firrtl.cat %_immrvc_T_70, %_immrvc_T_37 {name = "immrvc_hi_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %immrvc_hi_hi = firrtl.cat %immrvc_hi_hi_hi, %_immrvc_T_38 {name = "immrvc_hi_hi"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %immrvc_hi_8 = firrtl.cat %immrvc_hi_hi, %immrvc_hi_lo {name = "immrvc_hi_8"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<6>
      %_immrvc_T_44 = firrtl.cat %immrvc_hi_8, %immrvc_lo_4 {name = "_immrvc_T_44"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<12>
      %immrvc_signBit = firrtl.bits %_immrvc_T_44 11 to 11 {name = "immrvc_signBit"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %_immrvc_T_45 = firrtl.mux(%immrvc_signBit, %c4503599627370495_ui52, %c0_ui52) {name = "_immrvc_T_45"} : (!firrtl.uint<1>, !firrtl.uint<52>, !firrtl.uint<52>) -> !firrtl.uint<52>
      %_immrvc_T_46 = firrtl.cat %_immrvc_T_45, %_immrvc_T_44 {name = "_immrvc_T_46"} : (!firrtl.uint<52>, !firrtl.uint<12>) -> !firrtl.uint<64>
      %_immrvc_T_50 = firrtl.bits %io_in_bits_instr 11 to 10 {name = "_immrvc_T_50"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %_immrvc_T_71 = firrtl.bits %io_in_bits_instr 4 to 3 {name = "_immrvc_T_71"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %immrvc_lo_hi_1 = firrtl.cat %_immrvc_T_50, %_immrvc_T_71 {name = "immrvc_lo_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %immrvc_lo_5 = firrtl.cat %immrvc_lo_hi_1, %c0_ui1 {name = "immrvc_lo_5"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %immrvc_hi_hi_1 = firrtl.cat %_immrvc_T_70, %_immrvc_T_48 {name = "immrvc_hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %immrvc_hi_9 = firrtl.cat %immrvc_hi_hi_1, %_immrvc_T_73 {name = "immrvc_hi_9"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_immrvc_T_52 = firrtl.cat %immrvc_hi_9, %immrvc_lo_5 {name = "_immrvc_T_52"} : (!firrtl.uint<4>, !firrtl.uint<5>) -> !firrtl.uint<9>
      %immrvc_signBit_1 = firrtl.bits %_immrvc_T_52 8 to 8 {name = "immrvc_signBit_1"} : (!firrtl.uint<9>) -> !firrtl.uint<1>
      %_immrvc_T_53 = firrtl.mux(%immrvc_signBit_1, %c36028797018963967_ui55, %c0_ui55) {name = "_immrvc_T_53"} : (!firrtl.uint<1>, !firrtl.uint<55>, !firrtl.uint<55>) -> !firrtl.uint<55>
      %_immrvc_T_54 = firrtl.cat %_immrvc_T_53, %_immrvc_T_52 {name = "_immrvc_T_54"} : (!firrtl.uint<55>, !firrtl.uint<9>) -> !firrtl.uint<64>
      %_immrvc_T_57 = firrtl.cat %_immrvc_T_70, %rs2 {name = "_immrvc_T_57"} : (!firrtl.uint<1>, !firrtl.uint<5>) -> !firrtl.uint<6>
      %immrvc_signBit_2 = firrtl.bits %_immrvc_T_57 5 to 5 {name = "immrvc_signBit_2"} : (!firrtl.uint<6>) -> !firrtl.uint<1>
      %_immrvc_T_58 = firrtl.mux(%immrvc_signBit_2, %c288230376151711743_ui58, %c0_ui58) {name = "_immrvc_T_58"} : (!firrtl.uint<1>, !firrtl.uint<58>, !firrtl.uint<58>) -> !firrtl.uint<58>
      %_immrvc_T_59 = firrtl.cat %_immrvc_T_58, %_immrvc_T_57 {name = "_immrvc_T_59"} : (!firrtl.uint<58>, !firrtl.uint<6>) -> !firrtl.uint<64>
      %immrvc_hi_10 = firrtl.cat %_immrvc_T_70, %rs2 {name = "immrvc_hi_10"} : (!firrtl.uint<1>, !firrtl.uint<5>) -> !firrtl.uint<6>
      %_immrvc_T_62 = firrtl.cat %immrvc_hi_10, %c0_ui12 {name = "_immrvc_T_62"} : (!firrtl.uint<6>, !firrtl.uint<12>) -> !firrtl.uint<18>
      %immrvc_signBit_3 = firrtl.bits %_immrvc_T_62 17 to 17 {name = "immrvc_signBit_3"} : (!firrtl.uint<18>) -> !firrtl.uint<1>
      %_immrvc_T_63 = firrtl.mux(%immrvc_signBit_3, %c70368744177663_ui46, %c0_ui46) {name = "_immrvc_T_63"} : (!firrtl.uint<1>, !firrtl.uint<46>, !firrtl.uint<46>) -> !firrtl.uint<46>
      %_immrvc_T_64 = firrtl.cat %_immrvc_T_63, %_immrvc_T_62 {name = "_immrvc_T_64"} : (!firrtl.uint<46>, !firrtl.uint<18>) -> !firrtl.uint<64>
      %_immrvc_T_67 = firrtl.cat %_immrvc_T_70, %rs2 {name = "_immrvc_T_67"} : (!firrtl.uint<1>, !firrtl.uint<5>) -> !firrtl.uint<6>
      %immrvc_signBit_4 = firrtl.bits %_immrvc_T_67 5 to 5 {name = "immrvc_signBit_4"} : (!firrtl.uint<6>) -> !firrtl.uint<1>
      %_immrvc_T_68 = firrtl.mux(%immrvc_signBit_4, %c288230376151711743_ui58, %c0_ui58) {name = "_immrvc_T_68"} : (!firrtl.uint<1>, !firrtl.uint<58>, !firrtl.uint<58>) -> !firrtl.uint<58>
      %_immrvc_T_69 = firrtl.cat %_immrvc_T_68, %_immrvc_T_67 {name = "_immrvc_T_69"} : (!firrtl.uint<58>, !firrtl.uint<6>) -> !firrtl.uint<64>
      %immrvc_lo_hi_2 = firrtl.cat %_immrvc_T_73, %_immrvc_T_81 {name = "immrvc_lo_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %immrvc_lo_6 = firrtl.cat %immrvc_lo_hi_2, %c0_ui4 {name = "immrvc_lo_6"} : (!firrtl.uint<2>, !firrtl.uint<4>) -> !firrtl.uint<6>
      %immrvc_hi_hi_2 = firrtl.cat %_immrvc_T_70, %_immrvc_T_71 {name = "immrvc_hi_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %immrvc_hi_11 = firrtl.cat %immrvc_hi_hi_2, %_immrvc_T_80 {name = "immrvc_hi_11"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_immrvc_T_75 = firrtl.cat %immrvc_hi_11, %immrvc_lo_6 {name = "_immrvc_T_75"} : (!firrtl.uint<4>, !firrtl.uint<6>) -> !firrtl.uint<10>
      %immrvc_signBit_5 = firrtl.bits %_immrvc_T_75 9 to 9 {name = "immrvc_signBit_5"} : (!firrtl.uint<10>) -> !firrtl.uint<1>
      %_immrvc_T_76 = firrtl.mux(%immrvc_signBit_5, %c18014398509481983_ui54, %c0_ui54) {name = "_immrvc_T_76"} : (!firrtl.uint<1>, !firrtl.uint<54>, !firrtl.uint<54>) -> !firrtl.uint<54>
      %_immrvc_T_77 = firrtl.cat %_immrvc_T_76, %_immrvc_T_75 {name = "_immrvc_T_77"} : (!firrtl.uint<54>, !firrtl.uint<10>) -> !firrtl.uint<64>
      %_immrvc_T_78 = firrtl.bits %io_in_bits_instr 10 to 7 {name = "_immrvc_T_78"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %_immrvc_T_79 = firrtl.bits %io_in_bits_instr 12 to 11 {name = "_immrvc_T_79"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %immrvc_lo_7 = firrtl.cat %_immrvc_T_81, %c0_ui2 {name = "immrvc_lo_7"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %immrvc_hi_hi_3 = firrtl.cat %_immrvc_T_78, %_immrvc_T_79 {name = "immrvc_hi_hi_3"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<6>
      %immrvc_hi_12 = firrtl.cat %immrvc_hi_hi_3, %_immrvc_T_80 {name = "immrvc_hi_12"} : (!firrtl.uint<6>, !firrtl.uint<1>) -> !firrtl.uint<7>
      %_immrvc_T_82 = firrtl.cat %immrvc_hi_12, %immrvc_lo_7 {name = "_immrvc_T_82"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      %_immrvc_T_83 = firrtl.cat %c0_ui54, %_immrvc_T_82 {name = "_immrvc_T_83"} : (!firrtl.uint<54>, !firrtl.uint<10>) -> !firrtl.uint<64>
      %440 = firrtl.orr %rvcImmType : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %_immrvc_T_85 = firrtl.not %440 {name = "_immrvc_T_85"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_immrvc_T_86 = firrtl.eq %rvcImmType, %c1_ui1 {name = "_immrvc_T_86"} : (!firrtl.uint<5>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_immrvc_T_87 = firrtl.eq %rvcImmType, %c2_ui2 {name = "_immrvc_T_87"} : (!firrtl.uint<5>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_immrvc_T_88 = firrtl.eq %rvcImmType, %c3_ui2 {name = "_immrvc_T_88"} : (!firrtl.uint<5>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_immrvc_T_89 = firrtl.eq %rvcImmType, %c4_ui3 {name = "_immrvc_T_89"} : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_immrvc_T_90 = firrtl.eq %rvcImmType, %c5_ui3 {name = "_immrvc_T_90"} : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_immrvc_T_91 = firrtl.eq %rvcImmType, %c6_ui3 {name = "_immrvc_T_91"} : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_immrvc_T_92 = firrtl.eq %rvcImmType, %c7_ui3 {name = "_immrvc_T_92"} : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_immrvc_T_93 = firrtl.eq %rvcImmType, %c8_ui4 {name = "_immrvc_T_93"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_94 = firrtl.eq %rvcImmType, %c9_ui4 {name = "_immrvc_T_94"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_95 = firrtl.eq %rvcImmType, %c10_ui4 {name = "_immrvc_T_95"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_96 = firrtl.eq %rvcImmType, %c11_ui4 {name = "_immrvc_T_96"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_97 = firrtl.eq %rvcImmType, %c12_ui4 {name = "_immrvc_T_97"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_98 = firrtl.eq %rvcImmType, %c13_ui4 {name = "_immrvc_T_98"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_99 = firrtl.eq %rvcImmType, %c14_ui4 {name = "_immrvc_T_99"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_100 = firrtl.eq %rvcImmType, %c15_ui4 {name = "_immrvc_T_100"} : (!firrtl.uint<5>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_immrvc_T_118 = firrtl.mux(%_immrvc_T_85, %_immrvc_T_4, %c0_ui64) {name = "_immrvc_T_118"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_103 = firrtl.mux(%_immrvc_T_86, %_immrvc_T_9, %c0_ui64) {name = "_immrvc_T_103"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_104 = firrtl.mux(%_immrvc_T_87, %_immrvc_T_13, %c0_ui64) {name = "_immrvc_T_104"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_105 = firrtl.mux(%_immrvc_T_88, %_immrvc_T_17, %c0_ui64) {name = "_immrvc_T_105"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_106 = firrtl.mux(%_immrvc_T_89, %_immrvc_T_22, %c0_ui64) {name = "_immrvc_T_106"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_107 = firrtl.mux(%_immrvc_T_90, %_immrvc_T_26, %c0_ui64) {name = "_immrvc_T_107"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_108 = firrtl.mux(%_immrvc_T_91, %_immrvc_T_31, %c0_ui64) {name = "_immrvc_T_108"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_109 = firrtl.mux(%_immrvc_T_92, %_immrvc_T_35, %c0_ui64) {name = "_immrvc_T_109"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_110 = firrtl.mux(%_immrvc_T_93, %_immrvc_T_46, %c0_ui64) {name = "_immrvc_T_110"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_111 = firrtl.mux(%_immrvc_T_94, %_immrvc_T_54, %c0_ui64) {name = "_immrvc_T_111"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_112 = firrtl.mux(%_immrvc_T_95, %_immrvc_T_59, %c0_ui64) {name = "_immrvc_T_112"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_113 = firrtl.mux(%_immrvc_T_96, %_immrvc_T_64, %c0_ui64) {name = "_immrvc_T_113"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_114 = firrtl.mux(%_immrvc_T_97, %_immrvc_T_69, %c0_ui64) {name = "_immrvc_T_114"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_115 = firrtl.mux(%_immrvc_T_98, %_immrvc_T_77, %c0_ui64) {name = "_immrvc_T_115"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_116 = firrtl.mux(%_immrvc_T_99, %_immrvc_T_83, %c0_ui64) {name = "_immrvc_T_116"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_117 = firrtl.mux(%_immrvc_T_100, %c1_ui64, %c0_ui64) {name = "_immrvc_T_117"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_119 = firrtl.or %_immrvc_T_118, %_immrvc_T_103 {name = "_immrvc_T_119"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_120 = firrtl.or %_immrvc_T_119, %_immrvc_T_104 {name = "_immrvc_T_120"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_121 = firrtl.or %_immrvc_T_120, %_immrvc_T_105 {name = "_immrvc_T_121"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_122 = firrtl.or %_immrvc_T_121, %_immrvc_T_106 {name = "_immrvc_T_122"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_123 = firrtl.or %_immrvc_T_122, %_immrvc_T_107 {name = "_immrvc_T_123"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_124 = firrtl.or %_immrvc_T_123, %_immrvc_T_108 {name = "_immrvc_T_124"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_125 = firrtl.or %_immrvc_T_124, %_immrvc_T_109 {name = "_immrvc_T_125"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_126 = firrtl.or %_immrvc_T_125, %_immrvc_T_110 {name = "_immrvc_T_126"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_127 = firrtl.or %_immrvc_T_126, %_immrvc_T_111 {name = "_immrvc_T_127"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_128 = firrtl.or %_immrvc_T_127, %_immrvc_T_112 {name = "_immrvc_T_128"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_129 = firrtl.or %_immrvc_T_128, %_immrvc_T_113 {name = "_immrvc_T_129"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_130 = firrtl.or %_immrvc_T_129, %_immrvc_T_114 {name = "_immrvc_T_130"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_131 = firrtl.or %_immrvc_T_130, %_immrvc_T_115 {name = "_immrvc_T_131"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_132 = firrtl.or %_immrvc_T_131, %_immrvc_T_116 {name = "_immrvc_T_132"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_immrvc_T_133 = firrtl.or %_immrvc_T_132, %_immrvc_T_117 {name = "_immrvc_T_133"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %immrvc = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %immrvc, %_immrvc_T_133 : !firrtl.uint<64>
      %_io_out_bits_data_imm_T = firrtl.mux(%isRVC, %immrvc, %imm) {name = "_io_out_bits_data_imm_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_data_imm_24, %_io_out_bits_data_imm_T : !firrtl.uint<64>
      %441 = firrtl.orr %fuType : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_isBranch_T_10 = firrtl.not %441 {name = "_io_isBranch_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %442 = firrtl.eq %rfDest, %c1_ui1 : (!firrtl.uint<5>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %443 = firrtl.eq %rfDest, %c5_ui3 : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %444 = firrtl.or %442, %443 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %445 = firrtl.eq %fuOpType, %c88_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %446 = firrtl.and %444, %445 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %447 = firrtl.mux(%446, %c92_ui7, %fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %448 = firrtl.eq %fuOpType, %c90_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %449 = firrtl.eq %rfSrc1, %c1_ui1 : (!firrtl.uint<5>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %450 = firrtl.eq %rfSrc1, %c5_ui3 : (!firrtl.uint<5>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %451 = firrtl.or %449, %450 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %452 = firrtl.mux(%451, %c94_ui7, %447) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %453 = firrtl.or %442, %443 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %454 = firrtl.mux(%453, %c92_ui7, %452) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %455 = firrtl.mux(%448, %454, %447) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %456 = firrtl.mux(%_io_isBranch_T_10, %455, %fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %io_out_bits_ctrl_fuOpType_18, %456 : !firrtl.uint<7>
      %_io_out_bits_ctrl_src1Type_T = firrtl.bits %io_in_bits_instr 6 to 0 {name = "_io_out_bits_ctrl_src1Type_T"} : (!firrtl.uint<64>) -> !firrtl.uint<7>
      %_io_out_bits_ctrl_src1Type_T_1 = firrtl.eq %_io_out_bits_ctrl_src1Type_T, %c55_ui6 {name = "_io_out_bits_ctrl_src1Type_T_1"} : (!firrtl.uint<7>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_io_out_bits_ctrl_src1Type_T_2 = firrtl.mux(%_io_out_bits_ctrl_src1Type_T_1, %c0_ui1, %src1Type) {name = "_io_out_bits_ctrl_src1Type_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_src1Type_15, %_io_out_bits_ctrl_src1Type_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_src2Type_16, %src2Type : !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_in_valid {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cf_exceptionVec_2_T_1 = firrtl.not %hasIntr {name = "_io_out_bits_cf_exceptionVec_2_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %_io_in_ready_T_1, %_io_out_bits_cf_exceptionVec_2_T_1 {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_3 {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_4 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %457 = firrtl.and %_io_in_ready_T_1, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %458 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %459 = firrtl.and %457, %458 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %459, "[%d] Decoder: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %460 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %461 = firrtl.and %457, %460 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %461, "issue: pc %x npc %x instr %x\0A" {name = "printf_1"} (%io_in_bits_pc, %io_in_bits_pnpc, %io_in_bits_instr) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>, !firrtl.uint<64>
      %462 = firrtl.bits %intrVec__bore 0 to 0 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %463 = firrtl.bits %intrVec__bore 1 to 1 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %464 = firrtl.bits %intrVec__bore 2 to 2 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %465 = firrtl.bits %intrVec__bore 3 to 3 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %466 = firrtl.bits %intrVec__bore 4 to 4 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %467 = firrtl.bits %intrVec__bore 5 to 5 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %468 = firrtl.bits %intrVec__bore 6 to 6 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %469 = firrtl.bits %intrVec__bore 7 to 7 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %470 = firrtl.bits %intrVec__bore 8 to 8 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %471 = firrtl.bits %intrVec__bore 9 to 9 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %472 = firrtl.bits %intrVec__bore 10 to 10 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %473 = firrtl.bits %intrVec__bore 11 to 11 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_0_3, %462 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_1_4, %463 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_2_5, %464 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_3_6, %465 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_4_7, %466 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_5_8, %467 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_6_9, %468 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_7_10, %469 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_8_11, %470 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_9_12, %471 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_10_13, %472 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_11_14, %473 : !firrtl.uint<1>
      %_hasIntr_T = firrtl.orr %intrVec__bore {name = "_hasIntr_T"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %hasIntr, %_hasIntr_T : !firrtl.uint<1>
      %474 = firrtl.orr %instrType : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_cf_exceptionVec_2_T = firrtl.not %474 {name = "_io_out_bits_cf_exceptionVec_2_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cf_exceptionVec_2_T_2 = firrtl.and %_io_out_bits_cf_exceptionVec_2_T, %_io_out_bits_cf_exceptionVec_2_T_1 {name = "_io_out_bits_cf_exceptionVec_2_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cf_exceptionVec_2_T_3 = firrtl.and %_io_out_bits_cf_exceptionVec_2_T_2, %io_in_valid {name = "_io_out_bits_cf_exceptionVec_2_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_2_2, %_io_out_bits_cf_exceptionVec_2_T_3 : !firrtl.uint<1>
      %_io_out_bits_cf_exceptionVec_1_T = firrtl.bits %io_in_bits_pc 38 to 32 {name = "_io_out_bits_cf_exceptionVec_1_T"} : (!firrtl.uint<39>) -> !firrtl.uint<7>
      %_io_out_bits_cf_exceptionVec_1_T_1 = firrtl.orr %_io_out_bits_cf_exceptionVec_1_T {name = "_io_out_bits_cf_exceptionVec_1_T_1"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_io_out_bits_cf_exceptionVec_1_T_2 = firrtl.not %vmEnable__bore {name = "_io_out_bits_cf_exceptionVec_1_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cf_exceptionVec_1_T_3 = firrtl.and %_io_out_bits_cf_exceptionVec_1_T_1, %_io_out_bits_cf_exceptionVec_1_T_2 {name = "_io_out_bits_cf_exceptionVec_1_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_1_1, %_io_out_bits_cf_exceptionVec_1_T_3 : !firrtl.uint<1>
      %_io_out_bits_ctrl_isNutCoreTrap_T_5 = firrtl.eq %_io_out_bits_ctrl_isNutCoreTrap_T_4, %c107_ui7 {name = "_io_out_bits_ctrl_isNutCoreTrap_T_5"} : (!firrtl.uint<64>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_io_out_bits_ctrl_isNutCoreTrap_T_6 = firrtl.and %_io_out_bits_ctrl_isNutCoreTrap_T_5, %io_in_valid {name = "_io_out_bits_ctrl_isNutCoreTrap_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_isNutCoreTrap_23, %_io_out_bits_ctrl_isNutCoreTrap_T_6 : !firrtl.uint<1>
      %_io_isWFI_T_1 = firrtl.eq %_io_isWFI_T, %c273678451_ui29 {name = "_io_isWFI_T_1"} : (!firrtl.uint<64>, !firrtl.uint<29>) -> !firrtl.uint<1>
      %_io_isWFI_T_2 = firrtl.and %_io_isWFI_T_1, %io_in_valid {name = "_io_isWFI_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_isWFI_25, %_io_isWFI_T_2 : !firrtl.uint<1>
    }
    firrtl.module private @Decoder_1(in %clock: !firrtl.clock, out %io_out_bits_cf_intrVec_0: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_1: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_2: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_3: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_4: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_5: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_6: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_7: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_8: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_9: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_10: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_11: !firrtl.uint<1>, in %intrVec__bore: !firrtl.uint<12>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui39 = firrtl.constant 0 : !firrtl.uint<39>
      %io_out_bits_cf_intrVec_0_0 = firrtl.wire {name = "io_out_bits_cf_intrVec_0"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_1_1 = firrtl.wire {name = "io_out_bits_cf_intrVec_1"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_2_2 = firrtl.wire {name = "io_out_bits_cf_intrVec_2"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_3_3 = firrtl.wire {name = "io_out_bits_cf_intrVec_3"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_4_4 = firrtl.wire {name = "io_out_bits_cf_intrVec_4"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_5_5 = firrtl.wire {name = "io_out_bits_cf_intrVec_5"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_6_6 = firrtl.wire {name = "io_out_bits_cf_intrVec_6"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_7_7 = firrtl.wire {name = "io_out_bits_cf_intrVec_7"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_8_8 = firrtl.wire {name = "io_out_bits_cf_intrVec_8"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_9_9 = firrtl.wire {name = "io_out_bits_cf_intrVec_9"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_10_10 = firrtl.wire {name = "io_out_bits_cf_intrVec_10"} : !firrtl.uint<1>
      %io_out_bits_cf_intrVec_11_11 = firrtl.wire {name = "io_out_bits_cf_intrVec_11"} : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_0, %io_out_bits_cf_intrVec_0_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_1, %io_out_bits_cf_intrVec_1_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_2, %io_out_bits_cf_intrVec_2_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_3, %io_out_bits_cf_intrVec_3_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_4, %io_out_bits_cf_intrVec_4_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_5, %io_out_bits_cf_intrVec_5_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_6, %io_out_bits_cf_intrVec_6_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_7, %io_out_bits_cf_intrVec_7_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_8, %io_out_bits_cf_intrVec_8_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_9, %io_out_bits_cf_intrVec_9_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_10, %io_out_bits_cf_intrVec_10_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_11, %io_out_bits_cf_intrVec_11_11 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      firrtl.printf %clock, %c0_ui1, "[%d] Decoder_1: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      firrtl.printf %clock, %c0_ui1, "issue: pc %x npc %x instr %x\0A" {name = "printf_1"} (%c0_ui39, %c0_ui39, %c0_ui64) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>, !firrtl.uint<64>
      %0 = firrtl.bits %intrVec__bore 0 to 0 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %1 = firrtl.bits %intrVec__bore 1 to 1 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %2 = firrtl.bits %intrVec__bore 2 to 2 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %3 = firrtl.bits %intrVec__bore 3 to 3 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %4 = firrtl.bits %intrVec__bore 4 to 4 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %5 = firrtl.bits %intrVec__bore 5 to 5 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %6 = firrtl.bits %intrVec__bore 6 to 6 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %7 = firrtl.bits %intrVec__bore 7 to 7 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %8 = firrtl.bits %intrVec__bore 8 to 8 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %9 = firrtl.bits %intrVec__bore 9 to 9 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %10 = firrtl.bits %intrVec__bore 10 to 10 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %11 = firrtl.bits %intrVec__bore 11 to 11 : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_0_0, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_1_1, %1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_2_2, %2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_3_3, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_4_4, %4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_5_5, %5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_6_6, %6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_7_7, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_8_8, %8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_9_9, %9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_10_10, %10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_11_11, %11 : !firrtl.uint<1>
    }
    firrtl.module private @IDU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_instr: !firrtl.uint<64>, in %io_in_0_bits_pc: !firrtl.uint<39>, in %io_in_0_bits_pnpc: !firrtl.uint<39>, in %io_in_0_bits_exceptionVec_12: !firrtl.uint<1>, in %io_in_0_bits_brIdx: !firrtl.uint<4>, in %io_in_0_bits_crossPageIPFFix: !firrtl.uint<1>, in %io_out_0_ready: !firrtl.uint<1>, out %io_out_0_valid: !firrtl.uint<1>, out %io_out_0_bits_cf_instr: !firrtl.uint<64>, out %io_out_0_bits_cf_pc: !firrtl.uint<39>, out %io_out_0_bits_cf_pnpc: !firrtl.uint<39>, out %io_out_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, out %io_out_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, out %io_out_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_0: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_1: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_2: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_3: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_4: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_5: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_6: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_7: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_8: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_9: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_10: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_11: !firrtl.uint<1>, out %io_out_0_bits_cf_brIdx: !firrtl.uint<4>, out %io_out_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out %io_out_0_bits_ctrl_src1Type: !firrtl.uint<1>, out %io_out_0_bits_ctrl_src2Type: !firrtl.uint<1>, out %io_out_0_bits_ctrl_fuType: !firrtl.uint<3>, out %io_out_0_bits_ctrl_fuOpType: !firrtl.uint<7>, out %io_out_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, out %io_out_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, out %io_out_0_bits_ctrl_rfWen: !firrtl.uint<1>, out %io_out_0_bits_ctrl_rfDest: !firrtl.uint<5>, out %io_out_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out %io_out_0_bits_data_imm: !firrtl.uint<64>, out %io_out_1_bits_cf_intrVec_0: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_1: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_2: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_3: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_4: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_5: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_6: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_7: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_8: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_9: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_10: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_11: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>, in %decoder1_vmEnable__bore: !firrtl.uint<1>, in %decoder1_intrVec__bore: !firrtl.uint<12>, in %decoder2_intrVec__bore: !firrtl.uint<12>) {
      %io_in_0_ready_0 = firrtl.wire {name = "io_in_0_ready"} : !firrtl.uint<1>
      %io_out_0_valid_1 = firrtl.wire {name = "io_out_0_valid"} : !firrtl.uint<1>
      %io_out_0_bits_cf_instr_2 = firrtl.wire {name = "io_out_0_bits_cf_instr"} : !firrtl.uint<64>
      %io_out_0_bits_cf_pc_3 = firrtl.wire {name = "io_out_0_bits_cf_pc"} : !firrtl.uint<39>
      %io_out_0_bits_cf_pnpc_4 = firrtl.wire {name = "io_out_0_bits_cf_pnpc"} : !firrtl.uint<39>
      %io_out_0_bits_cf_exceptionVec_1_5 = firrtl.wire {name = "io_out_0_bits_cf_exceptionVec_1"} : !firrtl.uint<1>
      %io_out_0_bits_cf_exceptionVec_2_6 = firrtl.wire {name = "io_out_0_bits_cf_exceptionVec_2"} : !firrtl.uint<1>
      %io_out_0_bits_cf_exceptionVec_12_7 = firrtl.wire {name = "io_out_0_bits_cf_exceptionVec_12"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_0_8 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_0"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_1_9 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_1"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_2_10 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_2"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_3_11 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_3"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_4_12 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_4"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_5_13 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_5"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_6_14 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_6"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_7_15 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_7"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_8_16 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_8"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_9_17 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_9"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_10_18 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_10"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_11_19 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_11"} : !firrtl.uint<1>
      %io_out_0_bits_cf_brIdx_20 = firrtl.wire {name = "io_out_0_bits_cf_brIdx"} : !firrtl.uint<4>
      %io_out_0_bits_cf_crossPageIPFFix_21 = firrtl.wire {name = "io_out_0_bits_cf_crossPageIPFFix"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_src1Type_22 = firrtl.wire {name = "io_out_0_bits_ctrl_src1Type"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_src2Type_23 = firrtl.wire {name = "io_out_0_bits_ctrl_src2Type"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_fuType_24 = firrtl.wire {name = "io_out_0_bits_ctrl_fuType"} : !firrtl.uint<3>
      %io_out_0_bits_ctrl_fuOpType_25 = firrtl.wire {name = "io_out_0_bits_ctrl_fuOpType"} : !firrtl.uint<7>
      %io_out_0_bits_ctrl_rfSrc1_26 = firrtl.wire {name = "io_out_0_bits_ctrl_rfSrc1"} : !firrtl.uint<5>
      %io_out_0_bits_ctrl_rfSrc2_27 = firrtl.wire {name = "io_out_0_bits_ctrl_rfSrc2"} : !firrtl.uint<5>
      %io_out_0_bits_ctrl_rfWen_28 = firrtl.wire {name = "io_out_0_bits_ctrl_rfWen"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_rfDest_29 = firrtl.wire {name = "io_out_0_bits_ctrl_rfDest"} : !firrtl.uint<5>
      %io_out_0_bits_ctrl_isNutCoreTrap_30 = firrtl.wire {name = "io_out_0_bits_ctrl_isNutCoreTrap"} : !firrtl.uint<1>
      %io_out_0_bits_data_imm_31 = firrtl.wire {name = "io_out_0_bits_data_imm"} : !firrtl.uint<64>
      %io_out_1_bits_cf_intrVec_0_32 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_0"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_1_33 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_1"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_2_34 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_2"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_3_35 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_3"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_4_36 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_4"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_5_37 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_5"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_6_38 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_6"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_7_39 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_7"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_8_40 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_8"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_9_41 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_9"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_10_42 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_10"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_11_43 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_11"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_ready, %io_in_0_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_valid, %io_out_0_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_instr, %io_out_0_bits_cf_instr_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_bits_cf_pc, %io_out_0_bits_cf_pc_3 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_pnpc, %io_out_0_bits_cf_pnpc_4 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_1, %io_out_0_bits_cf_exceptionVec_1_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_2, %io_out_0_bits_cf_exceptionVec_2_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_12, %io_out_0_bits_cf_exceptionVec_12_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_0, %io_out_0_bits_cf_intrVec_0_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_1, %io_out_0_bits_cf_intrVec_1_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_2, %io_out_0_bits_cf_intrVec_2_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_3, %io_out_0_bits_cf_intrVec_3_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_4, %io_out_0_bits_cf_intrVec_4_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_5, %io_out_0_bits_cf_intrVec_5_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_6, %io_out_0_bits_cf_intrVec_6_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_7, %io_out_0_bits_cf_intrVec_7_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_8, %io_out_0_bits_cf_intrVec_8_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_9, %io_out_0_bits_cf_intrVec_9_17 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_10, %io_out_0_bits_cf_intrVec_10_18 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_11, %io_out_0_bits_cf_intrVec_11_19 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_brIdx, %io_out_0_bits_cf_brIdx_20 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_0_bits_cf_crossPageIPFFix, %io_out_0_bits_cf_crossPageIPFFix_21 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src1Type, %io_out_0_bits_ctrl_src1Type_22 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src2Type, %io_out_0_bits_ctrl_src2Type_23 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuType, %io_out_0_bits_ctrl_fuType_24 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuOpType, %io_out_0_bits_ctrl_fuOpType_25 : !firrtl.uint<7>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc1, %io_out_0_bits_ctrl_rfSrc1_26 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc2, %io_out_0_bits_ctrl_rfSrc2_27 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfWen, %io_out_0_bits_ctrl_rfWen_28 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfDest, %io_out_0_bits_ctrl_rfDest_29 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_isNutCoreTrap, %io_out_0_bits_ctrl_isNutCoreTrap_30 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_data_imm, %io_out_0_bits_data_imm_31 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_0, %io_out_1_bits_cf_intrVec_0_32 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_1, %io_out_1_bits_cf_intrVec_1_33 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_2, %io_out_1_bits_cf_intrVec_2_34 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_3, %io_out_1_bits_cf_intrVec_3_35 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_4, %io_out_1_bits_cf_intrVec_4_36 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_5, %io_out_1_bits_cf_intrVec_5_37 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_6, %io_out_1_bits_cf_intrVec_6_38 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_7, %io_out_1_bits_cf_intrVec_7_39 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_8, %io_out_1_bits_cf_intrVec_8_40 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_9, %io_out_1_bits_cf_intrVec_9_41 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_10, %io_out_1_bits_cf_intrVec_10_42 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_11, %io_out_1_bits_cf_intrVec_11_43 : !firrtl.uint<1>
      %decoder1_clock, %decoder1_reset, %decoder1_io_in_ready, %decoder1_io_in_valid, %decoder1_io_in_bits_instr, %decoder1_io_in_bits_pc, %decoder1_io_in_bits_pnpc, %decoder1_io_in_bits_exceptionVec_12, %decoder1_io_in_bits_brIdx, %decoder1_io_in_bits_crossPageIPFFix, %decoder1_io_out_ready, %decoder1_io_out_valid, %decoder1_io_out_bits_cf_instr, %decoder1_io_out_bits_cf_pc, %decoder1_io_out_bits_cf_pnpc, %decoder1_io_out_bits_cf_exceptionVec_1, %decoder1_io_out_bits_cf_exceptionVec_2, %decoder1_io_out_bits_cf_exceptionVec_12, %decoder1_io_out_bits_cf_intrVec_0, %decoder1_io_out_bits_cf_intrVec_1, %decoder1_io_out_bits_cf_intrVec_2, %decoder1_io_out_bits_cf_intrVec_3, %decoder1_io_out_bits_cf_intrVec_4, %decoder1_io_out_bits_cf_intrVec_5, %decoder1_io_out_bits_cf_intrVec_6, %decoder1_io_out_bits_cf_intrVec_7, %decoder1_io_out_bits_cf_intrVec_8, %decoder1_io_out_bits_cf_intrVec_9, %decoder1_io_out_bits_cf_intrVec_10, %decoder1_io_out_bits_cf_intrVec_11, %decoder1_io_out_bits_cf_brIdx, %decoder1_io_out_bits_cf_crossPageIPFFix, %decoder1_io_out_bits_ctrl_src1Type, %decoder1_io_out_bits_ctrl_src2Type, %decoder1_io_out_bits_ctrl_fuType, %decoder1_io_out_bits_ctrl_fuOpType, %decoder1_io_out_bits_ctrl_rfSrc1, %decoder1_io_out_bits_ctrl_rfSrc2, %decoder1_io_out_bits_ctrl_rfWen, %decoder1_io_out_bits_ctrl_rfDest, %decoder1_io_out_bits_ctrl_isNutCoreTrap, %decoder1_io_out_bits_data_imm, %decoder1_io_isWFI, %decoder1_vmEnable__bore_44, %decoder1_intrVec__bore_45 = firrtl.instance decoder1 @Decoder(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_instr: !firrtl.uint<64>, in io_in_bits_pc: !firrtl.uint<39>, in io_in_bits_pnpc: !firrtl.uint<39>, in io_in_bits_exceptionVec_12: !firrtl.uint<1>, in io_in_bits_brIdx: !firrtl.uint<4>, in io_in_bits_crossPageIPFFix: !firrtl.uint<1>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_cf_instr: !firrtl.uint<64>, out io_out_bits_cf_pc: !firrtl.uint<39>, out io_out_bits_cf_pnpc: !firrtl.uint<39>, out io_out_bits_cf_exceptionVec_1: !firrtl.uint<1>, out io_out_bits_cf_exceptionVec_2: !firrtl.uint<1>, out io_out_bits_cf_exceptionVec_12: !firrtl.uint<1>, out io_out_bits_cf_intrVec_0: !firrtl.uint<1>, out io_out_bits_cf_intrVec_1: !firrtl.uint<1>, out io_out_bits_cf_intrVec_2: !firrtl.uint<1>, out io_out_bits_cf_intrVec_3: !firrtl.uint<1>, out io_out_bits_cf_intrVec_4: !firrtl.uint<1>, out io_out_bits_cf_intrVec_5: !firrtl.uint<1>, out io_out_bits_cf_intrVec_6: !firrtl.uint<1>, out io_out_bits_cf_intrVec_7: !firrtl.uint<1>, out io_out_bits_cf_intrVec_8: !firrtl.uint<1>, out io_out_bits_cf_intrVec_9: !firrtl.uint<1>, out io_out_bits_cf_intrVec_10: !firrtl.uint<1>, out io_out_bits_cf_intrVec_11: !firrtl.uint<1>, out io_out_bits_cf_brIdx: !firrtl.uint<4>, out io_out_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out io_out_bits_ctrl_src1Type: !firrtl.uint<1>, out io_out_bits_ctrl_src2Type: !firrtl.uint<1>, out io_out_bits_ctrl_fuType: !firrtl.uint<3>, out io_out_bits_ctrl_fuOpType: !firrtl.uint<7>, out io_out_bits_ctrl_rfSrc1: !firrtl.uint<5>, out io_out_bits_ctrl_rfSrc2: !firrtl.uint<5>, out io_out_bits_ctrl_rfWen: !firrtl.uint<1>, out io_out_bits_ctrl_rfDest: !firrtl.uint<5>, out io_out_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out io_out_bits_data_imm: !firrtl.uint<64>, out io_isWFI: !firrtl.uint<1>, in vmEnable__bore: !firrtl.uint<1>, in intrVec__bore: !firrtl.uint<12>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<64>
      %3 = firrtl.wire : !firrtl.uint<39>
      %4 = firrtl.wire : !firrtl.uint<39>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<1>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<4>
      %21 = firrtl.wire : !firrtl.uint<1>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<1>
      %24 = firrtl.wire : !firrtl.uint<3>
      %25 = firrtl.wire : !firrtl.uint<7>
      %26 = firrtl.wire : !firrtl.uint<5>
      %27 = firrtl.wire : !firrtl.uint<5>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<5>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<64>
      %32 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %decoder1_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %decoder1_io_in_valid, %io_in_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %decoder1_io_in_bits_instr, %io_in_0_bits_instr : !firrtl.uint<64>
      firrtl.strictconnect %decoder1_io_in_bits_pc, %io_in_0_bits_pc : !firrtl.uint<39>
      firrtl.strictconnect %decoder1_io_in_bits_pnpc, %io_in_0_bits_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %decoder1_io_in_bits_exceptionVec_12, %io_in_0_bits_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %decoder1_io_in_bits_brIdx, %io_in_0_bits_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %decoder1_io_in_bits_crossPageIPFFix, %io_in_0_bits_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %decoder1_io_out_ready, %io_out_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %1, %decoder1_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %2, %decoder1_io_out_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %3, %decoder1_io_out_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %4, %decoder1_io_out_bits_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %5, %decoder1_io_out_bits_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %6, %decoder1_io_out_bits_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %7, %decoder1_io_out_bits_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %8, %decoder1_io_out_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %9, %decoder1_io_out_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %10, %decoder1_io_out_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %11, %decoder1_io_out_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %12, %decoder1_io_out_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %13, %decoder1_io_out_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %14, %decoder1_io_out_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %15, %decoder1_io_out_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %16, %decoder1_io_out_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %17, %decoder1_io_out_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %18, %decoder1_io_out_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %19, %decoder1_io_out_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %20, %decoder1_io_out_bits_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %21, %decoder1_io_out_bits_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %22, %decoder1_io_out_bits_ctrl_src1Type : !firrtl.uint<1>
      firrtl.strictconnect %23, %decoder1_io_out_bits_ctrl_src2Type : !firrtl.uint<1>
      firrtl.strictconnect %24, %decoder1_io_out_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %25, %decoder1_io_out_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %26, %decoder1_io_out_bits_ctrl_rfSrc1 : !firrtl.uint<5>
      firrtl.strictconnect %27, %decoder1_io_out_bits_ctrl_rfSrc2 : !firrtl.uint<5>
      firrtl.strictconnect %28, %decoder1_io_out_bits_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %29, %decoder1_io_out_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %30, %decoder1_io_out_bits_ctrl_isNutCoreTrap : !firrtl.uint<1>
      firrtl.strictconnect %31, %decoder1_io_out_bits_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %32, %decoder1_io_isWFI : !firrtl.uint<1>
      firrtl.strictconnect %decoder1_clock, %clock : !firrtl.clock
      firrtl.strictconnect %decoder1_reset, %reset : !firrtl.uint<1>
      %decoder2_clock, %decoder2_io_out_bits_cf_intrVec_0, %decoder2_io_out_bits_cf_intrVec_1, %decoder2_io_out_bits_cf_intrVec_2, %decoder2_io_out_bits_cf_intrVec_3, %decoder2_io_out_bits_cf_intrVec_4, %decoder2_io_out_bits_cf_intrVec_5, %decoder2_io_out_bits_cf_intrVec_6, %decoder2_io_out_bits_cf_intrVec_7, %decoder2_io_out_bits_cf_intrVec_8, %decoder2_io_out_bits_cf_intrVec_9, %decoder2_io_out_bits_cf_intrVec_10, %decoder2_io_out_bits_cf_intrVec_11, %decoder2_intrVec__bore_46 = firrtl.instance decoder2 @Decoder_1(in clock: !firrtl.clock, out io_out_bits_cf_intrVec_0: !firrtl.uint<1>, out io_out_bits_cf_intrVec_1: !firrtl.uint<1>, out io_out_bits_cf_intrVec_2: !firrtl.uint<1>, out io_out_bits_cf_intrVec_3: !firrtl.uint<1>, out io_out_bits_cf_intrVec_4: !firrtl.uint<1>, out io_out_bits_cf_intrVec_5: !firrtl.uint<1>, out io_out_bits_cf_intrVec_6: !firrtl.uint<1>, out io_out_bits_cf_intrVec_7: !firrtl.uint<1>, out io_out_bits_cf_intrVec_8: !firrtl.uint<1>, out io_out_bits_cf_intrVec_9: !firrtl.uint<1>, out io_out_bits_cf_intrVec_10: !firrtl.uint<1>, out io_out_bits_cf_intrVec_11: !firrtl.uint<1>, in intrVec__bore: !firrtl.uint<12>)
      %33 = firrtl.wire : !firrtl.uint<1>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<1>
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<1>
      %38 = firrtl.wire : !firrtl.uint<1>
      %39 = firrtl.wire : !firrtl.uint<1>
      %40 = firrtl.wire : !firrtl.uint<1>
      %41 = firrtl.wire : !firrtl.uint<1>
      %42 = firrtl.wire : !firrtl.uint<1>
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %33, %decoder2_io_out_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %34, %decoder2_io_out_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %35, %decoder2_io_out_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %36, %decoder2_io_out_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %37, %decoder2_io_out_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %38, %decoder2_io_out_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %39, %decoder2_io_out_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %40, %decoder2_io_out_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %41, %decoder2_io_out_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %42, %decoder2_io_out_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %43, %decoder2_io_out_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %44, %decoder2_io_out_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %decoder2_clock, %clock : !firrtl.clock
      firrtl.strictconnect %io_in_0_ready_0, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_instr_2, %2 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_bits_cf_pc_3, %3 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_pnpc_4, %4 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_1_5, %5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_2_6, %6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_12_7, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_0_8, %8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_1_9, %9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_2_10, %10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_3_11, %11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_4_12, %12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_5_13, %13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_6_14, %14 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_7_15, %15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_8_16, %16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_9_17, %17 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_10_18, %18 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_11_19, %19 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_brIdx_20, %20 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_0_bits_cf_crossPageIPFFix_21, %21 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src1Type_22, %22 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src2Type_23, %23 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuType_24, %24 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuOpType_25, %25 : !firrtl.uint<7>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc1_26, %26 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc2_27, %27 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfWen_28, %28 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfDest_29, %29 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_isNutCoreTrap_30, %30 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_data_imm_31, %31 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_valid_1, %1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_0_32, %33 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_1_33, %34 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_2_34, %35 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_3_35, %36 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_4_36, %37 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_5_37, %38 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_6_38, %39 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_7_39, %40 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_8_40, %41 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_9_41, %42 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_10_42, %43 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_11_43, %44 : !firrtl.uint<1>
      %45 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %45, %32 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %45 : !firrtl.uint<1>
      firrtl.strictconnect %decoder1_vmEnable__bore_44, %decoder1_vmEnable__bore : !firrtl.uint<1>
      firrtl.strictconnect %decoder1_intrVec__bore_45, %decoder1_intrVec__bore : !firrtl.uint<12>
      firrtl.strictconnect %decoder2_intrVec__bore_46, %decoder2_intrVec__bore : !firrtl.uint<12>
    }
    firrtl.module private @FlushableQueue(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_enq_ready: !firrtl.uint<1>, in %io_enq_valid: !firrtl.uint<1>, in %io_enq_bits_instr: !firrtl.uint<64>, in %io_enq_bits_pc: !firrtl.uint<39>, in %io_enq_bits_pnpc: !firrtl.uint<39>, in %io_enq_bits_exceptionVec_12: !firrtl.uint<1>, in %io_enq_bits_brIdx: !firrtl.uint<4>, in %io_deq_ready: !firrtl.uint<1>, out %io_deq_valid: !firrtl.uint<1>, out %io_deq_bits_instr: !firrtl.uint<64>, out %io_deq_bits_pc: !firrtl.uint<39>, out %io_deq_bits_pnpc: !firrtl.uint<39>, out %io_deq_bits_exceptionVec_12: !firrtl.uint<1>, out %io_deq_bits_brIdx: !firrtl.uint<4>, in %io_flush: !firrtl.uint<1>) {
      %c0_ui67 = firrtl.constant 0 : !firrtl.uint<67>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui12 = firrtl.constant 0 : !firrtl.uint<12>
      %c0_ui41 = firrtl.constant 0 : !firrtl.uint<41>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "ram_MPORT_mask_pc"}
      %io_enq_ready_0 = firrtl.wire {name = "io_enq_ready"} : !firrtl.uint<1>
      %io_deq_valid_1 = firrtl.wire {name = "io_deq_valid"} : !firrtl.uint<1>
      %io_deq_bits_instr_2 = firrtl.wire {name = "io_deq_bits_instr"} : !firrtl.uint<64>
      %io_deq_bits_pc_3 = firrtl.wire {name = "io_deq_bits_pc"} : !firrtl.uint<39>
      %io_deq_bits_pnpc_4 = firrtl.wire {name = "io_deq_bits_pnpc"} : !firrtl.uint<39>
      %io_deq_bits_exceptionVec_12_5 = firrtl.wire {name = "io_deq_bits_exceptionVec_12"} : !firrtl.uint<1>
      %io_deq_bits_brIdx_6 = firrtl.wire {name = "io_deq_bits_brIdx"} : !firrtl.uint<4>
      firrtl.strictconnect %io_enq_ready, %io_enq_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_deq_valid, %io_deq_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_deq_bits_instr, %io_deq_bits_instr_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_deq_bits_pc, %io_deq_bits_pc_3 : !firrtl.uint<39>
      firrtl.strictconnect %io_deq_bits_pnpc, %io_deq_bits_pnpc_4 : !firrtl.uint<39>
      firrtl.strictconnect %io_deq_bits_exceptionVec_12, %io_deq_bits_exceptionVec_12_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_deq_bits_brIdx, %io_deq_bits_brIdx_6 : !firrtl.uint<4>
      %ram_MPORT, %ram_io_deq_bits_MPORT = firrtl.mem Undefined {depth = 4 : i64, name = "ram", portNames = ["MPORT", "io_deq_bits_MPORT"], prefix = "", readLatency = 0 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data: uint<147>, mask: uint<1>>, !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data flip: uint<147>>
      %0 = firrtl.subfield %ram_io_deq_bits_MPORT[data] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data flip: uint<147>>
      %1 = firrtl.subfield %ram_MPORT[data] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data: uint<147>, mask: uint<1>>
      %2 = firrtl.subfield %ram_MPORT[mask] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data: uint<147>, mask: uint<1>>
      firrtl.strictconnect %2, %c1_ui1 : !firrtl.uint<1>
      %3 = firrtl.subfield %ram_MPORT[clk] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data: uint<147>, mask: uint<1>>
      %4 = firrtl.subfield %ram_MPORT[en] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data: uint<147>, mask: uint<1>>
      %5 = firrtl.subfield %ram_MPORT[addr] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data: uint<147>, mask: uint<1>>
      %ram_MPORT_addr = firrtl.wire : !firrtl.uint<2>
      %ram_MPORT_en = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %5, %ram_MPORT_addr : !firrtl.uint<2>
      firrtl.strictconnect %4, %ram_MPORT_en : !firrtl.uint<1>
      firrtl.strictconnect %3, %clock : !firrtl.clock
      %6 = firrtl.cat %io_enq_bits_pc, %io_enq_bits_instr : (!firrtl.uint<39>, !firrtl.uint<64>) -> !firrtl.uint<103>
      %7 = firrtl.cat %io_enq_bits_pnpc, %6 : (!firrtl.uint<39>, !firrtl.uint<103>) -> !firrtl.uint<142>
      %8 = firrtl.cat %c0_ui41, %7 : (!firrtl.uint<41>, !firrtl.uint<142>) -> !firrtl.uint<183>
      %9 = firrtl.cat %io_enq_bits_exceptionVec_12, %c0_ui12 : (!firrtl.uint<1>, !firrtl.uint<12>) -> !firrtl.uint<13>
      %10 = firrtl.cat %c0_ui3, %9 : (!firrtl.uint<3>, !firrtl.uint<13>) -> !firrtl.uint<16>
      %11 = firrtl.cat %10, %8 : (!firrtl.uint<16>, !firrtl.uint<183>) -> !firrtl.uint<199>
      %12 = firrtl.cat %c0_ui12, %11 : (!firrtl.uint<12>, !firrtl.uint<199>) -> !firrtl.uint<211>
      %13 = firrtl.cat %io_enq_bits_brIdx, %12 : (!firrtl.uint<4>, !firrtl.uint<211>) -> !firrtl.uint<215>
      %14 = firrtl.cat %c0_ui67, %13 : (!firrtl.uint<67>, !firrtl.uint<215>) -> !firrtl.uint<282>
      %15 = firrtl.bits %14 141 to 0 : (!firrtl.uint<282>) -> !firrtl.uint<142>
      %16 = firrtl.bits %14 195 to 195 : (!firrtl.uint<282>) -> !firrtl.uint<1>
      %17 = firrtl.cat %16, %15 : (!firrtl.uint<1>, !firrtl.uint<142>) -> !firrtl.uint<143>
      %18 = firrtl.bits %14 214 to 211 : (!firrtl.uint<282>) -> !firrtl.uint<4>
      %19 = firrtl.cat %18, %17 : (!firrtl.uint<4>, !firrtl.uint<143>) -> !firrtl.uint<147>
      firrtl.strictconnect %1, %19 : !firrtl.uint<147>
      %ram_io_deq_bits_MPORT_addr = firrtl.wire : !firrtl.uint<2>
      %ram_io_deq_bits_MPORT_data_instr = firrtl.wire : !firrtl.uint<64>
      %ram_io_deq_bits_MPORT_data_pc = firrtl.wire : !firrtl.uint<39>
      %ram_io_deq_bits_MPORT_data_pnpc = firrtl.wire : !firrtl.uint<39>
      %ram_io_deq_bits_MPORT_data_exceptionVec_12 = firrtl.wire : !firrtl.uint<1>
      %ram_io_deq_bits_MPORT_data_brIdx = firrtl.wire : !firrtl.uint<4>
      %20 = firrtl.subfield %ram_io_deq_bits_MPORT[addr] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data flip: uint<147>>
      firrtl.strictconnect %20, %ram_io_deq_bits_MPORT_addr : !firrtl.uint<2>
      %21 = firrtl.subfield %ram_io_deq_bits_MPORT[en] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data flip: uint<147>>
      firrtl.strictconnect %21, %c1_ui1 : !firrtl.uint<1>
      %22 = firrtl.subfield %ram_io_deq_bits_MPORT[clk] : !firrtl.bundle<addr: uint<2>, en: uint<1>, clk: clock, data flip: uint<147>>
      firrtl.strictconnect %22, %clock : !firrtl.clock
      %23 = firrtl.bits %0 63 to 0 : (!firrtl.uint<147>) -> !firrtl.uint<64>
      %24 = firrtl.bits %0 102 to 64 : (!firrtl.uint<147>) -> !firrtl.uint<39>
      %25 = firrtl.bits %0 141 to 103 : (!firrtl.uint<147>) -> !firrtl.uint<39>
      %26 = firrtl.bits %0 142 to 142 : (!firrtl.uint<147>) -> !firrtl.uint<1>
      %27 = firrtl.bits %0 146 to 143 : (!firrtl.uint<147>) -> !firrtl.uint<4>
      firrtl.strictconnect %ram_io_deq_bits_MPORT_data_instr, %23 : !firrtl.uint<64>
      firrtl.strictconnect %ram_io_deq_bits_MPORT_data_pc, %24 : !firrtl.uint<39>
      firrtl.strictconnect %ram_io_deq_bits_MPORT_data_pnpc, %25 : !firrtl.uint<39>
      firrtl.strictconnect %ram_io_deq_bits_MPORT_data_exceptionVec_12, %26 : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_deq_bits_MPORT_data_brIdx, %27 : !firrtl.uint<4>
      %enq_ptr_value = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %deq_ptr_value = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %maybe_full = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %ptr_match = firrtl.eq %enq_ptr_value, %deq_ptr_value {name = "ptr_match"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_empty_T = firrtl.not %maybe_full {name = "_empty_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %empty = firrtl.and %ptr_match, %_empty_T {name = "empty"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %full = firrtl.and %ptr_match, %maybe_full {name = "full"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_do_enq_T = firrtl.and %io_enq_ready_0, %io_enq_valid {name = "_do_enq_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %do_enq = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %do_enq, %_do_enq_T : !firrtl.uint<1>
      %_do_deq_T = firrtl.and %io_deq_ready, %io_deq_valid_1 {name = "_do_deq_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %do_deq = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %do_deq, %_do_deq_T : !firrtl.uint<1>
      firrtl.strictconnect %ram_MPORT_addr, %enq_ptr_value : !firrtl.uint<2>
      firrtl.strictconnect %ram_MPORT_en, %do_enq : !firrtl.uint<1>
      %_value_T = firrtl.add %enq_ptr_value, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_value_T_1 = firrtl.bits %_value_T 1 to 0 {name = "_value_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %28 = firrtl.mux(%do_enq, %_value_T_1, %enq_ptr_value) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_value_T_2 = firrtl.add %deq_ptr_value, %c1_ui1 {name = "_value_T_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_value_T_3 = firrtl.bits %_value_T_2 1 to 0 {name = "_value_T_3"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %29 = firrtl.mux(%do_deq, %_value_T_3, %deq_ptr_value) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %30 = firrtl.eq %do_enq, %do_deq : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.mux(%30, %maybe_full, %do_enq) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_deq_valid_T = firrtl.not %empty {name = "_io_deq_valid_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_deq_valid_1, %_io_deq_valid_T : !firrtl.uint<1>
      %_io_enq_ready_T = firrtl.not %full {name = "_io_enq_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_enq_ready_0, %_io_enq_ready_T : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_deq_bits_MPORT_addr, %deq_ptr_value : !firrtl.uint<2>
      firrtl.strictconnect %io_deq_bits_instr_2, %ram_io_deq_bits_MPORT_data_instr : !firrtl.uint<64>
      firrtl.strictconnect %io_deq_bits_pc_3, %ram_io_deq_bits_MPORT_data_pc : !firrtl.uint<39>
      firrtl.strictconnect %io_deq_bits_pnpc_4, %ram_io_deq_bits_MPORT_data_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %io_deq_bits_exceptionVec_12_5, %ram_io_deq_bits_MPORT_data_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_deq_bits_brIdx_6, %ram_io_deq_bits_MPORT_data_brIdx : !firrtl.uint<4>
      %32 = firrtl.mux(%io_flush, %c0_ui2, %28) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %enq_ptr_value, %32 : !firrtl.uint<2>
      %33 = firrtl.mux(%io_flush, %c0_ui2, %29) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %deq_ptr_value, %33 : !firrtl.uint<2>
      %34 = firrtl.mux(%io_flush, %c0_ui1, %31) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %maybe_full, %34 : !firrtl.uint<1>
    }
    firrtl.module private @Frontend_inorder(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_imem_req_ready: !firrtl.uint<1>, out %io_imem_req_valid: !firrtl.uint<1>, out %io_imem_req_bits_addr: !firrtl.uint<39>, out %io_imem_req_bits_user: !firrtl.uint<87>, out %io_imem_resp_ready: !firrtl.uint<1>, in %io_imem_resp_valid: !firrtl.uint<1>, in %io_imem_resp_bits_rdata: !firrtl.uint<64>, in %io_imem_resp_bits_user: !firrtl.uint<87>, in %io_out_0_ready: !firrtl.uint<1>, out %io_out_0_valid: !firrtl.uint<1>, out %io_out_0_bits_cf_instr: !firrtl.uint<64>, out %io_out_0_bits_cf_pc: !firrtl.uint<39>, out %io_out_0_bits_cf_pnpc: !firrtl.uint<39>, out %io_out_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, out %io_out_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, out %io_out_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_0: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_1: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_2: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_3: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_4: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_5: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_6: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_7: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_8: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_9: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_10: !firrtl.uint<1>, out %io_out_0_bits_cf_intrVec_11: !firrtl.uint<1>, out %io_out_0_bits_cf_brIdx: !firrtl.uint<4>, out %io_out_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out %io_out_0_bits_ctrl_src1Type: !firrtl.uint<1>, out %io_out_0_bits_ctrl_src2Type: !firrtl.uint<1>, out %io_out_0_bits_ctrl_fuType: !firrtl.uint<3>, out %io_out_0_bits_ctrl_fuOpType: !firrtl.uint<7>, out %io_out_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, out %io_out_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, out %io_out_0_bits_ctrl_rfWen: !firrtl.uint<1>, out %io_out_0_bits_ctrl_rfDest: !firrtl.uint<5>, out %io_out_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out %io_out_0_bits_data_imm: !firrtl.uint<64>, out %io_out_1_bits_cf_intrVec_0: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_1: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_2: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_3: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_4: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_5: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_6: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_7: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_8: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_9: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_10: !firrtl.uint<1>, out %io_out_1_bits_cf_intrVec_11: !firrtl.uint<1>, out %io_flushVec: !firrtl.uint<4>, in %io_redirect_target: !firrtl.uint<39>, in %io_redirect_valid: !firrtl.uint<1>, in %io_ipf: !firrtl.uint<1>, in %ifu_bp1_req__bore_valid: !firrtl.uint<1>, in %ifu_bp1_req__bore_pc: !firrtl.uint<39>, in %ifu_bp1_req__bore_isMissPredict: !firrtl.uint<1>, in %ifu_bp1_req__bore_actualTarget: !firrtl.uint<39>, in %ifu_bp1_req__bore_actualTaken: !firrtl.uint<1>, in %ifu_bp1_req__bore_fuOpType: !firrtl.uint<7>, in %ifu_bp1_req__bore_btbType: !firrtl.uint<2>, in %ifu_bp1_req__bore_isRVC: !firrtl.uint<1>, out %ifu_r__bore: !firrtl.uint<1>, out %idu__WIRE__bore: !firrtl.uint<1>, in %idu_decoder1_vmEnable__bore: !firrtl.uint<1>, in %ifu_bp1_flushTLB__bore: !firrtl.uint<1>, in %idu_decoder1_intrVec__bore: !firrtl.uint<12>, in %idu_decoder2_intrVec__bore: !firrtl.uint<12>, in %ifu_bp1_flushBTB__bore: !firrtl.uint<1>, out %ifu__WIRE__bore: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_imem_req_valid_0 = firrtl.wire {name = "io_imem_req_valid"} : !firrtl.uint<1>
      %io_imem_req_bits_addr_1 = firrtl.wire {name = "io_imem_req_bits_addr"} : !firrtl.uint<39>
      %io_imem_req_bits_user_2 = firrtl.wire {name = "io_imem_req_bits_user"} : !firrtl.uint<87>
      %io_imem_resp_ready_3 = firrtl.wire {name = "io_imem_resp_ready"} : !firrtl.uint<1>
      %io_out_0_valid_4 = firrtl.wire {name = "io_out_0_valid"} : !firrtl.uint<1>
      %io_out_0_bits_cf_instr_5 = firrtl.wire {name = "io_out_0_bits_cf_instr"} : !firrtl.uint<64>
      %io_out_0_bits_cf_pc_6 = firrtl.wire {name = "io_out_0_bits_cf_pc"} : !firrtl.uint<39>
      %io_out_0_bits_cf_pnpc_7 = firrtl.wire {name = "io_out_0_bits_cf_pnpc"} : !firrtl.uint<39>
      %io_out_0_bits_cf_exceptionVec_1_8 = firrtl.wire {name = "io_out_0_bits_cf_exceptionVec_1"} : !firrtl.uint<1>
      %io_out_0_bits_cf_exceptionVec_2_9 = firrtl.wire {name = "io_out_0_bits_cf_exceptionVec_2"} : !firrtl.uint<1>
      %io_out_0_bits_cf_exceptionVec_12_10 = firrtl.wire {name = "io_out_0_bits_cf_exceptionVec_12"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_0_11 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_0"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_1_12 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_1"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_2_13 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_2"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_3_14 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_3"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_4_15 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_4"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_5_16 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_5"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_6_17 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_6"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_7_18 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_7"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_8_19 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_8"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_9_20 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_9"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_10_21 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_10"} : !firrtl.uint<1>
      %io_out_0_bits_cf_intrVec_11_22 = firrtl.wire {name = "io_out_0_bits_cf_intrVec_11"} : !firrtl.uint<1>
      %io_out_0_bits_cf_brIdx_23 = firrtl.wire {name = "io_out_0_bits_cf_brIdx"} : !firrtl.uint<4>
      %io_out_0_bits_cf_crossPageIPFFix_24 = firrtl.wire {name = "io_out_0_bits_cf_crossPageIPFFix"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_src1Type_25 = firrtl.wire {name = "io_out_0_bits_ctrl_src1Type"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_src2Type_26 = firrtl.wire {name = "io_out_0_bits_ctrl_src2Type"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_fuType_27 = firrtl.wire {name = "io_out_0_bits_ctrl_fuType"} : !firrtl.uint<3>
      %io_out_0_bits_ctrl_fuOpType_28 = firrtl.wire {name = "io_out_0_bits_ctrl_fuOpType"} : !firrtl.uint<7>
      %io_out_0_bits_ctrl_rfSrc1_29 = firrtl.wire {name = "io_out_0_bits_ctrl_rfSrc1"} : !firrtl.uint<5>
      %io_out_0_bits_ctrl_rfSrc2_30 = firrtl.wire {name = "io_out_0_bits_ctrl_rfSrc2"} : !firrtl.uint<5>
      %io_out_0_bits_ctrl_rfWen_31 = firrtl.wire {name = "io_out_0_bits_ctrl_rfWen"} : !firrtl.uint<1>
      %io_out_0_bits_ctrl_rfDest_32 = firrtl.wire {name = "io_out_0_bits_ctrl_rfDest"} : !firrtl.uint<5>
      %io_out_0_bits_ctrl_isNutCoreTrap_33 = firrtl.wire {name = "io_out_0_bits_ctrl_isNutCoreTrap"} : !firrtl.uint<1>
      %io_out_0_bits_data_imm_34 = firrtl.wire {name = "io_out_0_bits_data_imm"} : !firrtl.uint<64>
      %io_out_1_bits_cf_intrVec_0_35 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_0"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_1_36 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_1"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_2_37 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_2"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_3_38 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_3"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_4_39 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_4"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_5_40 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_5"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_6_41 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_6"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_7_42 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_7"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_8_43 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_8"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_9_44 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_9"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_10_45 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_10"} : !firrtl.uint<1>
      %io_out_1_bits_cf_intrVec_11_46 = firrtl.wire {name = "io_out_1_bits_cf_intrVec_11"} : !firrtl.uint<1>
      %io_flushVec_47 = firrtl.wire {name = "io_flushVec"} : !firrtl.uint<4>
      firrtl.strictconnect %io_imem_req_valid, %io_imem_req_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_req_bits_addr, %io_imem_req_bits_addr_1 : !firrtl.uint<39>
      firrtl.strictconnect %io_imem_req_bits_user, %io_imem_req_bits_user_2 : !firrtl.uint<87>
      firrtl.strictconnect %io_imem_resp_ready, %io_imem_resp_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_valid, %io_out_0_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_instr, %io_out_0_bits_cf_instr_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_bits_cf_pc, %io_out_0_bits_cf_pc_6 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_pnpc, %io_out_0_bits_cf_pnpc_7 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_1, %io_out_0_bits_cf_exceptionVec_1_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_2, %io_out_0_bits_cf_exceptionVec_2_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_12, %io_out_0_bits_cf_exceptionVec_12_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_0, %io_out_0_bits_cf_intrVec_0_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_1, %io_out_0_bits_cf_intrVec_1_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_2, %io_out_0_bits_cf_intrVec_2_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_3, %io_out_0_bits_cf_intrVec_3_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_4, %io_out_0_bits_cf_intrVec_4_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_5, %io_out_0_bits_cf_intrVec_5_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_6, %io_out_0_bits_cf_intrVec_6_17 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_7, %io_out_0_bits_cf_intrVec_7_18 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_8, %io_out_0_bits_cf_intrVec_8_19 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_9, %io_out_0_bits_cf_intrVec_9_20 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_10, %io_out_0_bits_cf_intrVec_10_21 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_11, %io_out_0_bits_cf_intrVec_11_22 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_brIdx, %io_out_0_bits_cf_brIdx_23 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_0_bits_cf_crossPageIPFFix, %io_out_0_bits_cf_crossPageIPFFix_24 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src1Type, %io_out_0_bits_ctrl_src1Type_25 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src2Type, %io_out_0_bits_ctrl_src2Type_26 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuType, %io_out_0_bits_ctrl_fuType_27 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuOpType, %io_out_0_bits_ctrl_fuOpType_28 : !firrtl.uint<7>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc1, %io_out_0_bits_ctrl_rfSrc1_29 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc2, %io_out_0_bits_ctrl_rfSrc2_30 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfWen, %io_out_0_bits_ctrl_rfWen_31 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfDest, %io_out_0_bits_ctrl_rfDest_32 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_isNutCoreTrap, %io_out_0_bits_ctrl_isNutCoreTrap_33 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_data_imm, %io_out_0_bits_data_imm_34 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_0, %io_out_1_bits_cf_intrVec_0_35 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_1, %io_out_1_bits_cf_intrVec_1_36 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_2, %io_out_1_bits_cf_intrVec_2_37 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_3, %io_out_1_bits_cf_intrVec_3_38 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_4, %io_out_1_bits_cf_intrVec_4_39 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_5, %io_out_1_bits_cf_intrVec_5_40 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_6, %io_out_1_bits_cf_intrVec_6_41 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_7, %io_out_1_bits_cf_intrVec_7_42 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_8, %io_out_1_bits_cf_intrVec_8_43 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_9, %io_out_1_bits_cf_intrVec_9_44 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_10, %io_out_1_bits_cf_intrVec_10_45 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_11, %io_out_1_bits_cf_intrVec_11_46 : !firrtl.uint<1>
      firrtl.strictconnect %io_flushVec, %io_flushVec_47 : !firrtl.uint<4>
      %ifu_clock, %ifu_reset, %ifu_io_imem_req_ready, %ifu_io_imem_req_valid, %ifu_io_imem_req_bits_addr, %ifu_io_imem_req_bits_user, %ifu_io_imem_resp_ready, %ifu_io_imem_resp_valid, %ifu_io_imem_resp_bits_rdata, %ifu_io_imem_resp_bits_user, %ifu_io_out_ready, %ifu_io_out_valid, %ifu_io_out_bits_instr, %ifu_io_out_bits_pc, %ifu_io_out_bits_pnpc, %ifu_io_out_bits_exceptionVec_12, %ifu_io_out_bits_brIdx, %ifu_io_redirect_target, %ifu_io_redirect_valid, %ifu_io_flushVec, %ifu_io_ipf, %ifu_bp1_req__bore_valid_48, %ifu_bp1_req__bore_pc_49, %ifu_bp1_req__bore_isMissPredict_50, %ifu_bp1_req__bore_actualTarget_51, %ifu_bp1_req__bore_actualTaken_52, %ifu_bp1_req__bore_fuOpType_53, %ifu_bp1_req__bore_btbType_54, %ifu_bp1_req__bore_isRVC_55, %ifu_r__bore_56, %ifu_bp1_flushTLB__bore_57, %ifu_bp1_flushBTB__bore_58, %ifu__WIRE__bore_59 = firrtl.instance ifu @IFU_inorder(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_imem_req_ready: !firrtl.uint<1>, out io_imem_req_valid: !firrtl.uint<1>, out io_imem_req_bits_addr: !firrtl.uint<39>, out io_imem_req_bits_user: !firrtl.uint<82>, out io_imem_resp_ready: !firrtl.uint<1>, in io_imem_resp_valid: !firrtl.uint<1>, in io_imem_resp_bits_rdata: !firrtl.uint<64>, in io_imem_resp_bits_user: !firrtl.uint<82>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_instr: !firrtl.uint<64>, out io_out_bits_pc: !firrtl.uint<39>, out io_out_bits_pnpc: !firrtl.uint<39>, out io_out_bits_exceptionVec_12: !firrtl.uint<1>, out io_out_bits_brIdx: !firrtl.uint<4>, in io_redirect_target: !firrtl.uint<39>, in io_redirect_valid: !firrtl.uint<1>, out io_flushVec: !firrtl.uint<4>, in io_ipf: !firrtl.uint<1>, in bp1_req__bore_valid: !firrtl.uint<1>, in bp1_req__bore_pc: !firrtl.uint<39>, in bp1_req__bore_isMissPredict: !firrtl.uint<1>, in bp1_req__bore_actualTarget: !firrtl.uint<39>, in bp1_req__bore_actualTaken: !firrtl.uint<1>, in bp1_req__bore_fuOpType: !firrtl.uint<7>, in bp1_req__bore_btbType: !firrtl.uint<2>, in bp1_req__bore_isRVC: !firrtl.uint<1>, out r__bore: !firrtl.uint<1>, in bp1_flushTLB__bore: !firrtl.uint<1>, in bp1_flushBTB__bore: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<39>
      %2 = firrtl.wire : !firrtl.uint<82>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<82>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<64>
      %8 = firrtl.wire : !firrtl.uint<39>
      %9 = firrtl.wire : !firrtl.uint<39>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<4>
      %12 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %ifu_io_imem_req_ready, %io_imem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %0, %ifu_io_imem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %1, %ifu_io_imem_req_bits_addr : !firrtl.uint<39>
      firrtl.strictconnect %2, %ifu_io_imem_req_bits_user : !firrtl.uint<82>
      firrtl.strictconnect %3, %ifu_io_imem_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %ifu_io_imem_resp_valid, %io_imem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %ifu_io_imem_resp_bits_rdata, %io_imem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %ifu_io_imem_resp_bits_user, %4 : !firrtl.uint<82>
      firrtl.strictconnect %ifu_io_out_ready, %5 : !firrtl.uint<1>
      firrtl.strictconnect %6, %ifu_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %7, %ifu_io_out_bits_instr : !firrtl.uint<64>
      firrtl.strictconnect %8, %ifu_io_out_bits_pc : !firrtl.uint<39>
      firrtl.strictconnect %9, %ifu_io_out_bits_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %10, %ifu_io_out_bits_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %11, %ifu_io_out_bits_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %ifu_io_redirect_target, %io_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %ifu_io_redirect_valid, %io_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %12, %ifu_io_flushVec : !firrtl.uint<4>
      firrtl.strictconnect %ifu_io_ipf, %io_ipf : !firrtl.uint<1>
      firrtl.strictconnect %ifu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %ifu_reset, %reset : !firrtl.uint<1>
      %ibf_clock, %ibf_reset, %ibf_io_in_ready, %ibf_io_in_valid, %ibf_io_in_bits_instr, %ibf_io_in_bits_pc, %ibf_io_in_bits_pnpc, %ibf_io_in_bits_exceptionVec_12, %ibf_io_in_bits_brIdx, %ibf_io_out_ready, %ibf_io_out_valid, %ibf_io_out_bits_instr, %ibf_io_out_bits_pc, %ibf_io_out_bits_pnpc, %ibf_io_out_bits_exceptionVec_12, %ibf_io_out_bits_brIdx, %ibf_io_out_bits_crossPageIPFFix, %ibf_io_flush = firrtl.instance ibf @NaiveRVCAlignBuffer(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_instr: !firrtl.uint<64>, in io_in_bits_pc: !firrtl.uint<39>, in io_in_bits_pnpc: !firrtl.uint<39>, in io_in_bits_exceptionVec_12: !firrtl.uint<1>, in io_in_bits_brIdx: !firrtl.uint<4>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_instr: !firrtl.uint<64>, out io_out_bits_pc: !firrtl.uint<39>, out io_out_bits_pnpc: !firrtl.uint<39>, out io_out_bits_exceptionVec_12: !firrtl.uint<1>, out io_out_bits_brIdx: !firrtl.uint<4>, out io_out_bits_crossPageIPFFix: !firrtl.uint<1>, in io_flush: !firrtl.uint<1>)
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<64>
      %16 = firrtl.wire : !firrtl.uint<39>
      %17 = firrtl.wire : !firrtl.uint<39>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<4>
      %20 = firrtl.wire : !firrtl.uint<1>
      %21 = firrtl.wire : !firrtl.uint<1>
      %22 = firrtl.wire : !firrtl.uint<64>
      %23 = firrtl.wire : !firrtl.uint<39>
      %24 = firrtl.wire : !firrtl.uint<39>
      %25 = firrtl.wire : !firrtl.uint<1>
      %26 = firrtl.wire : !firrtl.uint<4>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %13, %ibf_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_in_valid, %14 : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_in_bits_instr, %15 : !firrtl.uint<64>
      firrtl.strictconnect %ibf_io_in_bits_pc, %16 : !firrtl.uint<39>
      firrtl.strictconnect %ibf_io_in_bits_pnpc, %17 : !firrtl.uint<39>
      firrtl.strictconnect %ibf_io_in_bits_exceptionVec_12, %18 : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_in_bits_brIdx, %19 : !firrtl.uint<4>
      firrtl.strictconnect %ibf_io_out_ready, %20 : !firrtl.uint<1>
      firrtl.strictconnect %21, %ibf_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %22, %ibf_io_out_bits_instr : !firrtl.uint<64>
      firrtl.strictconnect %23, %ibf_io_out_bits_pc : !firrtl.uint<39>
      firrtl.strictconnect %24, %ibf_io_out_bits_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %25, %ibf_io_out_bits_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %26, %ibf_io_out_bits_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %27, %ibf_io_out_bits_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_flush, %28 : !firrtl.uint<1>
      firrtl.strictconnect %ibf_clock, %clock : !firrtl.clock
      firrtl.strictconnect %ibf_reset, %reset : !firrtl.uint<1>
      %idu_clock, %idu_reset, %idu_io_in_0_ready, %idu_io_in_0_valid, %idu_io_in_0_bits_instr, %idu_io_in_0_bits_pc, %idu_io_in_0_bits_pnpc, %idu_io_in_0_bits_exceptionVec_12, %idu_io_in_0_bits_brIdx, %idu_io_in_0_bits_crossPageIPFFix, %idu_io_out_0_ready, %idu_io_out_0_valid, %idu_io_out_0_bits_cf_instr, %idu_io_out_0_bits_cf_pc, %idu_io_out_0_bits_cf_pnpc, %idu_io_out_0_bits_cf_exceptionVec_1, %idu_io_out_0_bits_cf_exceptionVec_2, %idu_io_out_0_bits_cf_exceptionVec_12, %idu_io_out_0_bits_cf_intrVec_0, %idu_io_out_0_bits_cf_intrVec_1, %idu_io_out_0_bits_cf_intrVec_2, %idu_io_out_0_bits_cf_intrVec_3, %idu_io_out_0_bits_cf_intrVec_4, %idu_io_out_0_bits_cf_intrVec_5, %idu_io_out_0_bits_cf_intrVec_6, %idu_io_out_0_bits_cf_intrVec_7, %idu_io_out_0_bits_cf_intrVec_8, %idu_io_out_0_bits_cf_intrVec_9, %idu_io_out_0_bits_cf_intrVec_10, %idu_io_out_0_bits_cf_intrVec_11, %idu_io_out_0_bits_cf_brIdx, %idu_io_out_0_bits_cf_crossPageIPFFix, %idu_io_out_0_bits_ctrl_src1Type, %idu_io_out_0_bits_ctrl_src2Type, %idu_io_out_0_bits_ctrl_fuType, %idu_io_out_0_bits_ctrl_fuOpType, %idu_io_out_0_bits_ctrl_rfSrc1, %idu_io_out_0_bits_ctrl_rfSrc2, %idu_io_out_0_bits_ctrl_rfWen, %idu_io_out_0_bits_ctrl_rfDest, %idu_io_out_0_bits_ctrl_isNutCoreTrap, %idu_io_out_0_bits_data_imm, %idu_io_out_1_bits_cf_intrVec_0, %idu_io_out_1_bits_cf_intrVec_1, %idu_io_out_1_bits_cf_intrVec_2, %idu_io_out_1_bits_cf_intrVec_3, %idu_io_out_1_bits_cf_intrVec_4, %idu_io_out_1_bits_cf_intrVec_5, %idu_io_out_1_bits_cf_intrVec_6, %idu_io_out_1_bits_cf_intrVec_7, %idu_io_out_1_bits_cf_intrVec_8, %idu_io_out_1_bits_cf_intrVec_9, %idu_io_out_1_bits_cf_intrVec_10, %idu_io_out_1_bits_cf_intrVec_11, %idu__WIRE__bore_60, %idu_decoder1_vmEnable__bore_61, %idu_decoder1_intrVec__bore_62, %idu_decoder2_intrVec__bore_63 = firrtl.instance idu @IDU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_instr: !firrtl.uint<64>, in io_in_0_bits_pc: !firrtl.uint<39>, in io_in_0_bits_pnpc: !firrtl.uint<39>, in io_in_0_bits_exceptionVec_12: !firrtl.uint<1>, in io_in_0_bits_brIdx: !firrtl.uint<4>, in io_in_0_bits_crossPageIPFFix: !firrtl.uint<1>, in io_out_0_ready: !firrtl.uint<1>, out io_out_0_valid: !firrtl.uint<1>, out io_out_0_bits_cf_instr: !firrtl.uint<64>, out io_out_0_bits_cf_pc: !firrtl.uint<39>, out io_out_0_bits_cf_pnpc: !firrtl.uint<39>, out io_out_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, out io_out_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, out io_out_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_0: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_1: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_2: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_3: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_4: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_5: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_6: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_7: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_8: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_9: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_10: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_11: !firrtl.uint<1>, out io_out_0_bits_cf_brIdx: !firrtl.uint<4>, out io_out_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out io_out_0_bits_ctrl_src1Type: !firrtl.uint<1>, out io_out_0_bits_ctrl_src2Type: !firrtl.uint<1>, out io_out_0_bits_ctrl_fuType: !firrtl.uint<3>, out io_out_0_bits_ctrl_fuOpType: !firrtl.uint<7>, out io_out_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, out io_out_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, out io_out_0_bits_ctrl_rfWen: !firrtl.uint<1>, out io_out_0_bits_ctrl_rfDest: !firrtl.uint<5>, out io_out_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out io_out_0_bits_data_imm: !firrtl.uint<64>, out io_out_1_bits_cf_intrVec_0: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_1: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_2: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_3: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_4: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_5: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_6: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_7: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_8: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_9: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_10: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_11: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>, in decoder1_vmEnable__bore: !firrtl.uint<1>, in decoder1_intrVec__bore: !firrtl.uint<12>, in decoder2_intrVec__bore: !firrtl.uint<12>)
      %29 = firrtl.wire : !firrtl.uint<1>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<64>
      %32 = firrtl.wire : !firrtl.uint<39>
      %33 = firrtl.wire : !firrtl.uint<39>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<4>
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<1>
      %38 = firrtl.wire : !firrtl.uint<64>
      %39 = firrtl.wire : !firrtl.uint<39>
      %40 = firrtl.wire : !firrtl.uint<39>
      %41 = firrtl.wire : !firrtl.uint<1>
      %42 = firrtl.wire : !firrtl.uint<1>
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<1>
      %45 = firrtl.wire : !firrtl.uint<1>
      %46 = firrtl.wire : !firrtl.uint<1>
      %47 = firrtl.wire : !firrtl.uint<1>
      %48 = firrtl.wire : !firrtl.uint<1>
      %49 = firrtl.wire : !firrtl.uint<1>
      %50 = firrtl.wire : !firrtl.uint<1>
      %51 = firrtl.wire : !firrtl.uint<1>
      %52 = firrtl.wire : !firrtl.uint<1>
      %53 = firrtl.wire : !firrtl.uint<1>
      %54 = firrtl.wire : !firrtl.uint<1>
      %55 = firrtl.wire : !firrtl.uint<1>
      %56 = firrtl.wire : !firrtl.uint<4>
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<1>
      %59 = firrtl.wire : !firrtl.uint<1>
      %60 = firrtl.wire : !firrtl.uint<3>
      %61 = firrtl.wire : !firrtl.uint<7>
      %62 = firrtl.wire : !firrtl.uint<5>
      %63 = firrtl.wire : !firrtl.uint<5>
      %64 = firrtl.wire : !firrtl.uint<1>
      %65 = firrtl.wire : !firrtl.uint<5>
      %66 = firrtl.wire : !firrtl.uint<1>
      %67 = firrtl.wire : !firrtl.uint<64>
      %68 = firrtl.wire : !firrtl.uint<1>
      %69 = firrtl.wire : !firrtl.uint<1>
      %70 = firrtl.wire : !firrtl.uint<1>
      %71 = firrtl.wire : !firrtl.uint<1>
      %72 = firrtl.wire : !firrtl.uint<1>
      %73 = firrtl.wire : !firrtl.uint<1>
      %74 = firrtl.wire : !firrtl.uint<1>
      %75 = firrtl.wire : !firrtl.uint<1>
      %76 = firrtl.wire : !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<1>
      %78 = firrtl.wire : !firrtl.uint<1>
      %79 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %29, %idu_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %idu_io_in_0_valid, %30 : !firrtl.uint<1>
      firrtl.strictconnect %idu_io_in_0_bits_instr, %31 : !firrtl.uint<64>
      firrtl.strictconnect %idu_io_in_0_bits_pc, %32 : !firrtl.uint<39>
      firrtl.strictconnect %idu_io_in_0_bits_pnpc, %33 : !firrtl.uint<39>
      firrtl.strictconnect %idu_io_in_0_bits_exceptionVec_12, %34 : !firrtl.uint<1>
      firrtl.strictconnect %idu_io_in_0_bits_brIdx, %35 : !firrtl.uint<4>
      firrtl.strictconnect %idu_io_in_0_bits_crossPageIPFFix, %36 : !firrtl.uint<1>
      firrtl.strictconnect %idu_io_out_0_ready, %io_out_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %37, %idu_io_out_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %38, %idu_io_out_0_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %39, %idu_io_out_0_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %40, %idu_io_out_0_bits_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %41, %idu_io_out_0_bits_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %42, %idu_io_out_0_bits_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %43, %idu_io_out_0_bits_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %44, %idu_io_out_0_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %45, %idu_io_out_0_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %46, %idu_io_out_0_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %47, %idu_io_out_0_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %48, %idu_io_out_0_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %49, %idu_io_out_0_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %50, %idu_io_out_0_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %51, %idu_io_out_0_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %52, %idu_io_out_0_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %53, %idu_io_out_0_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %54, %idu_io_out_0_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %55, %idu_io_out_0_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %56, %idu_io_out_0_bits_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %57, %idu_io_out_0_bits_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %58, %idu_io_out_0_bits_ctrl_src1Type : !firrtl.uint<1>
      firrtl.strictconnect %59, %idu_io_out_0_bits_ctrl_src2Type : !firrtl.uint<1>
      firrtl.strictconnect %60, %idu_io_out_0_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %61, %idu_io_out_0_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %62, %idu_io_out_0_bits_ctrl_rfSrc1 : !firrtl.uint<5>
      firrtl.strictconnect %63, %idu_io_out_0_bits_ctrl_rfSrc2 : !firrtl.uint<5>
      firrtl.strictconnect %64, %idu_io_out_0_bits_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %65, %idu_io_out_0_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %66, %idu_io_out_0_bits_ctrl_isNutCoreTrap : !firrtl.uint<1>
      firrtl.strictconnect %67, %idu_io_out_0_bits_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %68, %idu_io_out_1_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %69, %idu_io_out_1_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %70, %idu_io_out_1_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %71, %idu_io_out_1_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %72, %idu_io_out_1_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %73, %idu_io_out_1_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %74, %idu_io_out_1_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %75, %idu_io_out_1_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %76, %idu_io_out_1_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %77, %idu_io_out_1_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %78, %idu_io_out_1_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %79, %idu_io_out_1_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %idu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %idu_reset, %reset : !firrtl.uint<1>
      %80 = firrtl.bits %12 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %ibf_io_in_q_clock, %ibf_io_in_q_reset, %ibf_io_in_q_io_enq_ready, %ibf_io_in_q_io_enq_valid, %ibf_io_in_q_io_enq_bits_instr, %ibf_io_in_q_io_enq_bits_pc, %ibf_io_in_q_io_enq_bits_pnpc, %ibf_io_in_q_io_enq_bits_exceptionVec_12, %ibf_io_in_q_io_enq_bits_brIdx, %ibf_io_in_q_io_deq_ready, %ibf_io_in_q_io_deq_valid, %ibf_io_in_q_io_deq_bits_instr, %ibf_io_in_q_io_deq_bits_pc, %ibf_io_in_q_io_deq_bits_pnpc, %ibf_io_in_q_io_deq_bits_exceptionVec_12, %ibf_io_in_q_io_deq_bits_brIdx, %ibf_io_in_q_io_flush = firrtl.instance ibf_io_in_q @FlushableQueue(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_enq_ready: !firrtl.uint<1>, in io_enq_valid: !firrtl.uint<1>, in io_enq_bits_instr: !firrtl.uint<64>, in io_enq_bits_pc: !firrtl.uint<39>, in io_enq_bits_pnpc: !firrtl.uint<39>, in io_enq_bits_exceptionVec_12: !firrtl.uint<1>, in io_enq_bits_brIdx: !firrtl.uint<4>, in io_deq_ready: !firrtl.uint<1>, out io_deq_valid: !firrtl.uint<1>, out io_deq_bits_instr: !firrtl.uint<64>, out io_deq_bits_pc: !firrtl.uint<39>, out io_deq_bits_pnpc: !firrtl.uint<39>, out io_deq_bits_exceptionVec_12: !firrtl.uint<1>, out io_deq_bits_brIdx: !firrtl.uint<4>, in io_flush: !firrtl.uint<1>)
      %81 = firrtl.wire : !firrtl.uint<1>
      %82 = firrtl.wire : !firrtl.uint<1>
      %83 = firrtl.wire : !firrtl.uint<64>
      %84 = firrtl.wire : !firrtl.uint<39>
      %85 = firrtl.wire : !firrtl.uint<39>
      %86 = firrtl.wire : !firrtl.uint<1>
      %87 = firrtl.wire : !firrtl.uint<4>
      %88 = firrtl.wire : !firrtl.uint<1>
      %89 = firrtl.wire : !firrtl.uint<1>
      %90 = firrtl.wire : !firrtl.uint<64>
      %91 = firrtl.wire : !firrtl.uint<39>
      %92 = firrtl.wire : !firrtl.uint<39>
      %93 = firrtl.wire : !firrtl.uint<1>
      %94 = firrtl.wire : !firrtl.uint<4>
      %95 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %81, %ibf_io_in_q_io_enq_ready : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_in_q_io_enq_valid, %82 : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_in_q_io_enq_bits_instr, %83 : !firrtl.uint<64>
      firrtl.strictconnect %ibf_io_in_q_io_enq_bits_pc, %84 : !firrtl.uint<39>
      firrtl.strictconnect %ibf_io_in_q_io_enq_bits_pnpc, %85 : !firrtl.uint<39>
      firrtl.strictconnect %ibf_io_in_q_io_enq_bits_exceptionVec_12, %86 : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_in_q_io_enq_bits_brIdx, %87 : !firrtl.uint<4>
      firrtl.strictconnect %ibf_io_in_q_io_deq_ready, %88 : !firrtl.uint<1>
      firrtl.strictconnect %89, %ibf_io_in_q_io_deq_valid : !firrtl.uint<1>
      firrtl.strictconnect %90, %ibf_io_in_q_io_deq_bits_instr : !firrtl.uint<64>
      firrtl.strictconnect %91, %ibf_io_in_q_io_deq_bits_pc : !firrtl.uint<39>
      firrtl.strictconnect %92, %ibf_io_in_q_io_deq_bits_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %93, %ibf_io_in_q_io_deq_bits_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %94, %ibf_io_in_q_io_deq_bits_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %ibf_io_in_q_io_flush, %95 : !firrtl.uint<1>
      firrtl.strictconnect %ibf_io_in_q_clock, %clock : !firrtl.clock
      firrtl.strictconnect %ibf_io_in_q_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %82, %6 : !firrtl.uint<1>
      firrtl.strictconnect %87, %11 : !firrtl.uint<4>
      firrtl.strictconnect %86, %10 : !firrtl.uint<1>
      firrtl.strictconnect %85, %9 : !firrtl.uint<39>
      firrtl.strictconnect %84, %8 : !firrtl.uint<39>
      firrtl.strictconnect %83, %7 : !firrtl.uint<64>
      firrtl.strictconnect %95, %80 : !firrtl.uint<1>
      firrtl.strictconnect %5, %81 : !firrtl.uint<1>
      firrtl.strictconnect %88, %13 : !firrtl.uint<1>
      firrtl.strictconnect %14, %89 : !firrtl.uint<1>
      firrtl.strictconnect %15, %90 : !firrtl.uint<64>
      firrtl.strictconnect %16, %91 : !firrtl.uint<39>
      firrtl.strictconnect %17, %92 : !firrtl.uint<39>
      firrtl.strictconnect %18, %93 : !firrtl.uint<1>
      firrtl.strictconnect %19, %94 : !firrtl.uint<4>
      %96 = firrtl.and %io_out_0_ready, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_ibf_io_flush_T = firrtl.bits %12 1 to 1 {name = "_ibf_io_flush_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %97 = firrtl.mux(%96, %c0_ui1, %valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_idu_io_in_0_bits_T = firrtl.and %21, %29 {name = "_idu_io_in_0_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.mux(%_idu_io_in_0_bits_T, %c1_ui1, %97) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %99 = firrtl.mux(%_ibf_io_flush_T, %c0_ui1, %98) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid, %99 : !firrtl.uint<1>
      firrtl.strictconnect %20, %29 : !firrtl.uint<1>
      %idu_io_in_0_bits_r_instr = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %idu_io_in_0_bits_r_pc = firrtl.reg %clock {firrtl.random_init_start = 65 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %idu_io_in_0_bits_r_pnpc = firrtl.reg %clock {firrtl.random_init_start = 104 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %idu_io_in_0_bits_r_exceptionVec_12 = firrtl.reg %clock {firrtl.random_init_start = 196 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %idu_io_in_0_bits_r_brIdx = firrtl.reg %clock {firrtl.random_init_start = 212 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %idu_io_in_0_bits_r_crossPageIPFFix = firrtl.reg %clock {firrtl.random_init_start = 217 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %100 = firrtl.mux(%_idu_io_in_0_bits_T, %22, %idu_io_in_0_bits_r_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %idu_io_in_0_bits_r_instr, %100 : !firrtl.uint<64>
      %101 = firrtl.mux(%_idu_io_in_0_bits_T, %23, %idu_io_in_0_bits_r_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %idu_io_in_0_bits_r_pc, %101 : !firrtl.uint<39>
      %102 = firrtl.mux(%_idu_io_in_0_bits_T, %24, %idu_io_in_0_bits_r_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %idu_io_in_0_bits_r_pnpc, %102 : !firrtl.uint<39>
      %103 = firrtl.mux(%_idu_io_in_0_bits_T, %25, %idu_io_in_0_bits_r_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %idu_io_in_0_bits_r_exceptionVec_12, %103 : !firrtl.uint<1>
      %104 = firrtl.mux(%_idu_io_in_0_bits_T, %26, %idu_io_in_0_bits_r_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %idu_io_in_0_bits_r_brIdx, %104 : !firrtl.uint<4>
      %105 = firrtl.mux(%_idu_io_in_0_bits_T, %27, %idu_io_in_0_bits_r_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %idu_io_in_0_bits_r_crossPageIPFFix, %105 : !firrtl.uint<1>
      firrtl.strictconnect %36, %idu_io_in_0_bits_r_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %35, %idu_io_in_0_bits_r_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %34, %idu_io_in_0_bits_r_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %33, %idu_io_in_0_bits_r_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %32, %idu_io_in_0_bits_r_pc : !firrtl.uint<39>
      firrtl.strictconnect %31, %idu_io_in_0_bits_r_instr : !firrtl.uint<64>
      firrtl.strictconnect %30, %valid : !firrtl.uint<1>
      firrtl.strictconnect %28, %_ibf_io_flush_T : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_instr_5, %38 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_bits_cf_pc_6, %39 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_pnpc_7, %40 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_1_8, %41 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_2_9, %42 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_exceptionVec_12_10, %43 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_0_11, %44 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_1_12, %45 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_2_13, %46 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_3_14, %47 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_4_15, %48 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_5_16, %49 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_6_17, %50 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_7_18, %51 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_8_19, %52 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_9_20, %53 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_10_21, %54 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_intrVec_11_22, %55 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_cf_brIdx_23, %56 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_0_bits_cf_crossPageIPFFix_24, %57 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src1Type_25, %58 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_src2Type_26, %59 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuType_27, %60 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_0_bits_ctrl_fuOpType_28, %61 : !firrtl.uint<7>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc1_29, %62 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfSrc2_30, %63 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfWen_31, %64 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_ctrl_rfDest_32, %65 : !firrtl.uint<5>
      firrtl.strictconnect %io_out_0_bits_ctrl_isNutCoreTrap_33, %66 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_bits_data_imm_34, %67 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_valid_4, %37 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_0_35, %68 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_1_36, %69 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_2_37, %70 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_3_38, %71 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_4_39, %72 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_5_40, %73 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_6_41, %74 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_7_42, %75 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_8_43, %76 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_9_44, %77 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_10_45, %78 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_bits_cf_intrVec_11_46, %79 : !firrtl.uint<1>
      firrtl.strictconnect %io_flushVec_47, %12 : !firrtl.uint<4>
      firrtl.strictconnect %io_imem_resp_ready_3, %3 : !firrtl.uint<1>
      %106 = firrtl.bits %io_imem_resp_bits_user 81 to 0 : (!firrtl.uint<87>) -> !firrtl.uint<82>
      firrtl.strictconnect %4, %106 : !firrtl.uint<82>
      firrtl.strictconnect %io_imem_req_bits_addr_1, %1 : !firrtl.uint<39>
      %107 = firrtl.pad %2, 87 : (!firrtl.uint<82>) -> !firrtl.uint<87>
      firrtl.strictconnect %io_imem_req_bits_user_2, %107 : !firrtl.uint<87>
      firrtl.strictconnect %io_imem_req_valid_0, %0 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %108 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %109 = firrtl.and %c_control_logEnable, %108 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %109, "[%d] Frontend_inorder: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %110 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %111 = firrtl.and %c_control_logEnable, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %111, "------------------------ FRONTEND:------------------------\0A" {name = "printf_1"}  : !firrtl.clock, !firrtl.uint<1>
      %112 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %113 = firrtl.and %c_control_logEnable, %112 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %113, "[%d] Frontend_inorder: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %114 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %115 = firrtl.and %c_control_logEnable, %114 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %115, "flush = %b, ifu:(%d,%d), idu:(%d,%d)\0A" {name = "printf_3"} (%12, %6, %5, %30, %29) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %116 = firrtl.and %6, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %117 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.and %116, %117 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %118, "[%d] Frontend_inorder: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %119 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.and %116, %119 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %120, "IFU: pc = 0x%x, instr = 0x%x\0A" {name = "printf_5"} (%8, %7) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<64>
      %121 = firrtl.and %30, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %122 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.and %121, %122 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %123, "[%d] Frontend_inorder: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %124 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %125 = firrtl.and %121, %124 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %125, "IDU1: pc = 0x%x, instr = 0x%x, pnpc = 0x%x\0A" {name = "printf_7"} (%32, %31, %33) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<64>, !firrtl.uint<39>
      firrtl.strictconnect %ifu_bp1_req__bore_valid_48, %ifu_bp1_req__bore_valid : !firrtl.uint<1>
      firrtl.strictconnect %ifu_bp1_req__bore_pc_49, %ifu_bp1_req__bore_pc : !firrtl.uint<39>
      firrtl.strictconnect %ifu_bp1_req__bore_isMissPredict_50, %ifu_bp1_req__bore_isMissPredict : !firrtl.uint<1>
      firrtl.strictconnect %ifu_bp1_req__bore_actualTarget_51, %ifu_bp1_req__bore_actualTarget : !firrtl.uint<39>
      firrtl.strictconnect %ifu_bp1_req__bore_actualTaken_52, %ifu_bp1_req__bore_actualTaken : !firrtl.uint<1>
      firrtl.strictconnect %ifu_bp1_req__bore_fuOpType_53, %ifu_bp1_req__bore_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %ifu_bp1_req__bore_btbType_54, %ifu_bp1_req__bore_btbType : !firrtl.uint<2>
      firrtl.strictconnect %ifu_bp1_req__bore_isRVC_55, %ifu_bp1_req__bore_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %ifu_r__bore, %ifu_r__bore_56 : !firrtl.uint<1>
      firrtl.strictconnect %idu__WIRE__bore, %idu__WIRE__bore_60 : !firrtl.uint<1>
      firrtl.strictconnect %idu_decoder1_vmEnable__bore_61, %idu_decoder1_vmEnable__bore : !firrtl.uint<1>
      firrtl.strictconnect %ifu_bp1_flushTLB__bore_57, %ifu_bp1_flushTLB__bore : !firrtl.uint<1>
      firrtl.strictconnect %idu_decoder1_intrVec__bore_62, %idu_decoder1_intrVec__bore : !firrtl.uint<12>
      firrtl.strictconnect %idu_decoder2_intrVec__bore_63, %idu_decoder2_intrVec__bore : !firrtl.uint<12>
      firrtl.strictconnect %ifu_bp1_flushBTB__bore_58, %ifu_bp1_flushBTB__bore : !firrtl.uint<1>
      firrtl.strictconnect %ifu__WIRE__bore, %ifu__WIRE__bore_59 : !firrtl.uint<1>
    }
    firrtl.extmodule private @DifftestArchIntRegState(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_value_0: !firrtl.uint<64>, in io_value_1: !firrtl.uint<64>, in io_value_2: !firrtl.uint<64>, in io_value_3: !firrtl.uint<64>, in io_value_4: !firrtl.uint<64>, in io_value_5: !firrtl.uint<64>, in io_value_6: !firrtl.uint<64>, in io_value_7: !firrtl.uint<64>, in io_value_8: !firrtl.uint<64>, in io_value_9: !firrtl.uint<64>, in io_value_10: !firrtl.uint<64>, in io_value_11: !firrtl.uint<64>, in io_value_12: !firrtl.uint<64>, in io_value_13: !firrtl.uint<64>, in io_value_14: !firrtl.uint<64>, in io_value_15: !firrtl.uint<64>, in io_value_16: !firrtl.uint<64>, in io_value_17: !firrtl.uint<64>, in io_value_18: !firrtl.uint<64>, in io_value_19: !firrtl.uint<64>, in io_value_20: !firrtl.uint<64>, in io_value_21: !firrtl.uint<64>, in io_value_22: !firrtl.uint<64>, in io_value_23: !firrtl.uint<64>, in io_value_24: !firrtl.uint<64>, in io_value_25: !firrtl.uint<64>, in io_value_26: !firrtl.uint<64>, in io_value_27: !firrtl.uint<64>, in io_value_28: !firrtl.uint<64>, in io_value_29: !firrtl.uint<64>, in io_value_30: !firrtl.uint<64>, in io_value_31: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "DifftestArchIntRegState"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "DifftestArchIntRegState"}
    firrtl.module private @DummyDPICWrapper(in %clock: !firrtl.clock, in %io_value_1: !firrtl.uint<64>, in %io_value_2: !firrtl.uint<64>, in %io_value_3: !firrtl.uint<64>, in %io_value_4: !firrtl.uint<64>, in %io_value_5: !firrtl.uint<64>, in %io_value_6: !firrtl.uint<64>, in %io_value_7: !firrtl.uint<64>, in %io_value_8: !firrtl.uint<64>, in %io_value_9: !firrtl.uint<64>, in %io_value_10: !firrtl.uint<64>, in %io_value_11: !firrtl.uint<64>, in %io_value_12: !firrtl.uint<64>, in %io_value_13: !firrtl.uint<64>, in %io_value_14: !firrtl.uint<64>, in %io_value_15: !firrtl.uint<64>, in %io_value_16: !firrtl.uint<64>, in %io_value_17: !firrtl.uint<64>, in %io_value_18: !firrtl.uint<64>, in %io_value_19: !firrtl.uint<64>, in %io_value_20: !firrtl.uint<64>, in %io_value_21: !firrtl.uint<64>, in %io_value_22: !firrtl.uint<64>, in %io_value_23: !firrtl.uint<64>, in %io_value_24: !firrtl.uint<64>, in %io_value_25: !firrtl.uint<64>, in %io_value_26: !firrtl.uint<64>, in %io_value_27: !firrtl.uint<64>, in %io_value_28: !firrtl.uint<64>, in %io_value_29: !firrtl.uint<64>, in %io_value_30: !firrtl.uint<64>, in %io_value_31: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %dpic_clock, %dpic_enable, %dpic_io_value_0, %dpic_io_value_1, %dpic_io_value_2, %dpic_io_value_3, %dpic_io_value_4, %dpic_io_value_5, %dpic_io_value_6, %dpic_io_value_7, %dpic_io_value_8, %dpic_io_value_9, %dpic_io_value_10, %dpic_io_value_11, %dpic_io_value_12, %dpic_io_value_13, %dpic_io_value_14, %dpic_io_value_15, %dpic_io_value_16, %dpic_io_value_17, %dpic_io_value_18, %dpic_io_value_19, %dpic_io_value_20, %dpic_io_value_21, %dpic_io_value_22, %dpic_io_value_23, %dpic_io_value_24, %dpic_io_value_25, %dpic_io_value_26, %dpic_io_value_27, %dpic_io_value_28, %dpic_io_value_29, %dpic_io_value_30, %dpic_io_value_31, %dpic_io_coreid = firrtl.instance dpic @DifftestArchIntRegState(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_value_0: !firrtl.uint<64>, in io_value_1: !firrtl.uint<64>, in io_value_2: !firrtl.uint<64>, in io_value_3: !firrtl.uint<64>, in io_value_4: !firrtl.uint<64>, in io_value_5: !firrtl.uint<64>, in io_value_6: !firrtl.uint<64>, in io_value_7: !firrtl.uint<64>, in io_value_8: !firrtl.uint<64>, in io_value_9: !firrtl.uint<64>, in io_value_10: !firrtl.uint<64>, in io_value_11: !firrtl.uint<64>, in io_value_12: !firrtl.uint<64>, in io_value_13: !firrtl.uint<64>, in io_value_14: !firrtl.uint<64>, in io_value_15: !firrtl.uint<64>, in io_value_16: !firrtl.uint<64>, in io_value_17: !firrtl.uint<64>, in io_value_18: !firrtl.uint<64>, in io_value_19: !firrtl.uint<64>, in io_value_20: !firrtl.uint<64>, in io_value_21: !firrtl.uint<64>, in io_value_22: !firrtl.uint<64>, in io_value_23: !firrtl.uint<64>, in io_value_24: !firrtl.uint<64>, in io_value_25: !firrtl.uint<64>, in io_value_26: !firrtl.uint<64>, in io_value_27: !firrtl.uint<64>, in io_value_28: !firrtl.uint<64>, in io_value_29: !firrtl.uint<64>, in io_value_30: !firrtl.uint<64>, in io_value_31: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>)
      firrtl.strictconnect %dpic_io_value_0, %c0_ui64 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_1, %io_value_1 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_2, %io_value_2 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_3, %io_value_3 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_4, %io_value_4 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_5, %io_value_5 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_6, %io_value_6 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_7, %io_value_7 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_8, %io_value_8 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_9, %io_value_9 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_10, %io_value_10 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_11, %io_value_11 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_12, %io_value_12 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_13, %io_value_13 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_14, %io_value_14 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_15, %io_value_15 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_16, %io_value_16 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_17, %io_value_17 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_18, %io_value_18 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_19, %io_value_19 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_20, %io_value_20 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_21, %io_value_21 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_22, %io_value_22 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_23, %io_value_23 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_24, %io_value_24 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_25, %io_value_25 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_26, %io_value_26 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_27, %io_value_27 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_28, %io_value_28 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_29, %io_value_29 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_30, %io_value_30 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_value_31, %io_value_31 : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_coreid, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dpic_enable, %c1_ui1 : !firrtl.uint<1>
    }
    firrtl.module private @ISU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_cf_instr: !firrtl.uint<64>, in %io_in_0_bits_cf_pc: !firrtl.uint<39>, in %io_in_0_bits_cf_pnpc: !firrtl.uint<39>, in %io_in_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, in %io_in_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, in %io_in_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_0: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_1: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_2: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_3: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_4: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_5: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_6: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_7: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_8: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_9: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_10: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_11: !firrtl.uint<1>, in %io_in_0_bits_cf_brIdx: !firrtl.uint<4>, in %io_in_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, in %io_in_0_bits_ctrl_src1Type: !firrtl.uint<1>, in %io_in_0_bits_ctrl_src2Type: !firrtl.uint<1>, in %io_in_0_bits_ctrl_fuType: !firrtl.uint<3>, in %io_in_0_bits_ctrl_fuOpType: !firrtl.uint<7>, in %io_in_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, in %io_in_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, in %io_in_0_bits_ctrl_rfWen: !firrtl.uint<1>, in %io_in_0_bits_ctrl_rfDest: !firrtl.uint<5>, in %io_in_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, in %io_in_0_bits_data_imm: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_cf_instr: !firrtl.uint<64>, out %io_out_bits_cf_pc: !firrtl.uint<39>, out %io_out_bits_cf_pnpc: !firrtl.uint<39>, out %io_out_bits_cf_exceptionVec_1: !firrtl.uint<1>, out %io_out_bits_cf_exceptionVec_2: !firrtl.uint<1>, out %io_out_bits_cf_exceptionVec_12: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_0: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_1: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_2: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_3: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_4: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_5: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_6: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_7: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_8: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_9: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_10: !firrtl.uint<1>, out %io_out_bits_cf_intrVec_11: !firrtl.uint<1>, out %io_out_bits_cf_brIdx: !firrtl.uint<4>, out %io_out_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out %io_out_bits_ctrl_fuType: !firrtl.uint<3>, out %io_out_bits_ctrl_fuOpType: !firrtl.uint<7>, out %io_out_bits_ctrl_rfWen: !firrtl.uint<1>, out %io_out_bits_ctrl_rfDest: !firrtl.uint<5>, out %io_out_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out %io_out_bits_data_src1: !firrtl.uint<64>, out %io_out_bits_data_src2: !firrtl.uint<64>, out %io_out_bits_data_imm: !firrtl.uint<64>, in %io_wb_rfWen: !firrtl.uint<1>, in %io_wb_rfDest: !firrtl.uint<5>, in %io_wb_rfData: !firrtl.uint<64>, in %io_forward_valid: !firrtl.uint<1>, in %io_forward_wb_rfWen: !firrtl.uint<1>, in %io_forward_wb_rfDest: !firrtl.uint<5>, in %io_forward_wb_rfData: !firrtl.uint<64>, in %io_forward_fuType: !firrtl.uint<3>, in %io_flush: !firrtl.uint<1>, out %_WIRE_2__bore: !firrtl.uint<1>, out %_WIRE_1__bore: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>) {
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64> {name = "difftest_value_0"}
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_in_1_ready"}
      %c15_ui5 = firrtl.constant 15 : !firrtl.uint<5>
      %c14_ui5 = firrtl.constant 14 : !firrtl.uint<5>
      %c13_ui5 = firrtl.constant 13 : !firrtl.uint<5>
      %c12_ui5 = firrtl.constant 12 : !firrtl.uint<5>
      %c11_ui5 = firrtl.constant 11 : !firrtl.uint<5>
      %c10_ui5 = firrtl.constant 10 : !firrtl.uint<5>
      %c9_ui5 = firrtl.constant 9 : !firrtl.uint<5>
      %c8_ui5 = firrtl.constant 8 : !firrtl.uint<5>
      %c7_ui5 = firrtl.constant 7 : !firrtl.uint<5>
      %c6_ui5 = firrtl.constant 6 : !firrtl.uint<5>
      %c5_ui5 = firrtl.constant 5 : !firrtl.uint<5>
      %c4_ui5 = firrtl.constant 4 : !firrtl.uint<5>
      %c3_ui5 = firrtl.constant 3 : !firrtl.uint<5>
      %c2_ui5 = firrtl.constant 2 : !firrtl.uint<5>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "difftest_sink_control_enable"}
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c1_ui5 = firrtl.constant 1 : !firrtl.uint<5>
      %c31_ui5 = firrtl.constant 31 : !firrtl.uint<5>
      %c30_ui5 = firrtl.constant 30 : !firrtl.uint<5>
      %c29_ui5 = firrtl.constant 29 : !firrtl.uint<5>
      %c28_ui5 = firrtl.constant 28 : !firrtl.uint<5>
      %c27_ui5 = firrtl.constant 27 : !firrtl.uint<5>
      %c26_ui5 = firrtl.constant 26 : !firrtl.uint<5>
      %c25_ui5 = firrtl.constant 25 : !firrtl.uint<5>
      %c24_ui5 = firrtl.constant 24 : !firrtl.uint<5>
      %c23_ui5 = firrtl.constant 23 : !firrtl.uint<5>
      %c22_ui5 = firrtl.constant 22 : !firrtl.uint<5>
      %c21_ui5 = firrtl.constant 21 : !firrtl.uint<5>
      %c20_ui5 = firrtl.constant 20 : !firrtl.uint<5>
      %c19_ui5 = firrtl.constant 19 : !firrtl.uint<5>
      %c18_ui5 = firrtl.constant 18 : !firrtl.uint<5>
      %c17_ui5 = firrtl.constant 17 : !firrtl.uint<5>
      %c16_ui5 = firrtl.constant 16 : !firrtl.uint<5>
      %c1_ui32 = firrtl.constant 1 : !firrtl.uint<32>
      %c0_ui25 = firrtl.constant 0 : !firrtl.uint<25>
      %c33554431_ui25 = firrtl.constant 33554431 : !firrtl.uint<25>
      %io_in_0_ready_0 = firrtl.wire {name = "io_in_0_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_data_src1_2 = firrtl.wire {name = "io_out_bits_data_src1"} : !firrtl.uint<64>
      %io_out_bits_data_src2_3 = firrtl.wire {name = "io_out_bits_data_src2"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_0_ready, %io_in_0_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_instr, %io_in_0_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_cf_pc, %io_in_0_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_cf_pnpc, %io_in_0_bits_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_1, %io_in_0_bits_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_2, %io_in_0_bits_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_exceptionVec_12, %io_in_0_bits_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_0, %io_in_0_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_1, %io_in_0_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_2, %io_in_0_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_3, %io_in_0_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_4, %io_in_0_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_5, %io_in_0_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_6, %io_in_0_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_7, %io_in_0_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_8, %io_in_0_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_9, %io_in_0_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_10, %io_in_0_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_intrVec_11, %io_in_0_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cf_brIdx, %io_in_0_bits_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_cf_crossPageIPFFix, %io_in_0_bits_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_fuType, %io_in_0_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_ctrl_fuOpType, %io_in_0_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %io_out_bits_ctrl_rfWen, %io_in_0_bits_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_ctrl_rfDest, %io_in_0_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_ctrl_isNutCoreTrap, %io_in_0_bits_ctrl_isNutCoreTrap : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_data_src1, %io_out_bits_data_src1_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_data_src2, %io_out_bits_data_src2_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_data_imm, %io_in_0_bits_data_imm : !firrtl.uint<64>
      %forwardRfWen = firrtl.and %io_forward_wb_rfWen, %io_forward_valid {name = "forwardRfWen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dontForward1_T = firrtl.orr %io_forward_fuType {name = "_dontForward1_T"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_dontForward1_T_1 = firrtl.neq %io_forward_fuType, %c1_ui1 {name = "_dontForward1_T_1"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %dontForward1 = firrtl.and %_dontForward1_T, %_dontForward1_T_1 {name = "dontForward1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src1DependWB_T = firrtl.orr %io_in_0_bits_ctrl_rfSrc1 {name = "_src1DependWB_T"} : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %_src1DependEX_T_1 = firrtl.eq %io_in_0_bits_ctrl_rfSrc1, %io_forward_wb_rfDest {name = "_src1DependEX_T_1"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_src1DependEX_T_2 = firrtl.and %_src1DependWB_T, %_src1DependEX_T_1 {name = "_src1DependEX_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src1DependEX = firrtl.and %_src1DependEX_T_2, %forwardRfWen {name = "src1DependEX"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2DependWB_T = firrtl.orr %io_in_0_bits_ctrl_rfSrc2 {name = "_src2DependWB_T"} : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %_src2DependEX_T_1 = firrtl.eq %io_in_0_bits_ctrl_rfSrc2, %io_forward_wb_rfDest {name = "_src2DependEX_T_1"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_src2DependEX_T_2 = firrtl.and %_src2DependWB_T, %_src2DependEX_T_1 {name = "_src2DependEX_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src2DependEX = firrtl.and %_src2DependEX_T_2, %forwardRfWen {name = "src2DependEX"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src1DependWB_T_1 = firrtl.eq %io_in_0_bits_ctrl_rfSrc1, %io_wb_rfDest {name = "_src1DependWB_T_1"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_src1DependWB_T_2 = firrtl.and %_src1DependWB_T, %_src1DependWB_T_1 {name = "_src1DependWB_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src1DependWB = firrtl.and %_src1DependWB_T_2, %io_wb_rfWen {name = "src1DependWB"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2DependWB_T_1 = firrtl.eq %io_in_0_bits_ctrl_rfSrc2, %io_wb_rfDest {name = "_src2DependWB_T_1"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_src2DependWB_T_2 = firrtl.and %_src2DependWB_T, %_src2DependWB_T_1 {name = "_src2DependWB_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src2DependWB = firrtl.and %_src2DependWB_T_2, %io_wb_rfWen {name = "src2DependWB"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2ForwardNextCycle_T = firrtl.not %dontForward1 {name = "_src2ForwardNextCycle_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %src1ForwardNextCycle = firrtl.and %src1DependEX, %_src2ForwardNextCycle_T {name = "src1ForwardNextCycle"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src2ForwardNextCycle = firrtl.and %src2DependEX, %_src2ForwardNextCycle_T {name = "src2ForwardNextCycle"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src1Forward_T = firrtl.not %src1DependEX {name = "_src1Forward_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_src1Forward_T_1 = firrtl.mux(%dontForward1, %_src1Forward_T, %c1_ui1) {name = "_src1Forward_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src1Forward = firrtl.and %src1DependWB, %_src1Forward_T_1 {name = "src1Forward"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2Forward_T = firrtl.not %src2DependEX {name = "_src2Forward_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2Forward_T_1 = firrtl.mux(%dontForward1, %_src2Forward_T, %c1_ui1) {name = "_src2Forward_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src2Forward = firrtl.and %src2DependWB, %_src2Forward_T_1 {name = "src2Forward"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %busy = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %_src1Ready_T = firrtl.dshr %busy, %io_in_0_bits_ctrl_rfSrc1 {name = "_src1Ready_T"} : (!firrtl.uint<32>, !firrtl.uint<5>) -> !firrtl.uint<32>
      %_src1Ready_T_1 = firrtl.bits %_src1Ready_T 0 to 0 {name = "_src1Ready_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_src1Ready_T_2 = firrtl.not %_src1Ready_T_1 {name = "_src1Ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_src1Ready_T_3 = firrtl.or %_src1Ready_T_2, %src1ForwardNextCycle {name = "_src1Ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src1Ready = firrtl.or %_src1Ready_T_3, %src1Forward {name = "src1Ready"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2Ready_T = firrtl.dshr %busy, %io_in_0_bits_ctrl_rfSrc2 {name = "_src2Ready_T"} : (!firrtl.uint<32>, !firrtl.uint<5>) -> !firrtl.uint<32>
      %_src2Ready_T_1 = firrtl.bits %_src2Ready_T 0 to 0 {name = "_src2Ready_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_src2Ready_T_2 = firrtl.not %_src2Ready_T_1 {name = "_src2Ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_src2Ready_T_3 = firrtl.or %_src2Ready_T_2, %src2ForwardNextCycle {name = "_src2Ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %src2Ready = firrtl.or %_src2Ready_T_3, %src2Forward {name = "src2Ready"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T = firrtl.and %io_in_0_valid, %src1Ready {name = "_io_out_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.and %_io_out_valid_T, %src2Ready {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_1 : !firrtl.uint<1>
      %rf_MPORT, %rf_MPORT_10, %rf_MPORT_11, %rf_MPORT_12, %rf_MPORT_13, %rf_MPORT_14, %rf_MPORT_15, %rf_MPORT_16, %rf_MPORT_17, %rf_MPORT_18, %rf_MPORT_19, %rf_MPORT_2, %rf_MPORT_20, %rf_MPORT_21, %rf_MPORT_22, %rf_MPORT_23, %rf_MPORT_24, %rf_MPORT_25, %rf_MPORT_26, %rf_MPORT_27, %rf_MPORT_28, %rf_MPORT_29, %rf_MPORT_3, %rf_MPORT_30, %rf_MPORT_31, %rf_MPORT_32, %rf_MPORT_4, %rf_MPORT_5, %rf_MPORT_6, %rf_MPORT_7, %rf_MPORT_8, %rf_MPORT_9, %rf_io_out_bits_data_src1_MPORT, %rf_io_out_bits_data_src2_MPORT = firrtl.mem Undefined {depth = 32 : i64, name = "rf", portNames = ["MPORT", "MPORT_10", "MPORT_11", "MPORT_12", "MPORT_13", "MPORT_14", "MPORT_15", "MPORT_16", "MPORT_17", "MPORT_18", "MPORT_19", "MPORT_2", "MPORT_20", "MPORT_21", "MPORT_22", "MPORT_23", "MPORT_24", "MPORT_25", "MPORT_26", "MPORT_27", "MPORT_28", "MPORT_29", "MPORT_3", "MPORT_30", "MPORT_31", "MPORT_32", "MPORT_4", "MPORT_5", "MPORT_6", "MPORT_7", "MPORT_8", "MPORT_9", "io_out_bits_data_src1_MPORT", "io_out_bits_data_src2_MPORT"], prefix = "", readLatency = 0 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<1>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>, !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %0 = firrtl.subfield %rf_MPORT[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<1>>
      %1 = firrtl.subfield %rf_MPORT[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<1>>
      %2 = firrtl.subfield %rf_MPORT[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<1>>
      %3 = firrtl.subfield %rf_MPORT[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<1>>
      %4 = firrtl.subfield %rf_MPORT[mask] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<1>>
      %5 = firrtl.subfield %rf_MPORT_10[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %6 = firrtl.subfield %rf_MPORT_10[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %7 = firrtl.subfield %rf_MPORT_10[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %8 = firrtl.subfield %rf_MPORT_10[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %9 = firrtl.subfield %rf_MPORT_11[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %10 = firrtl.subfield %rf_MPORT_11[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %11 = firrtl.subfield %rf_MPORT_11[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %12 = firrtl.subfield %rf_MPORT_11[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %13 = firrtl.subfield %rf_MPORT_12[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %14 = firrtl.subfield %rf_MPORT_12[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %15 = firrtl.subfield %rf_MPORT_12[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %16 = firrtl.subfield %rf_MPORT_12[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %17 = firrtl.subfield %rf_MPORT_13[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %18 = firrtl.subfield %rf_MPORT_13[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %19 = firrtl.subfield %rf_MPORT_13[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %20 = firrtl.subfield %rf_MPORT_13[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %21 = firrtl.subfield %rf_MPORT_14[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %22 = firrtl.subfield %rf_MPORT_14[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %23 = firrtl.subfield %rf_MPORT_14[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %24 = firrtl.subfield %rf_MPORT_14[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %25 = firrtl.subfield %rf_MPORT_15[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %26 = firrtl.subfield %rf_MPORT_15[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %27 = firrtl.subfield %rf_MPORT_15[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %28 = firrtl.subfield %rf_MPORT_15[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %29 = firrtl.subfield %rf_MPORT_16[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %30 = firrtl.subfield %rf_MPORT_16[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %31 = firrtl.subfield %rf_MPORT_16[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %32 = firrtl.subfield %rf_MPORT_16[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %33 = firrtl.subfield %rf_MPORT_17[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %34 = firrtl.subfield %rf_MPORT_17[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %35 = firrtl.subfield %rf_MPORT_17[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %36 = firrtl.subfield %rf_MPORT_17[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %37 = firrtl.subfield %rf_MPORT_18[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %38 = firrtl.subfield %rf_MPORT_18[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %39 = firrtl.subfield %rf_MPORT_18[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %40 = firrtl.subfield %rf_MPORT_18[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %41 = firrtl.subfield %rf_MPORT_19[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %42 = firrtl.subfield %rf_MPORT_19[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %43 = firrtl.subfield %rf_MPORT_19[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %44 = firrtl.subfield %rf_MPORT_19[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %45 = firrtl.subfield %rf_MPORT_2[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %46 = firrtl.subfield %rf_MPORT_2[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %47 = firrtl.subfield %rf_MPORT_2[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %48 = firrtl.subfield %rf_MPORT_2[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %49 = firrtl.subfield %rf_MPORT_20[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %50 = firrtl.subfield %rf_MPORT_20[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %51 = firrtl.subfield %rf_MPORT_20[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %52 = firrtl.subfield %rf_MPORT_20[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %53 = firrtl.subfield %rf_MPORT_21[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %54 = firrtl.subfield %rf_MPORT_21[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %55 = firrtl.subfield %rf_MPORT_21[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %56 = firrtl.subfield %rf_MPORT_21[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %57 = firrtl.subfield %rf_MPORT_22[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %58 = firrtl.subfield %rf_MPORT_22[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %59 = firrtl.subfield %rf_MPORT_22[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %60 = firrtl.subfield %rf_MPORT_22[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %61 = firrtl.subfield %rf_MPORT_23[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %62 = firrtl.subfield %rf_MPORT_23[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %63 = firrtl.subfield %rf_MPORT_23[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %64 = firrtl.subfield %rf_MPORT_23[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %65 = firrtl.subfield %rf_MPORT_24[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %66 = firrtl.subfield %rf_MPORT_24[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %67 = firrtl.subfield %rf_MPORT_24[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %68 = firrtl.subfield %rf_MPORT_24[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %69 = firrtl.subfield %rf_MPORT_25[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %70 = firrtl.subfield %rf_MPORT_25[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %71 = firrtl.subfield %rf_MPORT_25[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %72 = firrtl.subfield %rf_MPORT_25[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %73 = firrtl.subfield %rf_MPORT_26[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %74 = firrtl.subfield %rf_MPORT_26[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %75 = firrtl.subfield %rf_MPORT_26[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %76 = firrtl.subfield %rf_MPORT_26[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %77 = firrtl.subfield %rf_MPORT_27[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %78 = firrtl.subfield %rf_MPORT_27[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %79 = firrtl.subfield %rf_MPORT_27[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %80 = firrtl.subfield %rf_MPORT_27[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %81 = firrtl.subfield %rf_MPORT_28[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %82 = firrtl.subfield %rf_MPORT_28[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %83 = firrtl.subfield %rf_MPORT_28[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %84 = firrtl.subfield %rf_MPORT_28[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %85 = firrtl.subfield %rf_MPORT_29[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %86 = firrtl.subfield %rf_MPORT_29[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %87 = firrtl.subfield %rf_MPORT_29[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %88 = firrtl.subfield %rf_MPORT_29[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %89 = firrtl.subfield %rf_MPORT_3[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %90 = firrtl.subfield %rf_MPORT_3[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %91 = firrtl.subfield %rf_MPORT_3[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %92 = firrtl.subfield %rf_MPORT_3[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %93 = firrtl.subfield %rf_MPORT_30[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %94 = firrtl.subfield %rf_MPORT_30[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %95 = firrtl.subfield %rf_MPORT_30[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %96 = firrtl.subfield %rf_MPORT_30[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %97 = firrtl.subfield %rf_MPORT_31[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %98 = firrtl.subfield %rf_MPORT_31[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %99 = firrtl.subfield %rf_MPORT_31[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %100 = firrtl.subfield %rf_MPORT_31[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %101 = firrtl.subfield %rf_MPORT_32[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %102 = firrtl.subfield %rf_MPORT_32[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %103 = firrtl.subfield %rf_MPORT_32[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %104 = firrtl.subfield %rf_MPORT_32[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %105 = firrtl.subfield %rf_MPORT_4[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %106 = firrtl.subfield %rf_MPORT_4[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %107 = firrtl.subfield %rf_MPORT_4[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %108 = firrtl.subfield %rf_MPORT_4[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %109 = firrtl.subfield %rf_MPORT_5[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %110 = firrtl.subfield %rf_MPORT_5[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %111 = firrtl.subfield %rf_MPORT_5[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %112 = firrtl.subfield %rf_MPORT_5[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %113 = firrtl.subfield %rf_MPORT_6[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %114 = firrtl.subfield %rf_MPORT_6[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %115 = firrtl.subfield %rf_MPORT_6[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %116 = firrtl.subfield %rf_MPORT_6[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %117 = firrtl.subfield %rf_MPORT_7[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %118 = firrtl.subfield %rf_MPORT_7[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %119 = firrtl.subfield %rf_MPORT_7[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %120 = firrtl.subfield %rf_MPORT_7[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %121 = firrtl.subfield %rf_MPORT_8[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %122 = firrtl.subfield %rf_MPORT_8[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %123 = firrtl.subfield %rf_MPORT_8[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %124 = firrtl.subfield %rf_MPORT_8[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %125 = firrtl.subfield %rf_MPORT_9[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %126 = firrtl.subfield %rf_MPORT_9[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %127 = firrtl.subfield %rf_MPORT_9[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %128 = firrtl.subfield %rf_MPORT_9[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %129 = firrtl.subfield %rf_io_out_bits_data_src1_MPORT[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %130 = firrtl.subfield %rf_io_out_bits_data_src1_MPORT[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %131 = firrtl.subfield %rf_io_out_bits_data_src1_MPORT[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %132 = firrtl.subfield %rf_io_out_bits_data_src1_MPORT[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %133 = firrtl.subfield %rf_io_out_bits_data_src2_MPORT[addr] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %134 = firrtl.subfield %rf_io_out_bits_data_src2_MPORT[en] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %135 = firrtl.subfield %rf_io_out_bits_data_src2_MPORT[clk] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %136 = firrtl.subfield %rf_io_out_bits_data_src2_MPORT[data] : !firrtl.bundle<addr: uint<5>, en: uint<1>, clk: clock, data flip: uint<64>>
      %io_out_bits_data_src1_signBit = firrtl.bits %io_in_0_bits_cf_pc 38 to 38 {name = "io_out_bits_data_src1_signBit"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_io_out_bits_data_src1_T_1 = firrtl.mux(%io_out_bits_data_src1_signBit, %c33554431_ui25, %c0_ui25) {name = "_io_out_bits_data_src1_T_1"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_io_out_bits_data_src1_T_2 = firrtl.cat %_io_out_bits_data_src1_T_1, %io_in_0_bits_cf_pc {name = "_io_out_bits_data_src1_T_2"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_6 = firrtl.not %src1ForwardNextCycle {name = "_io_out_bits_data_src1_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src1_T_4 = firrtl.and %src1Forward, %_io_out_bits_data_src1_T_6 {name = "_io_out_bits_data_src1_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src1_T_5 = firrtl.not %io_in_0_bits_ctrl_src1Type {name = "_io_out_bits_data_src1_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src1_T_7 = firrtl.and %_io_out_bits_data_src1_T_5, %_io_out_bits_data_src1_T_6 {name = "_io_out_bits_data_src1_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src1_T_8 = firrtl.not %src1Forward {name = "_io_out_bits_data_src1_T_8"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src1_T_9 = firrtl.and %_io_out_bits_data_src1_T_7, %_io_out_bits_data_src1_T_8 {name = "_io_out_bits_data_src1_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %137 = firrtl.orr %io_in_0_bits_ctrl_rfSrc1 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %_io_out_bits_data_src1_T_10 = firrtl.not %137 {name = "_io_out_bits_data_src1_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %129, %io_in_0_bits_ctrl_rfSrc1 : !firrtl.uint<5>
      firrtl.strictconnect %130, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %131, %clock : !firrtl.clock
      %_io_out_bits_data_src1_T_11 = firrtl.mux(%_io_out_bits_data_src1_T_10, %c0_ui64, %132) {name = "_io_out_bits_data_src1_T_11"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_12 = firrtl.mux(%io_in_0_bits_ctrl_src1Type, %_io_out_bits_data_src1_T_2, %c0_ui64) {name = "_io_out_bits_data_src1_T_12"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_13 = firrtl.mux(%src1ForwardNextCycle, %io_forward_wb_rfData, %c0_ui64) {name = "_io_out_bits_data_src1_T_13"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_14 = firrtl.mux(%_io_out_bits_data_src1_T_4, %io_wb_rfData, %c0_ui64) {name = "_io_out_bits_data_src1_T_14"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_15 = firrtl.mux(%_io_out_bits_data_src1_T_9, %_io_out_bits_data_src1_T_11, %c0_ui64) {name = "_io_out_bits_data_src1_T_15"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_16 = firrtl.or %_io_out_bits_data_src1_T_12, %_io_out_bits_data_src1_T_13 {name = "_io_out_bits_data_src1_T_16"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_17 = firrtl.or %_io_out_bits_data_src1_T_16, %_io_out_bits_data_src1_T_14 {name = "_io_out_bits_data_src1_T_17"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_T_18 = firrtl.or %_io_out_bits_data_src1_T_17, %_io_out_bits_data_src1_T_15 {name = "_io_out_bits_data_src1_T_18"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src1_WIRE = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_io_out_bits_data_src1_WIRE, %_io_out_bits_data_src1_T_18 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_data_src1_2, %_io_out_bits_data_src1_WIRE : !firrtl.uint<64>
      %_io_out_bits_data_src2_T_4 = firrtl.not %src2ForwardNextCycle {name = "_io_out_bits_data_src2_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src2_T_2 = firrtl.and %src2Forward, %_io_out_bits_data_src2_T_4 {name = "_io_out_bits_data_src2_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src2_T_3 = firrtl.not %io_in_0_bits_ctrl_src2Type {name = "_io_out_bits_data_src2_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src2_T_5 = firrtl.and %_io_out_bits_data_src2_T_3, %_io_out_bits_data_src2_T_4 {name = "_io_out_bits_data_src2_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src2_T_6 = firrtl.not %src2Forward {name = "_io_out_bits_data_src2_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_data_src2_T_7 = firrtl.and %_io_out_bits_data_src2_T_5, %_io_out_bits_data_src2_T_6 {name = "_io_out_bits_data_src2_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %138 = firrtl.orr %io_in_0_bits_ctrl_rfSrc2 : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %_io_out_bits_data_src2_T_8 = firrtl.not %138 {name = "_io_out_bits_data_src2_T_8"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %133, %io_in_0_bits_ctrl_rfSrc2 : !firrtl.uint<5>
      firrtl.strictconnect %134, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %135, %clock : !firrtl.clock
      %_io_out_bits_data_src2_T_9 = firrtl.mux(%_io_out_bits_data_src2_T_8, %c0_ui64, %136) {name = "_io_out_bits_data_src2_T_9"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_T_10 = firrtl.mux(%io_in_0_bits_ctrl_src2Type, %io_in_0_bits_data_imm, %c0_ui64) {name = "_io_out_bits_data_src2_T_10"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_T_11 = firrtl.mux(%src2ForwardNextCycle, %io_forward_wb_rfData, %c0_ui64) {name = "_io_out_bits_data_src2_T_11"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_T_12 = firrtl.mux(%_io_out_bits_data_src2_T_2, %io_wb_rfData, %c0_ui64) {name = "_io_out_bits_data_src2_T_12"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_T_13 = firrtl.mux(%_io_out_bits_data_src2_T_7, %_io_out_bits_data_src2_T_9, %c0_ui64) {name = "_io_out_bits_data_src2_T_13"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_T_14 = firrtl.or %_io_out_bits_data_src2_T_10, %_io_out_bits_data_src2_T_11 {name = "_io_out_bits_data_src2_T_14"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_T_15 = firrtl.or %_io_out_bits_data_src2_T_14, %_io_out_bits_data_src2_T_12 {name = "_io_out_bits_data_src2_T_15"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_T_16 = firrtl.or %_io_out_bits_data_src2_T_15, %_io_out_bits_data_src2_T_13 {name = "_io_out_bits_data_src2_T_16"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_data_src2_WIRE = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_io_out_bits_data_src2_WIRE, %_io_out_bits_data_src2_T_16 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_data_src2_3, %_io_out_bits_data_src2_WIRE : !firrtl.uint<64>
      firrtl.strictconnect %0, %io_wb_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %1, %io_wb_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %2, %clock : !firrtl.clock
      firrtl.strictconnect %4, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %3, %io_wb_rfData : !firrtl.uint<64>
      %_wbClearMask_T = firrtl.orr %io_wb_rfDest {name = "_wbClearMask_T"} : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %_wbClearMask_T_1 = firrtl.eq %io_wb_rfDest, %io_forward_wb_rfDest {name = "_wbClearMask_T_1"} : (!firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_wbClearMask_T_2 = firrtl.and %_wbClearMask_T, %_wbClearMask_T_1 {name = "_wbClearMask_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wbClearMask_T_3 = firrtl.and %_wbClearMask_T_2, %forwardRfWen {name = "_wbClearMask_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wbClearMask_T_4 = firrtl.not %_wbClearMask_T_3 {name = "_wbClearMask_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_wbClearMask_T_5 = firrtl.and %io_wb_rfWen, %_wbClearMask_T_4 {name = "_wbClearMask_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wbClearMask_T_6 = firrtl.dshl %c1_ui32, %io_wb_rfDest {name = "_wbClearMask_T_6"} : (!firrtl.uint<32>, !firrtl.uint<5>) -> !firrtl.uint<63>
      %_wbClearMask_T_7 = firrtl.bits %_wbClearMask_T_6 31 to 0 {name = "_wbClearMask_T_7"} : (!firrtl.uint<63>) -> !firrtl.uint<32>
      %wbClearMask = firrtl.mux(%_wbClearMask_T_5, %_wbClearMask_T_7, %c0_ui32) {name = "wbClearMask"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_0_ready_T_1 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_in_0_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isuFireSetMask_T_1 = firrtl.dshl %c1_ui32, %io_in_0_bits_ctrl_rfDest {name = "_isuFireSetMask_T_1"} : (!firrtl.uint<32>, !firrtl.uint<5>) -> !firrtl.uint<63>
      %_isuFireSetMask_T_2 = firrtl.bits %_isuFireSetMask_T_1 31 to 0 {name = "_isuFireSetMask_T_2"} : (!firrtl.uint<63>) -> !firrtl.uint<32>
      %isuFireSetMask = firrtl.mux(%_io_in_0_ready_T_1, %_isuFireSetMask_T_2, %c0_ui32) {name = "isuFireSetMask"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_busy_T_5 = firrtl.not %wbClearMask {name = "_busy_T_5"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_busy_T_6 = firrtl.and %busy, %_busy_T_5 {name = "_busy_T_6"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_busy_T_7 = firrtl.or %_busy_T_6, %isuFireSetMask {name = "_busy_T_7"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_busy_T_8 = firrtl.bits %_busy_T_7 31 to 1 {name = "_busy_T_8"} : (!firrtl.uint<32>) -> !firrtl.uint<31>
      %_busy_T_9 = firrtl.cat %_busy_T_8, %c0_ui1 {name = "_busy_T_9"} : (!firrtl.uint<31>, !firrtl.uint<1>) -> !firrtl.uint<32>
      %139 = firrtl.mux(%io_flush, %c0_ui32, %_busy_T_9) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %busy, %139 : !firrtl.uint<32>
      %_io_in_0_ready_T = firrtl.not %io_in_0_valid {name = "_io_in_0_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_0_ready_T_2 = firrtl.or %_io_in_0_ready_T, %_io_in_0_ready_T_1 {name = "_io_in_0_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_ready_0, %_io_in_0_ready_T_2 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %140 = firrtl.and %_io_in_0_ready_T_1, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %141 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %142 = firrtl.and %140, %141 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %142, "[%d] ISU: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %143 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %144 = firrtl.and %140, %143 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %144, "issue: pc %x npc %x instr %x src1 %x src2 %x imm %x\0A" {name = "printf_1"} (%io_in_0_bits_cf_pc, %io_in_0_bits_cf_pnpc, %io_in_0_bits_cf_instr, %io_out_bits_data_src1_2, %io_out_bits_data_src2_3, %io_in_0_bits_data_imm) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>
      %145 = firrtl.not %io_out_valid_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %146 = firrtl.and %io_in_0_valid, %145 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %147 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %147, %146 : !firrtl.uint<1>
      %148 = firrtl.not %_io_in_0_ready_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %149 = firrtl.and %io_out_valid_1, %148 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %150 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %150, %149 : !firrtl.uint<1>
      %151 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %151, %_io_in_0_ready_T_1 : !firrtl.uint<1>
      %difftest_value_1 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_2 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_3 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_4 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_5 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_6 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_7 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_8 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_9 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_10 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_11 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_12 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_13 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_14 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_15 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_16 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_17 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_18 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_19 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_20 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_21 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_22 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_23 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_24 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_25 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_26 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_27 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_28 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_29 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_30 = firrtl.wire : !firrtl.uint<64>
      %difftest_value_31 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_1 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_2 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_3 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_4 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_5 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_6 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_7 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_8 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_9 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_10 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_11 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_12 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_13 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_14 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_15 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_16 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_17 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_18 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_19 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_20 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_21 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_22 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_23 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_24 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_25 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_26 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_27 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_28 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_29 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_30 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_value_31 = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_module_clock, %difftest_sink_module_io_value_1, %difftest_sink_module_io_value_2, %difftest_sink_module_io_value_3, %difftest_sink_module_io_value_4, %difftest_sink_module_io_value_5, %difftest_sink_module_io_value_6, %difftest_sink_module_io_value_7, %difftest_sink_module_io_value_8, %difftest_sink_module_io_value_9, %difftest_sink_module_io_value_10, %difftest_sink_module_io_value_11, %difftest_sink_module_io_value_12, %difftest_sink_module_io_value_13, %difftest_sink_module_io_value_14, %difftest_sink_module_io_value_15, %difftest_sink_module_io_value_16, %difftest_sink_module_io_value_17, %difftest_sink_module_io_value_18, %difftest_sink_module_io_value_19, %difftest_sink_module_io_value_20, %difftest_sink_module_io_value_21, %difftest_sink_module_io_value_22, %difftest_sink_module_io_value_23, %difftest_sink_module_io_value_24, %difftest_sink_module_io_value_25, %difftest_sink_module_io_value_26, %difftest_sink_module_io_value_27, %difftest_sink_module_io_value_28, %difftest_sink_module_io_value_29, %difftest_sink_module_io_value_30, %difftest_sink_module_io_value_31 = firrtl.instance difftest_sink_module @DummyDPICWrapper(in clock: !firrtl.clock, in io_value_1: !firrtl.uint<64>, in io_value_2: !firrtl.uint<64>, in io_value_3: !firrtl.uint<64>, in io_value_4: !firrtl.uint<64>, in io_value_5: !firrtl.uint<64>, in io_value_6: !firrtl.uint<64>, in io_value_7: !firrtl.uint<64>, in io_value_8: !firrtl.uint<64>, in io_value_9: !firrtl.uint<64>, in io_value_10: !firrtl.uint<64>, in io_value_11: !firrtl.uint<64>, in io_value_12: !firrtl.uint<64>, in io_value_13: !firrtl.uint<64>, in io_value_14: !firrtl.uint<64>, in io_value_15: !firrtl.uint<64>, in io_value_16: !firrtl.uint<64>, in io_value_17: !firrtl.uint<64>, in io_value_18: !firrtl.uint<64>, in io_value_19: !firrtl.uint<64>, in io_value_20: !firrtl.uint<64>, in io_value_21: !firrtl.uint<64>, in io_value_22: !firrtl.uint<64>, in io_value_23: !firrtl.uint<64>, in io_value_24: !firrtl.uint<64>, in io_value_25: !firrtl.uint<64>, in io_value_26: !firrtl.uint<64>, in io_value_27: !firrtl.uint<64>, in io_value_28: !firrtl.uint<64>, in io_value_29: !firrtl.uint<64>, in io_value_30: !firrtl.uint<64>, in io_value_31: !firrtl.uint<64>)
      firrtl.strictconnect %difftest_sink_module_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftest_sink_module_io_value_1, %difftest_sink_value_1 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_2, %difftest_sink_value_2 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_3, %difftest_sink_value_3 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_4, %difftest_sink_value_4 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_5, %difftest_sink_value_5 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_6, %difftest_sink_value_6 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_7, %difftest_sink_value_7 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_8, %difftest_sink_value_8 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_9, %difftest_sink_value_9 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_10, %difftest_sink_value_10 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_11, %difftest_sink_value_11 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_12, %difftest_sink_value_12 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_13, %difftest_sink_value_13 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_14, %difftest_sink_value_14 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_15, %difftest_sink_value_15 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_16, %difftest_sink_value_16 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_17, %difftest_sink_value_17 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_18, %difftest_sink_value_18 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_19, %difftest_sink_value_19 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_20, %difftest_sink_value_20 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_21, %difftest_sink_value_21 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_22, %difftest_sink_value_22 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_23, %difftest_sink_value_23 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_24, %difftest_sink_value_24 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_25, %difftest_sink_value_25 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_26, %difftest_sink_value_26 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_27, %difftest_sink_value_27 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_28, %difftest_sink_value_28 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_29, %difftest_sink_value_29 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_30, %difftest_sink_value_30 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_value_31, %difftest_sink_value_31 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_1, %difftest_value_1 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_2, %difftest_value_2 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_3, %difftest_value_3 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_4, %difftest_value_4 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_5, %difftest_value_5 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_6, %difftest_value_6 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_7, %difftest_value_7 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_8, %difftest_value_8 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_9, %difftest_value_9 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_10, %difftest_value_10 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_11, %difftest_value_11 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_12, %difftest_value_12 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_13, %difftest_value_13 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_14, %difftest_value_14 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_15, %difftest_value_15 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_16, %difftest_value_16 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_17, %difftest_value_17 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_18, %difftest_value_18 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_19, %difftest_value_19 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_20, %difftest_value_20 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_21, %difftest_value_21 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_22, %difftest_value_22 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_23, %difftest_value_23 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_24, %difftest_value_24 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_25, %difftest_value_25 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_26, %difftest_value_26 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_27, %difftest_value_27 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_28, %difftest_value_28 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_29, %difftest_value_29 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_30, %difftest_value_30 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_value_31, %difftest_value_31 : !firrtl.uint<64>
      firrtl.strictconnect %45, %c1_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %46, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %47, %clock : !firrtl.clock
      firrtl.strictconnect %89, %c2_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %90, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %91, %clock : !firrtl.clock
      firrtl.strictconnect %105, %c3_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %106, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %107, %clock : !firrtl.clock
      firrtl.strictconnect %109, %c4_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %110, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %111, %clock : !firrtl.clock
      firrtl.strictconnect %113, %c5_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %114, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %115, %clock : !firrtl.clock
      firrtl.strictconnect %117, %c6_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %118, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %119, %clock : !firrtl.clock
      firrtl.strictconnect %121, %c7_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %122, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %123, %clock : !firrtl.clock
      firrtl.strictconnect %125, %c8_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %126, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %127, %clock : !firrtl.clock
      firrtl.strictconnect %5, %c9_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %6, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %7, %clock : !firrtl.clock
      firrtl.strictconnect %9, %c10_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %10, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %11, %clock : !firrtl.clock
      firrtl.strictconnect %13, %c11_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %14, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %15, %clock : !firrtl.clock
      firrtl.strictconnect %17, %c12_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %18, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %19, %clock : !firrtl.clock
      firrtl.strictconnect %21, %c13_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %22, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %23, %clock : !firrtl.clock
      firrtl.strictconnect %25, %c14_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %26, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %27, %clock : !firrtl.clock
      firrtl.strictconnect %29, %c15_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %30, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %31, %clock : !firrtl.clock
      firrtl.strictconnect %33, %c16_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %34, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %35, %clock : !firrtl.clock
      firrtl.strictconnect %37, %c17_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %38, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %39, %clock : !firrtl.clock
      firrtl.strictconnect %41, %c18_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %42, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %43, %clock : !firrtl.clock
      firrtl.strictconnect %49, %c19_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %50, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %51, %clock : !firrtl.clock
      firrtl.strictconnect %53, %c20_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %54, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %55, %clock : !firrtl.clock
      firrtl.strictconnect %57, %c21_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %58, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %59, %clock : !firrtl.clock
      firrtl.strictconnect %61, %c22_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %62, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %63, %clock : !firrtl.clock
      firrtl.strictconnect %65, %c23_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %66, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %67, %clock : !firrtl.clock
      firrtl.strictconnect %69, %c24_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %70, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %71, %clock : !firrtl.clock
      firrtl.strictconnect %73, %c25_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %74, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %75, %clock : !firrtl.clock
      firrtl.strictconnect %77, %c26_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %78, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %79, %clock : !firrtl.clock
      firrtl.strictconnect %81, %c27_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %82, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %83, %clock : !firrtl.clock
      firrtl.strictconnect %85, %c28_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %86, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %87, %clock : !firrtl.clock
      firrtl.strictconnect %93, %c29_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %94, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %95, %clock : !firrtl.clock
      firrtl.strictconnect %97, %c30_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %98, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %99, %clock : !firrtl.clock
      firrtl.strictconnect %101, %c31_ui5 : !firrtl.uint<5>
      firrtl.strictconnect %102, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %103, %clock : !firrtl.clock
      %152 = firrtl.wire : !firrtl.uint<64>
      %153 = firrtl.wire : !firrtl.uint<64>
      %154 = firrtl.wire : !firrtl.uint<64>
      %155 = firrtl.wire : !firrtl.uint<64>
      %156 = firrtl.wire : !firrtl.uint<64>
      %157 = firrtl.wire : !firrtl.uint<64>
      %158 = firrtl.wire : !firrtl.uint<64>
      %159 = firrtl.wire : !firrtl.uint<64>
      %160 = firrtl.wire : !firrtl.uint<64>
      %161 = firrtl.wire : !firrtl.uint<64>
      %162 = firrtl.wire : !firrtl.uint<64>
      %163 = firrtl.wire : !firrtl.uint<64>
      %164 = firrtl.wire : !firrtl.uint<64>
      %165 = firrtl.wire : !firrtl.uint<64>
      %166 = firrtl.wire : !firrtl.uint<64>
      %167 = firrtl.wire : !firrtl.uint<64>
      %168 = firrtl.wire : !firrtl.uint<64>
      %169 = firrtl.wire : !firrtl.uint<64>
      %170 = firrtl.wire : !firrtl.uint<64>
      %171 = firrtl.wire : !firrtl.uint<64>
      %172 = firrtl.wire : !firrtl.uint<64>
      %173 = firrtl.wire : !firrtl.uint<64>
      %174 = firrtl.wire : !firrtl.uint<64>
      %175 = firrtl.wire : !firrtl.uint<64>
      %176 = firrtl.wire : !firrtl.uint<64>
      %177 = firrtl.wire : !firrtl.uint<64>
      %178 = firrtl.wire : !firrtl.uint<64>
      %179 = firrtl.wire : !firrtl.uint<64>
      %180 = firrtl.wire : !firrtl.uint<64>
      %181 = firrtl.wire : !firrtl.uint<64>
      %182 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %152, %48 : !firrtl.uint<64>
      firrtl.strictconnect %153, %92 : !firrtl.uint<64>
      firrtl.strictconnect %154, %108 : !firrtl.uint<64>
      firrtl.strictconnect %155, %112 : !firrtl.uint<64>
      firrtl.strictconnect %156, %116 : !firrtl.uint<64>
      firrtl.strictconnect %157, %120 : !firrtl.uint<64>
      firrtl.strictconnect %158, %124 : !firrtl.uint<64>
      firrtl.strictconnect %159, %128 : !firrtl.uint<64>
      firrtl.strictconnect %160, %8 : !firrtl.uint<64>
      firrtl.strictconnect %161, %12 : !firrtl.uint<64>
      firrtl.strictconnect %162, %16 : !firrtl.uint<64>
      firrtl.strictconnect %163, %20 : !firrtl.uint<64>
      firrtl.strictconnect %164, %24 : !firrtl.uint<64>
      firrtl.strictconnect %165, %28 : !firrtl.uint<64>
      firrtl.strictconnect %166, %32 : !firrtl.uint<64>
      firrtl.strictconnect %167, %36 : !firrtl.uint<64>
      firrtl.strictconnect %168, %40 : !firrtl.uint<64>
      firrtl.strictconnect %169, %44 : !firrtl.uint<64>
      firrtl.strictconnect %170, %52 : !firrtl.uint<64>
      firrtl.strictconnect %171, %56 : !firrtl.uint<64>
      firrtl.strictconnect %172, %60 : !firrtl.uint<64>
      firrtl.strictconnect %173, %64 : !firrtl.uint<64>
      firrtl.strictconnect %174, %68 : !firrtl.uint<64>
      firrtl.strictconnect %175, %72 : !firrtl.uint<64>
      firrtl.strictconnect %176, %76 : !firrtl.uint<64>
      firrtl.strictconnect %177, %80 : !firrtl.uint<64>
      firrtl.strictconnect %178, %84 : !firrtl.uint<64>
      firrtl.strictconnect %179, %88 : !firrtl.uint<64>
      firrtl.strictconnect %180, %96 : !firrtl.uint<64>
      firrtl.strictconnect %181, %100 : !firrtl.uint<64>
      firrtl.strictconnect %182, %104 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_1, %152 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_2, %153 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_3, %154 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_4, %155 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_5, %156 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_6, %157 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_7, %158 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_8, %159 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_9, %160 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_10, %161 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_11, %162 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_12, %163 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_13, %164 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_14, %165 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_15, %166 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_16, %167 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_17, %168 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_18, %169 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_19, %170 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_20, %171 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_21, %172 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_22, %173 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_23, %174 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_24, %175 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_25, %176 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_26, %177 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_27, %178 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_28, %179 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_29, %180 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_30, %181 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_value_31, %182 : !firrtl.uint<64>
      firrtl.strictconnect %_WIRE_2__bore, %151 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_1__bore, %150 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %147 : !firrtl.uint<1>
    }
    firrtl.module private @ALU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_src1: !firrtl.uint<64>, in %io_in_bits_src2: !firrtl.uint<64>, in %io_in_bits_func: !firrtl.uint<7>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits: !firrtl.uint<64>, in %io_cfIn_instr: !firrtl.uint<64>, in %io_cfIn_pc: !firrtl.uint<39>, in %io_cfIn_pnpc: !firrtl.uint<39>, in %io_cfIn_brIdx: !firrtl.uint<4>, out %io_redirect_target: !firrtl.uint<39>, out %io_redirect_valid: !firrtl.uint<1>, in %io_offset: !firrtl.uint<64>, out %_WIRE_7__bore: !firrtl.uint<1>, out %REG__bore_valid: !firrtl.uint<1>, out %REG__bore_pc: !firrtl.uint<39>, out %REG__bore_isMissPredict: !firrtl.uint<1>, out %REG__bore_actualTarget: !firrtl.uint<39>, out %REG__bore_actualTaken: !firrtl.uint<1>, out %REG__bore_fuOpType: !firrtl.uint<7>, out %REG__bore_btbType: !firrtl.uint<2>, out %REG__bore_isRVC: !firrtl.uint<1>, out %_WIRE_14__bore: !firrtl.uint<1>, out %_WIRE_6__bore: !firrtl.uint<1>, out %_WIRE_15__bore: !firrtl.uint<1>, out %_WIRE_2__bore: !firrtl.uint<1>, out %_WIRE_8__bore: !firrtl.uint<1>, out %_WIRE_1__bore: !firrtl.uint<1>, out %_WIRE_13__bore: !firrtl.uint<1>, out %_WIRE_11__bore: !firrtl.uint<1>, out %_WIRE_3__bore: !firrtl.uint<1>, out %_WIRE_12__bore: !firrtl.uint<1>, out %_WIRE_9__bore: !firrtl.uint<1>, out %_WIRE_5__bore: !firrtl.uint<1>, out %_WIRE_16__bore: !firrtl.uint<1>, out %_WIRE_10__bore: !firrtl.uint<1>, out %_WIRE_4__bore: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_redirect_rtype"}
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c94_ui7 = firrtl.constant 94 : !firrtl.uint<7>
      %c90_ui7 = firrtl.constant 90 : !firrtl.uint<7>
      %c92_ui7 = firrtl.constant 92 : !firrtl.uint<7>
      %c88_ui7 = firrtl.constant 88 : !firrtl.uint<7>
      %c0_ui25 = firrtl.constant 0 : !firrtl.uint<25>
      %c33554431_ui25 = firrtl.constant 33554431 : !firrtl.uint<25>
      %c13_ui4 = firrtl.constant 13 : !firrtl.uint<4>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui63 = firrtl.constant 0 : !firrtl.uint<63>
      %c45_ui6 = firrtl.constant 45 : !firrtl.uint<6>
      %c37_ui6 = firrtl.constant 37 : !firrtl.uint<6>
      %c4294967295_ui32 = firrtl.constant 4294967295 : !firrtl.uint<32>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c18446744073709551615_ui64 = firrtl.constant 18446744073709551615 : !firrtl.uint<64>
      %io_out_bits_0 = firrtl.wire {name = "io_out_bits"} : !firrtl.uint<64>
      %io_redirect_target_1 = firrtl.wire {name = "io_redirect_target"} : !firrtl.uint<39>
      %io_redirect_valid_2 = firrtl.wire {name = "io_redirect_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits, %io_out_bits_0 : !firrtl.uint<64>
      firrtl.strictconnect %io_redirect_target, %io_redirect_target_1 : !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_valid, %io_redirect_valid_2 : !firrtl.uint<1>
      %_isAdderSub_T = firrtl.bits %io_in_bits_func 6 to 6 {name = "_isAdderSub_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %isAdderSub = firrtl.not %_isAdderSub_T {name = "isAdderSub"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_adderRes_T = firrtl.mux(%isAdderSub, %c18446744073709551615_ui64, %c0_ui64) {name = "_adderRes_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_adderRes_T_1 = firrtl.xor %io_in_bits_src2, %_adderRes_T {name = "_adderRes_T_1"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_adderRes_T_2 = firrtl.add %io_in_bits_src1, %_adderRes_T_1 {name = "_adderRes_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %_adderRes_T_3 = firrtl.add %_adderRes_T_2, %isAdderSub {name = "_adderRes_T_3"} : (!firrtl.uint<65>, !firrtl.uint<1>) -> !firrtl.uint<66>
      %adderRes = firrtl.bits %_adderRes_T_3 64 to 0 {name = "adderRes"} : (!firrtl.uint<66>) -> !firrtl.uint<65>
      %xorRes = firrtl.xor %io_in_bits_src1, %io_in_bits_src2 {name = "xorRes"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_sltu_T = firrtl.bits %_adderRes_T_3 64 to 64 {name = "_sltu_T"} : (!firrtl.uint<66>) -> !firrtl.uint<1>
      %sltu = firrtl.not %_sltu_T {name = "sltu"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_slt_T = firrtl.bits %xorRes 63 to 63 {name = "_slt_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %slt = firrtl.xor %_slt_T, %sltu {name = "slt"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_shsrc1_T_3 = firrtl.bits %io_in_bits_src1 31 to 0 {name = "_shsrc1_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_shsrc1_T_2 = firrtl.cat %c0_ui32, %_shsrc1_T_3 {name = "_shsrc1_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %shsrc1_signBit = firrtl.bits %io_in_bits_src1 31 to 31 {name = "shsrc1_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_shsrc1_T_4 = firrtl.mux(%shsrc1_signBit, %c4294967295_ui32, %c0_ui32) {name = "_shsrc1_T_4"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_shsrc1_T_5 = firrtl.cat %_shsrc1_T_4, %_shsrc1_T_3 {name = "_shsrc1_T_5"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_shsrc1_T_6 = firrtl.eq %io_in_bits_func, %c37_ui6 {name = "_shsrc1_T_6"} : (!firrtl.uint<7>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_shsrc1_T_7 = firrtl.mux(%_shsrc1_T_6, %_shsrc1_T_2, %io_in_bits_src1) {name = "_shsrc1_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_shsrc1_T_8 = firrtl.eq %io_in_bits_func, %c45_ui6 {name = "_shsrc1_T_8"} : (!firrtl.uint<7>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %shsrc1 = firrtl.mux(%_shsrc1_T_8, %_shsrc1_T_5, %_shsrc1_T_7) {name = "shsrc1"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_aluRes_T = firrtl.bits %io_in_bits_func 5 to 5 {name = "_aluRes_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_shamt_T_1 = firrtl.bits %io_in_bits_src2 4 to 0 {name = "_shamt_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<5>
      %_shamt_T_2 = firrtl.bits %io_in_bits_src2 5 to 0 {name = "_shamt_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<6>
      %0 = firrtl.pad %_shamt_T_1, 6 : (!firrtl.uint<5>) -> !firrtl.uint<6>
      %shamt = firrtl.mux(%_aluRes_T, %0, %_shamt_T_2) {name = "shamt"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_res_T = firrtl.bits %io_in_bits_func 3 to 0 {name = "_res_T"} : (!firrtl.uint<7>) -> !firrtl.uint<4>
      %_res_T_1 = firrtl.dshl %shsrc1, %shamt {name = "_res_T_1"} : (!firrtl.uint<64>, !firrtl.uint<6>) -> !firrtl.uint<127>
      %_res_T_2 = firrtl.bits %_res_T_1 63 to 0 {name = "_res_T_2"} : (!firrtl.uint<127>) -> !firrtl.uint<64>
      %_res_T_3 = firrtl.cat %c0_ui63, %slt {name = "_res_T_3"} : (!firrtl.uint<63>, !firrtl.uint<1>) -> !firrtl.uint<64>
      %_res_T_4 = firrtl.cat %c0_ui63, %sltu {name = "_res_T_4"} : (!firrtl.uint<63>, !firrtl.uint<1>) -> !firrtl.uint<64>
      %_res_T_5 = firrtl.dshr %shsrc1, %shamt {name = "_res_T_5"} : (!firrtl.uint<64>, !firrtl.uint<6>) -> !firrtl.uint<64>
      %_res_T_6 = firrtl.or %io_in_bits_src1, %io_in_bits_src2 {name = "_res_T_6"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_7 = firrtl.and %io_in_bits_src1, %io_in_bits_src2 {name = "_res_T_7"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_8 = firrtl.asSInt %shsrc1 {name = "_res_T_8"} : (!firrtl.uint<64>) -> !firrtl.sint<64>
      %_res_T_9 = firrtl.dshr %_res_T_8, %shamt {name = "_res_T_9"} : (!firrtl.sint<64>, !firrtl.uint<6>) -> !firrtl.sint<64>
      %_res_T_10 = firrtl.asUInt %_res_T_9 {name = "_res_T_10"} : (!firrtl.sint<64>) -> !firrtl.uint<64>
      %_res_T_11 = firrtl.eq %_res_T, %c1_ui1 {name = "_res_T_11"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.pad %_res_T_2, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_12 = firrtl.mux(%_res_T_11, %1, %adderRes) {name = "_res_T_12"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_13 = firrtl.eq %_res_T, %c2_ui2 {name = "_res_T_13"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %2 = firrtl.pad %_res_T_3, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_14 = firrtl.mux(%_res_T_13, %2, %_res_T_12) {name = "_res_T_14"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_15 = firrtl.eq %_res_T, %c3_ui2 {name = "_res_T_15"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %3 = firrtl.pad %_res_T_4, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_16 = firrtl.mux(%_res_T_15, %3, %_res_T_14) {name = "_res_T_16"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_17 = firrtl.eq %_res_T, %c4_ui3 {name = "_res_T_17"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %4 = firrtl.pad %xorRes, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_18 = firrtl.mux(%_res_T_17, %4, %_res_T_16) {name = "_res_T_18"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_19 = firrtl.eq %_res_T, %c5_ui3 {name = "_res_T_19"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %5 = firrtl.pad %_res_T_5, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_20 = firrtl.mux(%_res_T_19, %5, %_res_T_18) {name = "_res_T_20"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_21 = firrtl.eq %_res_T, %c6_ui3 {name = "_res_T_21"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %6 = firrtl.pad %_res_T_6, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_22 = firrtl.mux(%_res_T_21, %6, %_res_T_20) {name = "_res_T_22"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_23 = firrtl.eq %_res_T, %c7_ui3 {name = "_res_T_23"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %7 = firrtl.pad %_res_T_7, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_24 = firrtl.mux(%_res_T_23, %7, %_res_T_22) {name = "_res_T_24"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_25 = firrtl.eq %_res_T, %c13_ui4 {name = "_res_T_25"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %8 = firrtl.pad %_res_T_10, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %res = firrtl.mux(%_res_T_25, %8, %_res_T_24) {name = "res"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_aluRes_T_1 = firrtl.bits %res 31 to 0 {name = "_aluRes_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<32>
      %aluRes_signBit = firrtl.bits %res 31 to 31 {name = "aluRes_signBit"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_aluRes_T_2 = firrtl.mux(%aluRes_signBit, %c4294967295_ui32, %c0_ui32) {name = "_aluRes_T_2"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_aluRes_T_3 = firrtl.cat %_aluRes_T_2, %_aluRes_T_1 {name = "_aluRes_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %9 = firrtl.pad %_aluRes_T_3, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %aluRes = firrtl.mux(%_aluRes_T, %9, %res) {name = "aluRes"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_branchOpTable_T = firrtl.orr %xorRes {name = "_branchOpTable_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %branchOpTable_0_2 = firrtl.not %_branchOpTable_T {name = "branchOpTable_0_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_isBranch_T = firrtl.bits %io_in_bits_func 3 to 3 {name = "_isBranch_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %isBranch = firrtl.not %_isBranch_T {name = "isBranch"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %isBru = firrtl.bits %io_in_bits_func 4 to 4 {name = "isBru"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_taken_T = firrtl.bits %io_in_bits_func 2 to 1 {name = "_taken_T"} : (!firrtl.uint<7>) -> !firrtl.uint<2>
      %10 = firrtl.orr %_taken_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_taken_T_1 = firrtl.not %10 {name = "_taken_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_taken_T_2 = firrtl.eq %_taken_T, %c2_ui2 {name = "_taken_T_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_taken_T_3 = firrtl.andr %_taken_T {name = "_taken_T_3"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_taken_T_4 = firrtl.mux(%_taken_T_1, %branchOpTable_0_2, %c0_ui1) {name = "_taken_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_taken_T_5 = firrtl.mux(%_taken_T_2, %slt, %c0_ui1) {name = "_taken_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_taken_T_6 = firrtl.mux(%_taken_T_3, %sltu, %c0_ui1) {name = "_taken_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_taken_T_7 = firrtl.or %_taken_T_4, %_taken_T_5 {name = "_taken_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_taken_T_8 = firrtl.or %_taken_T_7, %_taken_T_6 {name = "_taken_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_taken_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_taken_WIRE, %_taken_T_8 : !firrtl.uint<1>
      %_taken_T_9 = firrtl.bits %io_in_bits_func 0 to 0 {name = "_taken_T_9"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %taken = firrtl.xor %_taken_WIRE, %_taken_T_9 {name = "taken"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_target_T = firrtl.add %io_cfIn_pc, %io_offset {name = "_target_T"} : (!firrtl.uint<39>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %_target_T_1 = firrtl.bits %_target_T 63 to 0 {name = "_target_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %11 = firrtl.pad %_target_T_1, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_target_T_2 = firrtl.mux(%isBranch, %11, %adderRes) {name = "_target_T_2"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %target = firrtl.bits %_target_T_2 38 to 0 {name = "target"} : (!firrtl.uint<65>) -> !firrtl.uint<39>
      %_io_redirect_target_T = firrtl.not %taken {name = "_io_redirect_target_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_predictWrong_T_1 = firrtl.and %_io_redirect_target_T, %isBranch {name = "_predictWrong_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_predictWrong_T_3 = firrtl.bits %io_cfIn_brIdx 0 to 0 {name = "_predictWrong_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_predictWrong_T_4 = firrtl.not %_predictWrong_T_3 {name = "_predictWrong_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_predictWrong_T_5 = firrtl.neq %io_redirect_target_1, %io_cfIn_pnpc {name = "_predictWrong_T_5"} : (!firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<1>
      %_predictWrong_T_6 = firrtl.or %_predictWrong_T_4, %_predictWrong_T_5 {name = "_predictWrong_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %predictWrong = firrtl.mux(%_predictWrong_T_1, %_predictWrong_T_3, %_predictWrong_T_6) {name = "predictWrong"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isRVC_T = firrtl.bits %io_cfIn_instr 1 to 0 {name = "_isRVC_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %_io_out_bits_T = firrtl.andr %_isRVC_T {name = "_io_out_bits_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %isRVC = firrtl.not %_io_out_bits_T {name = "isRVC"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.andr %_isRVC_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %13 = firrtl.or %12, %isRVC : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.not %io_in_valid : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.or %13, %14 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %15, %16, "Assertion failed\0A    at ALU.scala:122 assert(io.cfIn.instr(1,0) === \22b11\22.U || isRVC || !valid)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %17 = firrtl.andr %_isRVC_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %18 = firrtl.neq %17, %_io_out_bits_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.and %io_in_valid, %18 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %20 = firrtl.and %19, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %20, %21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %22, "[%d] ALU: " {name = "printf_1"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %23 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.and %20, %23 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %24, "[ERROR] pc %x inst %x rvc %x\0A" {name = "printf_2"} (%io_cfIn_pc, %io_cfIn_instr, %isRVC) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<64>, !firrtl.uint<1>
      %_io_redirect_target_T_1 = firrtl.and %_io_redirect_target_T, %isBranch {name = "_io_redirect_target_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_redirect_target_T_2 = firrtl.add %io_cfIn_pc, %c2_ui2 {name = "_io_redirect_target_T_2"} : (!firrtl.uint<39>, !firrtl.uint<2>) -> !firrtl.uint<40>
      %_io_redirect_target_T_3 = firrtl.bits %_io_redirect_target_T_2 38 to 0 {name = "_io_redirect_target_T_3"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_io_redirect_target_T_4 = firrtl.add %io_cfIn_pc, %c4_ui3 {name = "_io_redirect_target_T_4"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_io_redirect_target_T_5 = firrtl.bits %_io_redirect_target_T_4 38 to 0 {name = "_io_redirect_target_T_5"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_io_redirect_target_T_6 = firrtl.mux(%isRVC, %_io_redirect_target_T_3, %_io_redirect_target_T_5) {name = "_io_redirect_target_T_6"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_io_redirect_target_T_7 = firrtl.mux(%_io_redirect_target_T_1, %_io_redirect_target_T_6, %target) {name = "_io_redirect_target_T_7"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_target_1, %_io_redirect_target_T_7 : !firrtl.uint<39>
      %_wrong_T = firrtl.and %io_in_valid, %isBru {name = "_wrong_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_redirect_valid_T_1 = firrtl.and %_wrong_T, %predictWrong {name = "_io_redirect_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_redirect_valid_2, %_io_redirect_valid_T_1 : !firrtl.uint<1>
      %io_out_bits_signBit = firrtl.bits %io_cfIn_pc 38 to 38 {name = "io_out_bits_signBit"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_io_out_bits_T_1 = firrtl.mux(%io_out_bits_signBit, %c33554431_ui25, %c0_ui25) {name = "_io_out_bits_T_1"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_io_out_bits_T_2 = firrtl.cat %_io_out_bits_T_1, %io_cfIn_pc {name = "_io_out_bits_T_2"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %_io_out_bits_T_3 = firrtl.add %_io_out_bits_T_2, %c4_ui3 {name = "_io_out_bits_T_3"} : (!firrtl.uint<64>, !firrtl.uint<3>) -> !firrtl.uint<65>
      %_io_out_bits_T_4 = firrtl.bits %_io_out_bits_T_3 63 to 0 {name = "_io_out_bits_T_4"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %_io_out_bits_T_5 = firrtl.mux(%io_out_bits_signBit, %c33554431_ui25, %c0_ui25) {name = "_io_out_bits_T_5"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_io_out_bits_T_6 = firrtl.cat %_io_out_bits_T_5, %io_cfIn_pc {name = "_io_out_bits_T_6"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %_io_out_bits_T_7 = firrtl.add %_io_out_bits_T_6, %c2_ui2 {name = "_io_out_bits_T_7"} : (!firrtl.uint<64>, !firrtl.uint<2>) -> !firrtl.uint<65>
      %_io_out_bits_T_8 = firrtl.bits %_io_out_bits_T_7 63 to 0 {name = "_io_out_bits_T_8"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %_io_out_bits_T_9 = firrtl.mux(%_io_out_bits_T, %_io_out_bits_T_4, %_io_out_bits_T_8) {name = "_io_out_bits_T_9"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %25 = firrtl.pad %_io_out_bits_T_9, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_io_out_bits_T_10 = firrtl.mux(%isBru, %25, %aluRes) {name = "_io_out_bits_T_10"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %26 = firrtl.bits %_io_out_bits_T_10 63 to 0 : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_0, %26 : !firrtl.uint<64>
      %27 = firrtl.and %_wrong_T, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.and %27, %28 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %29, "[%d] ALU: " {name = "printf_3"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %30 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.and %27, %30 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %31, "tgt %x, valid:%d, npc: %x, pdwrong: %x\0A" {name = "printf_4"} (%io_redirect_target_1, %io_redirect_valid_2, %io_cfIn_pnpc, %predictWrong) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>
      %32 = firrtl.and %_wrong_T, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.and %32, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %34, "[%d] ALU: " {name = "printf_5"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %35 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.and %32, %35 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %36, "taken:%d addrRes:%x src1:%x src2:%x func:%x\0A" {name = "printf_6"} (%taken, %adderRes, %io_in_bits_src1, %io_in_bits_src2, %io_in_bits_func) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<7>
      %37 = firrtl.eq %io_in_bits_func, %c88_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %38 = firrtl.eq %io_in_bits_func, %c92_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %39 = firrtl.or %37, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.eq %io_in_bits_func, %c90_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %41 = firrtl.eq %io_in_bits_func, %c94_ui7 : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %42 = firrtl.and %_wrong_T, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.and %42, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %44, "[%d] ALU: " {name = "printf_7"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %45 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %46 = firrtl.and %42, %45 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %46, "[BPW] pc %x tgt %x, npc: %x, pdwrong: %x type: %x%x%x%x\0A" {name = "printf_8"} (%io_cfIn_pc, %io_redirect_target_1, %io_cfIn_pnpc, %predictWrong, %isBranch, %39, %40, %41) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %47 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.and %c_control_logEnable, %47 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %48, "[%d] ALU: " {name = "printf_9"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %49 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.and %c_control_logEnable, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %50, "valid:%d isBru:%d isBranch:%d \0A" {name = "printf_10"} (%io_in_valid, %isBru, %isBranch) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %_bpuUpdateReq_btbType_T_25 = firrtl.eq %io_in_bits_func, %c92_ui7 {name = "_bpuUpdateReq_btbType_T_25"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_bpuUpdateReq_btbType_T_7 = firrtl.eq %io_in_bits_func, %c94_ui7 {name = "_bpuUpdateReq_btbType_T_7"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_bpuUpdateReq_btbType_T_18 = firrtl.eq %io_in_bits_func, %c88_ui7 {name = "_bpuUpdateReq_btbType_T_18"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_bpuUpdateReq_btbType_T_9 = firrtl.eq %io_in_bits_func, %c90_ui7 {name = "_bpuUpdateReq_btbType_T_9"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %51 = firrtl.mux(%_bpuUpdateReq_btbType_T_7, %c3_ui2, %c0_ui2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %52 = firrtl.mux(%_bpuUpdateReq_btbType_T_9, %c2_ui2, %c0_ui2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %53 = firrtl.pad %_bpuUpdateReq_btbType_T_25, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %54 = firrtl.or %53, %51 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %55 = firrtl.bits %54 1 to 1 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %56 = firrtl.bits %54 0 to 0 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %57 = firrtl.or %56, %_bpuUpdateReq_btbType_T_18 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %58 = firrtl.cat %55, %57 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %59 = firrtl.or %58, %52 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %60 = firrtl.wire : !firrtl.uint<2>
      firrtl.strictconnect %60, %59 : !firrtl.uint<2>
      %61 = firrtl.and %_wrong_T, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %63 = firrtl.and %61, %62 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %63, "[%d] ALU: " {name = "printf_11"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %64 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.and %61, %64 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %65, " bpuUpdateReq: valid:%d pc:%x isMissPredict:%d actualTarget:%x actualTaken:%x fuOpType:%x btbType:%x isRVC:%d \0A" {name = "printf_12"} (%_wrong_T, %io_cfIn_pc, %predictWrong, %target, %taken, %io_in_bits_func, %60, %isRVC) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<2>, !firrtl.uint<1>
      %bpuUpdateReq_valid = firrtl.wire : !firrtl.uint<1>
      %bpuUpdateReq_isMissPredict = firrtl.wire : !firrtl.uint<1>
      %bpuUpdateReq_actualTarget = firrtl.wire : !firrtl.uint<39>
      %bpuUpdateReq_actualTaken = firrtl.wire : !firrtl.uint<1>
      %bpuUpdateReq_btbType = firrtl.wire : !firrtl.uint<2>
      %bpuUpdateReq_isRVC = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %bpuUpdateReq_valid, %_wrong_T : !firrtl.uint<1>
      firrtl.strictconnect %bpuUpdateReq_isMissPredict, %predictWrong : !firrtl.uint<1>
      firrtl.strictconnect %bpuUpdateReq_actualTarget, %target : !firrtl.uint<39>
      firrtl.strictconnect %bpuUpdateReq_actualTaken, %taken : !firrtl.uint<1>
      %_bpuUpdateReq_btbType_T_17 = firrtl.mux(%_bpuUpdateReq_btbType_T_7, %c3_ui2, %c0_ui2) {name = "_bpuUpdateReq_btbType_T_17"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_bpuUpdateReq_btbType_T_19 = firrtl.mux(%_bpuUpdateReq_btbType_T_9, %c2_ui2, %c0_ui2) {name = "_bpuUpdateReq_btbType_T_19"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %66 = firrtl.pad %_bpuUpdateReq_btbType_T_25, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_bpuUpdateReq_btbType_T_26 = firrtl.or %66, %_bpuUpdateReq_btbType_T_17 {name = "_bpuUpdateReq_btbType_T_26"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %67 = firrtl.bits %_bpuUpdateReq_btbType_T_26 1 to 1 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %68 = firrtl.bits %_bpuUpdateReq_btbType_T_26 0 to 0 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %69 = firrtl.or %68, %_bpuUpdateReq_btbType_T_18 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_bpuUpdateReq_btbType_T_27 = firrtl.cat %67, %69 {name = "_bpuUpdateReq_btbType_T_27"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_bpuUpdateReq_btbType_T_28 = firrtl.or %_bpuUpdateReq_btbType_T_27, %_bpuUpdateReq_btbType_T_19 {name = "_bpuUpdateReq_btbType_T_28"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_bpuUpdateReq_btbType_WIRE = firrtl.wire : !firrtl.uint<2>
      firrtl.strictconnect %_bpuUpdateReq_btbType_WIRE, %_bpuUpdateReq_btbType_T_28 : !firrtl.uint<2>
      firrtl.strictconnect %bpuUpdateReq_btbType, %_bpuUpdateReq_btbType_WIRE : !firrtl.uint<2>
      firrtl.strictconnect %bpuUpdateReq_isRVC, %isRVC : !firrtl.uint<1>
      %REG_valid = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %REG_pc = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %REG_isMissPredict = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %REG_actualTarget = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 41 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %REG_actualTaken = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 80 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %REG_fuOpType = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 81 : ui64} : !firrtl.clock, !firrtl.uint<7>
      %REG_btbType = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 88 : ui64} : !firrtl.clock, !firrtl.uint<2>
      %REG_isRVC = firrtl.reg %clock {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 90 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG_valid, %bpuUpdateReq_valid : !firrtl.uint<1>
      firrtl.strictconnect %REG_pc, %io_cfIn_pc : !firrtl.uint<39>
      firrtl.strictconnect %REG_isMissPredict, %bpuUpdateReq_isMissPredict : !firrtl.uint<1>
      firrtl.strictconnect %REG_actualTarget, %bpuUpdateReq_actualTarget : !firrtl.uint<39>
      firrtl.strictconnect %REG_actualTaken, %bpuUpdateReq_actualTaken : !firrtl.uint<1>
      firrtl.strictconnect %REG_fuOpType, %io_in_bits_func : !firrtl.uint<7>
      firrtl.strictconnect %REG_btbType, %bpuUpdateReq_btbType : !firrtl.uint<2>
      firrtl.strictconnect %REG_isRVC, %bpuUpdateReq_isRVC : !firrtl.uint<1>
      %_right_T_1 = firrtl.not %predictWrong {name = "_right_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %right = firrtl.and %_wrong_T, %_right_T_1 {name = "right"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %wrong = firrtl.and %_wrong_T, %predictWrong {name = "wrong"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %70 = firrtl.and %right, %isBranch : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %71 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %71, %70 : !firrtl.uint<1>
      %72 = firrtl.and %wrong, %isBranch : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %73 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %73, %72 : !firrtl.uint<1>
      %74 = firrtl.bits %io_cfIn_pc 2 to 0 : (!firrtl.uint<39>) -> !firrtl.uint<3>
      %75 = firrtl.orr %74 : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %76 = firrtl.not %75 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %77 = firrtl.and %72, %76 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %78 = firrtl.and %77, %isRVC : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %79 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %79, %78 : !firrtl.uint<1>
      %80 = firrtl.orr %74 : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %81 = firrtl.not %80 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %82 = firrtl.and %72, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.and %82, %_io_out_bits_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %84 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %84, %83 : !firrtl.uint<1>
      %85 = firrtl.eq %74, %c2_ui2 : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %86 = firrtl.and %72, %85 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %87 = firrtl.and %86, %isRVC : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %88, %87 : !firrtl.uint<1>
      %89 = firrtl.eq %74, %c2_ui2 : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %90 = firrtl.and %72, %89 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.and %90, %_io_out_bits_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %92, %91 : !firrtl.uint<1>
      %93 = firrtl.eq %74, %c4_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %94 = firrtl.and %72, %93 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.and %94, %isRVC : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %96 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %96, %95 : !firrtl.uint<1>
      %97 = firrtl.eq %74, %c4_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %98 = firrtl.and %72, %97 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %99 = firrtl.and %98, %_io_out_bits_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %100, %99 : !firrtl.uint<1>
      %101 = firrtl.eq %74, %c6_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %102 = firrtl.and %72, %101 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %103 = firrtl.and %102, %isRVC : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %104, %103 : !firrtl.uint<1>
      %105 = firrtl.eq %74, %c6_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %106 = firrtl.and %72, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.and %106, %_io_out_bits_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %108 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %108, %107 : !firrtl.uint<1>
      %109 = firrtl.or %37, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.and %right, %109 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %111 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %111, %110 : !firrtl.uint<1>
      %112 = firrtl.or %37, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %113 = firrtl.and %wrong, %112 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %114 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %114, %113 : !firrtl.uint<1>
      %115 = firrtl.and %right, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %116, %115 : !firrtl.uint<1>
      %117 = firrtl.and %wrong, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %118, %117 : !firrtl.uint<1>
      %119 = firrtl.and %right, %41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %120, %119 : !firrtl.uint<1>
      %121 = firrtl.and %wrong, %41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %122 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %122, %121 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_7__bore, %96 : !firrtl.uint<1>
      firrtl.strictconnect %REG__bore_valid, %REG_valid : !firrtl.uint<1>
      firrtl.strictconnect %REG__bore_pc, %REG_pc : !firrtl.uint<39>
      firrtl.strictconnect %REG__bore_isMissPredict, %REG_isMissPredict : !firrtl.uint<1>
      firrtl.strictconnect %REG__bore_actualTarget, %REG_actualTarget : !firrtl.uint<39>
      firrtl.strictconnect %REG__bore_actualTaken, %REG_actualTaken : !firrtl.uint<1>
      firrtl.strictconnect %REG__bore_fuOpType, %REG_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %REG__bore_btbType, %REG_btbType : !firrtl.uint<2>
      firrtl.strictconnect %REG__bore_isRVC, %REG_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_14__bore, %118 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_6__bore, %92 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_15__bore, %120 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_2__bore, %73 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_8__bore, %100 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_1__bore, %71 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_13__bore, %116 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_11__bore, %111 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_3__bore, %79 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_12__bore, %114 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_9__bore, %104 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_5__bore, %88 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_16__bore, %122 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_10__bore, %108 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_4__bore, %84 : !firrtl.uint<1>
    }
    firrtl.module private @LSExecUnit(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_src1: !firrtl.uint<64> [{class = "firrtl.transforms.DontTouchAnnotation"}], in %io_in_bits_func: !firrtl.uint<7>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits: !firrtl.uint<64>, in %io_wdata: !firrtl.uint<64>, in %io_dmem_req_ready: !firrtl.uint<1>, out %io_dmem_req_valid: !firrtl.uint<1>, out %io_dmem_req_bits_addr: !firrtl.uint<39>, out %io_dmem_req_bits_size: !firrtl.uint<3>, out %io_dmem_req_bits_cmd: !firrtl.uint<4>, out %io_dmem_req_bits_wmask: !firrtl.uint<8>, out %io_dmem_req_bits_wdata: !firrtl.uint<64>, in %io_dmem_resp_valid: !firrtl.uint<1>, in %io_dmem_resp_bits_rdata: !firrtl.uint<64>, out %io_isMMIO: !firrtl.uint<1> [{class = "firrtl.transforms.DontTouchAnnotation"}], out %io_dtlbPF: !firrtl.uint<1>, out %io_loadAddrMisaligned: !firrtl.uint<1>, out %io_storeAddrMisaligned: !firrtl.uint<1>, in %dtlbPF__bore: !firrtl.uint<1>, out %r_1__bore: !firrtl.uint<1>, in %dtlbEnable__bore: !firrtl.uint<1>, out %r__bore: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>, out %io_in_bits_src1__bore: !firrtl.uint<64>, in %isAMO__bore: !firrtl.uint<1>, in %dtlbFinish__bore: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_isMMIO"}
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui16 = firrtl.constant 0 : !firrtl.uint<16>
      %c0_ui24 = firrtl.constant 0 : !firrtl.uint<24>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c0_ui40 = firrtl.constant 0 : !firrtl.uint<40>
      %c0_ui48 = firrtl.constant 0 : !firrtl.uint<48>
      %c0_ui56 = firrtl.constant 0 : !firrtl.uint<56>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "io_dmem_resp_ready"}
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c4294967295_ui32 = firrtl.constant 4294967295 : !firrtl.uint<32>
      %c281474976710655_ui48 = firrtl.constant 281474976710655 : !firrtl.uint<48>
      %c72057594037927935_ui56 = firrtl.constant 72057594037927935 : !firrtl.uint<56>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %io_out_valid_0 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_1 = firrtl.wire {name = "io_out_bits"} : !firrtl.uint<64>
      %io_dmem_req_valid_2 = firrtl.wire {name = "io_dmem_req_valid"} : !firrtl.uint<1>
      %io_dmem_req_bits_addr_3 = firrtl.wire {name = "io_dmem_req_bits_addr"} : !firrtl.uint<39>
      %io_dmem_req_bits_size_4 = firrtl.wire {name = "io_dmem_req_bits_size"} : !firrtl.uint<3>
      %io_dmem_req_bits_cmd_5 = firrtl.wire {name = "io_dmem_req_bits_cmd"} : !firrtl.uint<4>
      %io_dmem_req_bits_wmask_6 = firrtl.wire {name = "io_dmem_req_bits_wmask"} : !firrtl.uint<8>
      %io_dmem_req_bits_wdata_7 = firrtl.wire {name = "io_dmem_req_bits_wdata"} : !firrtl.uint<64>
      %io_loadAddrMisaligned_8 = firrtl.wire {name = "io_loadAddrMisaligned"} : !firrtl.uint<1>
      %io_storeAddrMisaligned_9 = firrtl.wire {name = "io_storeAddrMisaligned"} : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits, %io_out_bits_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_req_valid, %io_dmem_req_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_bits_addr, %io_dmem_req_bits_addr_3 : !firrtl.uint<39>
      firrtl.strictconnect %io_dmem_req_bits_size, %io_dmem_req_bits_size_4 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_cmd, %io_dmem_req_bits_cmd_5 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_wmask, %io_dmem_req_bits_wmask_6 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wdata, %io_dmem_req_bits_wdata_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_isMMIO, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %io_dtlbPF, %dtlbPF__bore : !firrtl.uint<1>
      firrtl.strictconnect %io_loadAddrMisaligned, %io_loadAddrMisaligned_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_storeAddrMisaligned, %io_storeAddrMisaligned_9 : !firrtl.uint<1>
      %addrLatch = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<64>
      firrtl.strictconnect %addrLatch, %io_in_bits_src1 : !firrtl.uint<64>
      %_isStore_T = firrtl.bits %io_in_bits_func 3 to 3 {name = "_isStore_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %x5 = firrtl.and %io_in_valid, %_isStore_T {name = "x5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_loadAddrMisaligned_T = firrtl.not %x5 {name = "_io_loadAddrMisaligned_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_partialLoad_T_1 = firrtl.neq %io_in_bits_func, %c3_ui2 {name = "_partialLoad_T_1"} : (!firrtl.uint<7>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %partialLoad = firrtl.and %_io_loadAddrMisaligned_T, %_partialLoad_T_1 {name = "partialLoad"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 64 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %0 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %1 = firrtl.not %0 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.and %io_dmem_req_ready, %io_dmem_req_valid_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.and %2, %dtlbEnable__bore : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %4 = firrtl.mux(%3, %c1_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %5 = firrtl.not %dtlbEnable__bore : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.and %2, %5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%6, %c2_ui2, %4) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %8 = firrtl.eq %state, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %9 = firrtl.and %dtlbFinish__bore, %dtlbPF__bore : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.mux(%9, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %11 = firrtl.not %dtlbPF__bore : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.and %dtlbFinish__bore, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.mux(%12, %c2_ui2, %10) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %14 = firrtl.eq %state, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_state_T = firrtl.mux(%partialLoad, %c3_ui2, %c0_ui2) {name = "_state_T"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %15 = firrtl.mux(%io_dmem_resp_valid, %_state_T, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %16 = firrtl.andr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %17 = firrtl.mux(%16, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %18 = firrtl.mux(%14, %15, %17) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %19 = firrtl.mux(%8, %13, %18) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %20 = firrtl.mux(%1, %7, %19) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state, %20 : !firrtl.uint<2>
      %21 = firrtl.and %io_dmem_req_ready, %io_dmem_req_valid_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %size = firrtl.bits %io_in_bits_func 1 to 0 {name = "size"} : (!firrtl.uint<7>) -> !firrtl.uint<2>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %22 = firrtl.and %21, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.and %22, %23 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %24, "[%d] LSExecUnit: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %25 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.and %22, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %26, "[LSU] %x, size %x, wdata_raw %x, isStore %x\0A" {name = "printf_1"} (%io_in_bits_src1, %size, %io_wdata, %x5) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<2>, !firrtl.uint<64>, !firrtl.uint<1>
      %27 = firrtl.and %21, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.and %27, %28 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %29, "[%d] LSExecUnit: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %30 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.and %27, %30 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %31, "[LSU] dtlbFinish:%d dtlbEnable:%d dtlbPF:%d state:%d addr:%x dmemReqFire:%d dmemRespFire:%d dmemRdata:%x\0A" {name = "printf_3"} (%dtlbFinish__bore, %dtlbEnable__bore, %dtlbPF__bore, %state, %io_dmem_req_bits_addr_3, %21, %io_dmem_resp_valid, %io_dmem_resp_bits_rdata) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %32 = firrtl.and %dtlbFinish__bore, %dtlbEnable__bore : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.and %32, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.and %33, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %35, "[%d] LSExecUnit: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %36 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.and %33, %36 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %37, "[LSU] dtlbFinish:%d dtlbEnable:%d dtlbPF:%d state:%d addr:%x dmemReqFire:%d dmemRespFire:%d dmemRdata:%x\0A" {name = "printf_5"} (%dtlbFinish__bore, %dtlbEnable__bore, %dtlbPF__bore, %state, %io_dmem_req_bits_addr_3, %21, %io_dmem_resp_valid, %io_dmem_resp_bits_rdata) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<39>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %reqAddr = firrtl.bits %io_in_bits_src1 38 to 0 {name = "reqAddr"} : (!firrtl.uint<64>) -> !firrtl.uint<39>
      %_reqWdata_T = firrtl.bits %io_wdata 7 to 0 {name = "_reqWdata_T"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_reqWdata_T_1 = firrtl.cat %_reqWdata_T, %_reqWdata_T {name = "_reqWdata_T_1"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %_reqWdata_T_2 = firrtl.cat %_reqWdata_T_1, %_reqWdata_T_1 {name = "_reqWdata_T_2"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %_reqWdata_T_3 = firrtl.cat %_reqWdata_T_2, %_reqWdata_T_2 {name = "_reqWdata_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_reqWdata_T_4 = firrtl.bits %io_wdata 15 to 0 {name = "_reqWdata_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %_reqWdata_T_5 = firrtl.cat %_reqWdata_T_4, %_reqWdata_T_4 {name = "_reqWdata_T_5"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %_reqWdata_T_6 = firrtl.cat %_reqWdata_T_5, %_reqWdata_T_5 {name = "_reqWdata_T_6"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_reqWdata_T_7 = firrtl.bits %io_wdata 31 to 0 {name = "_reqWdata_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_reqWdata_T_8 = firrtl.cat %_reqWdata_T_7, %_reqWdata_T_7 {name = "_reqWdata_T_8"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %38 = firrtl.orr %size : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_reqWmask_T_4 = firrtl.not %38 {name = "_reqWmask_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_reqWmask_T_1 = firrtl.eq %size, %c1_ui1 {name = "_reqWmask_T_1"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_reqWmask_T_2 = firrtl.eq %size, %c2_ui2 {name = "_reqWmask_T_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_reqWmask_T_3 = firrtl.andr %size {name = "_reqWmask_T_3"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_reqWdata_T_13 = firrtl.mux(%_reqWmask_T_4, %_reqWdata_T_3, %c0_ui64) {name = "_reqWdata_T_13"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_reqWdata_T_14 = firrtl.mux(%_reqWmask_T_1, %_reqWdata_T_6, %c0_ui64) {name = "_reqWdata_T_14"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_reqWdata_T_15 = firrtl.mux(%_reqWmask_T_2, %_reqWdata_T_8, %c0_ui64) {name = "_reqWdata_T_15"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_reqWdata_T_16 = firrtl.mux(%_reqWmask_T_3, %io_wdata, %c0_ui64) {name = "_reqWdata_T_16"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_reqWdata_T_17 = firrtl.or %_reqWdata_T_13, %_reqWdata_T_14 {name = "_reqWdata_T_17"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_reqWdata_T_18 = firrtl.or %_reqWdata_T_17, %_reqWdata_T_15 {name = "_reqWdata_T_18"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_reqWdata_T_19 = firrtl.or %_reqWdata_T_18, %_reqWdata_T_16 {name = "_reqWdata_T_19"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %reqWdata = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %reqWdata, %_reqWdata_T_19 : !firrtl.uint<64>
      %_reqWmask_T_5 = firrtl.mux(%_reqWmask_T_1, %c3_ui2, %c0_ui2) {name = "_reqWmask_T_5"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_reqWmask_T_6 = firrtl.mux(%_reqWmask_T_2, %c15_ui4, %c0_ui4) {name = "_reqWmask_T_6"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_reqWmask_T_7 = firrtl.mux(%_reqWmask_T_3, %c255_ui8, %c0_ui8) {name = "_reqWmask_T_7"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %39 = firrtl.pad %_reqWmask_T_4, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_reqWmask_T_8 = firrtl.or %39, %_reqWmask_T_5 {name = "_reqWmask_T_8"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %40 = firrtl.pad %_reqWmask_T_8, 4 : (!firrtl.uint<2>) -> !firrtl.uint<4>
      %_reqWmask_T_9 = firrtl.or %40, %_reqWmask_T_6 {name = "_reqWmask_T_9"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %41 = firrtl.pad %_reqWmask_T_9, 8 : (!firrtl.uint<4>) -> !firrtl.uint<8>
      %_reqWmask_T_10 = firrtl.or %41, %_reqWmask_T_7 {name = "_reqWmask_T_10"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_reqWmask_WIRE = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_reqWmask_WIRE, %_reqWmask_T_10 : !firrtl.uint<8>
      %_addrAligned_T_5 = firrtl.bits %io_in_bits_src1 2 to 0 {name = "_addrAligned_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<3>
      %reqWmask = firrtl.dshl %_reqWmask_WIRE, %_addrAligned_T_5 {name = "reqWmask"} : (!firrtl.uint<8>, !firrtl.uint<3>) -> !firrtl.uint<15>
      firrtl.strictconnect %io_dmem_req_bits_addr_3, %reqAddr : !firrtl.uint<39>
      %42 = firrtl.pad %x5, 4 : (!firrtl.uint<1>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_cmd_5, %42 : !firrtl.uint<4>
      %43 = firrtl.pad %size, 3 : (!firrtl.uint<2>) -> !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_size_4, %43 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_wdata_7, %reqWdata : !firrtl.uint<64>
      %44 = firrtl.bits %reqWmask 7 to 0 : (!firrtl.uint<15>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wmask_6, %44 : !firrtl.uint<8>
      %45 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %45 {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dmem_req_valid_T_1 = firrtl.and %io_in_valid, %_io_in_ready_T {name = "_io_dmem_req_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dmem_req_valid_T_2 = firrtl.not %io_loadAddrMisaligned_8 {name = "_io_dmem_req_valid_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dmem_req_valid_T_3 = firrtl.and %_io_dmem_req_valid_T_1, %_io_dmem_req_valid_T_2 {name = "_io_dmem_req_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dmem_req_valid_T_4 = firrtl.not %io_storeAddrMisaligned_9 {name = "_io_dmem_req_valid_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dmem_req_valid_T_5 = firrtl.and %_io_dmem_req_valid_T_3, %_io_dmem_req_valid_T_4 {name = "_io_dmem_req_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_valid_2, %_io_dmem_req_valid_T_5 : !firrtl.uint<1>
      %_io_out_valid_T = firrtl.orr %state {name = "_io_out_valid_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.and %dtlbPF__bore, %_io_out_valid_T {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_2 = firrtl.or %_io_out_valid_T_1, %io_loadAddrMisaligned_8 {name = "_io_out_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_3 = firrtl.or %_io_out_valid_T_2, %io_storeAddrMisaligned_9 {name = "_io_out_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_4 = firrtl.andr %state {name = "_io_out_valid_T_4"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_valid_T_6 = firrtl.eq %state, %c2_ui2 {name = "_io_out_valid_T_6"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_valid_T_7 = firrtl.and %io_dmem_resp_valid, %_io_out_valid_T_6 {name = "_io_out_valid_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_8 = firrtl.mux(%partialLoad, %_io_out_valid_T_4, %_io_out_valid_T_7) {name = "_io_out_valid_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_9 = firrtl.mux(%_io_out_valid_T_3, %c1_ui1, %_io_out_valid_T_8) {name = "_io_out_valid_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_0, %_io_out_valid_T_9 : !firrtl.uint<1>
      %46 = firrtl.and %io_out_ready, %io_out_valid_0 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.and %46, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.and %47, %48 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %49, "[%d] LSExecUnit: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %50 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.and %47, %50 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %51, "[LSU-EXECUNIT] state %x dresp %x dpf %x lm %x sm %x\0A" {name = "printf_7"} (%state, %io_dmem_resp_valid, %dtlbPF__bore, %io_loadAddrMisaligned_8, %io_storeAddrMisaligned_9) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %rdataLatch = firrtl.reg %clock {firrtl.random_init_start = 66 : ui64} : !firrtl.clock, !firrtl.uint<64>
      firrtl.strictconnect %rdataLatch, %io_dmem_resp_bits_rdata : !firrtl.uint<64>
      %_rdataSel64_T = firrtl.bits %addrLatch 2 to 0 {name = "_rdataSel64_T"} : (!firrtl.uint<64>) -> !firrtl.uint<3>
      %_rdataSel64_T_2 = firrtl.bits %rdataLatch 63 to 8 {name = "_rdataSel64_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<56>
      %_rdataSel64_T_3 = firrtl.bits %rdataLatch 63 to 16 {name = "_rdataSel64_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<48>
      %_rdataSel64_T_4 = firrtl.bits %rdataLatch 63 to 24 {name = "_rdataSel64_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<40>
      %_rdataSel64_T_5 = firrtl.bits %rdataLatch 63 to 32 {name = "_rdataSel64_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_rdataSel64_T_6 = firrtl.bits %rdataLatch 63 to 40 {name = "_rdataSel64_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<24>
      %_rdataSel64_T_7 = firrtl.bits %rdataLatch 63 to 48 {name = "_rdataSel64_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %_rdataSel64_T_8 = firrtl.bits %rdataLatch 63 to 56 {name = "_rdataSel64_T_8"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %52 = firrtl.orr %_rdataSel64_T : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataSel64_T_9 = firrtl.not %52 {name = "_rdataSel64_T_9"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rdataSel64_T_10 = firrtl.eq %_rdataSel64_T, %c1_ui1 {name = "_rdataSel64_T_10"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rdataSel64_T_11 = firrtl.eq %_rdataSel64_T, %c2_ui2 {name = "_rdataSel64_T_11"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rdataSel64_T_12 = firrtl.eq %_rdataSel64_T, %c3_ui2 {name = "_rdataSel64_T_12"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rdataSel64_T_13 = firrtl.eq %_rdataSel64_T, %c4_ui3 {name = "_rdataSel64_T_13"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataSel64_T_14 = firrtl.eq %_rdataSel64_T, %c5_ui3 {name = "_rdataSel64_T_14"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataSel64_T_15 = firrtl.eq %_rdataSel64_T, %c6_ui3 {name = "_rdataSel64_T_15"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataSel64_T_16 = firrtl.andr %_rdataSel64_T {name = "_rdataSel64_T_16"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataSel64_T_17 = firrtl.mux(%_rdataSel64_T_9, %rdataLatch, %c0_ui64) {name = "_rdataSel64_T_17"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataSel64_T_18 = firrtl.mux(%_rdataSel64_T_10, %_rdataSel64_T_2, %c0_ui56) {name = "_rdataSel64_T_18"} : (!firrtl.uint<1>, !firrtl.uint<56>, !firrtl.uint<56>) -> !firrtl.uint<56>
      %_rdataSel64_T_19 = firrtl.mux(%_rdataSel64_T_11, %_rdataSel64_T_3, %c0_ui48) {name = "_rdataSel64_T_19"} : (!firrtl.uint<1>, !firrtl.uint<48>, !firrtl.uint<48>) -> !firrtl.uint<48>
      %_rdataSel64_T_20 = firrtl.mux(%_rdataSel64_T_12, %_rdataSel64_T_4, %c0_ui40) {name = "_rdataSel64_T_20"} : (!firrtl.uint<1>, !firrtl.uint<40>, !firrtl.uint<40>) -> !firrtl.uint<40>
      %_rdataSel64_T_21 = firrtl.mux(%_rdataSel64_T_13, %_rdataSel64_T_5, %c0_ui32) {name = "_rdataSel64_T_21"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdataSel64_T_22 = firrtl.mux(%_rdataSel64_T_14, %_rdataSel64_T_6, %c0_ui24) {name = "_rdataSel64_T_22"} : (!firrtl.uint<1>, !firrtl.uint<24>, !firrtl.uint<24>) -> !firrtl.uint<24>
      %_rdataSel64_T_23 = firrtl.mux(%_rdataSel64_T_15, %_rdataSel64_T_7, %c0_ui16) {name = "_rdataSel64_T_23"} : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_rdataSel64_T_24 = firrtl.mux(%_rdataSel64_T_16, %_rdataSel64_T_8, %c0_ui8) {name = "_rdataSel64_T_24"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %53 = firrtl.bits %_rdataSel64_T_17 63 to 56 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %54 = firrtl.bits %_rdataSel64_T_17 55 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<56>
      %55 = firrtl.or %54, %_rdataSel64_T_18 : (!firrtl.uint<56>, !firrtl.uint<56>) -> !firrtl.uint<56>
      %_rdataSel64_T_25 = firrtl.cat %53, %55 {name = "_rdataSel64_T_25"} : (!firrtl.uint<8>, !firrtl.uint<56>) -> !firrtl.uint<64>
      %56 = firrtl.bits %_rdataSel64_T_25 63 to 48 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %57 = firrtl.bits %_rdataSel64_T_25 47 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<48>
      %58 = firrtl.or %57, %_rdataSel64_T_19 : (!firrtl.uint<48>, !firrtl.uint<48>) -> !firrtl.uint<48>
      %_rdataSel64_T_26 = firrtl.cat %56, %58 {name = "_rdataSel64_T_26"} : (!firrtl.uint<16>, !firrtl.uint<48>) -> !firrtl.uint<64>
      %59 = firrtl.bits %_rdataSel64_T_26 63 to 40 : (!firrtl.uint<64>) -> !firrtl.uint<24>
      %60 = firrtl.bits %_rdataSel64_T_26 39 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<40>
      %61 = firrtl.or %60, %_rdataSel64_T_20 : (!firrtl.uint<40>, !firrtl.uint<40>) -> !firrtl.uint<40>
      %_rdataSel64_T_27 = firrtl.cat %59, %61 {name = "_rdataSel64_T_27"} : (!firrtl.uint<24>, !firrtl.uint<40>) -> !firrtl.uint<64>
      %62 = firrtl.bits %_rdataSel64_T_27 63 to 32 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %63 = firrtl.bits %_rdataSel64_T_27 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %64 = firrtl.or %63, %_rdataSel64_T_21 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdataSel64_T_28 = firrtl.cat %62, %64 {name = "_rdataSel64_T_28"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %65 = firrtl.bits %_rdataSel64_T_28 63 to 24 : (!firrtl.uint<64>) -> !firrtl.uint<40>
      %66 = firrtl.bits %_rdataSel64_T_28 23 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<24>
      %67 = firrtl.or %66, %_rdataSel64_T_22 : (!firrtl.uint<24>, !firrtl.uint<24>) -> !firrtl.uint<24>
      %_rdataSel64_T_29 = firrtl.cat %65, %67 {name = "_rdataSel64_T_29"} : (!firrtl.uint<40>, !firrtl.uint<24>) -> !firrtl.uint<64>
      %68 = firrtl.bits %_rdataSel64_T_29 63 to 16 : (!firrtl.uint<64>) -> !firrtl.uint<48>
      %69 = firrtl.bits %_rdataSel64_T_29 15 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %70 = firrtl.or %69, %_rdataSel64_T_23 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %_rdataSel64_T_30 = firrtl.cat %68, %70 {name = "_rdataSel64_T_30"} : (!firrtl.uint<48>, !firrtl.uint<16>) -> !firrtl.uint<64>
      %71 = firrtl.bits %_rdataSel64_T_30 63 to 8 : (!firrtl.uint<64>) -> !firrtl.uint<56>
      %72 = firrtl.bits %_rdataSel64_T_30 7 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %73 = firrtl.or %72, %_rdataSel64_T_24 : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_rdataSel64_T_31 = firrtl.cat %71, %73 {name = "_rdataSel64_T_31"} : (!firrtl.uint<56>, !firrtl.uint<8>) -> !firrtl.uint<64>
      %rdataSel64 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %rdataSel64, %_rdataSel64_T_31 : !firrtl.uint<64>
      %_rdataPartialLoad_T_9 = firrtl.bits %rdataSel64 7 to 0 {name = "_rdataPartialLoad_T_9"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %rdataPartialLoad_signBit = firrtl.bits %rdataSel64 7 to 7 {name = "rdataPartialLoad_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_1 = firrtl.mux(%rdataPartialLoad_signBit, %c72057594037927935_ui56, %c0_ui56) {name = "_rdataPartialLoad_T_1"} : (!firrtl.uint<1>, !firrtl.uint<56>, !firrtl.uint<56>) -> !firrtl.uint<56>
      %_rdataPartialLoad_T_2 = firrtl.cat %_rdataPartialLoad_T_1, %_rdataPartialLoad_T_9 {name = "_rdataPartialLoad_T_2"} : (!firrtl.uint<56>, !firrtl.uint<8>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_11 = firrtl.bits %rdataSel64 15 to 0 {name = "_rdataPartialLoad_T_11"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %rdataPartialLoad_signBit_1 = firrtl.bits %rdataSel64 15 to 15 {name = "rdataPartialLoad_signBit_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_4 = firrtl.mux(%rdataPartialLoad_signBit_1, %c281474976710655_ui48, %c0_ui48) {name = "_rdataPartialLoad_T_4"} : (!firrtl.uint<1>, !firrtl.uint<48>, !firrtl.uint<48>) -> !firrtl.uint<48>
      %_rdataPartialLoad_T_5 = firrtl.cat %_rdataPartialLoad_T_4, %_rdataPartialLoad_T_11 {name = "_rdataPartialLoad_T_5"} : (!firrtl.uint<48>, !firrtl.uint<16>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_13 = firrtl.bits %rdataSel64 31 to 0 {name = "_rdataPartialLoad_T_13"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %rdataPartialLoad_signBit_2 = firrtl.bits %rdataSel64 31 to 31 {name = "rdataPartialLoad_signBit_2"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_7 = firrtl.mux(%rdataPartialLoad_signBit_2, %c4294967295_ui32, %c0_ui32) {name = "_rdataPartialLoad_T_7"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdataPartialLoad_T_8 = firrtl.cat %_rdataPartialLoad_T_7, %_rdataPartialLoad_T_13 {name = "_rdataPartialLoad_T_8"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_10 = firrtl.cat %c0_ui56, %_rdataPartialLoad_T_9 {name = "_rdataPartialLoad_T_10"} : (!firrtl.uint<56>, !firrtl.uint<8>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_12 = firrtl.cat %c0_ui48, %_rdataPartialLoad_T_11 {name = "_rdataPartialLoad_T_12"} : (!firrtl.uint<48>, !firrtl.uint<16>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_14 = firrtl.cat %c0_ui32, %_rdataPartialLoad_T_13 {name = "_rdataPartialLoad_T_14"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %74 = firrtl.orr %io_in_bits_func : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_15 = firrtl.not %74 {name = "_rdataPartialLoad_T_15"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_16 = firrtl.eq %io_in_bits_func, %c1_ui1 {name = "_rdataPartialLoad_T_16"} : (!firrtl.uint<7>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_17 = firrtl.eq %io_in_bits_func, %c2_ui2 {name = "_rdataPartialLoad_T_17"} : (!firrtl.uint<7>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_18 = firrtl.eq %io_in_bits_func, %c4_ui3 {name = "_rdataPartialLoad_T_18"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_19 = firrtl.eq %io_in_bits_func, %c5_ui3 {name = "_rdataPartialLoad_T_19"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_20 = firrtl.eq %io_in_bits_func, %c6_ui3 {name = "_rdataPartialLoad_T_20"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdataPartialLoad_T_21 = firrtl.mux(%_rdataPartialLoad_T_15, %_rdataPartialLoad_T_2, %c0_ui64) {name = "_rdataPartialLoad_T_21"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_22 = firrtl.mux(%_rdataPartialLoad_T_16, %_rdataPartialLoad_T_5, %c0_ui64) {name = "_rdataPartialLoad_T_22"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_23 = firrtl.mux(%_rdataPartialLoad_T_17, %_rdataPartialLoad_T_8, %c0_ui64) {name = "_rdataPartialLoad_T_23"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_24 = firrtl.mux(%_rdataPartialLoad_T_18, %_rdataPartialLoad_T_10, %c0_ui64) {name = "_rdataPartialLoad_T_24"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_25 = firrtl.mux(%_rdataPartialLoad_T_19, %_rdataPartialLoad_T_12, %c0_ui64) {name = "_rdataPartialLoad_T_25"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_26 = firrtl.mux(%_rdataPartialLoad_T_20, %_rdataPartialLoad_T_14, %c0_ui64) {name = "_rdataPartialLoad_T_26"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_27 = firrtl.or %_rdataPartialLoad_T_21, %_rdataPartialLoad_T_22 {name = "_rdataPartialLoad_T_27"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_28 = firrtl.or %_rdataPartialLoad_T_27, %_rdataPartialLoad_T_23 {name = "_rdataPartialLoad_T_28"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_29 = firrtl.or %_rdataPartialLoad_T_28, %_rdataPartialLoad_T_24 {name = "_rdataPartialLoad_T_29"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_30 = firrtl.or %_rdataPartialLoad_T_29, %_rdataPartialLoad_T_25 {name = "_rdataPartialLoad_T_30"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdataPartialLoad_T_31 = firrtl.or %_rdataPartialLoad_T_30, %_rdataPartialLoad_T_26 {name = "_rdataPartialLoad_T_31"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %rdataPartialLoad = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %rdataPartialLoad, %_rdataPartialLoad_T_31 : !firrtl.uint<64>
      %_addrAligned_T_1 = firrtl.bits %io_in_bits_src1 0 to 0 {name = "_addrAligned_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_addrAligned_T_2 = firrtl.not %_addrAligned_T_1 {name = "_addrAligned_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_3 = firrtl.bits %io_in_bits_src1 1 to 0 {name = "_addrAligned_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %75 = firrtl.orr %_addrAligned_T_3 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_addrAligned_T_4 = firrtl.not %75 {name = "_addrAligned_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.orr %_addrAligned_T_5 : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_addrAligned_T_6 = firrtl.not %76 {name = "_addrAligned_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %77 = firrtl.orr %size : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_addrAligned_T_11 = firrtl.not %77 {name = "_addrAligned_T_11"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_8 = firrtl.eq %size, %c1_ui1 {name = "_addrAligned_T_8"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_9 = firrtl.eq %size, %c2_ui2 {name = "_addrAligned_T_9"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_addrAligned_T_10 = firrtl.andr %size {name = "_addrAligned_T_10"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_addrAligned_T_12 = firrtl.mux(%_addrAligned_T_8, %_addrAligned_T_2, %c0_ui1) {name = "_addrAligned_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_13 = firrtl.mux(%_addrAligned_T_9, %_addrAligned_T_4, %c0_ui1) {name = "_addrAligned_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_14 = firrtl.mux(%_addrAligned_T_10, %_addrAligned_T_6, %c0_ui1) {name = "_addrAligned_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_15 = firrtl.or %_addrAligned_T_11, %_addrAligned_T_12 {name = "_addrAligned_T_15"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_16 = firrtl.or %_addrAligned_T_15, %_addrAligned_T_13 {name = "_addrAligned_T_16"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_addrAligned_T_17 = firrtl.or %_addrAligned_T_16, %_addrAligned_T_14 {name = "_addrAligned_T_17"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %addrAligned = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %addrAligned, %_addrAligned_T_17 : !firrtl.uint<1>
      %_io_out_bits_T_1 = firrtl.mux(%partialLoad, %rdataPartialLoad, %io_dmem_resp_bits_rdata) {name = "_io_out_bits_T_1"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_1, %_io_out_bits_T_1 : !firrtl.uint<64>
      %_io_loadAddrMisaligned_T_1 = firrtl.and %io_in_valid, %_io_loadAddrMisaligned_T {name = "_io_loadAddrMisaligned_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_loadAddrMisaligned_T_2 = firrtl.not %isAMO__bore {name = "_io_loadAddrMisaligned_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_loadAddrMisaligned_T_3 = firrtl.and %_io_loadAddrMisaligned_T_1, %_io_loadAddrMisaligned_T_2 {name = "_io_loadAddrMisaligned_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_storeAddrMisaligned_T_2 = firrtl.not %addrAligned {name = "_io_storeAddrMisaligned_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_loadAddrMisaligned_T_5 = firrtl.and %_io_loadAddrMisaligned_T_3, %_io_storeAddrMisaligned_T_2 {name = "_io_loadAddrMisaligned_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_loadAddrMisaligned_8, %_io_loadAddrMisaligned_T_5 : !firrtl.uint<1>
      %_io_storeAddrMisaligned_T = firrtl.or %x5, %isAMO__bore {name = "_io_storeAddrMisaligned_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_storeAddrMisaligned_T_1 = firrtl.and %io_in_valid, %_io_storeAddrMisaligned_T {name = "_io_storeAddrMisaligned_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_storeAddrMisaligned_T_3 = firrtl.and %_io_storeAddrMisaligned_T_1, %_io_storeAddrMisaligned_T_2 {name = "_io_storeAddrMisaligned_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_storeAddrMisaligned_9, %_io_storeAddrMisaligned_T_3 : !firrtl.uint<1>
      %78 = firrtl.or %io_loadAddrMisaligned_8, %io_storeAddrMisaligned_9 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %79 = firrtl.and %78, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.and %79, %80 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %81, "[%d] LSExecUnit: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %82 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.and %79, %82 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %83, "misaligned addr detected\0A" {name = "printf_9"}  : !firrtl.clock, !firrtl.uint<1>
      %84 = firrtl.bits %io_dmem_req_bits_cmd_5 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %85 = firrtl.not %84 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.bits %io_dmem_req_bits_cmd_5 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %87 = firrtl.not %86 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.and %85, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.and %io_dmem_req_valid_2, %88 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %90 = firrtl.and %89, %21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %91, %90 : !firrtl.uint<1>
      %92 = firrtl.not %84 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.not %86 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.and %92, %93 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.and %io_dmem_req_valid_2, %94 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r = firrtl.regreset %clock, %reset, %c0_ui1 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 130 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %96 = firrtl.mux(%95, %c1_ui1, %r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %97 = firrtl.mux(%io_dmem_resp_valid, %c0_ui1, %96) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r, %97 : !firrtl.uint<1>
      %98 = firrtl.and %io_dmem_req_valid_2, %84 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_1 = firrtl.regreset %clock, %reset, %c0_ui1 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 131 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %99 = firrtl.mux(%98, %c1_ui1, %r_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.mux(%io_dmem_resp_valid, %c0_ui1, %99) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_1, %100 : !firrtl.uint<1>
      firrtl.strictconnect %r_1__bore, %r_1 : !firrtl.uint<1>
      firrtl.strictconnect %r__bore, %r : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %91 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_bits_src1__bore, %io_in_bits_src1 : !firrtl.uint<64>
    }
    firrtl.module private @AtomALU(in %io_src1: !firrtl.uint<64>, in %io_src2: !firrtl.uint<64>, in %io_func: !firrtl.uint<7>, in %io_isWordOp: !firrtl.uint<1>, out %io_result: !firrtl.uint<64>) {
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c4294967295_ui32 = firrtl.constant 4294967295 : !firrtl.uint<32>
      %c50_ui6 = firrtl.constant 50 : !firrtl.uint<6>
      %c49_ui6 = firrtl.constant 49 : !firrtl.uint<6>
      %c48_ui6 = firrtl.constant 48 : !firrtl.uint<6>
      %c55_ui6 = firrtl.constant 55 : !firrtl.uint<6>
      %c38_ui6 = firrtl.constant 38 : !firrtl.uint<6>
      %c37_ui6 = firrtl.constant 37 : !firrtl.uint<6>
      %c36_ui6 = firrtl.constant 36 : !firrtl.uint<6>
      %c34_ui6 = firrtl.constant 34 : !firrtl.uint<6>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c18446744073709551615_ui64 = firrtl.constant 18446744073709551615 : !firrtl.uint<64>
      %io_result_0 = firrtl.wire {name = "io_result"} : !firrtl.uint<64>
      firrtl.strictconnect %io_result, %io_result_0 : !firrtl.uint<64>
      %_isAdderSub_T = firrtl.bits %io_func 6 to 6 {name = "_isAdderSub_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %isAdderSub = firrtl.not %_isAdderSub_T {name = "isAdderSub"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_adderRes_T = firrtl.mux(%isAdderSub, %c18446744073709551615_ui64, %c0_ui64) {name = "_adderRes_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_adderRes_T_1 = firrtl.xor %io_src2, %_adderRes_T {name = "_adderRes_T_1"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_adderRes_T_2 = firrtl.add %io_src1, %_adderRes_T_1 {name = "_adderRes_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %_adderRes_T_3 = firrtl.add %_adderRes_T_2, %isAdderSub {name = "_adderRes_T_3"} : (!firrtl.uint<65>, !firrtl.uint<1>) -> !firrtl.uint<66>
      %adderRes = firrtl.bits %_adderRes_T_3 64 to 0 {name = "adderRes"} : (!firrtl.uint<66>) -> !firrtl.uint<65>
      %xorRes = firrtl.xor %io_src1, %io_src2 {name = "xorRes"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_sltu_T = firrtl.bits %_adderRes_T_3 64 to 64 {name = "_sltu_T"} : (!firrtl.uint<66>) -> !firrtl.uint<1>
      %sltu = firrtl.not %_sltu_T {name = "sltu"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_slt_T = firrtl.bits %xorRes 63 to 63 {name = "_slt_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %slt = firrtl.xor %_slt_T, %sltu {name = "slt"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_res_T = firrtl.bits %io_func 5 to 0 {name = "_res_T"} : (!firrtl.uint<7>) -> !firrtl.uint<6>
      %_res_T_1 = firrtl.and %io_src1, %io_src2 {name = "_res_T_1"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_2 = firrtl.or %io_src1, %io_src2 {name = "_res_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_4 = firrtl.mux(%slt, %io_src1, %io_src2) {name = "_res_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_6 = firrtl.mux(%slt, %io_src2, %io_src1) {name = "_res_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_8 = firrtl.mux(%sltu, %io_src1, %io_src2) {name = "_res_T_8"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_10 = firrtl.mux(%sltu, %io_src2, %io_src1) {name = "_res_T_10"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_res_T_11 = firrtl.eq %_res_T, %c34_ui6 {name = "_res_T_11"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %0 = firrtl.pad %io_src2, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_12 = firrtl.mux(%_res_T_11, %0, %adderRes) {name = "_res_T_12"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_13 = firrtl.eq %_res_T, %c36_ui6 {name = "_res_T_13"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %1 = firrtl.pad %xorRes, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_14 = firrtl.mux(%_res_T_13, %1, %_res_T_12) {name = "_res_T_14"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_15 = firrtl.eq %_res_T, %c37_ui6 {name = "_res_T_15"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %2 = firrtl.pad %_res_T_1, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_16 = firrtl.mux(%_res_T_15, %2, %_res_T_14) {name = "_res_T_16"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_17 = firrtl.eq %_res_T, %c38_ui6 {name = "_res_T_17"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %3 = firrtl.pad %_res_T_2, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_18 = firrtl.mux(%_res_T_17, %3, %_res_T_16) {name = "_res_T_18"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_19 = firrtl.eq %_res_T, %c55_ui6 {name = "_res_T_19"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %4 = firrtl.pad %_res_T_4, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_20 = firrtl.mux(%_res_T_19, %4, %_res_T_18) {name = "_res_T_20"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_21 = firrtl.eq %_res_T, %c48_ui6 {name = "_res_T_21"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %5 = firrtl.pad %_res_T_6, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_22 = firrtl.mux(%_res_T_21, %5, %_res_T_20) {name = "_res_T_22"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_23 = firrtl.eq %_res_T, %c49_ui6 {name = "_res_T_23"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %6 = firrtl.pad %_res_T_8, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %_res_T_24 = firrtl.mux(%_res_T_23, %6, %_res_T_22) {name = "_res_T_24"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_res_T_25 = firrtl.eq %_res_T, %c50_ui6 {name = "_res_T_25"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %7 = firrtl.pad %_res_T_10, 65 : (!firrtl.uint<64>) -> !firrtl.uint<65>
      %res = firrtl.mux(%_res_T_25, %7, %_res_T_24) {name = "res"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_io_result_T = firrtl.bits %res 31 to 0 {name = "_io_result_T"} : (!firrtl.uint<65>) -> !firrtl.uint<32>
      %io_result_signBit = firrtl.bits %res 31 to 31 {name = "io_result_signBit"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_io_result_T_1 = firrtl.mux(%io_result_signBit, %c4294967295_ui32, %c0_ui32) {name = "_io_result_T_1"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_result_T_2 = firrtl.cat %_io_result_T_1, %_io_result_T {name = "_io_result_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_io_result_T_3 = firrtl.bits %res 63 to 0 {name = "_io_result_T_3"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %_io_result_T_4 = firrtl.mux(%io_isWordOp, %_io_result_T_2, %_io_result_T_3) {name = "_io_result_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_result_0, %_io_result_T_4 : !firrtl.uint<64>
    }
    firrtl.module private @UnpipelinedLSU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_src1: !firrtl.uint<64>, in %io_in_bits_src2: !firrtl.uint<64>, in %io_in_bits_func: !firrtl.uint<7>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits: !firrtl.uint<64>, in %io_wdata: !firrtl.uint<64>, in %io_instr: !firrtl.uint<32>, in %io_dmem_req_ready: !firrtl.uint<1>, out %io_dmem_req_valid: !firrtl.uint<1>, out %io_dmem_req_bits_addr: !firrtl.uint<39>, out %io_dmem_req_bits_size: !firrtl.uint<3>, out %io_dmem_req_bits_cmd: !firrtl.uint<4>, out %io_dmem_req_bits_wmask: !firrtl.uint<8>, out %io_dmem_req_bits_wdata: !firrtl.uint<64>, in %io_dmem_resp_valid: !firrtl.uint<1>, in %io_dmem_resp_bits_rdata: !firrtl.uint<64>, out %io_isMMIO: !firrtl.uint<1>, out %io_dtlbPF: !firrtl.uint<1>, out %io_loadAddrMisaligned: !firrtl.uint<1>, out %io_storeAddrMisaligned: !firrtl.uint<1>, in %lsExecUnit_dtlbPF__bore: !firrtl.uint<1>, in %dtlbPF__bore: !firrtl.uint<1>, in %lr__bore: !firrtl.uint<1>, out %lsExecUnit_r_1__bore: !firrtl.uint<1>, in %lrAddr__bore: !firrtl.uint<64>, in %lsExecUnit_dtlbEnable__bore: !firrtl.uint<1>, out %setLrAddr__bore: !firrtl.uint<64>, out %lsExecUnit_r__bore: !firrtl.uint<1>, out %setLrVal__bore: !firrtl.uint<1>, in %lsuMMIO__bore: !firrtl.uint<1>, out %lsExecUnit__WIRE__bore: !firrtl.uint<1>, out %setLr__bore: !firrtl.uint<1>, out %lsExecUnit_io_in_bits_src1__bore: !firrtl.uint<64>, in %lsExecUnit_dtlbFinish__bore: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c10_ui4 = firrtl.constant 10 : !firrtl.uint<4>
      %c11_ui4 = firrtl.constant 11 : !firrtl.uint<4>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c33_ui6 = firrtl.constant 33 : !firrtl.uint<6>
      %c32_ui6 = firrtl.constant 32 : !firrtl.uint<6>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready = firrtl.wire : !firrtl.uint<1>
      %io_out_valid_0 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_1 = firrtl.wire {name = "io_out_bits"} : !firrtl.uint<64>
      %io_dmem_req_valid_2 = firrtl.wire {name = "io_dmem_req_valid"} : !firrtl.uint<1>
      %io_dmem_req_bits_addr_3 = firrtl.wire {name = "io_dmem_req_bits_addr"} : !firrtl.uint<39>
      %io_dmem_req_bits_size_4 = firrtl.wire {name = "io_dmem_req_bits_size"} : !firrtl.uint<3>
      %io_dmem_req_bits_cmd_5 = firrtl.wire {name = "io_dmem_req_bits_cmd"} : !firrtl.uint<4>
      %io_dmem_req_bits_wmask_6 = firrtl.wire {name = "io_dmem_req_bits_wmask"} : !firrtl.uint<8>
      %io_dmem_req_bits_wdata_7 = firrtl.wire {name = "io_dmem_req_bits_wdata"} : !firrtl.uint<64>
      %io_isMMIO_8 = firrtl.wire {name = "io_isMMIO"} : !firrtl.uint<1>
      %io_dtlbPF_9 = firrtl.wire {name = "io_dtlbPF"} : !firrtl.uint<1>
      %io_loadAddrMisaligned_10 = firrtl.wire {name = "io_loadAddrMisaligned"} : !firrtl.uint<1>
      %io_storeAddrMisaligned_11 = firrtl.wire {name = "io_storeAddrMisaligned"} : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits, %io_out_bits_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_req_valid, %io_dmem_req_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_bits_addr, %io_dmem_req_bits_addr_3 : !firrtl.uint<39>
      firrtl.strictconnect %io_dmem_req_bits_size, %io_dmem_req_bits_size_4 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_cmd, %io_dmem_req_bits_cmd_5 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_wmask, %io_dmem_req_bits_wmask_6 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wdata, %io_dmem_req_bits_wdata_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_isMMIO, %io_isMMIO_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_dtlbPF, %io_dtlbPF_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_loadAddrMisaligned, %io_loadAddrMisaligned_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_storeAddrMisaligned, %io_storeAddrMisaligned_11 : !firrtl.uint<1>
      %lsExecUnit_clock, %lsExecUnit_reset, %lsExecUnit_io_in_valid, %lsExecUnit_io_in_bits_src1, %lsExecUnit_io_in_bits_func, %lsExecUnit_io_out_ready, %lsExecUnit_io_out_valid, %lsExecUnit_io_out_bits, %lsExecUnit_io_wdata, %lsExecUnit_io_dmem_req_ready, %lsExecUnit_io_dmem_req_valid, %lsExecUnit_io_dmem_req_bits_addr, %lsExecUnit_io_dmem_req_bits_size, %lsExecUnit_io_dmem_req_bits_cmd, %lsExecUnit_io_dmem_req_bits_wmask, %lsExecUnit_io_dmem_req_bits_wdata, %lsExecUnit_io_dmem_resp_valid, %lsExecUnit_io_dmem_resp_bits_rdata, %lsExecUnit_io_isMMIO, %lsExecUnit_io_dtlbPF, %lsExecUnit_io_loadAddrMisaligned, %lsExecUnit_io_storeAddrMisaligned, %lsExecUnit_dtlbPF__bore_12, %lsExecUnit_r_1__bore_13, %lsExecUnit_dtlbEnable__bore_14, %lsExecUnit_r__bore_15, %lsExecUnit__WIRE__bore_16, %lsExecUnit_io_in_bits_src1__bore_17, %lsExecUnit_isAMO__bore, %lsExecUnit_dtlbFinish__bore_18 = firrtl.instance lsExecUnit @LSExecUnit(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_src1: !firrtl.uint<64>, in io_in_bits_func: !firrtl.uint<7>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits: !firrtl.uint<64>, in io_wdata: !firrtl.uint<64>, in io_dmem_req_ready: !firrtl.uint<1>, out io_dmem_req_valid: !firrtl.uint<1>, out io_dmem_req_bits_addr: !firrtl.uint<39>, out io_dmem_req_bits_size: !firrtl.uint<3>, out io_dmem_req_bits_cmd: !firrtl.uint<4>, out io_dmem_req_bits_wmask: !firrtl.uint<8>, out io_dmem_req_bits_wdata: !firrtl.uint<64>, in io_dmem_resp_valid: !firrtl.uint<1>, in io_dmem_resp_bits_rdata: !firrtl.uint<64>, out io_isMMIO: !firrtl.uint<1>, out io_dtlbPF: !firrtl.uint<1>, out io_loadAddrMisaligned: !firrtl.uint<1>, out io_storeAddrMisaligned: !firrtl.uint<1>, in dtlbPF__bore: !firrtl.uint<1>, out r_1__bore: !firrtl.uint<1>, in dtlbEnable__bore: !firrtl.uint<1>, out r__bore: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>, out io_in_bits_src1__bore: !firrtl.uint<64>, in isAMO__bore: !firrtl.uint<1>, in dtlbFinish__bore: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<64>
      %2 = firrtl.wire : !firrtl.uint<7>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<64>
      %6 = firrtl.wire : !firrtl.uint<64>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<39>
      %9 = firrtl.wire : !firrtl.uint<3>
      %10 = firrtl.wire : !firrtl.uint<4>
      %11 = firrtl.wire : !firrtl.uint<8>
      %12 = firrtl.wire : !firrtl.uint<64>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_io_in_valid, %0 : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_io_in_bits_src1, %1 : !firrtl.uint<64>
      firrtl.strictconnect %lsExecUnit_io_in_bits_func, %2 : !firrtl.uint<7>
      firrtl.strictconnect %lsExecUnit_io_out_ready, %3 : !firrtl.uint<1>
      firrtl.strictconnect %4, %lsExecUnit_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %5, %lsExecUnit_io_out_bits : !firrtl.uint<64>
      firrtl.strictconnect %lsExecUnit_io_wdata, %6 : !firrtl.uint<64>
      firrtl.strictconnect %lsExecUnit_io_dmem_req_ready, %io_dmem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %7, %lsExecUnit_io_dmem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %8, %lsExecUnit_io_dmem_req_bits_addr : !firrtl.uint<39>
      firrtl.strictconnect %9, %lsExecUnit_io_dmem_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %10, %lsExecUnit_io_dmem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %11, %lsExecUnit_io_dmem_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %12, %lsExecUnit_io_dmem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %lsExecUnit_io_dmem_resp_valid, %io_dmem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_io_dmem_resp_bits_rdata, %io_dmem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %13, %lsExecUnit_io_dtlbPF : !firrtl.uint<1>
      firrtl.strictconnect %14, %lsExecUnit_io_loadAddrMisaligned : !firrtl.uint<1>
      firrtl.strictconnect %15, %lsExecUnit_io_storeAddrMisaligned : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_clock, %clock : !firrtl.clock
      firrtl.strictconnect %lsExecUnit_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %io_dtlbPF_9, %13 : !firrtl.uint<1>
      %_amoReq_T = firrtl.bits %io_in_bits_func 5 to 5 {name = "_amoReq_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %atomReq = firrtl.and %io_in_valid, %_amoReq_T {name = "atomReq"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_lrReq_T = firrtl.eq %io_in_bits_func, %c32_ui6 {name = "_lrReq_T"} : (!firrtl.uint<7>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_amoReq_T_2 = firrtl.not %_lrReq_T {name = "_amoReq_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_amoReq_T_3 = firrtl.and %_amoReq_T, %_amoReq_T_2 {name = "_amoReq_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_scReq_T = firrtl.eq %io_in_bits_func, %c33_ui6 {name = "_scReq_T"} : (!firrtl.uint<7>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_amoReq_T_5 = firrtl.not %_scReq_T {name = "_amoReq_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_amoReq_T_6 = firrtl.and %_amoReq_T_3, %_amoReq_T_5 {name = "_amoReq_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %amoReq = firrtl.and %io_in_valid, %_amoReq_T_6 {name = "amoReq"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %lrReq = firrtl.and %io_in_valid, %_lrReq_T {name = "lrReq"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %scReq = firrtl.and %io_in_valid, %_scReq_T {name = "scReq"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %16, %amoReq : !firrtl.uint<1>
      %17 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %17, %amoReq : !firrtl.uint<1>
      %atomWidthD = firrtl.bits %io_instr 12 to 12 {name = "atomWidthD"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %atomWidthW = firrtl.not %atomWidthD {name = "atomWidthW"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %setLr = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      %setLrVal = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      %setLrAddr = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<64>
      %_scInvalid_T = firrtl.neq %io_in_bits_src1, %lrAddr__bore {name = "_scInvalid_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<1>
      %_scInvalid_T_1 = firrtl.not %lr__bore {name = "_scInvalid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_scInvalid_T_2 = firrtl.or %_scInvalid_T, %_scInvalid_T_1 {name = "_scInvalid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %scInvalid = firrtl.and %_scInvalid_T_2, %scReq {name = "scInvalid"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %atomMemReg = firrtl.reg %clock {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %atomRegReg = firrtl.reg %clock {firrtl.random_init_start = 67 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %atomALU_io_src1, %atomALU_io_src2, %atomALU_io_func, %atomALU_io_isWordOp, %atomALU_io_result = firrtl.instance atomALU @AtomALU(in io_src1: !firrtl.uint<64>, in io_src2: !firrtl.uint<64>, in io_func: !firrtl.uint<7>, in io_isWordOp: !firrtl.uint<1>, out io_result: !firrtl.uint<64>)
      %18 = firrtl.wire : !firrtl.uint<64>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %atomALU_io_src1, %18 : !firrtl.uint<64>
      firrtl.strictconnect %atomALU_io_src2, %io_wdata : !firrtl.uint<64>
      firrtl.strictconnect %atomALU_io_func, %io_in_bits_func : !firrtl.uint<7>
      firrtl.strictconnect %atomALU_io_isWordOp, %19 : !firrtl.uint<1>
      firrtl.strictconnect %20, %atomALU_io_result : !firrtl.uint<64>
      firrtl.strictconnect %18, %atomMemReg : !firrtl.uint<64>
      firrtl.strictconnect %19, %atomWidthW : !firrtl.uint<1>
      %21 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %22 = firrtl.not %21 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_lsExecUnit_io_in_valid_T = firrtl.not %atomReq {name = "_lsExecUnit_io_in_valid_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_lsExecUnit_io_in_valid_T_1 = firrtl.and %io_in_valid, %_lsExecUnit_io_in_valid_T {name = "_lsExecUnit_io_in_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_lsExecUnit_io_in_bits_src1_T = firrtl.add %io_in_bits_src1, %io_in_bits_src2 {name = "_lsExecUnit_io_in_bits_src1_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %_lsExecUnit_io_in_bits_src1_T_1 = firrtl.bits %_lsExecUnit_io_in_bits_src1_T 63 to 0 {name = "_lsExecUnit_io_in_bits_src1_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %_io_in_ready_T_1 = firrtl.and %3, %4 {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T_1, %scInvalid {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.or %4, %scInvalid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.mux(%amoReq, %c5_ui3, %c0_ui3) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %24 = firrtl.mux(%lrReq, %c3_ui3, %23) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_state_T = firrtl.mux(%scInvalid, %c0_ui3, %c4_ui3) {name = "_state_T"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %25 = firrtl.mux(%scReq, %_state_T, %24) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %26 = firrtl.eq %state, %c1_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %27 = firrtl.and %21, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %3, %4 {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.not %atomReq : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.not %amoReq : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.or %28, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.not %lrReq : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.or %30, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.not %scReq : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.or %32, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.and %27, %35 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %34, %36, "Assertion failed\0A    at UnpipelinedLSU.scala:167 assert(!atomReq || !amoReq || !lrReq || !scReq)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %37 = firrtl.mux(%io_out_valid_0, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %38 = firrtl.not %26 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.and %21, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.eq %state, %c5_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %41 = firrtl.and %39, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_lsExecUnit_io_in_bits_func_T = firrtl.mux(%atomWidthD, %c3_ui2, %c2_ui2) {name = "_lsExecUnit_io_in_bits_func_T"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %42 = firrtl.pad %_lsExecUnit_io_in_bits_func_T, 7 : (!firrtl.uint<2>) -> !firrtl.uint<7>
      %43 = firrtl.and %3, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.and %41, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.mux(%43, %c6_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %46 = firrtl.and %44, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.and %46, %47 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %48, "[%d] UnpipelinedLSU: " {name = "printf_1"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %49 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.and %46, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %50, "[AMO-L] lsExecUnit.io.out.bits %x addr %x src2 %x\0A" {name = "printf_2"} (%5, %1, %io_wdata) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>
      %51 = firrtl.mux(%40, %5, %atomRegReg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %52 = firrtl.or %22, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %53 = firrtl.mux(%52, %atomRegReg, %51) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %atomRegReg, %53 : !firrtl.uint<64>
      %54 = firrtl.not %40 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %55 = firrtl.and %39, %54 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.eq %state, %c6_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %57 = firrtl.and %55, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %58 = firrtl.mux(%56, %20, %atomMemReg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %59 = firrtl.mux(%40, %5, %58) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %60 = firrtl.or %22, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %61 = firrtl.mux(%60, %atomMemReg, %59) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %atomMemReg, %61 : !firrtl.uint<64>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_1_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_timer, %LogPerfHelper_1_timer : !firrtl.uint<64>
      %62 = firrtl.and %57, %c_control_1_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %63 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.and %62, %63 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %64, "[%d] UnpipelinedLSU: " {name = "printf_3"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %65 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %66 = firrtl.and %62, %65 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %66, "[AMO-A] src1 %x src2 %x res %x\0A" {name = "printf_4"} (%atomMemReg, %io_wdata, %20) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>
      %67 = firrtl.not %56 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %68 = firrtl.and %55, %67 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %69 = firrtl.andr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %70 = firrtl.and %68, %69 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_lsExecUnit_io_in_bits_func_T_1 = firrtl.mux(%atomWidthD, %c11_ui4, %c10_ui4) {name = "_lsExecUnit_io_in_bits_func_T_1"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %71 = firrtl.pad %_lsExecUnit_io_in_bits_func_T_1, 7 : (!firrtl.uint<4>) -> !firrtl.uint<7>
      %_io_out_valid_T_2 = firrtl.and %3, %4 {name = "_io_out_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %72 = firrtl.and %70, %_io_out_valid_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %73 = firrtl.mux(%_io_out_valid_T_2, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %LogPerfHelper_2_timer, %LogPerfHelper_2_logEnable, %LogPerfHelper_2_clean, %LogPerfHelper_2_dump = firrtl.instance LogPerfHelper_2 sym @sym_1 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_2_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_2_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_logEnable, %LogPerfHelper_2_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_timer, %LogPerfHelper_2_timer : !firrtl.uint<64>
      %74 = firrtl.and %72, %c_control_2_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %75 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.and %74, %75 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %76, "[%d] UnpipelinedLSU: " {name = "printf_5"} (%c_control_2_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %77 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %78 = firrtl.and %74, %77 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %78, "[AMO-S] atomRegReg %x addr %x\0A" {name = "printf_6"} (%atomRegReg, %1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %79 = firrtl.not %69 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.and %68, %79 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.eq %state, %c3_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %82 = firrtl.and %80, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_lsExecUnit_io_in_bits_func_T_2 = firrtl.mux(%atomWidthD, %c3_ui2, %c2_ui2) {name = "_lsExecUnit_io_in_bits_func_T_2"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %83 = firrtl.pad %_lsExecUnit_io_in_bits_func_T_2, 7 : (!firrtl.uint<2>) -> !firrtl.uint<7>
      %_io_out_valid_T_3 = firrtl.and %3, %4 {name = "_io_out_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %84 = firrtl.and %82, %_io_out_valid_T_3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %85 = firrtl.mux(%_io_out_valid_T_3, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %LogPerfHelper_3_timer, %LogPerfHelper_3_logEnable, %LogPerfHelper_3_clean, %LogPerfHelper_3_dump = firrtl.instance LogPerfHelper_3 sym @sym_2 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_3_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_3_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_3_logEnable, %LogPerfHelper_3_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_3_timer, %LogPerfHelper_3_timer : !firrtl.uint<64>
      %86 = firrtl.and %84, %c_control_3_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %87 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.and %86, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %88, "[%d] UnpipelinedLSU: " {name = "printf_7"} (%c_control_3_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %89 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %90 = firrtl.and %86, %89 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %90, "[LR]\0A" {name = "printf_8"}  : !firrtl.clock, !firrtl.uint<1>
      %91 = firrtl.not %81 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.and %80, %91 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.eq %state, %c4_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %94 = firrtl.and %92, %93 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.or %69, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %96 = firrtl.mux(%95, %c1_ui1, %93) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %97 = firrtl.mux(%56, %c0_ui1, %96) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.or %26, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %99 = firrtl.mux(%98, %c1_ui1, %97) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.mux(%22, %_lsExecUnit_io_in_valid_T_1, %99) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %0, %100 : !firrtl.uint<1>
      %101 = firrtl.not %56 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %102 = firrtl.or %22, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %103 = firrtl.or %102, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.mux(%103, %c1_ui1, %101) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %3, %104 : !firrtl.uint<1>
      %105 = firrtl.mux(%22, %_lsExecUnit_io_in_bits_src1_T_1, %io_in_bits_src1) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %1, %105 : !firrtl.uint<64>
      %_lsExecUnit_io_in_bits_func_T_3 = firrtl.mux(%atomWidthD, %c11_ui4, %c10_ui4) {name = "_lsExecUnit_io_in_bits_func_T_3"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %106 = firrtl.pad %_lsExecUnit_io_in_bits_func_T_3, 7 : (!firrtl.uint<4>) -> !firrtl.uint<7>
      %107 = firrtl.mux(%81, %83, %106) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %108 = firrtl.mux(%69, %71, %107) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %109 = firrtl.mux(%40, %42, %108) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %110 = firrtl.or %22, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %111 = firrtl.mux(%110, %io_in_bits_func, %109) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %2, %111 : !firrtl.uint<7>
      %112 = firrtl.mux(%69, %atomMemReg, %io_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %113 = firrtl.or %22, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %114 = firrtl.mux(%113, %io_wdata, %112) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %6, %114 : !firrtl.uint<64>
      %_io_out_valid_T_4 = firrtl.and %3, %4 {name = "_io_out_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %115 = firrtl.mux(%93, %_io_out_valid_T_4, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.mux(%81, %_io_out_valid_T_3, %115) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %117 = firrtl.mux(%69, %_io_out_valid_T_2, %116) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.or %40, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.mux(%118, %c0_ui1, %117) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.mux(%26, %_io_in_ready_T_3, %119) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %121 = firrtl.mux(%22, %_io_in_ready_T_2, %120) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %122 = firrtl.mux(%93, %_io_out_valid_T_4, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.mux(%81, %_io_out_valid_T_3, %122) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %124 = firrtl.mux(%69, %_io_out_valid_T_2, %123) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %125 = firrtl.or %40, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %126 = firrtl.mux(%125, %c0_ui1, %124) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %127 = firrtl.mux(%26, %4, %126) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %128 = firrtl.mux(%22, %_io_out_valid_T_1, %127) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %129 = firrtl.and %94, %_io_out_valid_T_4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %130 = firrtl.and %93, %_io_out_valid_T_4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %131 = firrtl.mux(%130, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %132 = firrtl.mux(%81, %85, %131) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %133 = firrtl.mux(%69, %73, %132) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %134 = firrtl.mux(%56, %c7_ui3, %133) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %135 = firrtl.mux(%40, %45, %134) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %136 = firrtl.mux(%26, %37, %135) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %137 = firrtl.mux(%22, %25, %136) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %LogPerfHelper_4_timer, %LogPerfHelper_4_logEnable, %LogPerfHelper_4_clean, %LogPerfHelper_4_dump = firrtl.instance LogPerfHelper_4 sym @sym_3 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_4_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_4_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_4_logEnable, %LogPerfHelper_4_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_4_timer, %LogPerfHelper_4_timer : !firrtl.uint<64>
      %138 = firrtl.and %129, %c_control_4_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %139 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %140 = firrtl.and %138, %139 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %140, "[%d] UnpipelinedLSU: " {name = "printf_9"} (%c_control_4_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %141 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %142 = firrtl.and %138, %141 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %142, "[SC] \0A" {name = "printf_10"}  : !firrtl.clock, !firrtl.uint<1>
      %143 = firrtl.or %dtlbPF__bore, %io_loadAddrMisaligned_10 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %144 = firrtl.or %143, %io_storeAddrMisaligned_11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %145 = firrtl.mux(%144, %c0_ui3, %137) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %state, %145 : !firrtl.uint<3>
      %146 = firrtl.mux(%144, %c1_ui1, %128) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_0, %146 : !firrtl.uint<1>
      %147 = firrtl.mux(%144, %c1_ui1, %121) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %147 : !firrtl.uint<1>
      %LogPerfHelper_5_timer, %LogPerfHelper_5_logEnable, %LogPerfHelper_5_clean, %LogPerfHelper_5_dump = firrtl.instance LogPerfHelper_5 sym @sym_4 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_5_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_5_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_5_logEnable, %LogPerfHelper_5_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_5_timer, %LogPerfHelper_5_timer : !firrtl.uint<64>
      %148 = firrtl.and %io_out_valid_0, %c_control_5_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %149 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %150 = firrtl.and %148, %149 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %150, "[%d] UnpipelinedLSU: " {name = "printf_11"} (%c_control_5_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %151 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %152 = firrtl.and %148, %151 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %152, "[LSU-AGU] state %x inv %x inr %x\0A" {name = "printf_12"} (%state, %io_in_valid, %io_in_ready) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<1>, !firrtl.uint<1>
      %_setLr_T_1 = firrtl.or %lrReq, %scReq {name = "_setLr_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_setLr_T_2 = firrtl.and %io_out_valid_0, %_setLr_T_1 {name = "_setLr_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %setLr, %_setLr_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %setLrVal, %lrReq : !firrtl.uint<1>
      firrtl.strictconnect %setLrAddr, %io_in_bits_src1 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_req_bits_addr_3, %8 : !firrtl.uint<39>
      firrtl.strictconnect %io_dmem_req_bits_size_4, %9 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_cmd_5, %10 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_wmask_6, %11 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wdata_7, %12 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_req_valid_2, %7 : !firrtl.uint<1>
      %_io_out_bits_T = firrtl.andr %state {name = "_io_out_bits_T"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_out_bits_T_1 = firrtl.mux(%_io_out_bits_T, %atomRegReg, %5) {name = "_io_out_bits_T_1"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %153 = firrtl.pad %scInvalid, 64 : (!firrtl.uint<1>) -> !firrtl.uint<64>
      %_io_out_bits_T_2 = firrtl.mux(%scReq, %153, %_io_out_bits_T_1) {name = "_io_out_bits_T_2"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_1, %_io_out_bits_T_2 : !firrtl.uint<64>
      %mmioReg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 131 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %154 = firrtl.not %mmioReg : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %155 = firrtl.mux(%154, %lsuMMIO__bore, %mmioReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %156 = firrtl.mux(%io_out_valid_0, %c0_ui1, %155) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mmioReg, %156 : !firrtl.uint<1>
      %_io_isMMIO_T = firrtl.and %mmioReg, %io_out_valid_0 {name = "_io_isMMIO_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_isMMIO_8, %_io_isMMIO_T : !firrtl.uint<1>
      firrtl.strictconnect %io_loadAddrMisaligned_10, %14 : !firrtl.uint<1>
      firrtl.strictconnect %io_storeAddrMisaligned_11, %15 : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_dtlbPF__bore_12, %lsExecUnit_dtlbPF__bore : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_r_1__bore, %lsExecUnit_r_1__bore_13 : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_dtlbEnable__bore_14, %lsExecUnit_dtlbEnable__bore : !firrtl.uint<1>
      firrtl.strictconnect %setLrAddr__bore, %setLrAddr : !firrtl.uint<64>
      firrtl.strictconnect %lsExecUnit_r__bore, %lsExecUnit_r__bore_15 : !firrtl.uint<1>
      firrtl.strictconnect %setLrVal__bore, %setLrVal : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit__WIRE__bore, %lsExecUnit__WIRE__bore_16 : !firrtl.uint<1>
      firrtl.strictconnect %setLr__bore, %setLr : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_io_in_bits_src1__bore, %lsExecUnit_io_in_bits_src1__bore_17 : !firrtl.uint<64>
      firrtl.strictconnect %lsExecUnit_dtlbFinish__bore_18, %lsExecUnit_dtlbFinish__bore : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %16 : !firrtl.uint<1>
      firrtl.strictconnect %lsExecUnit_isAMO__bore, %17 : !firrtl.uint<1>
    }
    firrtl.module private @Multiplier(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_0: !firrtl.uint<65>, in %io_in_bits_1: !firrtl.uint<65>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits: !firrtl.uint<130>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_2 = firrtl.wire {name = "io_out_bits"} : !firrtl.uint<130>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits, %io_out_bits_2 : !firrtl.uint<130>
      %mulRes_REG = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<65>
      firrtl.strictconnect %mulRes_REG, %io_in_bits_0 : !firrtl.uint<65>
      %_mulRes_T = firrtl.asSInt %mulRes_REG {name = "_mulRes_T"} : (!firrtl.uint<65>) -> !firrtl.sint<65>
      %mulRes_REG_1 = firrtl.reg %clock {firrtl.random_init_start = 65 : ui64} : !firrtl.clock, !firrtl.uint<65>
      firrtl.strictconnect %mulRes_REG_1, %io_in_bits_1 : !firrtl.uint<65>
      %_mulRes_T_1 = firrtl.asSInt %mulRes_REG_1 {name = "_mulRes_T_1"} : (!firrtl.uint<65>) -> !firrtl.sint<65>
      %mulRes = firrtl.mul %_mulRes_T, %_mulRes_T_1 {name = "mulRes"} : (!firrtl.sint<65>, !firrtl.sint<65>) -> !firrtl.sint<130>
      %io_out_bits_REG = firrtl.reg %clock {firrtl.random_init_start = 130 : ui64} : !firrtl.clock, !firrtl.sint<130>
      firrtl.strictconnect %io_out_bits_REG, %mulRes : !firrtl.sint<130>
      %io_out_bits_REG_1 = firrtl.reg %clock {firrtl.random_init_start = 260 : ui64} : !firrtl.clock, !firrtl.sint<130>
      firrtl.strictconnect %io_out_bits_REG_1, %io_out_bits_REG : !firrtl.sint<130>
      %io_out_bits_REG_2 = firrtl.reg %clock {firrtl.random_init_start = 390 : ui64} : !firrtl.clock, !firrtl.sint<130>
      firrtl.strictconnect %io_out_bits_REG_2, %io_out_bits_REG_1 : !firrtl.sint<130>
      %_io_out_bits_T = firrtl.asUInt %io_out_bits_REG_2 {name = "_io_out_bits_T"} : (!firrtl.sint<130>) -> !firrtl.uint<130>
      firrtl.strictconnect %io_out_bits_2, %_io_out_bits_T : !firrtl.uint<130>
      %_io_out_valid_T = firrtl.and %io_in_ready_0, %io_in_valid {name = "_io_out_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_out_valid_REG = firrtl.reg %clock {firrtl.random_init_start = 520 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_REG, %_io_out_valid_T : !firrtl.uint<1>
      %io_out_valid_REG_1 = firrtl.reg %clock {firrtl.random_init_start = 521 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_REG_1, %io_out_valid_REG : !firrtl.uint<1>
      %io_out_valid_REG_2 = firrtl.reg %clock {firrtl.random_init_start = 522 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_REG_2, %io_out_valid_REG_1 : !firrtl.uint<1>
      %io_out_valid_REG_3 = firrtl.reg %clock {firrtl.random_init_start = 523 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_REG_3, %io_out_valid_REG_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %io_out_valid_REG_3 : !firrtl.uint<1>
      %busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 524 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %busy {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.and %io_in_valid, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%0, %c1_ui1, %busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.mux(%io_out_valid_1, %c0_ui1, %1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %busy, %2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T : !firrtl.uint<1>
    }
    firrtl.module private @Divider(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_0: !firrtl.uint<64>, in %io_in_bits_1: !firrtl.uint<64>, in %io_sign: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits: !firrtl.uint<128>) {
      %c0_ui7 = firrtl.constant 0 : !firrtl.uint<7>
      %c63_ui7 = firrtl.constant 63 : !firrtl.uint<7>
      %c0_ui6 = firrtl.constant 0 : !firrtl.uint<6>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c63_ui6 = firrtl.constant 63 : !firrtl.uint<6>
      %c64_ui7 = firrtl.constant 64 : !firrtl.uint<7>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_2 = firrtl.wire {name = "io_out_bits"} : !firrtl.uint<128>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits, %io_out_bits_2 : !firrtl.uint<128>
      %state = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %0 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %0 {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_newReq_T_1 = firrtl.and %io_in_ready_0, %io_in_valid {name = "_newReq_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %newReq = firrtl.and %_io_in_ready_T, %_newReq_T_1 {name = "newReq"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_qSignReg_T_1 = firrtl.orr %io_in_bits_1 {name = "_qSignReg_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %divBy0 = firrtl.not %_qSignReg_T_1 {name = "divBy0"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %shiftReg = firrtl.reg %clock {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<129>
      %hi = firrtl.bits %shiftReg 128 to 64 {name = "hi"} : (!firrtl.uint<129>) -> !firrtl.uint<65>
      %lo = firrtl.bits %shiftReg 63 to 0 {name = "lo"} : (!firrtl.uint<129>) -> !firrtl.uint<64>
      %_s_T = firrtl.bits %io_in_bits_0 63 to 63 {name = "_s_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %aSign = firrtl.and %_s_T, %io_sign {name = "aSign"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.neg %io_in_bits_0 : (!firrtl.uint<64>) -> !firrtl.sint<65>
      %2 = firrtl.bits %1 63 to 0 : (!firrtl.sint<65>) -> !firrtl.uint<64>
      %aVal = firrtl.mux(%aSign, %2, %io_in_bits_0) {name = "aVal"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_s_T_1 = firrtl.bits %io_in_bits_1 63 to 63 {name = "_s_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %bSign = firrtl.and %_s_T_1, %io_sign {name = "bSign"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.neg %io_in_bits_1 : (!firrtl.uint<64>) -> !firrtl.sint<65>
      %4 = firrtl.bits %3 63 to 0 : (!firrtl.sint<65>) -> !firrtl.uint<64>
      %bVal = firrtl.mux(%bSign, %4, %io_in_bits_1) {name = "bVal"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %aSignReg = firrtl.reg %clock {firrtl.random_init_start = 132 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %5 = firrtl.mux(%newReq, %aSign, %aSignReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %aSignReg, %5 : !firrtl.uint<1>
      %_qSignReg_T = firrtl.xor %aSign, %bSign {name = "_qSignReg_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_qSignReg_T_2 = firrtl.and %_qSignReg_T, %_qSignReg_T_1 {name = "_qSignReg_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %qSignReg = firrtl.reg %clock {firrtl.random_init_start = 133 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %6 = firrtl.mux(%newReq, %_qSignReg_T_2, %qSignReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %qSignReg, %6 : !firrtl.uint<1>
      %bReg = firrtl.reg %clock {firrtl.random_init_start = 134 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %7 = firrtl.mux(%newReq, %bVal, %bReg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %bReg, %7 : !firrtl.uint<64>
      %_aValx2Reg_T = firrtl.cat %aVal, %c0_ui1 {name = "_aValx2Reg_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %aValx2Reg = firrtl.reg %clock {firrtl.random_init_start = 198 : ui64} : !firrtl.clock, !firrtl.uint<65>
      %8 = firrtl.mux(%newReq, %_aValx2Reg_T, %aValx2Reg) : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      firrtl.strictconnect %aValx2Reg, %8 : !firrtl.uint<65>
      %cnt_value = firrtl.regreset %clock, %reset, %c0_ui6 {firrtl.random_init_start = 263 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>
      %9 = firrtl.eq %state, %c1_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %canSkipShift_hi = firrtl.bits %bReg 63 to 32 {name = "canSkipShift_hi"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %canSkipShift_useHi = firrtl.orr %canSkipShift_hi {name = "canSkipShift_useHi"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %canSkipShift_hi_1 = firrtl.bits %bReg 63 to 48 {name = "canSkipShift_hi_1"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %canSkipShift_useHi_1 = firrtl.orr %canSkipShift_hi_1 {name = "canSkipShift_useHi_1"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %canSkipShift_hi_2 = firrtl.bits %bReg 63 to 56 {name = "canSkipShift_hi_2"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %canSkipShift_useHi_2 = firrtl.orr %canSkipShift_hi_2 {name = "canSkipShift_useHi_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_3 = firrtl.bits %bReg 63 to 60 {name = "canSkipShift_hi_3"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_3 = firrtl.orr %canSkipShift_hi_3 {name = "canSkipShift_useHi_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T = firrtl.bits %bReg 63 to 63 {name = "_canSkipShift_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_1 = firrtl.bits %bReg 62 to 62 {name = "_canSkipShift_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_2 = firrtl.bits %bReg 61 to 61 {name = "_canSkipShift_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %10 = firrtl.pad %_canSkipShift_T_2, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_3 = firrtl.mux(%_canSkipShift_T_1, %c2_ui2, %10) {name = "_canSkipShift_T_3"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_4 = firrtl.mux(%_canSkipShift_T, %c3_ui2, %_canSkipShift_T_3) {name = "_canSkipShift_T_4"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_5 = firrtl.bits %bReg 59 to 59 {name = "_canSkipShift_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_6 = firrtl.bits %bReg 58 to 58 {name = "_canSkipShift_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_7 = firrtl.bits %bReg 57 to 57 {name = "_canSkipShift_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %11 = firrtl.pad %_canSkipShift_T_7, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_8 = firrtl.mux(%_canSkipShift_T_6, %c2_ui2, %11) {name = "_canSkipShift_T_8"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_9 = firrtl.mux(%_canSkipShift_T_5, %c3_ui2, %_canSkipShift_T_8) {name = "_canSkipShift_T_9"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_10 = firrtl.mux(%canSkipShift_useHi_3, %_canSkipShift_T_4, %_canSkipShift_T_9) {name = "_canSkipShift_T_10"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_11 = firrtl.cat %canSkipShift_useHi_3, %_canSkipShift_T_10 {name = "_canSkipShift_T_11"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_4 = firrtl.bits %bReg 55 to 52 {name = "canSkipShift_hi_4"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_4 = firrtl.orr %canSkipShift_hi_4 {name = "canSkipShift_useHi_4"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_12 = firrtl.bits %bReg 55 to 55 {name = "_canSkipShift_T_12"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_13 = firrtl.bits %bReg 54 to 54 {name = "_canSkipShift_T_13"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_14 = firrtl.bits %bReg 53 to 53 {name = "_canSkipShift_T_14"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %12 = firrtl.pad %_canSkipShift_T_14, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_15 = firrtl.mux(%_canSkipShift_T_13, %c2_ui2, %12) {name = "_canSkipShift_T_15"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_16 = firrtl.mux(%_canSkipShift_T_12, %c3_ui2, %_canSkipShift_T_15) {name = "_canSkipShift_T_16"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_17 = firrtl.bits %bReg 51 to 51 {name = "_canSkipShift_T_17"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_18 = firrtl.bits %bReg 50 to 50 {name = "_canSkipShift_T_18"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_19 = firrtl.bits %bReg 49 to 49 {name = "_canSkipShift_T_19"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %13 = firrtl.pad %_canSkipShift_T_19, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_20 = firrtl.mux(%_canSkipShift_T_18, %c2_ui2, %13) {name = "_canSkipShift_T_20"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_21 = firrtl.mux(%_canSkipShift_T_17, %c3_ui2, %_canSkipShift_T_20) {name = "_canSkipShift_T_21"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_22 = firrtl.mux(%canSkipShift_useHi_4, %_canSkipShift_T_16, %_canSkipShift_T_21) {name = "_canSkipShift_T_22"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_23 = firrtl.cat %canSkipShift_useHi_4, %_canSkipShift_T_22 {name = "_canSkipShift_T_23"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_24 = firrtl.mux(%canSkipShift_useHi_2, %_canSkipShift_T_11, %_canSkipShift_T_23) {name = "_canSkipShift_T_24"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_25 = firrtl.cat %canSkipShift_useHi_2, %_canSkipShift_T_24 {name = "_canSkipShift_T_25"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %canSkipShift_hi_5 = firrtl.bits %bReg 47 to 40 {name = "canSkipShift_hi_5"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %canSkipShift_useHi_5 = firrtl.orr %canSkipShift_hi_5 {name = "canSkipShift_useHi_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_6 = firrtl.bits %bReg 47 to 44 {name = "canSkipShift_hi_6"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_6 = firrtl.orr %canSkipShift_hi_6 {name = "canSkipShift_useHi_6"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_26 = firrtl.bits %bReg 47 to 47 {name = "_canSkipShift_T_26"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_27 = firrtl.bits %bReg 46 to 46 {name = "_canSkipShift_T_27"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_28 = firrtl.bits %bReg 45 to 45 {name = "_canSkipShift_T_28"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %14 = firrtl.pad %_canSkipShift_T_28, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_29 = firrtl.mux(%_canSkipShift_T_27, %c2_ui2, %14) {name = "_canSkipShift_T_29"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_30 = firrtl.mux(%_canSkipShift_T_26, %c3_ui2, %_canSkipShift_T_29) {name = "_canSkipShift_T_30"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_31 = firrtl.bits %bReg 43 to 43 {name = "_canSkipShift_T_31"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_32 = firrtl.bits %bReg 42 to 42 {name = "_canSkipShift_T_32"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_33 = firrtl.bits %bReg 41 to 41 {name = "_canSkipShift_T_33"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %15 = firrtl.pad %_canSkipShift_T_33, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_34 = firrtl.mux(%_canSkipShift_T_32, %c2_ui2, %15) {name = "_canSkipShift_T_34"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_35 = firrtl.mux(%_canSkipShift_T_31, %c3_ui2, %_canSkipShift_T_34) {name = "_canSkipShift_T_35"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_36 = firrtl.mux(%canSkipShift_useHi_6, %_canSkipShift_T_30, %_canSkipShift_T_35) {name = "_canSkipShift_T_36"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_37 = firrtl.cat %canSkipShift_useHi_6, %_canSkipShift_T_36 {name = "_canSkipShift_T_37"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_7 = firrtl.bits %bReg 39 to 36 {name = "canSkipShift_hi_7"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_7 = firrtl.orr %canSkipShift_hi_7 {name = "canSkipShift_useHi_7"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_38 = firrtl.bits %bReg 39 to 39 {name = "_canSkipShift_T_38"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_39 = firrtl.bits %bReg 38 to 38 {name = "_canSkipShift_T_39"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_40 = firrtl.bits %bReg 37 to 37 {name = "_canSkipShift_T_40"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %16 = firrtl.pad %_canSkipShift_T_40, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_41 = firrtl.mux(%_canSkipShift_T_39, %c2_ui2, %16) {name = "_canSkipShift_T_41"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_42 = firrtl.mux(%_canSkipShift_T_38, %c3_ui2, %_canSkipShift_T_41) {name = "_canSkipShift_T_42"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_43 = firrtl.bits %bReg 35 to 35 {name = "_canSkipShift_T_43"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_44 = firrtl.bits %bReg 34 to 34 {name = "_canSkipShift_T_44"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_45 = firrtl.bits %bReg 33 to 33 {name = "_canSkipShift_T_45"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %17 = firrtl.pad %_canSkipShift_T_45, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_46 = firrtl.mux(%_canSkipShift_T_44, %c2_ui2, %17) {name = "_canSkipShift_T_46"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_47 = firrtl.mux(%_canSkipShift_T_43, %c3_ui2, %_canSkipShift_T_46) {name = "_canSkipShift_T_47"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_48 = firrtl.mux(%canSkipShift_useHi_7, %_canSkipShift_T_42, %_canSkipShift_T_47) {name = "_canSkipShift_T_48"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_49 = firrtl.cat %canSkipShift_useHi_7, %_canSkipShift_T_48 {name = "_canSkipShift_T_49"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_50 = firrtl.mux(%canSkipShift_useHi_5, %_canSkipShift_T_37, %_canSkipShift_T_49) {name = "_canSkipShift_T_50"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_51 = firrtl.cat %canSkipShift_useHi_5, %_canSkipShift_T_50 {name = "_canSkipShift_T_51"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_canSkipShift_T_52 = firrtl.mux(%canSkipShift_useHi_1, %_canSkipShift_T_25, %_canSkipShift_T_51) {name = "_canSkipShift_T_52"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_canSkipShift_T_53 = firrtl.cat %canSkipShift_useHi_1, %_canSkipShift_T_52 {name = "_canSkipShift_T_53"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %canSkipShift_hi_8 = firrtl.bits %bReg 31 to 16 {name = "canSkipShift_hi_8"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %canSkipShift_useHi_8 = firrtl.orr %canSkipShift_hi_8 {name = "canSkipShift_useHi_8"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %canSkipShift_hi_9 = firrtl.bits %bReg 31 to 24 {name = "canSkipShift_hi_9"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %canSkipShift_useHi_9 = firrtl.orr %canSkipShift_hi_9 {name = "canSkipShift_useHi_9"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_10 = firrtl.bits %bReg 31 to 28 {name = "canSkipShift_hi_10"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_10 = firrtl.orr %canSkipShift_hi_10 {name = "canSkipShift_useHi_10"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_54 = firrtl.bits %bReg 31 to 31 {name = "_canSkipShift_T_54"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_55 = firrtl.bits %bReg 30 to 30 {name = "_canSkipShift_T_55"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_56 = firrtl.bits %bReg 29 to 29 {name = "_canSkipShift_T_56"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %18 = firrtl.pad %_canSkipShift_T_56, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_57 = firrtl.mux(%_canSkipShift_T_55, %c2_ui2, %18) {name = "_canSkipShift_T_57"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_58 = firrtl.mux(%_canSkipShift_T_54, %c3_ui2, %_canSkipShift_T_57) {name = "_canSkipShift_T_58"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_59 = firrtl.bits %bReg 27 to 27 {name = "_canSkipShift_T_59"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_60 = firrtl.bits %bReg 26 to 26 {name = "_canSkipShift_T_60"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_61 = firrtl.bits %bReg 25 to 25 {name = "_canSkipShift_T_61"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %19 = firrtl.pad %_canSkipShift_T_61, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_62 = firrtl.mux(%_canSkipShift_T_60, %c2_ui2, %19) {name = "_canSkipShift_T_62"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_63 = firrtl.mux(%_canSkipShift_T_59, %c3_ui2, %_canSkipShift_T_62) {name = "_canSkipShift_T_63"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_64 = firrtl.mux(%canSkipShift_useHi_10, %_canSkipShift_T_58, %_canSkipShift_T_63) {name = "_canSkipShift_T_64"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_65 = firrtl.cat %canSkipShift_useHi_10, %_canSkipShift_T_64 {name = "_canSkipShift_T_65"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_11 = firrtl.bits %bReg 23 to 20 {name = "canSkipShift_hi_11"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_11 = firrtl.orr %canSkipShift_hi_11 {name = "canSkipShift_useHi_11"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_66 = firrtl.bits %bReg 23 to 23 {name = "_canSkipShift_T_66"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_67 = firrtl.bits %bReg 22 to 22 {name = "_canSkipShift_T_67"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_68 = firrtl.bits %bReg 21 to 21 {name = "_canSkipShift_T_68"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %20 = firrtl.pad %_canSkipShift_T_68, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_69 = firrtl.mux(%_canSkipShift_T_67, %c2_ui2, %20) {name = "_canSkipShift_T_69"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_70 = firrtl.mux(%_canSkipShift_T_66, %c3_ui2, %_canSkipShift_T_69) {name = "_canSkipShift_T_70"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_71 = firrtl.bits %bReg 19 to 19 {name = "_canSkipShift_T_71"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_72 = firrtl.bits %bReg 18 to 18 {name = "_canSkipShift_T_72"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_73 = firrtl.bits %bReg 17 to 17 {name = "_canSkipShift_T_73"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %21 = firrtl.pad %_canSkipShift_T_73, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_74 = firrtl.mux(%_canSkipShift_T_72, %c2_ui2, %21) {name = "_canSkipShift_T_74"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_75 = firrtl.mux(%_canSkipShift_T_71, %c3_ui2, %_canSkipShift_T_74) {name = "_canSkipShift_T_75"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_76 = firrtl.mux(%canSkipShift_useHi_11, %_canSkipShift_T_70, %_canSkipShift_T_75) {name = "_canSkipShift_T_76"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_77 = firrtl.cat %canSkipShift_useHi_11, %_canSkipShift_T_76 {name = "_canSkipShift_T_77"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_78 = firrtl.mux(%canSkipShift_useHi_9, %_canSkipShift_T_65, %_canSkipShift_T_77) {name = "_canSkipShift_T_78"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_79 = firrtl.cat %canSkipShift_useHi_9, %_canSkipShift_T_78 {name = "_canSkipShift_T_79"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %canSkipShift_hi_12 = firrtl.bits %bReg 15 to 8 {name = "canSkipShift_hi_12"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %canSkipShift_useHi_12 = firrtl.orr %canSkipShift_hi_12 {name = "canSkipShift_useHi_12"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_13 = firrtl.bits %bReg 15 to 12 {name = "canSkipShift_hi_13"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_13 = firrtl.orr %canSkipShift_hi_13 {name = "canSkipShift_useHi_13"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_80 = firrtl.bits %bReg 15 to 15 {name = "_canSkipShift_T_80"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_81 = firrtl.bits %bReg 14 to 14 {name = "_canSkipShift_T_81"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_82 = firrtl.bits %bReg 13 to 13 {name = "_canSkipShift_T_82"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %22 = firrtl.pad %_canSkipShift_T_82, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_83 = firrtl.mux(%_canSkipShift_T_81, %c2_ui2, %22) {name = "_canSkipShift_T_83"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_84 = firrtl.mux(%_canSkipShift_T_80, %c3_ui2, %_canSkipShift_T_83) {name = "_canSkipShift_T_84"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_85 = firrtl.bits %bReg 11 to 11 {name = "_canSkipShift_T_85"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_86 = firrtl.bits %bReg 10 to 10 {name = "_canSkipShift_T_86"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_87 = firrtl.bits %bReg 9 to 9 {name = "_canSkipShift_T_87"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %23 = firrtl.pad %_canSkipShift_T_87, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_88 = firrtl.mux(%_canSkipShift_T_86, %c2_ui2, %23) {name = "_canSkipShift_T_88"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_89 = firrtl.mux(%_canSkipShift_T_85, %c3_ui2, %_canSkipShift_T_88) {name = "_canSkipShift_T_89"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_90 = firrtl.mux(%canSkipShift_useHi_13, %_canSkipShift_T_84, %_canSkipShift_T_89) {name = "_canSkipShift_T_90"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_91 = firrtl.cat %canSkipShift_useHi_13, %_canSkipShift_T_90 {name = "_canSkipShift_T_91"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_14 = firrtl.bits %bReg 7 to 4 {name = "canSkipShift_hi_14"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %canSkipShift_useHi_14 = firrtl.orr %canSkipShift_hi_14 {name = "canSkipShift_useHi_14"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_92 = firrtl.bits %bReg 7 to 7 {name = "_canSkipShift_T_92"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_93 = firrtl.bits %bReg 6 to 6 {name = "_canSkipShift_T_93"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_94 = firrtl.bits %bReg 5 to 5 {name = "_canSkipShift_T_94"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %24 = firrtl.pad %_canSkipShift_T_94, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_95 = firrtl.mux(%_canSkipShift_T_93, %c2_ui2, %24) {name = "_canSkipShift_T_95"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_96 = firrtl.mux(%_canSkipShift_T_92, %c3_ui2, %_canSkipShift_T_95) {name = "_canSkipShift_T_96"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_97 = firrtl.bits %bReg 3 to 3 {name = "_canSkipShift_T_97"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_98 = firrtl.bits %bReg 2 to 2 {name = "_canSkipShift_T_98"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_canSkipShift_T_99 = firrtl.bits %bReg 1 to 1 {name = "_canSkipShift_T_99"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %25 = firrtl.pad %_canSkipShift_T_99, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_100 = firrtl.mux(%_canSkipShift_T_98, %c2_ui2, %25) {name = "_canSkipShift_T_100"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_101 = firrtl.mux(%_canSkipShift_T_97, %c3_ui2, %_canSkipShift_T_100) {name = "_canSkipShift_T_101"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_102 = firrtl.mux(%canSkipShift_useHi_14, %_canSkipShift_T_96, %_canSkipShift_T_101) {name = "_canSkipShift_T_102"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_103 = firrtl.cat %canSkipShift_useHi_14, %_canSkipShift_T_102 {name = "_canSkipShift_T_103"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_104 = firrtl.mux(%canSkipShift_useHi_12, %_canSkipShift_T_91, %_canSkipShift_T_103) {name = "_canSkipShift_T_104"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_105 = firrtl.cat %canSkipShift_useHi_12, %_canSkipShift_T_104 {name = "_canSkipShift_T_105"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_canSkipShift_T_106 = firrtl.mux(%canSkipShift_useHi_8, %_canSkipShift_T_79, %_canSkipShift_T_105) {name = "_canSkipShift_T_106"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_canSkipShift_T_107 = firrtl.cat %canSkipShift_useHi_8, %_canSkipShift_T_106 {name = "_canSkipShift_T_107"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %_canSkipShift_T_108 = firrtl.mux(%canSkipShift_useHi, %_canSkipShift_T_53, %_canSkipShift_T_107) {name = "_canSkipShift_T_108"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_canSkipShift_T_109 = firrtl.cat %canSkipShift_useHi, %_canSkipShift_T_108 {name = "_canSkipShift_T_109"} : (!firrtl.uint<1>, !firrtl.uint<5>) -> !firrtl.uint<6>
      %26 = firrtl.pad %_canSkipShift_T_109, 7 : (!firrtl.uint<6>) -> !firrtl.uint<7>
      %_canSkipShift_T_110 = firrtl.or %26, %c64_ui7 {name = "_canSkipShift_T_110"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %canSkipShift_hi_15 = firrtl.bits %aValx2Reg 64 to 64 {name = "canSkipShift_hi_15"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %canSkipShift_hi_16 = firrtl.bits %aValx2Reg 63 to 32 {name = "canSkipShift_hi_16"} : (!firrtl.uint<65>) -> !firrtl.uint<32>
      %canSkipShift_useHi_16 = firrtl.orr %canSkipShift_hi_16 {name = "canSkipShift_useHi_16"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %canSkipShift_hi_17 = firrtl.bits %aValx2Reg 63 to 48 {name = "canSkipShift_hi_17"} : (!firrtl.uint<65>) -> !firrtl.uint<16>
      %canSkipShift_useHi_17 = firrtl.orr %canSkipShift_hi_17 {name = "canSkipShift_useHi_17"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %canSkipShift_hi_18 = firrtl.bits %aValx2Reg 63 to 56 {name = "canSkipShift_hi_18"} : (!firrtl.uint<65>) -> !firrtl.uint<8>
      %canSkipShift_useHi_18 = firrtl.orr %canSkipShift_hi_18 {name = "canSkipShift_useHi_18"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_19 = firrtl.bits %aValx2Reg 63 to 60 {name = "canSkipShift_hi_19"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_19 = firrtl.orr %canSkipShift_hi_19 {name = "canSkipShift_useHi_19"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_111 = firrtl.bits %aValx2Reg 63 to 63 {name = "_canSkipShift_T_111"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_112 = firrtl.bits %aValx2Reg 62 to 62 {name = "_canSkipShift_T_112"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_113 = firrtl.bits %aValx2Reg 61 to 61 {name = "_canSkipShift_T_113"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %27 = firrtl.pad %_canSkipShift_T_113, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_114 = firrtl.mux(%_canSkipShift_T_112, %c2_ui2, %27) {name = "_canSkipShift_T_114"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_115 = firrtl.mux(%_canSkipShift_T_111, %c3_ui2, %_canSkipShift_T_114) {name = "_canSkipShift_T_115"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_116 = firrtl.bits %aValx2Reg 59 to 59 {name = "_canSkipShift_T_116"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_117 = firrtl.bits %aValx2Reg 58 to 58 {name = "_canSkipShift_T_117"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_118 = firrtl.bits %aValx2Reg 57 to 57 {name = "_canSkipShift_T_118"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %28 = firrtl.pad %_canSkipShift_T_118, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_119 = firrtl.mux(%_canSkipShift_T_117, %c2_ui2, %28) {name = "_canSkipShift_T_119"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_120 = firrtl.mux(%_canSkipShift_T_116, %c3_ui2, %_canSkipShift_T_119) {name = "_canSkipShift_T_120"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_121 = firrtl.mux(%canSkipShift_useHi_19, %_canSkipShift_T_115, %_canSkipShift_T_120) {name = "_canSkipShift_T_121"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_122 = firrtl.cat %canSkipShift_useHi_19, %_canSkipShift_T_121 {name = "_canSkipShift_T_122"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_20 = firrtl.bits %aValx2Reg 55 to 52 {name = "canSkipShift_hi_20"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_20 = firrtl.orr %canSkipShift_hi_20 {name = "canSkipShift_useHi_20"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_123 = firrtl.bits %aValx2Reg 55 to 55 {name = "_canSkipShift_T_123"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_124 = firrtl.bits %aValx2Reg 54 to 54 {name = "_canSkipShift_T_124"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_125 = firrtl.bits %aValx2Reg 53 to 53 {name = "_canSkipShift_T_125"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %29 = firrtl.pad %_canSkipShift_T_125, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_126 = firrtl.mux(%_canSkipShift_T_124, %c2_ui2, %29) {name = "_canSkipShift_T_126"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_127 = firrtl.mux(%_canSkipShift_T_123, %c3_ui2, %_canSkipShift_T_126) {name = "_canSkipShift_T_127"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_128 = firrtl.bits %aValx2Reg 51 to 51 {name = "_canSkipShift_T_128"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_129 = firrtl.bits %aValx2Reg 50 to 50 {name = "_canSkipShift_T_129"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_130 = firrtl.bits %aValx2Reg 49 to 49 {name = "_canSkipShift_T_130"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %30 = firrtl.pad %_canSkipShift_T_130, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_131 = firrtl.mux(%_canSkipShift_T_129, %c2_ui2, %30) {name = "_canSkipShift_T_131"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_132 = firrtl.mux(%_canSkipShift_T_128, %c3_ui2, %_canSkipShift_T_131) {name = "_canSkipShift_T_132"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_133 = firrtl.mux(%canSkipShift_useHi_20, %_canSkipShift_T_127, %_canSkipShift_T_132) {name = "_canSkipShift_T_133"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_134 = firrtl.cat %canSkipShift_useHi_20, %_canSkipShift_T_133 {name = "_canSkipShift_T_134"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_135 = firrtl.mux(%canSkipShift_useHi_18, %_canSkipShift_T_122, %_canSkipShift_T_134) {name = "_canSkipShift_T_135"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_136 = firrtl.cat %canSkipShift_useHi_18, %_canSkipShift_T_135 {name = "_canSkipShift_T_136"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %canSkipShift_hi_21 = firrtl.bits %aValx2Reg 47 to 40 {name = "canSkipShift_hi_21"} : (!firrtl.uint<65>) -> !firrtl.uint<8>
      %canSkipShift_useHi_21 = firrtl.orr %canSkipShift_hi_21 {name = "canSkipShift_useHi_21"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_22 = firrtl.bits %aValx2Reg 47 to 44 {name = "canSkipShift_hi_22"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_22 = firrtl.orr %canSkipShift_hi_22 {name = "canSkipShift_useHi_22"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_137 = firrtl.bits %aValx2Reg 47 to 47 {name = "_canSkipShift_T_137"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_138 = firrtl.bits %aValx2Reg 46 to 46 {name = "_canSkipShift_T_138"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_139 = firrtl.bits %aValx2Reg 45 to 45 {name = "_canSkipShift_T_139"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %31 = firrtl.pad %_canSkipShift_T_139, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_140 = firrtl.mux(%_canSkipShift_T_138, %c2_ui2, %31) {name = "_canSkipShift_T_140"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_141 = firrtl.mux(%_canSkipShift_T_137, %c3_ui2, %_canSkipShift_T_140) {name = "_canSkipShift_T_141"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_142 = firrtl.bits %aValx2Reg 43 to 43 {name = "_canSkipShift_T_142"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_143 = firrtl.bits %aValx2Reg 42 to 42 {name = "_canSkipShift_T_143"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_144 = firrtl.bits %aValx2Reg 41 to 41 {name = "_canSkipShift_T_144"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %32 = firrtl.pad %_canSkipShift_T_144, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_145 = firrtl.mux(%_canSkipShift_T_143, %c2_ui2, %32) {name = "_canSkipShift_T_145"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_146 = firrtl.mux(%_canSkipShift_T_142, %c3_ui2, %_canSkipShift_T_145) {name = "_canSkipShift_T_146"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_147 = firrtl.mux(%canSkipShift_useHi_22, %_canSkipShift_T_141, %_canSkipShift_T_146) {name = "_canSkipShift_T_147"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_148 = firrtl.cat %canSkipShift_useHi_22, %_canSkipShift_T_147 {name = "_canSkipShift_T_148"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_23 = firrtl.bits %aValx2Reg 39 to 36 {name = "canSkipShift_hi_23"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_23 = firrtl.orr %canSkipShift_hi_23 {name = "canSkipShift_useHi_23"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_149 = firrtl.bits %aValx2Reg 39 to 39 {name = "_canSkipShift_T_149"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_150 = firrtl.bits %aValx2Reg 38 to 38 {name = "_canSkipShift_T_150"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_151 = firrtl.bits %aValx2Reg 37 to 37 {name = "_canSkipShift_T_151"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %33 = firrtl.pad %_canSkipShift_T_151, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_152 = firrtl.mux(%_canSkipShift_T_150, %c2_ui2, %33) {name = "_canSkipShift_T_152"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_153 = firrtl.mux(%_canSkipShift_T_149, %c3_ui2, %_canSkipShift_T_152) {name = "_canSkipShift_T_153"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_154 = firrtl.bits %aValx2Reg 35 to 35 {name = "_canSkipShift_T_154"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_155 = firrtl.bits %aValx2Reg 34 to 34 {name = "_canSkipShift_T_155"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_156 = firrtl.bits %aValx2Reg 33 to 33 {name = "_canSkipShift_T_156"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %34 = firrtl.pad %_canSkipShift_T_156, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_157 = firrtl.mux(%_canSkipShift_T_155, %c2_ui2, %34) {name = "_canSkipShift_T_157"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_158 = firrtl.mux(%_canSkipShift_T_154, %c3_ui2, %_canSkipShift_T_157) {name = "_canSkipShift_T_158"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_159 = firrtl.mux(%canSkipShift_useHi_23, %_canSkipShift_T_153, %_canSkipShift_T_158) {name = "_canSkipShift_T_159"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_160 = firrtl.cat %canSkipShift_useHi_23, %_canSkipShift_T_159 {name = "_canSkipShift_T_160"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_161 = firrtl.mux(%canSkipShift_useHi_21, %_canSkipShift_T_148, %_canSkipShift_T_160) {name = "_canSkipShift_T_161"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_162 = firrtl.cat %canSkipShift_useHi_21, %_canSkipShift_T_161 {name = "_canSkipShift_T_162"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_canSkipShift_T_163 = firrtl.mux(%canSkipShift_useHi_17, %_canSkipShift_T_136, %_canSkipShift_T_162) {name = "_canSkipShift_T_163"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_canSkipShift_T_164 = firrtl.cat %canSkipShift_useHi_17, %_canSkipShift_T_163 {name = "_canSkipShift_T_164"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %canSkipShift_hi_24 = firrtl.bits %aValx2Reg 31 to 16 {name = "canSkipShift_hi_24"} : (!firrtl.uint<65>) -> !firrtl.uint<16>
      %canSkipShift_useHi_24 = firrtl.orr %canSkipShift_hi_24 {name = "canSkipShift_useHi_24"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %canSkipShift_hi_25 = firrtl.bits %aValx2Reg 31 to 24 {name = "canSkipShift_hi_25"} : (!firrtl.uint<65>) -> !firrtl.uint<8>
      %canSkipShift_useHi_25 = firrtl.orr %canSkipShift_hi_25 {name = "canSkipShift_useHi_25"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_26 = firrtl.bits %aValx2Reg 31 to 28 {name = "canSkipShift_hi_26"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_26 = firrtl.orr %canSkipShift_hi_26 {name = "canSkipShift_useHi_26"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_165 = firrtl.bits %aValx2Reg 31 to 31 {name = "_canSkipShift_T_165"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_166 = firrtl.bits %aValx2Reg 30 to 30 {name = "_canSkipShift_T_166"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_167 = firrtl.bits %aValx2Reg 29 to 29 {name = "_canSkipShift_T_167"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %35 = firrtl.pad %_canSkipShift_T_167, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_168 = firrtl.mux(%_canSkipShift_T_166, %c2_ui2, %35) {name = "_canSkipShift_T_168"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_169 = firrtl.mux(%_canSkipShift_T_165, %c3_ui2, %_canSkipShift_T_168) {name = "_canSkipShift_T_169"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_170 = firrtl.bits %aValx2Reg 27 to 27 {name = "_canSkipShift_T_170"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_171 = firrtl.bits %aValx2Reg 26 to 26 {name = "_canSkipShift_T_171"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_172 = firrtl.bits %aValx2Reg 25 to 25 {name = "_canSkipShift_T_172"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %36 = firrtl.pad %_canSkipShift_T_172, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_173 = firrtl.mux(%_canSkipShift_T_171, %c2_ui2, %36) {name = "_canSkipShift_T_173"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_174 = firrtl.mux(%_canSkipShift_T_170, %c3_ui2, %_canSkipShift_T_173) {name = "_canSkipShift_T_174"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_175 = firrtl.mux(%canSkipShift_useHi_26, %_canSkipShift_T_169, %_canSkipShift_T_174) {name = "_canSkipShift_T_175"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_176 = firrtl.cat %canSkipShift_useHi_26, %_canSkipShift_T_175 {name = "_canSkipShift_T_176"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_27 = firrtl.bits %aValx2Reg 23 to 20 {name = "canSkipShift_hi_27"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_27 = firrtl.orr %canSkipShift_hi_27 {name = "canSkipShift_useHi_27"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_177 = firrtl.bits %aValx2Reg 23 to 23 {name = "_canSkipShift_T_177"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_178 = firrtl.bits %aValx2Reg 22 to 22 {name = "_canSkipShift_T_178"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_179 = firrtl.bits %aValx2Reg 21 to 21 {name = "_canSkipShift_T_179"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %37 = firrtl.pad %_canSkipShift_T_179, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_180 = firrtl.mux(%_canSkipShift_T_178, %c2_ui2, %37) {name = "_canSkipShift_T_180"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_181 = firrtl.mux(%_canSkipShift_T_177, %c3_ui2, %_canSkipShift_T_180) {name = "_canSkipShift_T_181"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_182 = firrtl.bits %aValx2Reg 19 to 19 {name = "_canSkipShift_T_182"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_183 = firrtl.bits %aValx2Reg 18 to 18 {name = "_canSkipShift_T_183"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_184 = firrtl.bits %aValx2Reg 17 to 17 {name = "_canSkipShift_T_184"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %38 = firrtl.pad %_canSkipShift_T_184, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_185 = firrtl.mux(%_canSkipShift_T_183, %c2_ui2, %38) {name = "_canSkipShift_T_185"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_186 = firrtl.mux(%_canSkipShift_T_182, %c3_ui2, %_canSkipShift_T_185) {name = "_canSkipShift_T_186"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_187 = firrtl.mux(%canSkipShift_useHi_27, %_canSkipShift_T_181, %_canSkipShift_T_186) {name = "_canSkipShift_T_187"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_188 = firrtl.cat %canSkipShift_useHi_27, %_canSkipShift_T_187 {name = "_canSkipShift_T_188"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_189 = firrtl.mux(%canSkipShift_useHi_25, %_canSkipShift_T_176, %_canSkipShift_T_188) {name = "_canSkipShift_T_189"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_190 = firrtl.cat %canSkipShift_useHi_25, %_canSkipShift_T_189 {name = "_canSkipShift_T_190"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %canSkipShift_hi_28 = firrtl.bits %aValx2Reg 15 to 8 {name = "canSkipShift_hi_28"} : (!firrtl.uint<65>) -> !firrtl.uint<8>
      %canSkipShift_useHi_28 = firrtl.orr %canSkipShift_hi_28 {name = "canSkipShift_useHi_28"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %canSkipShift_hi_29 = firrtl.bits %aValx2Reg 15 to 12 {name = "canSkipShift_hi_29"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_29 = firrtl.orr %canSkipShift_hi_29 {name = "canSkipShift_useHi_29"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_191 = firrtl.bits %aValx2Reg 15 to 15 {name = "_canSkipShift_T_191"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_192 = firrtl.bits %aValx2Reg 14 to 14 {name = "_canSkipShift_T_192"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_193 = firrtl.bits %aValx2Reg 13 to 13 {name = "_canSkipShift_T_193"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %39 = firrtl.pad %_canSkipShift_T_193, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_194 = firrtl.mux(%_canSkipShift_T_192, %c2_ui2, %39) {name = "_canSkipShift_T_194"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_195 = firrtl.mux(%_canSkipShift_T_191, %c3_ui2, %_canSkipShift_T_194) {name = "_canSkipShift_T_195"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_196 = firrtl.bits %aValx2Reg 11 to 11 {name = "_canSkipShift_T_196"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_197 = firrtl.bits %aValx2Reg 10 to 10 {name = "_canSkipShift_T_197"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_198 = firrtl.bits %aValx2Reg 9 to 9 {name = "_canSkipShift_T_198"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %40 = firrtl.pad %_canSkipShift_T_198, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_199 = firrtl.mux(%_canSkipShift_T_197, %c2_ui2, %40) {name = "_canSkipShift_T_199"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_200 = firrtl.mux(%_canSkipShift_T_196, %c3_ui2, %_canSkipShift_T_199) {name = "_canSkipShift_T_200"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_201 = firrtl.mux(%canSkipShift_useHi_29, %_canSkipShift_T_195, %_canSkipShift_T_200) {name = "_canSkipShift_T_201"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_202 = firrtl.cat %canSkipShift_useHi_29, %_canSkipShift_T_201 {name = "_canSkipShift_T_202"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %canSkipShift_hi_30 = firrtl.bits %aValx2Reg 7 to 4 {name = "canSkipShift_hi_30"} : (!firrtl.uint<65>) -> !firrtl.uint<4>
      %canSkipShift_useHi_30 = firrtl.orr %canSkipShift_hi_30 {name = "canSkipShift_useHi_30"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_canSkipShift_T_203 = firrtl.bits %aValx2Reg 7 to 7 {name = "_canSkipShift_T_203"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_204 = firrtl.bits %aValx2Reg 6 to 6 {name = "_canSkipShift_T_204"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_205 = firrtl.bits %aValx2Reg 5 to 5 {name = "_canSkipShift_T_205"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %41 = firrtl.pad %_canSkipShift_T_205, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_206 = firrtl.mux(%_canSkipShift_T_204, %c2_ui2, %41) {name = "_canSkipShift_T_206"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_207 = firrtl.mux(%_canSkipShift_T_203, %c3_ui2, %_canSkipShift_T_206) {name = "_canSkipShift_T_207"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_208 = firrtl.bits %aValx2Reg 3 to 3 {name = "_canSkipShift_T_208"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_209 = firrtl.bits %aValx2Reg 2 to 2 {name = "_canSkipShift_T_209"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %_canSkipShift_T_210 = firrtl.bits %aValx2Reg 1 to 1 {name = "_canSkipShift_T_210"} : (!firrtl.uint<65>) -> !firrtl.uint<1>
      %42 = firrtl.pad %_canSkipShift_T_210, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %_canSkipShift_T_211 = firrtl.mux(%_canSkipShift_T_209, %c2_ui2, %42) {name = "_canSkipShift_T_211"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_212 = firrtl.mux(%_canSkipShift_T_208, %c3_ui2, %_canSkipShift_T_211) {name = "_canSkipShift_T_212"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_213 = firrtl.mux(%canSkipShift_useHi_30, %_canSkipShift_T_207, %_canSkipShift_T_212) {name = "_canSkipShift_T_213"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_canSkipShift_T_214 = firrtl.cat %canSkipShift_useHi_30, %_canSkipShift_T_213 {name = "_canSkipShift_T_214"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_canSkipShift_T_215 = firrtl.mux(%canSkipShift_useHi_28, %_canSkipShift_T_202, %_canSkipShift_T_214) {name = "_canSkipShift_T_215"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_canSkipShift_T_216 = firrtl.cat %canSkipShift_useHi_28, %_canSkipShift_T_215 {name = "_canSkipShift_T_216"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_canSkipShift_T_217 = firrtl.mux(%canSkipShift_useHi_24, %_canSkipShift_T_190, %_canSkipShift_T_216) {name = "_canSkipShift_T_217"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_canSkipShift_T_218 = firrtl.cat %canSkipShift_useHi_24, %_canSkipShift_T_217 {name = "_canSkipShift_T_218"} : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %_canSkipShift_T_219 = firrtl.mux(%canSkipShift_useHi_16, %_canSkipShift_T_164, %_canSkipShift_T_218) {name = "_canSkipShift_T_219"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_canSkipShift_T_220 = firrtl.cat %canSkipShift_useHi_16, %_canSkipShift_T_219 {name = "_canSkipShift_T_220"} : (!firrtl.uint<1>, !firrtl.uint<5>) -> !firrtl.uint<6>
      %_canSkipShift_T_221 = firrtl.mux(%canSkipShift_hi_15, %c0_ui6, %_canSkipShift_T_220) {name = "_canSkipShift_T_221"} : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %_canSkipShift_T_222 = firrtl.cat %canSkipShift_hi_15, %_canSkipShift_T_221 {name = "_canSkipShift_T_222"} : (!firrtl.uint<1>, !firrtl.uint<6>) -> !firrtl.uint<7>
      %_canSkipShift_T_223 = firrtl.sub %_canSkipShift_T_110, %_canSkipShift_T_222 {name = "_canSkipShift_T_223"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<8>
      %canSkipShift = firrtl.bits %_canSkipShift_T_223 6 to 0 {name = "canSkipShift"} : (!firrtl.uint<8>) -> !firrtl.uint<7>
      %_value_T = firrtl.geq %canSkipShift, %c63_ui6 {name = "_value_T"} : (!firrtl.uint<7>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_value_T_1 = firrtl.mux(%_value_T, %c63_ui7, %canSkipShift) {name = "_value_T_1"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_value_T_2 = firrtl.mux(%divBy0, %c0_ui7, %_value_T_1) {name = "_value_T_2"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %43 = firrtl.bits %_value_T_2 5 to 0 : (!firrtl.uint<7>) -> !firrtl.uint<6>
      %44 = firrtl.eq %state, %c2_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_shiftReg_T = firrtl.dshl %aValx2Reg, %cnt_value {name = "_shiftReg_T"} : (!firrtl.uint<65>, !firrtl.uint<6>) -> !firrtl.uint<128>
      %45 = firrtl.pad %_shiftReg_T, 129 : (!firrtl.uint<128>) -> !firrtl.uint<129>
      %46 = firrtl.eq %state, %c3_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %enough = firrtl.geq %hi, %bReg {name = "enough"} : (!firrtl.uint<65>, !firrtl.uint<64>) -> !firrtl.uint<1>
      %_shiftReg_T_1 = firrtl.sub %hi, %bReg {name = "_shiftReg_T_1"} : (!firrtl.uint<65>, !firrtl.uint<64>) -> !firrtl.uint<66>
      %_shiftReg_T_2 = firrtl.bits %_shiftReg_T_1 64 to 0 {name = "_shiftReg_T_2"} : (!firrtl.uint<66>) -> !firrtl.uint<65>
      %_shiftReg_T_3 = firrtl.mux(%enough, %_shiftReg_T_2, %hi) {name = "_shiftReg_T_3"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_shiftReg_T_4 = firrtl.bits %_shiftReg_T_3 63 to 0 {name = "_shiftReg_T_4"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %shiftReg_hi = firrtl.cat %_shiftReg_T_4, %lo {name = "shiftReg_hi"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %_shiftReg_T_5 = firrtl.cat %shiftReg_hi, %enough {name = "_shiftReg_T_5"} : (!firrtl.uint<128>, !firrtl.uint<1>) -> !firrtl.uint<129>
      %47 = firrtl.mux(%46, %_shiftReg_T_5, %shiftReg) : (!firrtl.uint<1>, !firrtl.uint<129>, !firrtl.uint<129>) -> !firrtl.uint<129>
      %48 = firrtl.mux(%44, %45, %47) : (!firrtl.uint<1>, !firrtl.uint<129>, !firrtl.uint<129>) -> !firrtl.uint<129>
      %49 = firrtl.or %newReq, %9 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.mux(%49, %shiftReg, %48) : (!firrtl.uint<1>, !firrtl.uint<129>, !firrtl.uint<129>) -> !firrtl.uint<129>
      firrtl.strictconnect %shiftReg, %50 : !firrtl.uint<129>
      %wrap = firrtl.andr %cnt_value {name = "wrap"} : (!firrtl.uint<6>) -> !firrtl.uint<1>
      %_value_T_3 = firrtl.add %cnt_value, %c1_ui1 {name = "_value_T_3"} : (!firrtl.uint<6>, !firrtl.uint<1>) -> !firrtl.uint<7>
      %_value_T_4 = firrtl.bits %_value_T_3 5 to 0 {name = "_value_T_4"} : (!firrtl.uint<7>) -> !firrtl.uint<6>
      %51 = firrtl.mux(%46, %_value_T_4, %cnt_value) : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %52 = firrtl.mux(%44, %cnt_value, %51) : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %53 = firrtl.mux(%9, %43, %52) : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      %54 = firrtl.mux(%newReq, %cnt_value, %53) : (!firrtl.uint<1>, !firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<6>
      firrtl.strictconnect %cnt_value, %54 : !firrtl.uint<6>
      %55 = firrtl.mux(%wrap, %c4_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %56 = firrtl.eq %state, %c4_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %57 = firrtl.mux(%56, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %58 = firrtl.mux(%46, %55, %57) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %59 = firrtl.mux(%44, %c3_ui3, %58) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %60 = firrtl.mux(%9, %c2_ui3, %59) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %61 = firrtl.mux(%newReq, %c1_ui3, %60) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %state, %61 : !firrtl.uint<3>
      %r = firrtl.bits %shiftReg 128 to 65 {name = "r"} : (!firrtl.uint<129>) -> !firrtl.uint<64>
      %62 = firrtl.neg %lo : (!firrtl.uint<64>) -> !firrtl.sint<65>
      %_resQ_T_1 = firrtl.bits %62 63 to 0 {name = "_resQ_T_1"} : (!firrtl.sint<65>) -> !firrtl.uint<64>
      %resQ = firrtl.mux(%qSignReg, %_resQ_T_1, %lo) {name = "resQ"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %63 = firrtl.neg %r : (!firrtl.uint<64>) -> !firrtl.sint<65>
      %_resR_T_1 = firrtl.bits %63 63 to 0 {name = "_resR_T_1"} : (!firrtl.sint<65>) -> !firrtl.uint<64>
      %resR = firrtl.mux(%aSignReg, %_resR_T_1, %r) {name = "resR"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_T = firrtl.cat %resR, %resQ {name = "_io_out_bits_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      firrtl.strictconnect %io_out_bits_2, %_io_out_bits_T : !firrtl.uint<128>
      %_io_out_valid_T = firrtl.eq %state, %c4_ui3 {name = "_io_out_valid_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T : !firrtl.uint<1>
    }
    firrtl.module private @MDU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_src1: !firrtl.uint<64>, in %io_in_bits_src2: !firrtl.uint<64>, in %io_in_bits_func: !firrtl.uint<7>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits: !firrtl.uint<64>, out %_WIRE__bore: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui65 = firrtl.constant 0 : !firrtl.uint<65>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c4294967295_ui32 = firrtl.constant 4294967295 : !firrtl.uint<32>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready = firrtl.wire : !firrtl.uint<1>
      %io_out_valid_0 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_1 = firrtl.wire {name = "io_out_bits"} : !firrtl.uint<64>
      firrtl.strictconnect %io_out_valid, %io_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits, %io_out_bits_1 : !firrtl.uint<64>
      %isDiv = firrtl.bits %io_in_bits_func 2 to 2 {name = "isDiv"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_isDivSign_T_1 = firrtl.bits %io_in_bits_func 0 to 0 {name = "_isDivSign_T_1"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_isDivSign_T_2 = firrtl.not %_isDivSign_T_1 {name = "_isDivSign_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %isDivSign = firrtl.and %isDiv, %_isDivSign_T_2 {name = "isDivSign"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isW = firrtl.bits %io_in_bits_func 3 to 3 {name = "isW"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %mul_clock, %mul_reset, %mul_io_in_ready, %mul_io_in_valid, %mul_io_in_bits_0, %mul_io_in_bits_1, %mul_io_out_valid, %mul_io_out_bits = firrtl.instance mul @Multiplier(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_0: !firrtl.uint<65>, in io_in_bits_1: !firrtl.uint<65>, out io_out_valid: !firrtl.uint<1>, out io_out_bits: !firrtl.uint<130>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<65>
      %3 = firrtl.wire : !firrtl.uint<65>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<130>
      firrtl.strictconnect %0, %mul_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %mul_io_in_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %mul_io_in_bits_0, %2 : !firrtl.uint<65>
      firrtl.strictconnect %mul_io_in_bits_1, %3 : !firrtl.uint<65>
      firrtl.strictconnect %4, %mul_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %5, %mul_io_out_bits : !firrtl.uint<130>
      firrtl.strictconnect %mul_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mul_reset, %reset : !firrtl.uint<1>
      %div_clock, %div_reset, %div_io_in_ready, %div_io_in_valid, %div_io_in_bits_0, %div_io_in_bits_1, %div_io_sign, %div_io_out_valid, %div_io_out_bits = firrtl.instance div @Divider(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_0: !firrtl.uint<64>, in io_in_bits_1: !firrtl.uint<64>, in io_sign: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits: !firrtl.uint<128>)
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<64>
      %9 = firrtl.wire : !firrtl.uint<64>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<128>
      firrtl.strictconnect %6, %div_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %div_io_in_valid, %7 : !firrtl.uint<1>
      firrtl.strictconnect %div_io_in_bits_0, %8 : !firrtl.uint<64>
      firrtl.strictconnect %div_io_in_bits_1, %9 : !firrtl.uint<64>
      firrtl.strictconnect %div_io_sign, %10 : !firrtl.uint<1>
      firrtl.strictconnect %11, %div_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %12, %div_io_out_bits : !firrtl.uint<128>
      firrtl.strictconnect %div_clock, %clock : !firrtl.clock
      firrtl.strictconnect %div_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %10, %isDivSign : !firrtl.uint<1>
      %_mulRes_T = firrtl.bits %io_in_bits_func 1 to 0 {name = "_mulRes_T"} : (!firrtl.uint<7>) -> !firrtl.uint<2>
      %_mul_io_in_bits_0_T_4 = firrtl.cat %c0_ui1, %io_in_bits_src1 {name = "_mul_io_in_bits_0_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %mul_io_in_bits_0_signBit = firrtl.bits %io_in_bits_src1 63 to 63 {name = "mul_io_in_bits_0_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_mul_io_in_bits_0_T_2 = firrtl.cat %mul_io_in_bits_0_signBit, %io_in_bits_src1 {name = "_mul_io_in_bits_0_T_2"} : (!firrtl.uint<1>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_T_3 = firrtl.cat %mul_io_in_bits_0_signBit, %io_in_bits_src1 {name = "_mul_io_in_bits_0_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %13 = firrtl.orr %_mulRes_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_0_T_5 = firrtl.not %13 {name = "_mul_io_in_bits_0_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_mul_io_in_bits_0_T_6 = firrtl.eq %_mulRes_T, %c1_ui2 {name = "_mul_io_in_bits_0_T_6"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_0_T_7 = firrtl.eq %_mulRes_T, %c2_ui2 {name = "_mul_io_in_bits_0_T_7"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_0_T_8 = firrtl.andr %_mulRes_T {name = "_mul_io_in_bits_0_T_8"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_0_T_9 = firrtl.mux(%_mul_io_in_bits_0_T_5, %_mul_io_in_bits_0_T_4, %c0_ui65) {name = "_mul_io_in_bits_0_T_9"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_T_10 = firrtl.mux(%_mul_io_in_bits_0_T_6, %_mul_io_in_bits_0_T_2, %c0_ui65) {name = "_mul_io_in_bits_0_T_10"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_T_11 = firrtl.mux(%_mul_io_in_bits_0_T_7, %_mul_io_in_bits_0_T_3, %c0_ui65) {name = "_mul_io_in_bits_0_T_11"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_T_12 = firrtl.mux(%_mul_io_in_bits_0_T_8, %_mul_io_in_bits_0_T_4, %c0_ui65) {name = "_mul_io_in_bits_0_T_12"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_T_13 = firrtl.or %_mul_io_in_bits_0_T_9, %_mul_io_in_bits_0_T_10 {name = "_mul_io_in_bits_0_T_13"} : (!firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_T_14 = firrtl.or %_mul_io_in_bits_0_T_13, %_mul_io_in_bits_0_T_11 {name = "_mul_io_in_bits_0_T_14"} : (!firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_T_15 = firrtl.or %_mul_io_in_bits_0_T_14, %_mul_io_in_bits_0_T_12 {name = "_mul_io_in_bits_0_T_15"} : (!firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_0_WIRE = firrtl.wire : !firrtl.uint<65>
      firrtl.strictconnect %_mul_io_in_bits_0_WIRE, %_mul_io_in_bits_0_T_15 : !firrtl.uint<65>
      firrtl.strictconnect %2, %_mul_io_in_bits_0_WIRE : !firrtl.uint<65>
      %_mul_io_in_bits_1_T_4 = firrtl.cat %c0_ui1, %io_in_bits_src2 {name = "_mul_io_in_bits_1_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %mul_io_in_bits_1_signBit = firrtl.bits %io_in_bits_src2 63 to 63 {name = "mul_io_in_bits_1_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_mul_io_in_bits_1_T_2 = firrtl.cat %mul_io_in_bits_1_signBit, %io_in_bits_src2 {name = "_mul_io_in_bits_1_T_2"} : (!firrtl.uint<1>, !firrtl.uint<64>) -> !firrtl.uint<65>
      %14 = firrtl.orr %_mulRes_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_1_T_5 = firrtl.not %14 {name = "_mul_io_in_bits_1_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_mul_io_in_bits_1_T_6 = firrtl.eq %_mulRes_T, %c1_ui2 {name = "_mul_io_in_bits_1_T_6"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_1_T_7 = firrtl.eq %_mulRes_T, %c2_ui2 {name = "_mul_io_in_bits_1_T_7"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_1_T_8 = firrtl.andr %_mulRes_T {name = "_mul_io_in_bits_1_T_8"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_mul_io_in_bits_1_T_9 = firrtl.mux(%_mul_io_in_bits_1_T_5, %_mul_io_in_bits_1_T_4, %c0_ui65) {name = "_mul_io_in_bits_1_T_9"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_1_T_10 = firrtl.mux(%_mul_io_in_bits_1_T_6, %_mul_io_in_bits_1_T_2, %c0_ui65) {name = "_mul_io_in_bits_1_T_10"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_1_T_11 = firrtl.mux(%_mul_io_in_bits_1_T_7, %_mul_io_in_bits_1_T_4, %c0_ui65) {name = "_mul_io_in_bits_1_T_11"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_1_T_12 = firrtl.mux(%_mul_io_in_bits_1_T_8, %_mul_io_in_bits_1_T_4, %c0_ui65) {name = "_mul_io_in_bits_1_T_12"} : (!firrtl.uint<1>, !firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_1_T_13 = firrtl.or %_mul_io_in_bits_1_T_9, %_mul_io_in_bits_1_T_10 {name = "_mul_io_in_bits_1_T_13"} : (!firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_1_T_14 = firrtl.or %_mul_io_in_bits_1_T_13, %_mul_io_in_bits_1_T_11 {name = "_mul_io_in_bits_1_T_14"} : (!firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_1_T_15 = firrtl.or %_mul_io_in_bits_1_T_14, %_mul_io_in_bits_1_T_12 {name = "_mul_io_in_bits_1_T_15"} : (!firrtl.uint<65>, !firrtl.uint<65>) -> !firrtl.uint<65>
      %_mul_io_in_bits_1_WIRE = firrtl.wire : !firrtl.uint<65>
      firrtl.strictconnect %_mul_io_in_bits_1_WIRE, %_mul_io_in_bits_1_T_15 : !firrtl.uint<65>
      firrtl.strictconnect %3, %_mul_io_in_bits_1_WIRE : !firrtl.uint<65>
      %_div_io_in_bits_0_T_3 = firrtl.bits %io_in_bits_src1 31 to 0 {name = "_div_io_in_bits_0_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %div_io_in_bits_0_signBit = firrtl.bits %io_in_bits_src1 31 to 31 {name = "div_io_in_bits_0_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %15 = firrtl.and %isDivSign, %div_io_in_bits_0_signBit : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.mux(%15, %c4294967295_ui32, %c0_ui32) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_div_io_in_bits_0_T_5 = firrtl.cat %16, %_div_io_in_bits_0_T_3 {name = "_div_io_in_bits_0_T_5"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_div_io_in_bits_0_T_6 = firrtl.mux(%isW, %_div_io_in_bits_0_T_5, %io_in_bits_src1) {name = "_div_io_in_bits_0_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %8, %_div_io_in_bits_0_T_6 : !firrtl.uint<64>
      %_div_io_in_bits_1_T_3 = firrtl.bits %io_in_bits_src2 31 to 0 {name = "_div_io_in_bits_1_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %div_io_in_bits_1_signBit = firrtl.bits %io_in_bits_src2 31 to 31 {name = "div_io_in_bits_1_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %17 = firrtl.and %isDivSign, %div_io_in_bits_1_signBit : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.mux(%17, %c4294967295_ui32, %c0_ui32) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_div_io_in_bits_1_T_5 = firrtl.cat %18, %_div_io_in_bits_1_T_3 {name = "_div_io_in_bits_1_T_5"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_div_io_in_bits_1_T_6 = firrtl.mux(%isW, %_div_io_in_bits_1_T_5, %io_in_bits_src2) {name = "_div_io_in_bits_1_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %9, %_div_io_in_bits_1_T_6 : !firrtl.uint<64>
      %_mul_io_in_valid_T = firrtl.not %isDiv {name = "_mul_io_in_valid_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_mul_io_in_valid_T_1 = firrtl.and %io_in_valid, %_mul_io_in_valid_T {name = "_mul_io_in_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %1, %_mul_io_in_valid_T_1 : !firrtl.uint<1>
      %_div_io_in_valid_T = firrtl.and %io_in_valid, %isDiv {name = "_div_io_in_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %7, %_div_io_in_valid_T : !firrtl.uint<1>
      %19 = firrtl.orr %_mulRes_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_mulRes_T_1 = firrtl.not %19 {name = "_mulRes_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_mulRes_T_2 = firrtl.bits %5 63 to 0 {name = "_mulRes_T_2"} : (!firrtl.uint<130>) -> !firrtl.uint<64>
      %_mulRes_T_3 = firrtl.bits %5 127 to 64 {name = "_mulRes_T_3"} : (!firrtl.uint<130>) -> !firrtl.uint<64>
      %mulRes = firrtl.mux(%_mulRes_T_1, %_mulRes_T_2, %_mulRes_T_3) {name = "mulRes"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_divRes_T = firrtl.bits %io_in_bits_func 1 to 1 {name = "_divRes_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_divRes_T_1 = firrtl.bits %12 127 to 64 {name = "_divRes_T_1"} : (!firrtl.uint<128>) -> !firrtl.uint<64>
      %_divRes_T_2 = firrtl.bits %12 63 to 0 {name = "_divRes_T_2"} : (!firrtl.uint<128>) -> !firrtl.uint<64>
      %divRes = firrtl.mux(%_divRes_T, %_divRes_T_1, %_divRes_T_2) {name = "divRes"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %res = firrtl.mux(%isDiv, %divRes, %mulRes) {name = "res"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_T = firrtl.bits %res 31 to 0 {name = "_io_out_bits_T"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %io_out_bits_signBit = firrtl.bits %res 31 to 31 {name = "io_out_bits_signBit"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_io_out_bits_T_1 = firrtl.mux(%io_out_bits_signBit, %c4294967295_ui32, %c0_ui32) {name = "_io_out_bits_T_1"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_T_2 = firrtl.cat %_io_out_bits_T_1, %_io_out_bits_T {name = "_io_out_bits_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_io_out_bits_T_3 = firrtl.mux(%isW, %_io_out_bits_T_2, %res) {name = "_io_out_bits_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_1, %_io_out_bits_T_3 : !firrtl.uint<64>
      %_isDivReg_T = firrtl.and %io_in_ready, %io_in_valid {name = "_isDivReg_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isDivReg_REG = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %isDivReg_REG, %isDiv : !firrtl.uint<1>
      %isDivReg = firrtl.mux(%_isDivReg_T, %isDiv, %isDivReg_REG) {name = "isDivReg"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.mux(%isDiv, %6, %0) {name = "_io_in_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %_io_in_ready_T : !firrtl.uint<1>
      %_io_out_valid_T = firrtl.mux(%isDivReg, %11, %4) {name = "_io_out_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_0, %_io_out_valid_T : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %20 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.and %c_control_logEnable, %20 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %21, "[%d] MDU: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %22 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.and %c_control_logEnable, %22 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %23, "[FU-MDU] irv-orv %d %d - %d %d\0A" {name = "printf_1"} (%io_in_ready, %io_in_valid, %c1_ui1, %io_out_valid_0) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %24 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %24, %4 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %24 : !firrtl.uint<1>
    }
    firrtl.extmodule private @DifftestCSRState(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_priviledgeMode: !firrtl.uint<64>, in io_mstatus: !firrtl.uint<64>, in io_sstatus: !firrtl.uint<64>, in io_mepc: !firrtl.uint<64>, in io_sepc: !firrtl.uint<64>, in io_mtval: !firrtl.uint<64>, in io_stval: !firrtl.uint<64>, in io_mtvec: !firrtl.uint<64>, in io_stvec: !firrtl.uint<64>, in io_mcause: !firrtl.uint<64>, in io_scause: !firrtl.uint<64>, in io_satp: !firrtl.uint<64>, in io_mip: !firrtl.uint<64>, in io_mie: !firrtl.uint<64>, in io_mscratch: !firrtl.uint<64>, in io_sscratch: !firrtl.uint<64>, in io_mideleg: !firrtl.uint<64>, in io_medeleg: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "DifftestCSRState"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "DifftestCSRState"}
    firrtl.module private @DummyDPICWrapper_1(in %clock: !firrtl.clock, in %io_priviledgeMode: !firrtl.uint<64>, in %io_mstatus: !firrtl.uint<64>, in %io_sstatus: !firrtl.uint<64>, in %io_mepc: !firrtl.uint<64>, in %io_sepc: !firrtl.uint<64>, in %io_mtval: !firrtl.uint<64>, in %io_stval: !firrtl.uint<64>, in %io_mtvec: !firrtl.uint<64>, in %io_stvec: !firrtl.uint<64>, in %io_mcause: !firrtl.uint<64>, in %io_scause: !firrtl.uint<64>, in %io_satp: !firrtl.uint<64>, in %io_mip: !firrtl.uint<64>, in %io_mie: !firrtl.uint<64>, in %io_mscratch: !firrtl.uint<64>, in %io_sscratch: !firrtl.uint<64>, in %io_mideleg: !firrtl.uint<64>, in %io_medeleg: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %dpic_clock, %dpic_enable, %dpic_io_priviledgeMode, %dpic_io_mstatus, %dpic_io_sstatus, %dpic_io_mepc, %dpic_io_sepc, %dpic_io_mtval, %dpic_io_stval, %dpic_io_mtvec, %dpic_io_stvec, %dpic_io_mcause, %dpic_io_scause, %dpic_io_satp, %dpic_io_mip, %dpic_io_mie, %dpic_io_mscratch, %dpic_io_sscratch, %dpic_io_mideleg, %dpic_io_medeleg, %dpic_io_coreid = firrtl.instance dpic @DifftestCSRState(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_priviledgeMode: !firrtl.uint<64>, in io_mstatus: !firrtl.uint<64>, in io_sstatus: !firrtl.uint<64>, in io_mepc: !firrtl.uint<64>, in io_sepc: !firrtl.uint<64>, in io_mtval: !firrtl.uint<64>, in io_stval: !firrtl.uint<64>, in io_mtvec: !firrtl.uint<64>, in io_stvec: !firrtl.uint<64>, in io_mcause: !firrtl.uint<64>, in io_scause: !firrtl.uint<64>, in io_satp: !firrtl.uint<64>, in io_mip: !firrtl.uint<64>, in io_mie: !firrtl.uint<64>, in io_mscratch: !firrtl.uint<64>, in io_sscratch: !firrtl.uint<64>, in io_mideleg: !firrtl.uint<64>, in io_medeleg: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>)
      firrtl.strictconnect %dpic_io_priviledgeMode, %io_priviledgeMode : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mstatus, %io_mstatus : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_sstatus, %io_sstatus : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mepc, %io_mepc : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_sepc, %io_sepc : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mtval, %io_mtval : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_stval, %io_stval : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mtvec, %io_mtvec : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_stvec, %io_stvec : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mcause, %io_mcause : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_scause, %io_scause : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_satp, %io_satp : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mip, %io_mip : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mie, %io_mie : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mscratch, %io_mscratch : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_sscratch, %io_sscratch : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_mideleg, %io_mideleg : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_medeleg, %io_medeleg : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_coreid, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dpic_enable, %c1_ui1 : !firrtl.uint<1>
    }
    firrtl.extmodule private @DifftestArchEvent(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_valid: !firrtl.uint<1>, in io_interrupt: !firrtl.uint<32>, in io_exception: !firrtl.uint<32>, in io_exceptionPC: !firrtl.uint<64>, in io_exceptionInst: !firrtl.uint<32>, in io_coreid: !firrtl.uint<8>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "DifftestArchEvent"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "DifftestArchEvent"}
    firrtl.module private @DummyDPICWrapper_2(in %clock: !firrtl.clock, in %io_valid: !firrtl.uint<1>, in %io_interrupt: !firrtl.uint<32>, in %io_exception: !firrtl.uint<32>, in %io_exceptionPC: !firrtl.uint<64>, in %io_exceptionInst: !firrtl.uint<32>) {
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %dpic_clock, %dpic_enable, %dpic_io_valid, %dpic_io_interrupt, %dpic_io_exception, %dpic_io_exceptionPC, %dpic_io_exceptionInst, %dpic_io_coreid = firrtl.instance dpic @DifftestArchEvent(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_valid: !firrtl.uint<1>, in io_interrupt: !firrtl.uint<32>, in io_exception: !firrtl.uint<32>, in io_exceptionPC: !firrtl.uint<64>, in io_exceptionInst: !firrtl.uint<32>, in io_coreid: !firrtl.uint<8>)
      firrtl.strictconnect %dpic_io_valid, %io_valid : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_interrupt, %io_interrupt : !firrtl.uint<32>
      firrtl.strictconnect %dpic_io_exception, %io_exception : !firrtl.uint<32>
      firrtl.strictconnect %dpic_io_exceptionPC, %io_exceptionPC : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_exceptionInst, %io_exceptionInst : !firrtl.uint<32>
      firrtl.strictconnect %dpic_io_coreid, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dpic_enable, %io_valid : !firrtl.uint<1>
    }
    firrtl.module private @CSRDiffWrapper(in %clock: !firrtl.clock, in %io_csrState_priviledgeMode: !firrtl.uint<64>, in %io_csrState_mstatus: !firrtl.uint<64>, in %io_csrState_sstatus: !firrtl.uint<64>, in %io_csrState_mepc: !firrtl.uint<64>, in %io_csrState_sepc: !firrtl.uint<64>, in %io_csrState_mtval: !firrtl.uint<64>, in %io_csrState_stval: !firrtl.uint<64>, in %io_csrState_mtvec: !firrtl.uint<64>, in %io_csrState_stvec: !firrtl.uint<64>, in %io_csrState_mcause: !firrtl.uint<64>, in %io_csrState_scause: !firrtl.uint<64>, in %io_csrState_satp: !firrtl.uint<64>, in %io_csrState_mip: !firrtl.uint<64>, in %io_csrState_mie: !firrtl.uint<64>, in %io_csrState_mscratch: !firrtl.uint<64>, in %io_csrState_sscratch: !firrtl.uint<64>, in %io_csrState_mideleg: !firrtl.uint<64>, in %io_csrState_medeleg: !firrtl.uint<64>, in %io_archEvent_valid: !firrtl.uint<1>, in %io_archEvent_interrupt: !firrtl.uint<32>, in %io_archEvent_exception: !firrtl.uint<32>, in %io_archEvent_exceptionPC: !firrtl.uint<64>, in %io_archEvent_exceptionInst: !firrtl.uint<32>) {
      %difftest_priviledgeMode = firrtl.wire : !firrtl.uint<64>
      %difftest_mstatus = firrtl.wire : !firrtl.uint<64>
      %difftest_sstatus = firrtl.wire : !firrtl.uint<64>
      %difftest_mepc = firrtl.wire : !firrtl.uint<64>
      %difftest_sepc = firrtl.wire : !firrtl.uint<64>
      %difftest_mtval = firrtl.wire : !firrtl.uint<64>
      %difftest_stval = firrtl.wire : !firrtl.uint<64>
      %difftest_mtvec = firrtl.wire : !firrtl.uint<64>
      %difftest_stvec = firrtl.wire : !firrtl.uint<64>
      %difftest_mcause = firrtl.wire : !firrtl.uint<64>
      %difftest_scause = firrtl.wire : !firrtl.uint<64>
      %difftest_satp = firrtl.wire : !firrtl.uint<64>
      %difftest_mip = firrtl.wire : !firrtl.uint<64>
      %difftest_mie = firrtl.wire : !firrtl.uint<64>
      %difftest_mscratch = firrtl.wire : !firrtl.uint<64>
      %difftest_sscratch = firrtl.wire : !firrtl.uint<64>
      %difftest_mideleg = firrtl.wire : !firrtl.uint<64>
      %difftest_medeleg = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_priviledgeMode = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mstatus = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_sstatus = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mepc = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_sepc = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mtval = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_stval = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mtvec = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_stvec = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mcause = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_scause = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_satp = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mip = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mie = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mscratch = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_sscratch = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_mideleg = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_medeleg = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_module_clock, %difftest_sink_module_io_priviledgeMode, %difftest_sink_module_io_mstatus, %difftest_sink_module_io_sstatus, %difftest_sink_module_io_mepc, %difftest_sink_module_io_sepc, %difftest_sink_module_io_mtval, %difftest_sink_module_io_stval, %difftest_sink_module_io_mtvec, %difftest_sink_module_io_stvec, %difftest_sink_module_io_mcause, %difftest_sink_module_io_scause, %difftest_sink_module_io_satp, %difftest_sink_module_io_mip, %difftest_sink_module_io_mie, %difftest_sink_module_io_mscratch, %difftest_sink_module_io_sscratch, %difftest_sink_module_io_mideleg, %difftest_sink_module_io_medeleg = firrtl.instance difftest_sink_module @DummyDPICWrapper_1(in clock: !firrtl.clock, in io_priviledgeMode: !firrtl.uint<64>, in io_mstatus: !firrtl.uint<64>, in io_sstatus: !firrtl.uint<64>, in io_mepc: !firrtl.uint<64>, in io_sepc: !firrtl.uint<64>, in io_mtval: !firrtl.uint<64>, in io_stval: !firrtl.uint<64>, in io_mtvec: !firrtl.uint<64>, in io_stvec: !firrtl.uint<64>, in io_mcause: !firrtl.uint<64>, in io_scause: !firrtl.uint<64>, in io_satp: !firrtl.uint<64>, in io_mip: !firrtl.uint<64>, in io_mie: !firrtl.uint<64>, in io_mscratch: !firrtl.uint<64>, in io_sscratch: !firrtl.uint<64>, in io_mideleg: !firrtl.uint<64>, in io_medeleg: !firrtl.uint<64>)
      firrtl.strictconnect %difftest_sink_module_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftest_sink_module_io_medeleg, %difftest_sink_medeleg : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mideleg, %difftest_sink_mideleg : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_sscratch, %difftest_sink_sscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mscratch, %difftest_sink_mscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mie, %difftest_sink_mie : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mip, %difftest_sink_mip : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_satp, %difftest_sink_satp : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_scause, %difftest_sink_scause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mcause, %difftest_sink_mcause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_stvec, %difftest_sink_stvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mtvec, %difftest_sink_mtvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_stval, %difftest_sink_stval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mtval, %difftest_sink_mtval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_sepc, %difftest_sink_sepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mepc, %difftest_sink_mepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_sstatus, %difftest_sink_sstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_mstatus, %difftest_sink_mstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_priviledgeMode, %difftest_sink_priviledgeMode : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_priviledgeMode, %difftest_priviledgeMode : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mstatus, %difftest_mstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_sstatus, %difftest_sstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mepc, %difftest_mepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_sepc, %difftest_sepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mtval, %difftest_mtval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_stval, %difftest_stval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mtvec, %difftest_mtvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_stvec, %difftest_stvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mcause, %difftest_mcause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_scause, %difftest_scause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_satp, %difftest_satp : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mip, %difftest_mip : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mie, %difftest_mie : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mscratch, %difftest_mscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_sscratch, %difftest_sscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_mideleg, %difftest_mideleg : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_medeleg, %difftest_medeleg : !firrtl.uint<64>
      %difftest_REG_priviledgeMode = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mstatus = firrtl.reg %clock {firrtl.random_init_start = 64 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_sstatus = firrtl.reg %clock {firrtl.random_init_start = 128 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mepc = firrtl.reg %clock {firrtl.random_init_start = 192 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_sepc = firrtl.reg %clock {firrtl.random_init_start = 256 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mtval = firrtl.reg %clock {firrtl.random_init_start = 320 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_stval = firrtl.reg %clock {firrtl.random_init_start = 384 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mtvec = firrtl.reg %clock {firrtl.random_init_start = 448 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_stvec = firrtl.reg %clock {firrtl.random_init_start = 512 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mcause = firrtl.reg %clock {firrtl.random_init_start = 576 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_scause = firrtl.reg %clock {firrtl.random_init_start = 640 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_satp = firrtl.reg %clock {firrtl.random_init_start = 704 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mip = firrtl.reg %clock {firrtl.random_init_start = 768 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mie = firrtl.reg %clock {firrtl.random_init_start = 832 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mscratch = firrtl.reg %clock {firrtl.random_init_start = 896 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_sscratch = firrtl.reg %clock {firrtl.random_init_start = 960 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_mideleg = firrtl.reg %clock {firrtl.random_init_start = 1024 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftest_REG_medeleg = firrtl.reg %clock {firrtl.random_init_start = 1088 : ui64} : !firrtl.clock, !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_medeleg, %io_csrState_medeleg : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mideleg, %io_csrState_mideleg : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_sscratch, %io_csrState_sscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mscratch, %io_csrState_mscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mie, %io_csrState_mie : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mip, %io_csrState_mip : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_satp, %io_csrState_satp : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_scause, %io_csrState_scause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mcause, %io_csrState_mcause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_stvec, %io_csrState_stvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mtvec, %io_csrState_mtvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_stval, %io_csrState_stval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mtval, %io_csrState_mtval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_sepc, %io_csrState_sepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mepc, %io_csrState_mepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_sstatus, %io_csrState_sstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_mstatus, %io_csrState_mstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_REG_priviledgeMode, %io_csrState_priviledgeMode : !firrtl.uint<64>
      firrtl.strictconnect %difftest_priviledgeMode, %difftest_REG_priviledgeMode : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mstatus, %difftest_REG_mstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sstatus, %difftest_REG_sstatus : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mepc, %difftest_REG_mepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sepc, %difftest_REG_sepc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mtval, %difftest_REG_mtval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_stval, %difftest_REG_stval : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mtvec, %difftest_REG_mtvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_stvec, %difftest_REG_stvec : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mcause, %difftest_REG_mcause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_scause, %difftest_REG_scause : !firrtl.uint<64>
      firrtl.strictconnect %difftest_satp, %difftest_REG_satp : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mip, %difftest_REG_mip : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mie, %difftest_REG_mie : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mscratch, %difftest_REG_mscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sscratch, %difftest_REG_sscratch : !firrtl.uint<64>
      firrtl.strictconnect %difftest_mideleg, %difftest_REG_mideleg : !firrtl.uint<64>
      firrtl.strictconnect %difftest_medeleg, %difftest_REG_medeleg : !firrtl.uint<64>
      %difftestArchEvent_valid = firrtl.wire : !firrtl.uint<1>
      %difftestArchEvent_interrupt = firrtl.wire : !firrtl.uint<32>
      %difftestArchEvent_exception = firrtl.wire : !firrtl.uint<32>
      %difftestArchEvent_exceptionPC = firrtl.wire : !firrtl.uint<64>
      %difftestArchEvent_exceptionInst = firrtl.wire : !firrtl.uint<32>
      %difftestArchEvent_sink_valid = firrtl.wire : !firrtl.uint<1>
      %difftestArchEvent_sink_interrupt = firrtl.wire : !firrtl.uint<32>
      %difftestArchEvent_sink_exception = firrtl.wire : !firrtl.uint<32>
      %difftestArchEvent_sink_exceptionPC = firrtl.wire : !firrtl.uint<64>
      %difftestArchEvent_sink_exceptionInst = firrtl.wire : !firrtl.uint<32>
      %difftestArchEvent_sink_module_clock, %difftestArchEvent_sink_module_io_valid, %difftestArchEvent_sink_module_io_interrupt, %difftestArchEvent_sink_module_io_exception, %difftestArchEvent_sink_module_io_exceptionPC, %difftestArchEvent_sink_module_io_exceptionInst = firrtl.instance difftestArchEvent_sink_module @DummyDPICWrapper_2(in clock: !firrtl.clock, in io_valid: !firrtl.uint<1>, in io_interrupt: !firrtl.uint<32>, in io_exception: !firrtl.uint<32>, in io_exceptionPC: !firrtl.uint<64>, in io_exceptionInst: !firrtl.uint<32>)
      firrtl.strictconnect %difftestArchEvent_sink_module_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftestArchEvent_sink_module_io_exceptionInst, %difftestArchEvent_sink_exceptionInst : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_sink_module_io_exceptionPC, %difftestArchEvent_sink_exceptionPC : !firrtl.uint<64>
      firrtl.strictconnect %difftestArchEvent_sink_module_io_exception, %difftestArchEvent_sink_exception : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_sink_module_io_interrupt, %difftestArchEvent_sink_interrupt : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_sink_module_io_valid, %difftestArchEvent_sink_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftestArchEvent_sink_valid, %difftestArchEvent_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftestArchEvent_sink_interrupt, %difftestArchEvent_interrupt : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_sink_exception, %difftestArchEvent_exception : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_sink_exceptionPC, %difftestArchEvent_exceptionPC : !firrtl.uint<64>
      firrtl.strictconnect %difftestArchEvent_sink_exceptionInst, %difftestArchEvent_exceptionInst : !firrtl.uint<32>
      %difftestArchEvent_REG_valid = firrtl.reg %clock {firrtl.random_init_start = 1160 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %difftestArchEvent_REG_interrupt = firrtl.reg %clock {firrtl.random_init_start = 1161 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %difftestArchEvent_REG_exception = firrtl.reg %clock {firrtl.random_init_start = 1193 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %difftestArchEvent_REG_exceptionPC = firrtl.reg %clock {firrtl.random_init_start = 1225 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftestArchEvent_REG_exceptionInst = firrtl.reg %clock {firrtl.random_init_start = 1289 : ui64} : !firrtl.clock, !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_exceptionInst, %io_archEvent_exceptionInst : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_exceptionPC, %io_archEvent_exceptionPC : !firrtl.uint<64>
      firrtl.strictconnect %difftestArchEvent_REG_exception, %io_archEvent_exception : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_interrupt, %io_archEvent_interrupt : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_valid, %io_archEvent_valid : !firrtl.uint<1>
      %difftestArchEvent_REG_1_valid = firrtl.reg %clock {firrtl.random_init_start = 1329 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %difftestArchEvent_REG_1_interrupt = firrtl.reg %clock {firrtl.random_init_start = 1330 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %difftestArchEvent_REG_1_exception = firrtl.reg %clock {firrtl.random_init_start = 1362 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %difftestArchEvent_REG_1_exceptionPC = firrtl.reg %clock {firrtl.random_init_start = 1394 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %difftestArchEvent_REG_1_exceptionInst = firrtl.reg %clock {firrtl.random_init_start = 1458 : ui64} : !firrtl.clock, !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_1_exceptionInst, %difftestArchEvent_REG_exceptionInst : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_1_exceptionPC, %difftestArchEvent_REG_exceptionPC : !firrtl.uint<64>
      firrtl.strictconnect %difftestArchEvent_REG_1_exception, %difftestArchEvent_REG_exception : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_1_interrupt, %difftestArchEvent_REG_interrupt : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_REG_1_valid, %difftestArchEvent_REG_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftestArchEvent_valid, %difftestArchEvent_REG_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftestArchEvent_interrupt, %difftestArchEvent_REG_1_interrupt : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_exception, %difftestArchEvent_REG_1_exception : !firrtl.uint<32>
      firrtl.strictconnect %difftestArchEvent_exceptionPC, %difftestArchEvent_REG_1_exceptionPC : !firrtl.uint<64>
      firrtl.strictconnect %difftestArchEvent_exceptionInst, %difftestArchEvent_REG_1_exceptionInst : !firrtl.uint<32>
    }
    firrtl.module private @CSR(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_src1: !firrtl.uint<64>, in %io_in_bits_src2: !firrtl.uint<64>, in %io_in_bits_func: !firrtl.uint<7>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits: !firrtl.uint<64>, in %io_cfIn_instr: !firrtl.uint<64>, in %io_cfIn_pc: !firrtl.uint<39>, in %io_cfIn_exceptionVec_0: !firrtl.uint<1>, in %io_cfIn_exceptionVec_1: !firrtl.uint<1>, in %io_cfIn_exceptionVec_2: !firrtl.uint<1>, in %io_cfIn_exceptionVec_3: !firrtl.uint<1>, in %io_cfIn_exceptionVec_4: !firrtl.uint<1>, in %io_cfIn_exceptionVec_5: !firrtl.uint<1>, in %io_cfIn_exceptionVec_6: !firrtl.uint<1>, in %io_cfIn_exceptionVec_7: !firrtl.uint<1>, in %io_cfIn_exceptionVec_8: !firrtl.uint<1>, in %io_cfIn_exceptionVec_9: !firrtl.uint<1>, in %io_cfIn_exceptionVec_10: !firrtl.uint<1>, in %io_cfIn_exceptionVec_11: !firrtl.uint<1>, in %io_cfIn_exceptionVec_12: !firrtl.uint<1>, in %io_cfIn_exceptionVec_13: !firrtl.uint<1>, in %io_cfIn_exceptionVec_14: !firrtl.uint<1>, in %io_cfIn_exceptionVec_15: !firrtl.uint<1>, in %io_cfIn_intrVec_0: !firrtl.uint<1>, in %io_cfIn_intrVec_1: !firrtl.uint<1>, in %io_cfIn_intrVec_2: !firrtl.uint<1>, in %io_cfIn_intrVec_3: !firrtl.uint<1>, in %io_cfIn_intrVec_4: !firrtl.uint<1>, in %io_cfIn_intrVec_5: !firrtl.uint<1>, in %io_cfIn_intrVec_6: !firrtl.uint<1>, in %io_cfIn_intrVec_7: !firrtl.uint<1>, in %io_cfIn_intrVec_8: !firrtl.uint<1>, in %io_cfIn_intrVec_9: !firrtl.uint<1>, in %io_cfIn_intrVec_10: !firrtl.uint<1>, in %io_cfIn_intrVec_11: !firrtl.uint<1>, in %io_cfIn_crossPageIPFFix: !firrtl.uint<1>, out %io_redirect_target: !firrtl.uint<39>, out %io_redirect_valid: !firrtl.uint<1>, in %io_instrValid: !firrtl.uint<1>, out %io_intrNO: !firrtl.uint<64>, out %io_imemMMU_priviledgeMode: !firrtl.uint<2>, out %io_dmemMMU_priviledgeMode: !firrtl.uint<2>, out %io_dmemMMU_status_sum: !firrtl.uint<1>, out %io_dmemMMU_status_mxr: !firrtl.uint<1>, in %io_dmemMMU_loadPF: !firrtl.uint<1>, in %io_dmemMMU_storePF: !firrtl.uint<1>, in %io_dmemMMU_addr: !firrtl.uint<39>, out %io_wenFix: !firrtl.uint<1>, in %perfCntCond_29__bore: !firrtl.uint<1>, in %perfCntCond_21__bore: !firrtl.uint<1>, in %perfCntCond_4__bore: !firrtl.uint<1>, in %perfCntCond_28__bore: !firrtl.uint<1>, out %lr__bore: !firrtl.uint<1>, in %perfCntCond_22__bore: !firrtl.uint<1>, in %perfCntCond_52__bore: !firrtl.uint<1>, out %lrAddr__bore: !firrtl.uint<64>, in %perfCntCond_17__bore: !firrtl.uint<1>, out %satp__bore: !firrtl.uint<64>, out %satp__bore_0: !firrtl.uint<64>, in %perfCntCond_53__bore: !firrtl.uint<1>, in %perfCntCond_30__bore: !firrtl.uint<1>, in %setLrAddr__bore: !firrtl.uint<64>, in %perfCntCond_9__bore: !firrtl.uint<1>, in %msip__bore: !firrtl.uint<1>, in %perfCntCond_16__bore: !firrtl.uint<1>, in %perfCntCond_20__bore: !firrtl.uint<1>, in %perfCntCond_14__bore: !firrtl.uint<1>, in %meip__bore: !firrtl.uint<1>, in %perfCntCond_2__bore: !firrtl.uint<1>, in %perfCntCond_51__bore: !firrtl.uint<1>, in %setLrVal__bore: !firrtl.uint<1>, in %perfCntCond_7__bore: !firrtl.uint<1>, in %mtip__bore: !firrtl.uint<1>, in %perfCntCond_50__bore: !firrtl.uint<1>, in %perfCntCond_10__bore: !firrtl.uint<1>, out %perfCnts_0__bore: !firrtl.uint<64>, in %perfCntCond_3__bore: !firrtl.uint<1>, in %perfCntCond_18__bore: !firrtl.uint<1>, in %perfCntCond_25__bore: !firrtl.uint<1>, in %perfCntCond_6__bore: !firrtl.uint<1>, in %setLr__bore: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<12>, out %_WIRE__bore_0: !firrtl.uint<12>, in %perfCntCond_19__bore: !firrtl.uint<1>, in %nutcoretrap__bore: !firrtl.uint<1>, in %perfCntCond_31__bore: !firrtl.uint<1>, in %perfCntCond_27__bore: !firrtl.uint<1>, in %lsuAddr__bore: !firrtl.uint<64>, in %perfCntCond_8__bore: !firrtl.uint<1>, in %perfCntCond_5__bore: !firrtl.uint<1>, in %perfCntCond_23__bore: !firrtl.uint<1>, in %perfCntCond_49__bore: !firrtl.uint<1>, in %perfCntCond_15__bore: !firrtl.uint<1>, in %perfCntCond_32__bore: !firrtl.uint<1>, in %perfCntCond_26__bore: !firrtl.uint<1>, out %perfCnts_2__bore: !firrtl.uint<64>) {
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2> {name = "mstatusNew_mpp"}
      %c3_ui4 = firrtl.constant 3 : !firrtl.uint<4>
      %c1_ui4 = firrtl.constant 1 : !firrtl.uint<4>
      %c2_ui4 = firrtl.constant 2 : !firrtl.uint<4>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c4_ui4 = firrtl.constant 4 : !firrtl.uint<4>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c7_ui4 = firrtl.constant 7 : !firrtl.uint<4>
      %c5_ui4 = firrtl.constant 5 : !firrtl.uint<4>
      %c18446744073709549696_ui64 = firrtl.constant 18446744073709549696 : !firrtl.uint<64>
      %c18446744072635809792_ui64 = firrtl.constant 18446744072635809792 : !firrtl.uint<64>
      %c18446744073709551069_ui64 = firrtl.constant 18446744073709551069 : !firrtl.uint<64>
      %c18446744073708740317_ui64 = firrtl.constant 18446744073708740317 : !firrtl.uint<64>
      %c18446744073709503488_ui64 = firrtl.constant 18446744073709503488 : !firrtl.uint<64>
      %c546_ui12 = firrtl.constant 546 : !firrtl.uint<12>
      %c9223372049740587298_ui64 = firrtl.constant 9223372049740587298 : !firrtl.uint<64>
      %c9223372036856090885_ui64 = firrtl.constant 9223372036856090885 : !firrtl.uint<64>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c256_ui9 = firrtl.constant 256 : !firrtl.uint<9>
      %c12_ui4 = firrtl.constant 12 : !firrtl.uint<4>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c13_ui4 = firrtl.constant 13 : !firrtl.uint<4>
      %c11_ui4 = firrtl.constant 11 : !firrtl.uint<4>
      %c9_ui4 = firrtl.constant 9 : !firrtl.uint<4>
      %c0_ui25 = firrtl.constant 0 : !firrtl.uint<25>
      %c33554431_ui25 = firrtl.constant 33554431 : !firrtl.uint<25>
      %c258_ui9 = firrtl.constant 258 : !firrtl.uint<9>
      %c1919_ui64 = firrtl.constant 1919 : !firrtl.uint<64>
      %c48127_ui64 = firrtl.constant 48127 : !firrtl.uint<64>
      %c1073741823_ui64 = firrtl.constant 1073741823 : !firrtl.uint<64>
      %c2832_ui12 = firrtl.constant 2832 : !firrtl.uint<12>
      %c2866_ui12 = firrtl.constant 2866 : !firrtl.uint<12>
      %c2834_ui12 = firrtl.constant 2834 : !firrtl.uint<12>
      %c2887_ui12 = firrtl.constant 2887 : !firrtl.uint<12>
      %c2881_ui12 = firrtl.constant 2881 : !firrtl.uint<12>
      %c2879_ui12 = firrtl.constant 2879 : !firrtl.uint<12>
      %c322_ui9 = firrtl.constant 322 : !firrtl.uint<9>
      %c2864_ui12 = firrtl.constant 2864 : !firrtl.uint<12>
      %c2898_ui12 = firrtl.constant 2898 : !firrtl.uint<12>
      %c2847_ui12 = firrtl.constant 2847 : !firrtl.uint<12>
      %c928_ui10 = firrtl.constant 928 : !firrtl.uint<10>
      %c2913_ui12 = firrtl.constant 2913 : !firrtl.uint<12>
      %c262_ui9 = firrtl.constant 262 : !firrtl.uint<9>
      %c835_ui10 = firrtl.constant 835 : !firrtl.uint<10>
      %c833_ui10 = firrtl.constant 833 : !firrtl.uint<10>
      %c3860_ui12 = firrtl.constant 3860 : !firrtl.uint<12>
      %c2930_ui12 = firrtl.constant 2930 : !firrtl.uint<12>
      %c2917_ui12 = firrtl.constant 2917 : !firrtl.uint<12>
      %c832_ui10 = firrtl.constant 832 : !firrtl.uint<10>
      %c2902_ui12 = firrtl.constant 2902 : !firrtl.uint<12>
      %c929_ui10 = firrtl.constant 929 : !firrtl.uint<10>
      %c2912_ui12 = firrtl.constant 2912 : !firrtl.uint<12>
      %c2934_ui12 = firrtl.constant 2934 : !firrtl.uint<12>
      %c3859_ui12 = firrtl.constant 3859 : !firrtl.uint<12>
      %c2823_ui12 = firrtl.constant 2823 : !firrtl.uint<12>
      %c946_ui10 = firrtl.constant 946 : !firrtl.uint<10>
      %c2853_ui12 = firrtl.constant 2853 : !firrtl.uint<12>
      %c2855_ui12 = firrtl.constant 2855 : !firrtl.uint<12>
      %c2907_ui12 = firrtl.constant 2907 : !firrtl.uint<12>
      %c771_ui10 = firrtl.constant 771 : !firrtl.uint<10>
      %c2828_ui12 = firrtl.constant 2828 : !firrtl.uint<12>
      %c2870_ui12 = firrtl.constant 2870 : !firrtl.uint<12>
      %c2885_ui12 = firrtl.constant 2885 : !firrtl.uint<12>
      %c931_ui10 = firrtl.constant 931 : !firrtl.uint<10>
      %c2875_ui12 = firrtl.constant 2875 : !firrtl.uint<12>
      %c2865_ui12 = firrtl.constant 2865 : !firrtl.uint<12>
      %c2919_ui12 = firrtl.constant 2919 : !firrtl.uint<12>
      %c2818_ui12 = firrtl.constant 2818 : !firrtl.uint<12>
      %c2924_ui12 = firrtl.constant 2924 : !firrtl.uint<12>
      %c2848_ui12 = firrtl.constant 2848 : !firrtl.uint<12>
      %c2892_ui12 = firrtl.constant 2892 : !firrtl.uint<12>
      %c2939_ui12 = firrtl.constant 2939 : !firrtl.uint<12>
      %c2860_ui12 = firrtl.constant 2860 : !firrtl.uint<12>
      %c2843_ui12 = firrtl.constant 2843 : !firrtl.uint<12>
      %c2838_ui12 = firrtl.constant 2838 : !firrtl.uint<12>
      %c2903_ui12 = firrtl.constant 2903 : !firrtl.uint<12>
      %c2920_ui12 = firrtl.constant 2920 : !firrtl.uint<12>
      %c2831_ui12 = firrtl.constant 2831 : !firrtl.uint<12>
      %c2882_ui12 = firrtl.constant 2882 : !firrtl.uint<12>
      %c2888_ui12 = firrtl.constant 2888 : !firrtl.uint<12>
      %c2850_ui12 = firrtl.constant 2850 : !firrtl.uint<12>
      %c2821_ui12 = firrtl.constant 2821 : !firrtl.uint<12>
      %c2863_ui12 = firrtl.constant 2863 : !firrtl.uint<12>
      %c2942_ui12 = firrtl.constant 2942 : !firrtl.uint<12>
      %c2816_ui12 = firrtl.constant 2816 : !firrtl.uint<12>
      %c2914_ui12 = firrtl.constant 2914 : !firrtl.uint<12>
      %c836_ui10 = firrtl.constant 836 : !firrtl.uint<10>
      %c2899_ui12 = firrtl.constant 2899 : !firrtl.uint<12>
      %c2846_ui12 = firrtl.constant 2846 : !firrtl.uint<12>
      %c2927_ui12 = firrtl.constant 2927 : !firrtl.uint<12>
      %c2878_ui12 = firrtl.constant 2878 : !firrtl.uint<12>
      %c944_ui10 = firrtl.constant 944 : !firrtl.uint<10>
      %c2835_ui12 = firrtl.constant 2835 : !firrtl.uint<12>
      %c768_ui10 = firrtl.constant 768 : !firrtl.uint<10>
      %c2867_ui12 = firrtl.constant 2867 : !firrtl.uint<12>
      %c2931_ui12 = firrtl.constant 2931 : !firrtl.uint<12>
      %c2911_ui12 = firrtl.constant 2911 : !firrtl.uint<12>
      %c2842_ui12 = firrtl.constant 2842 : !firrtl.uint<12>
      %c2928_ui12 = firrtl.constant 2928 : !firrtl.uint<12>
      %c769_ui10 = firrtl.constant 769 : !firrtl.uint<10>
      %c2874_ui12 = firrtl.constant 2874 : !firrtl.uint<12>
      %c2923_ui12 = firrtl.constant 2923 : !firrtl.uint<12>
      %c323_ui9 = firrtl.constant 323 : !firrtl.uint<9>
      %c2824_ui12 = firrtl.constant 2824 : !firrtl.uint<12>
      %c2871_ui12 = firrtl.constant 2871 : !firrtl.uint<12>
      %c2896_ui12 = firrtl.constant 2896 : !firrtl.uint<12>
      %c2856_ui12 = firrtl.constant 2856 : !firrtl.uint<12>
      %c2943_ui12 = firrtl.constant 2943 : !firrtl.uint<12>
      %c2839_ui12 = firrtl.constant 2839 : !firrtl.uint<12>
      %c2906_ui12 = firrtl.constant 2906 : !firrtl.uint<12>
      %c947_ui10 = firrtl.constant 947 : !firrtl.uint<10>
      %c2935_ui12 = firrtl.constant 2935 : !firrtl.uint<12>
      %c2891_ui12 = firrtl.constant 2891 : !firrtl.uint<12>
      %c2938_ui12 = firrtl.constant 2938 : !firrtl.uint<12>
      %c2859_ui12 = firrtl.constant 2859 : !firrtl.uint<12>
      %c2827_ui12 = firrtl.constant 2827 : !firrtl.uint<12>
      %c2817_ui12 = firrtl.constant 2817 : !firrtl.uint<12>
      %c772_ui10 = firrtl.constant 772 : !firrtl.uint<10>
      %c2849_ui12 = firrtl.constant 2849 : !firrtl.uint<12>
      %c2894_ui12 = firrtl.constant 2894 : !firrtl.uint<12>
      %c2941_ui12 = firrtl.constant 2941 : !firrtl.uint<12>
      %c2904_ui12 = firrtl.constant 2904 : !firrtl.uint<12>
      %c2936_ui12 = firrtl.constant 2936 : !firrtl.uint<12>
      %c2909_ui12 = firrtl.constant 2909 : !firrtl.uint<12>
      %c773_ui10 = firrtl.constant 773 : !firrtl.uint<10>
      %c2915_ui12 = firrtl.constant 2915 : !firrtl.uint<12>
      %c2883_ui12 = firrtl.constant 2883 : !firrtl.uint<12>
      %c2926_ui12 = firrtl.constant 2926 : !firrtl.uint<12>
      %c2862_ui12 = firrtl.constant 2862 : !firrtl.uint<12>
      %c2851_ui12 = firrtl.constant 2851 : !firrtl.uint<12>
      %c2900_ui12 = firrtl.constant 2900 : !firrtl.uint<12>
      %c2845_ui12 = firrtl.constant 2845 : !firrtl.uint<12>
      %c2836_ui12 = firrtl.constant 2836 : !firrtl.uint<12>
      %c2932_ui12 = firrtl.constant 2932 : !firrtl.uint<12>
      %c2868_ui12 = firrtl.constant 2868 : !firrtl.uint<12>
      %c2830_ui12 = firrtl.constant 2830 : !firrtl.uint<12>
      %c2877_ui12 = firrtl.constant 2877 : !firrtl.uint<12>
      %c2858_ui12 = firrtl.constant 2858 : !firrtl.uint<12>
      %c2841_ui12 = firrtl.constant 2841 : !firrtl.uint<12>
      %c2895_ui12 = firrtl.constant 2895 : !firrtl.uint<12>
      %c2840_ui12 = firrtl.constant 2840 : !firrtl.uint<12>
      %c2820_ui12 = firrtl.constant 2820 : !firrtl.uint<12>
      %c2826_ui12 = firrtl.constant 2826 : !firrtl.uint<12>
      %c324_ui9 = firrtl.constant 324 : !firrtl.uint<9>
      %c2872_ui12 = firrtl.constant 2872 : !firrtl.uint<12>
      %c2873_ui12 = firrtl.constant 2873 : !firrtl.uint<12>
      %c2890_ui12 = firrtl.constant 2890 : !firrtl.uint<12>
      %c2937_ui12 = firrtl.constant 2937 : !firrtl.uint<12>
      %c260_ui9 = firrtl.constant 260 : !firrtl.uint<9>
      %c2905_ui12 = firrtl.constant 2905 : !firrtl.uint<12>
      %c2910_ui12 = firrtl.constant 2910 : !firrtl.uint<12>
      %c3857_ui12 = firrtl.constant 3857 : !firrtl.uint<12>
      %c2922_ui12 = firrtl.constant 2922 : !firrtl.uint<12>
      %c2884_ui12 = firrtl.constant 2884 : !firrtl.uint<12>
      %c774_ui10 = firrtl.constant 774 : !firrtl.uint<10>
      %c2861_ui12 = firrtl.constant 2861 : !firrtl.uint<12>
      %c2833_ui12 = firrtl.constant 2833 : !firrtl.uint<12>
      %c834_ui10 = firrtl.constant 834 : !firrtl.uint<10>
      %c2880_ui12 = firrtl.constant 2880 : !firrtl.uint<12>
      %c321_ui9 = firrtl.constant 321 : !firrtl.uint<9>
      %c2893_ui12 = firrtl.constant 2893 : !firrtl.uint<12>
      %c2925_ui12 = firrtl.constant 2925 : !firrtl.uint<12>
      %c2829_ui12 = firrtl.constant 2829 : !firrtl.uint<12>
      %c261_ui9 = firrtl.constant 261 : !firrtl.uint<9>
      %c2852_ui12 = firrtl.constant 2852 : !firrtl.uint<12>
      %c2929_ui12 = firrtl.constant 2929 : !firrtl.uint<12>
      %c770_ui10 = firrtl.constant 770 : !firrtl.uint<10>
      %c2857_ui12 = firrtl.constant 2857 : !firrtl.uint<12>
      %c2897_ui12 = firrtl.constant 2897 : !firrtl.uint<12>
      %c2916_ui12 = firrtl.constant 2916 : !firrtl.uint<12>
      %c2869_ui12 = firrtl.constant 2869 : !firrtl.uint<12>
      %c2819_ui12 = firrtl.constant 2819 : !firrtl.uint<12>
      %c2825_ui12 = firrtl.constant 2825 : !firrtl.uint<12>
      %c320_ui9 = firrtl.constant 320 : !firrtl.uint<9>
      %c2886_ui12 = firrtl.constant 2886 : !firrtl.uint<12>
      %c945_ui10 = firrtl.constant 945 : !firrtl.uint<10>
      %c2901_ui12 = firrtl.constant 2901 : !firrtl.uint<12>
      %c930_ui10 = firrtl.constant 930 : !firrtl.uint<10>
      %c2844_ui12 = firrtl.constant 2844 : !firrtl.uint<12>
      %c2933_ui12 = firrtl.constant 2933 : !firrtl.uint<12>
      %c2918_ui12 = firrtl.constant 2918 : !firrtl.uint<12>
      %c2854_ui12 = firrtl.constant 2854 : !firrtl.uint<12>
      %c2837_ui12 = firrtl.constant 2837 : !firrtl.uint<12>
      %c2908_ui12 = firrtl.constant 2908 : !firrtl.uint<12>
      %c3858_ui12 = firrtl.constant 3858 : !firrtl.uint<12>
      %c2940_ui12 = firrtl.constant 2940 : !firrtl.uint<12>
      %c2921_ui12 = firrtl.constant 2921 : !firrtl.uint<12>
      %c2876_ui12 = firrtl.constant 2876 : !firrtl.uint<12>
      %c2889_ui12 = firrtl.constant 2889 : !firrtl.uint<12>
      %c2822_ui12 = firrtl.constant 2822 : !firrtl.uint<12>
      %c384_ui9 = firrtl.constant 384 : !firrtl.uint<9>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c0_ui59 = firrtl.constant 0 : !firrtl.uint<59>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c546_ui64 = firrtl.constant 546 : !firrtl.uint<64>
      %c811298_ui64 = firrtl.constant 811298 : !firrtl.uint<64>
      %c42949679104_ui36 = firrtl.constant 42949679104 : !firrtl.uint<36>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %io_out_bits_0 = firrtl.wire {name = "io_out_bits"} : !firrtl.uint<64>
      %io_redirect_target_1 = firrtl.wire {name = "io_redirect_target"} : !firrtl.uint<39>
      %io_redirect_valid_2 = firrtl.wire {name = "io_redirect_valid"} : !firrtl.uint<1>
      %io_intrNO_3 = firrtl.wire {name = "io_intrNO"} : !firrtl.uint<64>
      %io_imemMMU_priviledgeMode_4 = firrtl.wire {name = "io_imemMMU_priviledgeMode"} : !firrtl.uint<2>
      %io_dmemMMU_priviledgeMode_5 = firrtl.wire {name = "io_dmemMMU_priviledgeMode"} : !firrtl.uint<2>
      %io_dmemMMU_status_sum_6 = firrtl.wire {name = "io_dmemMMU_status_sum"} : !firrtl.uint<1>
      %io_dmemMMU_status_mxr_7 = firrtl.wire {name = "io_dmemMMU_status_mxr"} : !firrtl.uint<1>
      %io_wenFix_8 = firrtl.wire {name = "io_wenFix"} : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits, %io_out_bits_0 : !firrtl.uint<64>
      firrtl.strictconnect %io_redirect_target, %io_redirect_target_1 : !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_valid, %io_redirect_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_intrNO, %io_intrNO_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_imemMMU_priviledgeMode, %io_imemMMU_priviledgeMode_4 : !firrtl.uint<2>
      firrtl.strictconnect %io_dmemMMU_priviledgeMode, %io_dmemMMU_priviledgeMode_5 : !firrtl.uint<2>
      firrtl.strictconnect %io_dmemMMU_status_sum, %io_dmemMMU_status_sum_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmemMMU_status_mxr, %io_dmemMMU_status_mxr_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_wenFix, %io_wenFix_8 : !firrtl.uint<1>
      %mtvec = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 64 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %mcounteren = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 128 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %mcause = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 192 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %mtval = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 256 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %mepc = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 320 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %mie = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 384 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %mipReg = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 448 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %mip_hi = firrtl.cat %msip__bore, %c0_ui1 {name = "mip_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mip_T = firrtl.cat %mip_hi, %c0_ui2 {name = "_mip_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mip_hi_1 = firrtl.cat %mtip__bore, %c0_ui1 {name = "mip_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mip_T_1 = firrtl.cat %mip_hi_1, %c0_ui2 {name = "_mip_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mip_hi_2 = firrtl.cat %meip__bore, %c0_ui1 {name = "mip_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mip_T_2 = firrtl.cat %mip_hi_2, %c0_ui2 {name = "_mip_T_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mip_hi_3 = firrtl.cat %_mip_T_2, %_mip_T_1 {name = "mip_hi_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_mip_T_3 = firrtl.cat %mip_hi_3, %_mip_T {name = "_mip_T_3"} : (!firrtl.uint<8>, !firrtl.uint<4>) -> !firrtl.uint<12>
      %0 = firrtl.pad %_mip_T_3, 64 : (!firrtl.uint<12>) -> !firrtl.uint<64>
      %_mip_T_4 = firrtl.or %0, %mipReg {name = "_mip_T_4"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %mip_e_m = firrtl.wire : !firrtl.uint<1>
      %mip_e_h = firrtl.wire : !firrtl.uint<1>
      %mip_e_s = firrtl.wire : !firrtl.uint<1>
      %mip_e_u = firrtl.wire : !firrtl.uint<1>
      %mip_t_m = firrtl.wire : !firrtl.uint<1>
      %mip_t_h = firrtl.wire : !firrtl.uint<1>
      %mip_t_s = firrtl.wire : !firrtl.uint<1>
      %mip_t_u = firrtl.wire : !firrtl.uint<1>
      %mip_s_m = firrtl.wire : !firrtl.uint<1>
      %mip_s_h = firrtl.wire : !firrtl.uint<1>
      %mip_s_s = firrtl.wire : !firrtl.uint<1>
      %mip_s_u = firrtl.wire : !firrtl.uint<1>
      %_mip_WIRE = firrtl.wire : !firrtl.uint<12>
      %1 = firrtl.bits %_mip_T_4 11 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<12>
      firrtl.strictconnect %_mip_WIRE, %1 : !firrtl.uint<12>
      %_mip_T_5 = firrtl.bits %_mip_WIRE 0 to 0 {name = "_mip_T_5"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_s_u, %_mip_T_5 : !firrtl.uint<1>
      %_mip_T_6 = firrtl.bits %_mip_WIRE 1 to 1 {name = "_mip_T_6"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_s_s, %_mip_T_6 : !firrtl.uint<1>
      %_mip_T_7 = firrtl.bits %_mip_WIRE 2 to 2 {name = "_mip_T_7"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_s_h, %_mip_T_7 : !firrtl.uint<1>
      %_mip_T_8 = firrtl.bits %_mip_WIRE 3 to 3 {name = "_mip_T_8"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_s_m, %_mip_T_8 : !firrtl.uint<1>
      %_mip_T_9 = firrtl.bits %_mip_WIRE 4 to 4 {name = "_mip_T_9"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_t_u, %_mip_T_9 : !firrtl.uint<1>
      %_mip_T_10 = firrtl.bits %_mip_WIRE 5 to 5 {name = "_mip_T_10"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_t_s, %_mip_T_10 : !firrtl.uint<1>
      %_mip_T_11 = firrtl.bits %_mip_WIRE 6 to 6 {name = "_mip_T_11"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_t_h, %_mip_T_11 : !firrtl.uint<1>
      %_mip_T_12 = firrtl.bits %_mip_WIRE 7 to 7 {name = "_mip_T_12"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_t_m, %_mip_T_12 : !firrtl.uint<1>
      %_mip_T_13 = firrtl.bits %_mip_WIRE 8 to 8 {name = "_mip_T_13"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_e_u, %_mip_T_13 : !firrtl.uint<1>
      %_mip_T_14 = firrtl.bits %_mip_WIRE 9 to 9 {name = "_mip_T_14"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_e_s, %_mip_T_14 : !firrtl.uint<1>
      %_mip_T_15 = firrtl.bits %_mip_WIRE 10 to 10 {name = "_mip_T_15"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_e_h, %_mip_T_15 : !firrtl.uint<1>
      %_mip_T_16 = firrtl.bits %_mip_WIRE 11 to 11 {name = "_mip_T_16"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      firrtl.strictconnect %mip_e_m, %_mip_T_16 : !firrtl.uint<1>
      %misa = firrtl.regreset %clock, %reset, %c9223372036856090885_ui64 {firrtl.random_init_start = 512 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %mvendorid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 576 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      firrtl.strictconnect %mvendorid, %mvendorid : !firrtl.uint<64>
      %marchid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 640 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      firrtl.strictconnect %marchid, %marchid : !firrtl.uint<64>
      %mimpid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 704 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      firrtl.strictconnect %mimpid, %mimpid : !firrtl.uint<64>
      %mhartid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 768 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      firrtl.strictconnect %mhartid, %mhartid : !firrtl.uint<64>
      %mstatus = firrtl.regreset %clock, %reset, %c42949679104_ui36 {firrtl.random_init_start = 832 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<36>, !firrtl.uint<64>
      %mstatusStruct_mxr = firrtl.wire : !firrtl.uint<1>
      %mstatusStruct_sum = firrtl.wire : !firrtl.uint<1>
      %mstatusStruct_mprv = firrtl.wire : !firrtl.uint<1>
      %mstatusStruct_mpp = firrtl.wire : !firrtl.uint<2>
      %mstatusStruct_ie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusStruct_ie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusStruct_WIRE = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusStruct_WIRE, %mstatus : !firrtl.uint<64>
      %_mstatusStruct_T_1 = firrtl.bits %_mstatusStruct_WIRE 1 to 1 {name = "_mstatusStruct_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusStruct_ie_s, %_mstatusStruct_T_1 : !firrtl.uint<1>
      %_mstatusStruct_T_3 = firrtl.bits %_mstatusStruct_WIRE 3 to 3 {name = "_mstatusStruct_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusStruct_ie_m, %_mstatusStruct_T_3 : !firrtl.uint<1>
      %_mstatusStruct_T_10 = firrtl.bits %_mstatusStruct_WIRE 12 to 11 {name = "_mstatusStruct_T_10"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %mstatusStruct_mpp, %_mstatusStruct_T_10 : !firrtl.uint<2>
      %_mstatusStruct_T_13 = firrtl.bits %_mstatusStruct_WIRE 17 to 17 {name = "_mstatusStruct_T_13"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusStruct_mprv, %_mstatusStruct_T_13 : !firrtl.uint<1>
      %_mstatusStruct_T_14 = firrtl.bits %_mstatusStruct_WIRE 18 to 18 {name = "_mstatusStruct_T_14"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusStruct_sum, %_mstatusStruct_T_14 : !firrtl.uint<1>
      %_mstatusStruct_T_15 = firrtl.bits %_mstatusStruct_WIRE 19 to 19 {name = "_mstatusStruct_T_15"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusStruct_mxr, %_mstatusStruct_T_15 : !firrtl.uint<1>
      %medeleg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 896 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %mideleg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 960 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %mscratch = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1024 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpcfg0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1088 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpcfg1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1152 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpcfg2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1216 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpcfg3 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1280 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpaddr0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1344 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpaddr1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1408 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpaddr2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1472 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %pmpaddr3 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1536 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %stvec = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1600 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %sieMask = firrtl.and %mideleg, %c546_ui64 {name = "sieMask"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %satp = firrtl.regreset %clock, %reset, %c0_ui1 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 1664 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %sepc = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1728 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %scause = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1792 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %stval = firrtl.reg %clock {firrtl.random_init_start = 1856 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %sscratch = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1920 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %scounteren = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1984 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %invalid_ui64 = firrtl.invalidvalue : !firrtl.uint<64>
      %lr = firrtl.regreset %clock, %reset, %c0_ui1 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 2112 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %lrAddr = firrtl.regreset %clock, %reset, %c0_ui1 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 2113 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>
      %2 = firrtl.mux(%setLr__bore, %setLrVal__bore, %lr) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%setLr__bore, %setLrAddr__bore, %lrAddr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %lrAddr, %3 : !firrtl.uint<64>
      %priviledgeMode = firrtl.regreset %clock, %reset, %c3_ui2 {firrtl.random_init_start = 2177 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %perfCnts_0 = firrtl.regreset %clock, %reset, %c0_ui64 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 2179 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_1 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2243 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_2 = firrtl.regreset %clock, %reset, %c0_ui64 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 2307 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_3 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2371 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_4 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2435 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_5 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2499 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_6 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2563 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_7 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2627 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_8 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2691 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_9 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2755 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_10 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2819 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_11 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2883 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_12 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 2947 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_13 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3011 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_14 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3075 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_15 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3139 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_16 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3203 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_17 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3267 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_18 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3331 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_19 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3395 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_20 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3459 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_21 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3523 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_22 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3587 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_23 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3651 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_24 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3715 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_25 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3779 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_26 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3843 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_27 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3907 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_28 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 3971 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_29 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4035 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_30 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4099 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_31 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4163 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_32 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4227 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_33 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4291 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_34 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4355 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_35 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4419 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_36 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4483 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_37 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4547 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_38 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4611 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_39 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4675 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_40 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4739 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_41 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4803 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_42 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4867 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_43 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4931 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_44 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 4995 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_45 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5059 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_46 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5123 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_47 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5187 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_48 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5251 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_49 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5315 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_50 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5379 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_51 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5443 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_52 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5507 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_53 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5571 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_54 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5635 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_55 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5699 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_56 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5763 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_57 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5827 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_58 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5891 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_59 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5955 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_60 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6019 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_61 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6083 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_62 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6147 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_63 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6211 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_64 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6275 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_65 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6339 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_66 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6403 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_67 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6467 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_68 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6531 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_69 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6595 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_70 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6659 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_71 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6723 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_72 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6787 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_73 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6851 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_74 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6915 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_75 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6979 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_76 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7043 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_77 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7107 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_78 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7171 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_79 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7235 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_80 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7299 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_81 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7363 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_82 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7427 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_83 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7491 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_84 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7555 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_85 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7619 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_86 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7683 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_87 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7747 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_88 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7811 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_89 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7875 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_90 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 7939 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_91 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8003 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_92 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8067 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_93 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8131 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_94 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8195 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_95 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8259 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_96 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8323 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_97 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8387 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_98 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8451 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_101 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8643 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_102 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8707 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_103 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8771 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_104 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8835 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_105 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8899 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_106 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 8963 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_107 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9027 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_108 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9091 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_109 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9155 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_110 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9219 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_111 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9283 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_112 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9347 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_113 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9411 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_114 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9475 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_115 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9539 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_116 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9603 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_117 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9667 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_118 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9731 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_119 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9795 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_120 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9859 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_121 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9923 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_122 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9987 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_123 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10051 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_124 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10115 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_125 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10179 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_126 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10243 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %perfCnts_127 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10307 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %mapping_lo = firrtl.cat %mip_s_s, %mip_s_u {name = "mapping_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mapping_hi = firrtl.cat %mip_s_m, %mip_s_h {name = "mapping_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mapping_T = firrtl.cat %mapping_hi, %mapping_lo {name = "_mapping_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mapping_lo_1 = firrtl.cat %mip_t_s, %mip_t_u {name = "mapping_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mapping_hi_1 = firrtl.cat %mip_t_m, %mip_t_h {name = "mapping_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mapping_T_1 = firrtl.cat %mapping_hi_1, %mapping_lo_1 {name = "_mapping_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mapping_lo_2 = firrtl.cat %mip_e_s, %mip_e_u {name = "mapping_lo_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mapping_hi_2 = firrtl.cat %mip_e_m, %mip_e_h {name = "mapping_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mapping_T_2 = firrtl.cat %mapping_hi_2, %mapping_lo_2 {name = "_mapping_T_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mapping_hi_3 = firrtl.cat %_mapping_T_2, %_mapping_T_1 {name = "mapping_hi_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mapping_47_2_1 = firrtl.cat %mapping_hi_3, %_mapping_T {name = "mapping_47_2_1"} : (!firrtl.uint<8>, !firrtl.uint<4>) -> !firrtl.uint<12>
      %_mapping_T_3 = firrtl.cat %mapping_hi, %mapping_lo {name = "_mapping_T_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_mapping_T_4 = firrtl.cat %mapping_hi_1, %mapping_lo_1 {name = "_mapping_T_4"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_mapping_T_5 = firrtl.cat %mapping_hi_2, %mapping_lo_2 {name = "_mapping_T_5"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mapping_hi_7 = firrtl.cat %_mapping_T_5, %_mapping_T_4 {name = "mapping_hi_7"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mapping_105_2_1 = firrtl.cat %mapping_hi_7, %_mapping_T_3 {name = "mapping_105_2_1"} : (!firrtl.uint<8>, !firrtl.uint<4>) -> !firrtl.uint<12>
      %addr = firrtl.bits %io_in_bits_src2 11 to 0 {name = "addr"} : (!firrtl.uint<64>) -> !firrtl.uint<12>
      %rdata = firrtl.wire : !firrtl.uint<64>
      %_csri_T = firrtl.bits %io_cfIn_instr 19 to 15 {name = "_csri_T"} : (!firrtl.uint<64>) -> !firrtl.uint<5>
      %csri = firrtl.cat %c0_ui59, %_csri_T {name = "csri"} : (!firrtl.uint<59>, !firrtl.uint<5>) -> !firrtl.uint<64>
      %_wdata_T = firrtl.or %rdata, %io_in_bits_src1 {name = "_wdata_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_1 = firrtl.not %io_in_bits_src1 {name = "_wdata_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_2 = firrtl.and %rdata, %_wdata_T_1 {name = "_wdata_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_3 = firrtl.or %rdata, %csri {name = "_wdata_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_4 = firrtl.not %csri {name = "_wdata_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_5 = firrtl.and %rdata, %_wdata_T_4 {name = "_wdata_T_5"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_6 = firrtl.eq %io_in_bits_func, %c1_ui1 {name = "_wdata_T_6"} : (!firrtl.uint<7>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wdata_T_7 = firrtl.eq %io_in_bits_func, %c2_ui2 {name = "_wdata_T_7"} : (!firrtl.uint<7>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_wdata_T_8 = firrtl.eq %io_in_bits_func, %c3_ui2 {name = "_wdata_T_8"} : (!firrtl.uint<7>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_wdata_T_9 = firrtl.eq %io_in_bits_func, %c5_ui3 {name = "_wdata_T_9"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_wdata_T_10 = firrtl.eq %io_in_bits_func, %c6_ui3 {name = "_wdata_T_10"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_wdata_T_11 = firrtl.eq %io_in_bits_func, %c7_ui3 {name = "_wdata_T_11"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_wdata_T_12 = firrtl.mux(%_wdata_T_6, %io_in_bits_src1, %c0_ui64) {name = "_wdata_T_12"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_13 = firrtl.mux(%_wdata_T_7, %_wdata_T, %c0_ui64) {name = "_wdata_T_13"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_14 = firrtl.mux(%_wdata_T_8, %_wdata_T_2, %c0_ui64) {name = "_wdata_T_14"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_15 = firrtl.mux(%_wdata_T_9, %csri, %c0_ui64) {name = "_wdata_T_15"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_16 = firrtl.mux(%_wdata_T_10, %_wdata_T_3, %c0_ui64) {name = "_wdata_T_16"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_17 = firrtl.mux(%_wdata_T_11, %_wdata_T_5, %c0_ui64) {name = "_wdata_T_17"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_18 = firrtl.or %_wdata_T_12, %_wdata_T_13 {name = "_wdata_T_18"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_19 = firrtl.or %_wdata_T_18, %_wdata_T_14 {name = "_wdata_T_19"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_20 = firrtl.or %_wdata_T_19, %_wdata_T_15 {name = "_wdata_T_20"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_21 = firrtl.or %_wdata_T_20, %_wdata_T_16 {name = "_wdata_T_21"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_wdata_T_22 = firrtl.or %_wdata_T_21, %_wdata_T_17 {name = "_wdata_T_22"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %wdata = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %wdata, %_wdata_T_22 : !firrtl.uint<64>
      %_satpLegalMode_WIRE_mode = firrtl.wire : !firrtl.uint<4>
      %_satpLegalMode_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_satpLegalMode_WIRE_1, %wdata : !firrtl.uint<64>
      %_satpLegalMode_T_2 = firrtl.bits %_satpLegalMode_WIRE_1 63 to 60 {name = "_satpLegalMode_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      firrtl.strictconnect %_satpLegalMode_WIRE_mode, %_satpLegalMode_T_2 : !firrtl.uint<4>
      %4 = firrtl.orr %_satpLegalMode_WIRE_mode : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_satpLegalMode_T_3 = firrtl.not %4 {name = "_satpLegalMode_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_satpLegalMode_WIRE_2_mode = firrtl.wire : !firrtl.uint<4>
      %_satpLegalMode_WIRE_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_satpLegalMode_WIRE_3, %wdata : !firrtl.uint<64>
      %_satpLegalMode_T_6 = firrtl.bits %_satpLegalMode_WIRE_3 63 to 60 {name = "_satpLegalMode_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      firrtl.strictconnect %_satpLegalMode_WIRE_2_mode, %_satpLegalMode_T_6 : !firrtl.uint<4>
      %_satpLegalMode_T_7 = firrtl.eq %_satpLegalMode_WIRE_2_mode, %c8_ui4 {name = "_satpLegalMode_T_7"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %satpLegalMode = firrtl.or %_satpLegalMode_T_3, %_satpLegalMode_T_7 {name = "satpLegalMode"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wen_T = firrtl.orr %io_in_bits_func {name = "_wen_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_wen_T_1 = firrtl.and %io_in_valid, %_wen_T {name = "_wen_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wen_T_2 = firrtl.neq %addr, %c384_ui9 {name = "_wen_T_2"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_wen_T_3 = firrtl.or %_wen_T_2, %satpLegalMode {name = "_wen_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wen_T_4 = firrtl.and %_wen_T_1, %_wen_T_3 {name = "_wen_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isIllegalMode_T = firrtl.bits %io_in_bits_src2 9 to 8 {name = "_isIllegalMode_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %isIllegalMode = firrtl.lt %priviledgeMode, %_isIllegalMode_T {name = "isIllegalMode"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_justRead_T = firrtl.eq %io_in_bits_func, %c2_ui2 {name = "_justRead_T"} : (!firrtl.uint<7>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_justRead_T_1 = firrtl.eq %io_in_bits_func, %c6_ui3 {name = "_justRead_T_1"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_justRead_T_2 = firrtl.or %_justRead_T, %_justRead_T_1 {name = "_justRead_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.orr %io_in_bits_src1 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_justRead_T_3 = firrtl.not %5 {name = "_justRead_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %justRead = firrtl.and %_justRead_T_2, %_justRead_T_3 {name = "justRead"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isIllegalWrite_T = firrtl.bits %io_in_bits_src2 11 to 10 {name = "_isIllegalWrite_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %_isIllegalWrite_T_1 = firrtl.andr %_isIllegalWrite_T {name = "_isIllegalWrite_T_1"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_isIllegalWrite_T_2 = firrtl.and %_wen_T_4, %_isIllegalWrite_T_1 {name = "_isIllegalWrite_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isIllegalWrite_T_3 = firrtl.not %justRead {name = "_isIllegalWrite_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %isIllegalWrite = firrtl.and %_isIllegalWrite_T_2, %_isIllegalWrite_T_3 {name = "isIllegalWrite"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isIllegalAccess = firrtl.or %isIllegalMode, %isIllegalWrite {name = "isIllegalAccess"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.not %isIllegalAccess : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.and %_wen_T_4, %6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_rdata_T_42 = firrtl.and %mie, %sieMask {name = "_rdata_T_42"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %8 = firrtl.bits %mideleg 11 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<12>
      %9 = firrtl.and %8, %c546_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      %10 = firrtl.and %9, %mapping_47_2_1 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      %_rdata_T_47 = firrtl.pad %10, 64 {name = "_rdata_T_47"} : (!firrtl.uint<12>) -> !firrtl.uint<64>
      %_rdata_T_54 = firrtl.and %mstatus, %c9223372049740587298_ui64 {name = "_rdata_T_54"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_105 = firrtl.pad %mapping_105_2_1, 64 {name = "_rdata_T_105"} : (!firrtl.uint<12>) -> !firrtl.uint<64>
      %_isIllegalAddr_illegalAddr_T = firrtl.eq %addr, %c2822_ui12 {name = "_isIllegalAddr_illegalAddr_T"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_2 = firrtl.eq %addr, %c2889_ui12 {name = "_isIllegalAddr_illegalAddr_T_2"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_4 = firrtl.eq %addr, %c2876_ui12 {name = "_isIllegalAddr_illegalAddr_T_4"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_6 = firrtl.eq %addr, %c2921_ui12 {name = "_isIllegalAddr_illegalAddr_T_6"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_8 = firrtl.eq %addr, %c2940_ui12 {name = "_isIllegalAddr_illegalAddr_T_8"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_10 = firrtl.eq %addr, %c3858_ui12 {name = "_isIllegalAddr_illegalAddr_T_10"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_12 = firrtl.eq %addr, %c2908_ui12 {name = "_isIllegalAddr_illegalAddr_T_12"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_14 = firrtl.eq %addr, %c2837_ui12 {name = "_isIllegalAddr_illegalAddr_T_14"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_16 = firrtl.eq %addr, %c2854_ui12 {name = "_isIllegalAddr_illegalAddr_T_16"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_18 = firrtl.eq %addr, %c384_ui9 {name = "_isIllegalAddr_illegalAddr_T_18"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_20 = firrtl.eq %addr, %c2918_ui12 {name = "_isIllegalAddr_illegalAddr_T_20"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_22 = firrtl.eq %addr, %c2933_ui12 {name = "_isIllegalAddr_illegalAddr_T_22"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_24 = firrtl.eq %addr, %c2844_ui12 {name = "_isIllegalAddr_illegalAddr_T_24"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_26 = firrtl.eq %addr, %c930_ui10 {name = "_isIllegalAddr_illegalAddr_T_26"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_28 = firrtl.eq %addr, %c2901_ui12 {name = "_isIllegalAddr_illegalAddr_T_28"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_30 = firrtl.eq %addr, %c945_ui10 {name = "_isIllegalAddr_illegalAddr_T_30"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_32 = firrtl.eq %addr, %c2886_ui12 {name = "_isIllegalAddr_illegalAddr_T_32"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_34 = firrtl.eq %addr, %c320_ui9 {name = "_isIllegalAddr_illegalAddr_T_34"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_36 = firrtl.eq %addr, %c2825_ui12 {name = "_isIllegalAddr_illegalAddr_T_36"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_38 = firrtl.eq %addr, %c2819_ui12 {name = "_isIllegalAddr_illegalAddr_T_38"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_40 = firrtl.eq %addr, %c2869_ui12 {name = "_isIllegalAddr_illegalAddr_T_40"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_42 = firrtl.eq %addr, %c2916_ui12 {name = "_isIllegalAddr_illegalAddr_T_42"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_44 = firrtl.eq %addr, %c2897_ui12 {name = "_isIllegalAddr_illegalAddr_T_44"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_46 = firrtl.eq %addr, %c2857_ui12 {name = "_isIllegalAddr_illegalAddr_T_46"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_48 = firrtl.eq %addr, %c770_ui10 {name = "_isIllegalAddr_illegalAddr_T_48"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_50 = firrtl.eq %addr, %c2929_ui12 {name = "_isIllegalAddr_illegalAddr_T_50"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_52 = firrtl.eq %addr, %c2852_ui12 {name = "_isIllegalAddr_illegalAddr_T_52"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_54 = firrtl.eq %addr, %c261_ui9 {name = "_isIllegalAddr_illegalAddr_T_54"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_56 = firrtl.eq %addr, %c2829_ui12 {name = "_isIllegalAddr_illegalAddr_T_56"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_58 = firrtl.eq %addr, %c2925_ui12 {name = "_isIllegalAddr_illegalAddr_T_58"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_60 = firrtl.eq %addr, %c2893_ui12 {name = "_isIllegalAddr_illegalAddr_T_60"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_62 = firrtl.eq %addr, %c321_ui9 {name = "_isIllegalAddr_illegalAddr_T_62"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_64 = firrtl.eq %addr, %c2880_ui12 {name = "_isIllegalAddr_illegalAddr_T_64"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_66 = firrtl.eq %addr, %c834_ui10 {name = "_isIllegalAddr_illegalAddr_T_66"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_68 = firrtl.eq %addr, %c2833_ui12 {name = "_isIllegalAddr_illegalAddr_T_68"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_70 = firrtl.eq %addr, %c2861_ui12 {name = "_isIllegalAddr_illegalAddr_T_70"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_72 = firrtl.eq %addr, %c774_ui10 {name = "_isIllegalAddr_illegalAddr_T_72"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_74 = firrtl.eq %addr, %c2884_ui12 {name = "_isIllegalAddr_illegalAddr_T_74"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_76 = firrtl.eq %addr, %c2922_ui12 {name = "_isIllegalAddr_illegalAddr_T_76"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_78 = firrtl.eq %addr, %c3857_ui12 {name = "_isIllegalAddr_illegalAddr_T_78"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_80 = firrtl.eq %addr, %c2910_ui12 {name = "_isIllegalAddr_illegalAddr_T_80"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_82 = firrtl.eq %addr, %c2905_ui12 {name = "_isIllegalAddr_illegalAddr_T_82"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_84 = firrtl.eq %addr, %c260_ui9 {name = "_isIllegalAddr_illegalAddr_T_84"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_86 = firrtl.eq %addr, %c2937_ui12 {name = "_isIllegalAddr_illegalAddr_T_86"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_88 = firrtl.eq %addr, %c2890_ui12 {name = "_isIllegalAddr_illegalAddr_T_88"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_90 = firrtl.eq %addr, %c2873_ui12 {name = "_isIllegalAddr_illegalAddr_T_90"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_92 = firrtl.eq %addr, %c2872_ui12 {name = "_isIllegalAddr_illegalAddr_T_92"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_rdataDummy_T_3 = firrtl.eq %addr, %c324_ui9 {name = "_rdataDummy_T_3"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_96 = firrtl.eq %addr, %c2826_ui12 {name = "_isIllegalAddr_illegalAddr_T_96"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_98 = firrtl.eq %addr, %c2820_ui12 {name = "_isIllegalAddr_illegalAddr_T_98"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_100 = firrtl.eq %addr, %c2840_ui12 {name = "_isIllegalAddr_illegalAddr_T_100"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_102 = firrtl.eq %addr, %c2895_ui12 {name = "_isIllegalAddr_illegalAddr_T_102"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_104 = firrtl.eq %addr, %c2841_ui12 {name = "_isIllegalAddr_illegalAddr_T_104"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_106 = firrtl.eq %addr, %c2858_ui12 {name = "_isIllegalAddr_illegalAddr_T_106"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_108 = firrtl.eq %addr, %c256_ui9 {name = "_isIllegalAddr_illegalAddr_T_108"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_110 = firrtl.eq %addr, %c2877_ui12 {name = "_isIllegalAddr_illegalAddr_T_110"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_112 = firrtl.eq %addr, %c2830_ui12 {name = "_isIllegalAddr_illegalAddr_T_112"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_114 = firrtl.eq %addr, %c2868_ui12 {name = "_isIllegalAddr_illegalAddr_T_114"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_116 = firrtl.eq %addr, %c2932_ui12 {name = "_isIllegalAddr_illegalAddr_T_116"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_118 = firrtl.eq %addr, %c2836_ui12 {name = "_isIllegalAddr_illegalAddr_T_118"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_120 = firrtl.eq %addr, %c2845_ui12 {name = "_isIllegalAddr_illegalAddr_T_120"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_122 = firrtl.eq %addr, %c2900_ui12 {name = "_isIllegalAddr_illegalAddr_T_122"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_124 = firrtl.eq %addr, %c2851_ui12 {name = "_isIllegalAddr_illegalAddr_T_124"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_126 = firrtl.eq %addr, %c2862_ui12 {name = "_isIllegalAddr_illegalAddr_T_126"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_128 = firrtl.eq %addr, %c2926_ui12 {name = "_isIllegalAddr_illegalAddr_T_128"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_130 = firrtl.eq %addr, %c2883_ui12 {name = "_isIllegalAddr_illegalAddr_T_130"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_132 = firrtl.eq %addr, %c2915_ui12 {name = "_isIllegalAddr_illegalAddr_T_132"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_134 = firrtl.eq %addr, %c773_ui10 {name = "_isIllegalAddr_illegalAddr_T_134"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_136 = firrtl.eq %addr, %c2909_ui12 {name = "_isIllegalAddr_illegalAddr_T_136"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_138 = firrtl.eq %addr, %c2936_ui12 {name = "_isIllegalAddr_illegalAddr_T_138"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_140 = firrtl.eq %addr, %c2904_ui12 {name = "_isIllegalAddr_illegalAddr_T_140"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_142 = firrtl.eq %addr, %c2941_ui12 {name = "_isIllegalAddr_illegalAddr_T_142"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_144 = firrtl.eq %addr, %c2894_ui12 {name = "_isIllegalAddr_illegalAddr_T_144"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_146 = firrtl.eq %addr, %c2849_ui12 {name = "_isIllegalAddr_illegalAddr_T_146"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_148 = firrtl.eq %addr, %c772_ui10 {name = "_isIllegalAddr_illegalAddr_T_148"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_150 = firrtl.eq %addr, %c2817_ui12 {name = "_isIllegalAddr_illegalAddr_T_150"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_152 = firrtl.eq %addr, %c2827_ui12 {name = "_isIllegalAddr_illegalAddr_T_152"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_154 = firrtl.eq %addr, %c2859_ui12 {name = "_isIllegalAddr_illegalAddr_T_154"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_156 = firrtl.eq %addr, %c2938_ui12 {name = "_isIllegalAddr_illegalAddr_T_156"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_158 = firrtl.eq %addr, %c2891_ui12 {name = "_isIllegalAddr_illegalAddr_T_158"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_160 = firrtl.eq %addr, %c2935_ui12 {name = "_isIllegalAddr_illegalAddr_T_160"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_162 = firrtl.eq %addr, %c947_ui10 {name = "_isIllegalAddr_illegalAddr_T_162"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_164 = firrtl.eq %addr, %c2906_ui12 {name = "_isIllegalAddr_illegalAddr_T_164"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_166 = firrtl.eq %addr, %c2839_ui12 {name = "_isIllegalAddr_illegalAddr_T_166"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_168 = firrtl.eq %addr, %c2943_ui12 {name = "_isIllegalAddr_illegalAddr_T_168"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_170 = firrtl.eq %addr, %c2856_ui12 {name = "_isIllegalAddr_illegalAddr_T_170"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_172 = firrtl.eq %addr, %c2896_ui12 {name = "_isIllegalAddr_illegalAddr_T_172"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_174 = firrtl.eq %addr, %c2871_ui12 {name = "_isIllegalAddr_illegalAddr_T_174"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_176 = firrtl.eq %addr, %c2824_ui12 {name = "_isIllegalAddr_illegalAddr_T_176"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_178 = firrtl.eq %addr, %c323_ui9 {name = "_isIllegalAddr_illegalAddr_T_178"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_180 = firrtl.eq %addr, %c2923_ui12 {name = "_isIllegalAddr_illegalAddr_T_180"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_182 = firrtl.eq %addr, %c2874_ui12 {name = "_isIllegalAddr_illegalAddr_T_182"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_184 = firrtl.eq %addr, %c769_ui10 {name = "_isIllegalAddr_illegalAddr_T_184"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_186 = firrtl.eq %addr, %c2928_ui12 {name = "_isIllegalAddr_illegalAddr_T_186"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_188 = firrtl.eq %addr, %c2842_ui12 {name = "_isIllegalAddr_illegalAddr_T_188"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_190 = firrtl.eq %addr, %c2911_ui12 {name = "_isIllegalAddr_illegalAddr_T_190"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_192 = firrtl.eq %addr, %c2931_ui12 {name = "_isIllegalAddr_illegalAddr_T_192"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_194 = firrtl.eq %addr, %c2867_ui12 {name = "_isIllegalAddr_illegalAddr_T_194"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_196 = firrtl.eq %addr, %c768_ui10 {name = "_isIllegalAddr_illegalAddr_T_196"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_198 = firrtl.eq %addr, %c2835_ui12 {name = "_isIllegalAddr_illegalAddr_T_198"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_200 = firrtl.eq %addr, %c944_ui10 {name = "_isIllegalAddr_illegalAddr_T_200"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_202 = firrtl.eq %addr, %c2878_ui12 {name = "_isIllegalAddr_illegalAddr_T_202"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_204 = firrtl.eq %addr, %c2927_ui12 {name = "_isIllegalAddr_illegalAddr_T_204"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_206 = firrtl.eq %addr, %c2846_ui12 {name = "_isIllegalAddr_illegalAddr_T_206"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_208 = firrtl.eq %addr, %c2899_ui12 {name = "_isIllegalAddr_illegalAddr_T_208"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_rdataDummy_T_2 = firrtl.eq %addr, %c836_ui10 {name = "_rdataDummy_T_2"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_212 = firrtl.eq %addr, %c2914_ui12 {name = "_isIllegalAddr_illegalAddr_T_212"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_214 = firrtl.eq %addr, %c2816_ui12 {name = "_isIllegalAddr_illegalAddr_T_214"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_216 = firrtl.eq %addr, %c2942_ui12 {name = "_isIllegalAddr_illegalAddr_T_216"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_218 = firrtl.eq %addr, %c2863_ui12 {name = "_isIllegalAddr_illegalAddr_T_218"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_220 = firrtl.eq %addr, %c2821_ui12 {name = "_isIllegalAddr_illegalAddr_T_220"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_222 = firrtl.eq %addr, %c2850_ui12 {name = "_isIllegalAddr_illegalAddr_T_222"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_224 = firrtl.eq %addr, %c2888_ui12 {name = "_isIllegalAddr_illegalAddr_T_224"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_226 = firrtl.eq %addr, %c2882_ui12 {name = "_isIllegalAddr_illegalAddr_T_226"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_228 = firrtl.eq %addr, %c2831_ui12 {name = "_isIllegalAddr_illegalAddr_T_228"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_230 = firrtl.eq %addr, %c2920_ui12 {name = "_isIllegalAddr_illegalAddr_T_230"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_232 = firrtl.eq %addr, %c2903_ui12 {name = "_isIllegalAddr_illegalAddr_T_232"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_234 = firrtl.eq %addr, %c2838_ui12 {name = "_isIllegalAddr_illegalAddr_T_234"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_236 = firrtl.eq %addr, %c2843_ui12 {name = "_isIllegalAddr_illegalAddr_T_236"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_238 = firrtl.eq %addr, %c2860_ui12 {name = "_isIllegalAddr_illegalAddr_T_238"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_240 = firrtl.eq %addr, %c2939_ui12 {name = "_isIllegalAddr_illegalAddr_T_240"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_242 = firrtl.eq %addr, %c2892_ui12 {name = "_isIllegalAddr_illegalAddr_T_242"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_244 = firrtl.eq %addr, %c2848_ui12 {name = "_isIllegalAddr_illegalAddr_T_244"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_246 = firrtl.eq %addr, %c2924_ui12 {name = "_isIllegalAddr_illegalAddr_T_246"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_248 = firrtl.eq %addr, %c2818_ui12 {name = "_isIllegalAddr_illegalAddr_T_248"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_250 = firrtl.eq %addr, %c2919_ui12 {name = "_isIllegalAddr_illegalAddr_T_250"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_252 = firrtl.eq %addr, %c2865_ui12 {name = "_isIllegalAddr_illegalAddr_T_252"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_254 = firrtl.eq %addr, %c2875_ui12 {name = "_isIllegalAddr_illegalAddr_T_254"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_256 = firrtl.eq %addr, %c931_ui10 {name = "_isIllegalAddr_illegalAddr_T_256"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_258 = firrtl.eq %addr, %c2885_ui12 {name = "_isIllegalAddr_illegalAddr_T_258"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_260 = firrtl.eq %addr, %c2870_ui12 {name = "_isIllegalAddr_illegalAddr_T_260"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_262 = firrtl.eq %addr, %c2828_ui12 {name = "_isIllegalAddr_illegalAddr_T_262"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_264 = firrtl.eq %addr, %c771_ui10 {name = "_isIllegalAddr_illegalAddr_T_264"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_266 = firrtl.eq %addr, %c2907_ui12 {name = "_isIllegalAddr_illegalAddr_T_266"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_268 = firrtl.eq %addr, %c2855_ui12 {name = "_isIllegalAddr_illegalAddr_T_268"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_270 = firrtl.eq %addr, %c2853_ui12 {name = "_isIllegalAddr_illegalAddr_T_270"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_272 = firrtl.eq %addr, %c946_ui10 {name = "_isIllegalAddr_illegalAddr_T_272"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_274 = firrtl.eq %addr, %c2823_ui12 {name = "_isIllegalAddr_illegalAddr_T_274"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_276 = firrtl.eq %addr, %c3859_ui12 {name = "_isIllegalAddr_illegalAddr_T_276"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_278 = firrtl.eq %addr, %c2934_ui12 {name = "_isIllegalAddr_illegalAddr_T_278"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_280 = firrtl.eq %addr, %c2912_ui12 {name = "_isIllegalAddr_illegalAddr_T_280"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_282 = firrtl.eq %addr, %c929_ui10 {name = "_isIllegalAddr_illegalAddr_T_282"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_284 = firrtl.eq %addr, %c2902_ui12 {name = "_isIllegalAddr_illegalAddr_T_284"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_286 = firrtl.eq %addr, %c832_ui10 {name = "_isIllegalAddr_illegalAddr_T_286"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_288 = firrtl.eq %addr, %c2917_ui12 {name = "_isIllegalAddr_illegalAddr_T_288"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_290 = firrtl.eq %addr, %c2930_ui12 {name = "_isIllegalAddr_illegalAddr_T_290"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_292 = firrtl.eq %addr, %c3860_ui12 {name = "_isIllegalAddr_illegalAddr_T_292"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_294 = firrtl.eq %addr, %c833_ui10 {name = "_isIllegalAddr_illegalAddr_T_294"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_296 = firrtl.eq %addr, %c835_ui10 {name = "_isIllegalAddr_illegalAddr_T_296"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_298 = firrtl.eq %addr, %c262_ui9 {name = "_isIllegalAddr_illegalAddr_T_298"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_300 = firrtl.eq %addr, %c2913_ui12 {name = "_isIllegalAddr_illegalAddr_T_300"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_302 = firrtl.eq %addr, %c928_ui10 {name = "_isIllegalAddr_illegalAddr_T_302"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_304 = firrtl.eq %addr, %c2847_ui12 {name = "_isIllegalAddr_illegalAddr_T_304"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_306 = firrtl.eq %addr, %c2898_ui12 {name = "_isIllegalAddr_illegalAddr_T_306"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_308 = firrtl.eq %addr, %c2864_ui12 {name = "_isIllegalAddr_illegalAddr_T_308"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_310 = firrtl.eq %addr, %c322_ui9 {name = "_isIllegalAddr_illegalAddr_T_310"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_312 = firrtl.eq %addr, %c2879_ui12 {name = "_isIllegalAddr_illegalAddr_T_312"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_314 = firrtl.eq %addr, %c2881_ui12 {name = "_isIllegalAddr_illegalAddr_T_314"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_316 = firrtl.eq %addr, %c2887_ui12 {name = "_isIllegalAddr_illegalAddr_T_316"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_318 = firrtl.eq %addr, %c2834_ui12 {name = "_isIllegalAddr_illegalAddr_T_318"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_320 = firrtl.eq %addr, %c2866_ui12 {name = "_isIllegalAddr_illegalAddr_T_320"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_322 = firrtl.eq %addr, %c2832_ui12 {name = "_isIllegalAddr_illegalAddr_T_322"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_rdata_T_324 = firrtl.mux(%_isIllegalAddr_illegalAddr_T, %perfCnts_6, %c0_ui64) {name = "_rdata_T_324"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_325 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_2, %perfCnts_73, %c0_ui64) {name = "_rdata_T_325"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_326 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_4, %perfCnts_60, %c0_ui64) {name = "_rdata_T_326"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_327 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_6, %perfCnts_105, %c0_ui64) {name = "_rdata_T_327"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_328 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_8, %perfCnts_124, %c0_ui64) {name = "_rdata_T_328"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_329 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_10, %marchid, %c0_ui64) {name = "_rdata_T_329"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_330 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_12, %perfCnts_92, %c0_ui64) {name = "_rdata_T_330"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_331 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_14, %perfCnts_21, %c0_ui64) {name = "_rdata_T_331"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_332 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_16, %perfCnts_38, %c0_ui64) {name = "_rdata_T_332"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_333 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_18, %satp, %c0_ui64) {name = "_rdata_T_333"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_334 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_20, %perfCnts_102, %c0_ui64) {name = "_rdata_T_334"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_335 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_22, %perfCnts_117, %c0_ui64) {name = "_rdata_T_335"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_336 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_24, %perfCnts_28, %c0_ui64) {name = "_rdata_T_336"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_337 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_26, %pmpcfg2, %c0_ui64) {name = "_rdata_T_337"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_338 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_28, %perfCnts_85, %c0_ui64) {name = "_rdata_T_338"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_339 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_30, %pmpaddr1, %c0_ui64) {name = "_rdata_T_339"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_340 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_32, %perfCnts_70, %c0_ui64) {name = "_rdata_T_340"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_341 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_34, %sscratch, %c0_ui64) {name = "_rdata_T_341"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_342 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_36, %perfCnts_9, %c0_ui64) {name = "_rdata_T_342"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_343 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_38, %perfCnts_3, %c0_ui64) {name = "_rdata_T_343"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_344 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_40, %perfCnts_53, %c0_ui64) {name = "_rdata_T_344"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_346 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_44, %perfCnts_81, %c0_ui64) {name = "_rdata_T_346"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_347 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_46, %perfCnts_41, %c0_ui64) {name = "_rdata_T_347"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_348 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_48, %medeleg, %c0_ui64) {name = "_rdata_T_348"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_349 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_50, %perfCnts_113, %c0_ui64) {name = "_rdata_T_349"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_350 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_52, %perfCnts_36, %c0_ui64) {name = "_rdata_T_350"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_351 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_54, %stvec, %c0_ui64) {name = "_rdata_T_351"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_352 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_56, %perfCnts_13, %c0_ui64) {name = "_rdata_T_352"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_353 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_58, %perfCnts_109, %c0_ui64) {name = "_rdata_T_353"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_354 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_60, %perfCnts_77, %c0_ui64) {name = "_rdata_T_354"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_355 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_62, %sepc, %c0_ui64) {name = "_rdata_T_355"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_356 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_64, %perfCnts_64, %c0_ui64) {name = "_rdata_T_356"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_357 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_66, %mcause, %c0_ui64) {name = "_rdata_T_357"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_358 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_68, %perfCnts_17, %c0_ui64) {name = "_rdata_T_358"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_359 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_70, %perfCnts_45, %c0_ui64) {name = "_rdata_T_359"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_360 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_72, %mcounteren, %c0_ui64) {name = "_rdata_T_360"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_361 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_74, %perfCnts_68, %c0_ui64) {name = "_rdata_T_361"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_362 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_76, %perfCnts_106, %c0_ui64) {name = "_rdata_T_362"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_363 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_78, %mvendorid, %c0_ui64) {name = "_rdata_T_363"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_364 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_80, %perfCnts_94, %c0_ui64) {name = "_rdata_T_364"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_365 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_82, %perfCnts_89, %c0_ui64) {name = "_rdata_T_365"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_366 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_84, %_rdata_T_42, %c0_ui64) {name = "_rdata_T_366"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_367 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_86, %perfCnts_121, %c0_ui64) {name = "_rdata_T_367"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_368 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_88, %perfCnts_74, %c0_ui64) {name = "_rdata_T_368"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_369 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_90, %perfCnts_57, %c0_ui64) {name = "_rdata_T_369"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_370 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_92, %perfCnts_56, %c0_ui64) {name = "_rdata_T_370"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_371 = firrtl.mux(%_rdataDummy_T_3, %_rdata_T_47, %c0_ui64) {name = "_rdata_T_371"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_372 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_96, %perfCnts_10, %c0_ui64) {name = "_rdata_T_372"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_373 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_98, %perfCnts_4, %c0_ui64) {name = "_rdata_T_373"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_374 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_100, %perfCnts_24, %c0_ui64) {name = "_rdata_T_374"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_375 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_102, %perfCnts_79, %c0_ui64) {name = "_rdata_T_375"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_376 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_104, %perfCnts_25, %c0_ui64) {name = "_rdata_T_376"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_377 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_106, %perfCnts_42, %c0_ui64) {name = "_rdata_T_377"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_378 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_108, %_rdata_T_54, %c0_ui64) {name = "_rdata_T_378"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_379 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_110, %perfCnts_61, %c0_ui64) {name = "_rdata_T_379"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_380 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_112, %perfCnts_14, %c0_ui64) {name = "_rdata_T_380"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_381 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_114, %perfCnts_52, %c0_ui64) {name = "_rdata_T_381"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_382 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_116, %perfCnts_116, %c0_ui64) {name = "_rdata_T_382"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_383 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_118, %perfCnts_20, %c0_ui64) {name = "_rdata_T_383"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_384 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_120, %perfCnts_29, %c0_ui64) {name = "_rdata_T_384"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_385 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_122, %perfCnts_84, %c0_ui64) {name = "_rdata_T_385"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_386 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_124, %perfCnts_35, %c0_ui64) {name = "_rdata_T_386"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_387 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_126, %perfCnts_46, %c0_ui64) {name = "_rdata_T_387"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_388 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_128, %perfCnts_110, %c0_ui64) {name = "_rdata_T_388"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_389 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_130, %perfCnts_67, %c0_ui64) {name = "_rdata_T_389"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_391 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_134, %mtvec, %c0_ui64) {name = "_rdata_T_391"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_392 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_136, %perfCnts_93, %c0_ui64) {name = "_rdata_T_392"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_393 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_138, %perfCnts_120, %c0_ui64) {name = "_rdata_T_393"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_394 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_140, %perfCnts_88, %c0_ui64) {name = "_rdata_T_394"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_395 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_142, %perfCnts_125, %c0_ui64) {name = "_rdata_T_395"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_396 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_144, %perfCnts_78, %c0_ui64) {name = "_rdata_T_396"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_397 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_146, %perfCnts_33, %c0_ui64) {name = "_rdata_T_397"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_398 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_148, %mie, %c0_ui64) {name = "_rdata_T_398"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_399 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_150, %perfCnts_1, %c0_ui64) {name = "_rdata_T_399"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_400 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_152, %perfCnts_11, %c0_ui64) {name = "_rdata_T_400"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_401 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_154, %perfCnts_43, %c0_ui64) {name = "_rdata_T_401"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_402 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_156, %perfCnts_122, %c0_ui64) {name = "_rdata_T_402"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_403 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_158, %perfCnts_75, %c0_ui64) {name = "_rdata_T_403"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_404 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_160, %perfCnts_119, %c0_ui64) {name = "_rdata_T_404"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_405 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_162, %pmpaddr3, %c0_ui64) {name = "_rdata_T_405"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_406 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_164, %perfCnts_90, %c0_ui64) {name = "_rdata_T_406"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_407 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_166, %perfCnts_23, %c0_ui64) {name = "_rdata_T_407"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_408 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_168, %perfCnts_127, %c0_ui64) {name = "_rdata_T_408"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_409 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_170, %perfCnts_40, %c0_ui64) {name = "_rdata_T_409"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_410 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_172, %perfCnts_80, %c0_ui64) {name = "_rdata_T_410"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_411 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_174, %perfCnts_55, %c0_ui64) {name = "_rdata_T_411"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_412 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_176, %perfCnts_8, %c0_ui64) {name = "_rdata_T_412"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_413 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_178, %stval, %c0_ui64) {name = "_rdata_T_413"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_414 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_180, %perfCnts_107, %c0_ui64) {name = "_rdata_T_414"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_415 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_182, %perfCnts_58, %c0_ui64) {name = "_rdata_T_415"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_416 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_184, %misa, %c0_ui64) {name = "_rdata_T_416"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_417 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_186, %perfCnts_112, %c0_ui64) {name = "_rdata_T_417"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_418 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_188, %perfCnts_26, %c0_ui64) {name = "_rdata_T_418"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_419 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_190, %perfCnts_95, %c0_ui64) {name = "_rdata_T_419"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_420 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_192, %perfCnts_115, %c0_ui64) {name = "_rdata_T_420"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_421 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_194, %perfCnts_51, %c0_ui64) {name = "_rdata_T_421"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_422 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_196, %mstatus, %c0_ui64) {name = "_rdata_T_422"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_423 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_198, %perfCnts_19, %c0_ui64) {name = "_rdata_T_423"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_424 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_200, %pmpaddr0, %c0_ui64) {name = "_rdata_T_424"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_425 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_202, %perfCnts_62, %c0_ui64) {name = "_rdata_T_425"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_426 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_204, %perfCnts_111, %c0_ui64) {name = "_rdata_T_426"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_427 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_206, %perfCnts_30, %c0_ui64) {name = "_rdata_T_427"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_428 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_208, %perfCnts_83, %c0_ui64) {name = "_rdata_T_428"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_429 = firrtl.mux(%_rdataDummy_T_2, %_rdata_T_105, %c0_ui64) {name = "_rdata_T_429"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_430 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_212, %perfCnts_98, %c0_ui64) {name = "_rdata_T_430"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_431 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_214, %perfCnts_0, %c0_ui64) {name = "_rdata_T_431"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_432 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_216, %perfCnts_126, %c0_ui64) {name = "_rdata_T_432"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_433 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_218, %perfCnts_47, %c0_ui64) {name = "_rdata_T_433"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_434 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_220, %perfCnts_5, %c0_ui64) {name = "_rdata_T_434"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_435 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_222, %perfCnts_34, %c0_ui64) {name = "_rdata_T_435"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_436 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_224, %perfCnts_72, %c0_ui64) {name = "_rdata_T_436"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_437 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_226, %perfCnts_66, %c0_ui64) {name = "_rdata_T_437"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_438 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_228, %perfCnts_15, %c0_ui64) {name = "_rdata_T_438"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_439 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_230, %perfCnts_104, %c0_ui64) {name = "_rdata_T_439"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_440 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_232, %perfCnts_87, %c0_ui64) {name = "_rdata_T_440"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_441 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_234, %perfCnts_22, %c0_ui64) {name = "_rdata_T_441"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_442 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_236, %perfCnts_27, %c0_ui64) {name = "_rdata_T_442"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_443 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_238, %perfCnts_44, %c0_ui64) {name = "_rdata_T_443"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_444 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_240, %perfCnts_123, %c0_ui64) {name = "_rdata_T_444"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_445 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_242, %perfCnts_76, %c0_ui64) {name = "_rdata_T_445"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_446 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_244, %perfCnts_32, %c0_ui64) {name = "_rdata_T_446"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_447 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_246, %perfCnts_108, %c0_ui64) {name = "_rdata_T_447"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_448 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_248, %perfCnts_2, %c0_ui64) {name = "_rdata_T_448"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_449 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_250, %perfCnts_103, %c0_ui64) {name = "_rdata_T_449"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_450 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_252, %perfCnts_49, %c0_ui64) {name = "_rdata_T_450"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_451 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_254, %perfCnts_59, %c0_ui64) {name = "_rdata_T_451"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_452 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_256, %pmpcfg3, %c0_ui64) {name = "_rdata_T_452"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_453 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_258, %perfCnts_69, %c0_ui64) {name = "_rdata_T_453"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_454 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_260, %perfCnts_54, %c0_ui64) {name = "_rdata_T_454"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_455 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_262, %perfCnts_12, %c0_ui64) {name = "_rdata_T_455"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_456 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_264, %mideleg, %c0_ui64) {name = "_rdata_T_456"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_457 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_266, %perfCnts_91, %c0_ui64) {name = "_rdata_T_457"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_458 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_268, %perfCnts_39, %c0_ui64) {name = "_rdata_T_458"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_459 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_270, %perfCnts_37, %c0_ui64) {name = "_rdata_T_459"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_460 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_272, %pmpaddr2, %c0_ui64) {name = "_rdata_T_460"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_461 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_274, %perfCnts_7, %c0_ui64) {name = "_rdata_T_461"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_462 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_276, %mimpid, %c0_ui64) {name = "_rdata_T_462"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_463 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_278, %perfCnts_118, %c0_ui64) {name = "_rdata_T_463"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_464 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_280, %perfCnts_96, %c0_ui64) {name = "_rdata_T_464"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_465 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_282, %pmpcfg1, %c0_ui64) {name = "_rdata_T_465"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_466 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_284, %perfCnts_86, %c0_ui64) {name = "_rdata_T_466"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_467 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_286, %mscratch, %c0_ui64) {name = "_rdata_T_467"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_468 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_288, %perfCnts_101, %c0_ui64) {name = "_rdata_T_468"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_469 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_290, %perfCnts_114, %c0_ui64) {name = "_rdata_T_469"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_470 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_292, %mhartid, %c0_ui64) {name = "_rdata_T_470"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_471 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_294, %mepc, %c0_ui64) {name = "_rdata_T_471"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_472 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_296, %mtval, %c0_ui64) {name = "_rdata_T_472"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_473 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_298, %scounteren, %c0_ui64) {name = "_rdata_T_473"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_474 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_300, %perfCnts_97, %c0_ui64) {name = "_rdata_T_474"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_475 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_302, %pmpcfg0, %c0_ui64) {name = "_rdata_T_475"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_476 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_304, %perfCnts_31, %c0_ui64) {name = "_rdata_T_476"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_477 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_306, %perfCnts_82, %c0_ui64) {name = "_rdata_T_477"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_478 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_308, %perfCnts_48, %c0_ui64) {name = "_rdata_T_478"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_479 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_310, %scause, %c0_ui64) {name = "_rdata_T_479"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_480 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_312, %perfCnts_63, %c0_ui64) {name = "_rdata_T_480"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_481 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_314, %perfCnts_65, %c0_ui64) {name = "_rdata_T_481"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_482 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_316, %perfCnts_71, %c0_ui64) {name = "_rdata_T_482"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_483 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_318, %perfCnts_18, %c0_ui64) {name = "_rdata_T_483"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_484 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_320, %perfCnts_50, %c0_ui64) {name = "_rdata_T_484"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_485 = firrtl.mux(%_isIllegalAddr_illegalAddr_T_322, %perfCnts_16, %c0_ui64) {name = "_rdata_T_485"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_486 = firrtl.or %_rdata_T_324, %_rdata_T_325 {name = "_rdata_T_486"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_487 = firrtl.or %_rdata_T_486, %_rdata_T_326 {name = "_rdata_T_487"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_488 = firrtl.or %_rdata_T_487, %_rdata_T_327 {name = "_rdata_T_488"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_489 = firrtl.or %_rdata_T_488, %_rdata_T_328 {name = "_rdata_T_489"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_490 = firrtl.or %_rdata_T_489, %_rdata_T_329 {name = "_rdata_T_490"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_491 = firrtl.or %_rdata_T_490, %_rdata_T_330 {name = "_rdata_T_491"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_492 = firrtl.or %_rdata_T_491, %_rdata_T_331 {name = "_rdata_T_492"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_493 = firrtl.or %_rdata_T_492, %_rdata_T_332 {name = "_rdata_T_493"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_494 = firrtl.or %_rdata_T_493, %_rdata_T_333 {name = "_rdata_T_494"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_495 = firrtl.or %_rdata_T_494, %_rdata_T_334 {name = "_rdata_T_495"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_496 = firrtl.or %_rdata_T_495, %_rdata_T_335 {name = "_rdata_T_496"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_497 = firrtl.or %_rdata_T_496, %_rdata_T_336 {name = "_rdata_T_497"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_498 = firrtl.or %_rdata_T_497, %_rdata_T_337 {name = "_rdata_T_498"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_499 = firrtl.or %_rdata_T_498, %_rdata_T_338 {name = "_rdata_T_499"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_500 = firrtl.or %_rdata_T_499, %_rdata_T_339 {name = "_rdata_T_500"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_501 = firrtl.or %_rdata_T_500, %_rdata_T_340 {name = "_rdata_T_501"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_502 = firrtl.or %_rdata_T_501, %_rdata_T_341 {name = "_rdata_T_502"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_503 = firrtl.or %_rdata_T_502, %_rdata_T_342 {name = "_rdata_T_503"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_504 = firrtl.or %_rdata_T_503, %_rdata_T_343 {name = "_rdata_T_504"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_505 = firrtl.or %_rdata_T_504, %_rdata_T_344 {name = "_rdata_T_505"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_507 = firrtl.or %_rdata_T_505, %_rdata_T_346 {name = "_rdata_T_507"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_508 = firrtl.or %_rdata_T_507, %_rdata_T_347 {name = "_rdata_T_508"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_509 = firrtl.or %_rdata_T_508, %_rdata_T_348 {name = "_rdata_T_509"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_510 = firrtl.or %_rdata_T_509, %_rdata_T_349 {name = "_rdata_T_510"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_511 = firrtl.or %_rdata_T_510, %_rdata_T_350 {name = "_rdata_T_511"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_512 = firrtl.or %_rdata_T_511, %_rdata_T_351 {name = "_rdata_T_512"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_513 = firrtl.or %_rdata_T_512, %_rdata_T_352 {name = "_rdata_T_513"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_514 = firrtl.or %_rdata_T_513, %_rdata_T_353 {name = "_rdata_T_514"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_515 = firrtl.or %_rdata_T_514, %_rdata_T_354 {name = "_rdata_T_515"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_516 = firrtl.or %_rdata_T_515, %_rdata_T_355 {name = "_rdata_T_516"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_517 = firrtl.or %_rdata_T_516, %_rdata_T_356 {name = "_rdata_T_517"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_518 = firrtl.or %_rdata_T_517, %_rdata_T_357 {name = "_rdata_T_518"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_519 = firrtl.or %_rdata_T_518, %_rdata_T_358 {name = "_rdata_T_519"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_520 = firrtl.or %_rdata_T_519, %_rdata_T_359 {name = "_rdata_T_520"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_521 = firrtl.or %_rdata_T_520, %_rdata_T_360 {name = "_rdata_T_521"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_522 = firrtl.or %_rdata_T_521, %_rdata_T_361 {name = "_rdata_T_522"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_523 = firrtl.or %_rdata_T_522, %_rdata_T_362 {name = "_rdata_T_523"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_524 = firrtl.or %_rdata_T_523, %_rdata_T_363 {name = "_rdata_T_524"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_525 = firrtl.or %_rdata_T_524, %_rdata_T_364 {name = "_rdata_T_525"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_526 = firrtl.or %_rdata_T_525, %_rdata_T_365 {name = "_rdata_T_526"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_527 = firrtl.or %_rdata_T_526, %_rdata_T_366 {name = "_rdata_T_527"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_528 = firrtl.or %_rdata_T_527, %_rdata_T_367 {name = "_rdata_T_528"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_529 = firrtl.or %_rdata_T_528, %_rdata_T_368 {name = "_rdata_T_529"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_530 = firrtl.or %_rdata_T_529, %_rdata_T_369 {name = "_rdata_T_530"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_531 = firrtl.or %_rdata_T_530, %_rdata_T_370 {name = "_rdata_T_531"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_532 = firrtl.or %_rdata_T_531, %_rdata_T_371 {name = "_rdata_T_532"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_533 = firrtl.or %_rdata_T_532, %_rdata_T_372 {name = "_rdata_T_533"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_534 = firrtl.or %_rdata_T_533, %_rdata_T_373 {name = "_rdata_T_534"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_535 = firrtl.or %_rdata_T_534, %_rdata_T_374 {name = "_rdata_T_535"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_536 = firrtl.or %_rdata_T_535, %_rdata_T_375 {name = "_rdata_T_536"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_537 = firrtl.or %_rdata_T_536, %_rdata_T_376 {name = "_rdata_T_537"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_538 = firrtl.or %_rdata_T_537, %_rdata_T_377 {name = "_rdata_T_538"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_539 = firrtl.or %_rdata_T_538, %_rdata_T_378 {name = "_rdata_T_539"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_540 = firrtl.or %_rdata_T_539, %_rdata_T_379 {name = "_rdata_T_540"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_541 = firrtl.or %_rdata_T_540, %_rdata_T_380 {name = "_rdata_T_541"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_542 = firrtl.or %_rdata_T_541, %_rdata_T_381 {name = "_rdata_T_542"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_543 = firrtl.or %_rdata_T_542, %_rdata_T_382 {name = "_rdata_T_543"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_544 = firrtl.or %_rdata_T_543, %_rdata_T_383 {name = "_rdata_T_544"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_545 = firrtl.or %_rdata_T_544, %_rdata_T_384 {name = "_rdata_T_545"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_546 = firrtl.or %_rdata_T_545, %_rdata_T_385 {name = "_rdata_T_546"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_547 = firrtl.or %_rdata_T_546, %_rdata_T_386 {name = "_rdata_T_547"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_548 = firrtl.or %_rdata_T_547, %_rdata_T_387 {name = "_rdata_T_548"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_549 = firrtl.or %_rdata_T_548, %_rdata_T_388 {name = "_rdata_T_549"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_550 = firrtl.or %_rdata_T_549, %_rdata_T_389 {name = "_rdata_T_550"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_552 = firrtl.or %_rdata_T_550, %_rdata_T_391 {name = "_rdata_T_552"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_553 = firrtl.or %_rdata_T_552, %_rdata_T_392 {name = "_rdata_T_553"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_554 = firrtl.or %_rdata_T_553, %_rdata_T_393 {name = "_rdata_T_554"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_555 = firrtl.or %_rdata_T_554, %_rdata_T_394 {name = "_rdata_T_555"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_556 = firrtl.or %_rdata_T_555, %_rdata_T_395 {name = "_rdata_T_556"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_557 = firrtl.or %_rdata_T_556, %_rdata_T_396 {name = "_rdata_T_557"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_558 = firrtl.or %_rdata_T_557, %_rdata_T_397 {name = "_rdata_T_558"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_559 = firrtl.or %_rdata_T_558, %_rdata_T_398 {name = "_rdata_T_559"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_560 = firrtl.or %_rdata_T_559, %_rdata_T_399 {name = "_rdata_T_560"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_561 = firrtl.or %_rdata_T_560, %_rdata_T_400 {name = "_rdata_T_561"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_562 = firrtl.or %_rdata_T_561, %_rdata_T_401 {name = "_rdata_T_562"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_563 = firrtl.or %_rdata_T_562, %_rdata_T_402 {name = "_rdata_T_563"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_564 = firrtl.or %_rdata_T_563, %_rdata_T_403 {name = "_rdata_T_564"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_565 = firrtl.or %_rdata_T_564, %_rdata_T_404 {name = "_rdata_T_565"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_566 = firrtl.or %_rdata_T_565, %_rdata_T_405 {name = "_rdata_T_566"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_567 = firrtl.or %_rdata_T_566, %_rdata_T_406 {name = "_rdata_T_567"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_568 = firrtl.or %_rdata_T_567, %_rdata_T_407 {name = "_rdata_T_568"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_569 = firrtl.or %_rdata_T_568, %_rdata_T_408 {name = "_rdata_T_569"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_570 = firrtl.or %_rdata_T_569, %_rdata_T_409 {name = "_rdata_T_570"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_571 = firrtl.or %_rdata_T_570, %_rdata_T_410 {name = "_rdata_T_571"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_572 = firrtl.or %_rdata_T_571, %_rdata_T_411 {name = "_rdata_T_572"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_573 = firrtl.or %_rdata_T_572, %_rdata_T_412 {name = "_rdata_T_573"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_574 = firrtl.or %_rdata_T_573, %_rdata_T_413 {name = "_rdata_T_574"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_575 = firrtl.or %_rdata_T_574, %_rdata_T_414 {name = "_rdata_T_575"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_576 = firrtl.or %_rdata_T_575, %_rdata_T_415 {name = "_rdata_T_576"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_577 = firrtl.or %_rdata_T_576, %_rdata_T_416 {name = "_rdata_T_577"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_578 = firrtl.or %_rdata_T_577, %_rdata_T_417 {name = "_rdata_T_578"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_579 = firrtl.or %_rdata_T_578, %_rdata_T_418 {name = "_rdata_T_579"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_580 = firrtl.or %_rdata_T_579, %_rdata_T_419 {name = "_rdata_T_580"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_581 = firrtl.or %_rdata_T_580, %_rdata_T_420 {name = "_rdata_T_581"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_582 = firrtl.or %_rdata_T_581, %_rdata_T_421 {name = "_rdata_T_582"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_583 = firrtl.or %_rdata_T_582, %_rdata_T_422 {name = "_rdata_T_583"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_584 = firrtl.or %_rdata_T_583, %_rdata_T_423 {name = "_rdata_T_584"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_585 = firrtl.or %_rdata_T_584, %_rdata_T_424 {name = "_rdata_T_585"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_586 = firrtl.or %_rdata_T_585, %_rdata_T_425 {name = "_rdata_T_586"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_587 = firrtl.or %_rdata_T_586, %_rdata_T_426 {name = "_rdata_T_587"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_588 = firrtl.or %_rdata_T_587, %_rdata_T_427 {name = "_rdata_T_588"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_589 = firrtl.or %_rdata_T_588, %_rdata_T_428 {name = "_rdata_T_589"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_590 = firrtl.or %_rdata_T_589, %_rdata_T_429 {name = "_rdata_T_590"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_591 = firrtl.or %_rdata_T_590, %_rdata_T_430 {name = "_rdata_T_591"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_592 = firrtl.or %_rdata_T_591, %_rdata_T_431 {name = "_rdata_T_592"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_593 = firrtl.or %_rdata_T_592, %_rdata_T_432 {name = "_rdata_T_593"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_594 = firrtl.or %_rdata_T_593, %_rdata_T_433 {name = "_rdata_T_594"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_595 = firrtl.or %_rdata_T_594, %_rdata_T_434 {name = "_rdata_T_595"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_596 = firrtl.or %_rdata_T_595, %_rdata_T_435 {name = "_rdata_T_596"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_597 = firrtl.or %_rdata_T_596, %_rdata_T_436 {name = "_rdata_T_597"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_598 = firrtl.or %_rdata_T_597, %_rdata_T_437 {name = "_rdata_T_598"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_599 = firrtl.or %_rdata_T_598, %_rdata_T_438 {name = "_rdata_T_599"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_600 = firrtl.or %_rdata_T_599, %_rdata_T_439 {name = "_rdata_T_600"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_601 = firrtl.or %_rdata_T_600, %_rdata_T_440 {name = "_rdata_T_601"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_602 = firrtl.or %_rdata_T_601, %_rdata_T_441 {name = "_rdata_T_602"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_603 = firrtl.or %_rdata_T_602, %_rdata_T_442 {name = "_rdata_T_603"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_604 = firrtl.or %_rdata_T_603, %_rdata_T_443 {name = "_rdata_T_604"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_605 = firrtl.or %_rdata_T_604, %_rdata_T_444 {name = "_rdata_T_605"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_606 = firrtl.or %_rdata_T_605, %_rdata_T_445 {name = "_rdata_T_606"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_607 = firrtl.or %_rdata_T_606, %_rdata_T_446 {name = "_rdata_T_607"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_608 = firrtl.or %_rdata_T_607, %_rdata_T_447 {name = "_rdata_T_608"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_609 = firrtl.or %_rdata_T_608, %_rdata_T_448 {name = "_rdata_T_609"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_610 = firrtl.or %_rdata_T_609, %_rdata_T_449 {name = "_rdata_T_610"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_611 = firrtl.or %_rdata_T_610, %_rdata_T_450 {name = "_rdata_T_611"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_612 = firrtl.or %_rdata_T_611, %_rdata_T_451 {name = "_rdata_T_612"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_613 = firrtl.or %_rdata_T_612, %_rdata_T_452 {name = "_rdata_T_613"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_614 = firrtl.or %_rdata_T_613, %_rdata_T_453 {name = "_rdata_T_614"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_615 = firrtl.or %_rdata_T_614, %_rdata_T_454 {name = "_rdata_T_615"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_616 = firrtl.or %_rdata_T_615, %_rdata_T_455 {name = "_rdata_T_616"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_617 = firrtl.or %_rdata_T_616, %_rdata_T_456 {name = "_rdata_T_617"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_618 = firrtl.or %_rdata_T_617, %_rdata_T_457 {name = "_rdata_T_618"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_619 = firrtl.or %_rdata_T_618, %_rdata_T_458 {name = "_rdata_T_619"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_620 = firrtl.or %_rdata_T_619, %_rdata_T_459 {name = "_rdata_T_620"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_621 = firrtl.or %_rdata_T_620, %_rdata_T_460 {name = "_rdata_T_621"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_622 = firrtl.or %_rdata_T_621, %_rdata_T_461 {name = "_rdata_T_622"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_623 = firrtl.or %_rdata_T_622, %_rdata_T_462 {name = "_rdata_T_623"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_624 = firrtl.or %_rdata_T_623, %_rdata_T_463 {name = "_rdata_T_624"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_625 = firrtl.or %_rdata_T_624, %_rdata_T_464 {name = "_rdata_T_625"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_626 = firrtl.or %_rdata_T_625, %_rdata_T_465 {name = "_rdata_T_626"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_627 = firrtl.or %_rdata_T_626, %_rdata_T_466 {name = "_rdata_T_627"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_628 = firrtl.or %_rdata_T_627, %_rdata_T_467 {name = "_rdata_T_628"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_629 = firrtl.or %_rdata_T_628, %_rdata_T_468 {name = "_rdata_T_629"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_630 = firrtl.or %_rdata_T_629, %_rdata_T_469 {name = "_rdata_T_630"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_631 = firrtl.or %_rdata_T_630, %_rdata_T_470 {name = "_rdata_T_631"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_632 = firrtl.or %_rdata_T_631, %_rdata_T_471 {name = "_rdata_T_632"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_633 = firrtl.or %_rdata_T_632, %_rdata_T_472 {name = "_rdata_T_633"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_634 = firrtl.or %_rdata_T_633, %_rdata_T_473 {name = "_rdata_T_634"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_635 = firrtl.or %_rdata_T_634, %_rdata_T_474 {name = "_rdata_T_635"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_636 = firrtl.or %_rdata_T_635, %_rdata_T_475 {name = "_rdata_T_636"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_637 = firrtl.or %_rdata_T_636, %_rdata_T_476 {name = "_rdata_T_637"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_638 = firrtl.or %_rdata_T_637, %_rdata_T_477 {name = "_rdata_T_638"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_639 = firrtl.or %_rdata_T_638, %_rdata_T_478 {name = "_rdata_T_639"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_640 = firrtl.or %_rdata_T_639, %_rdata_T_479 {name = "_rdata_T_640"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_641 = firrtl.or %_rdata_T_640, %_rdata_T_480 {name = "_rdata_T_641"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_642 = firrtl.or %_rdata_T_641, %_rdata_T_481 {name = "_rdata_T_642"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_643 = firrtl.or %_rdata_T_642, %_rdata_T_482 {name = "_rdata_T_643"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_644 = firrtl.or %_rdata_T_643, %_rdata_T_483 {name = "_rdata_T_644"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_645 = firrtl.or %_rdata_T_644, %_rdata_T_484 {name = "_rdata_T_645"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_T_646 = firrtl.or %_rdata_T_645, %_rdata_T_485 {name = "_rdata_T_646"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_WIRE = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_WIRE, %_rdata_T_646 : !firrtl.uint<64>
      firrtl.strictconnect %rdata, %_rdata_WIRE : !firrtl.uint<64>
      %11 = firrtl.eq %addr, %c2822_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %12 = firrtl.and %7, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.mux(%12, %wdata, %perfCnts_6) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %14 = firrtl.eq %addr, %c2889_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %15 = firrtl.and %7, %14 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.mux(%15, %wdata, %perfCnts_73) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %17 = firrtl.eq %addr, %c2876_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %18 = firrtl.and %7, %17 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.mux(%18, %wdata, %perfCnts_60) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %20 = firrtl.eq %addr, %c2921_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %21 = firrtl.and %7, %20 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.mux(%21, %wdata, %perfCnts_105) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %23 = firrtl.eq %addr, %c2940_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %24 = firrtl.and %7, %23 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.mux(%24, %wdata, %perfCnts_124) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %26 = firrtl.eq %addr, %c2908_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %27 = firrtl.and %7, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.mux(%27, %wdata, %perfCnts_92) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %29 = firrtl.eq %addr, %c2837_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %30 = firrtl.and %7, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.mux(%30, %wdata, %perfCnts_21) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %32 = firrtl.eq %addr, %c2854_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %33 = firrtl.and %7, %32 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.mux(%33, %wdata, %perfCnts_38) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_resetSatp_T = firrtl.eq %addr, %c384_ui9 {name = "_resetSatp_T"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %35 = firrtl.and %7, %_resetSatp_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.mux(%35, %wdata, %satp) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %satp, %36 : !firrtl.uint<64>
      %37 = firrtl.eq %addr, %c2918_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %38 = firrtl.and %7, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.mux(%38, %wdata, %perfCnts_102) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %40 = firrtl.eq %addr, %c2933_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %41 = firrtl.and %7, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.mux(%41, %wdata, %perfCnts_117) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %43 = firrtl.eq %addr, %c2844_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %44 = firrtl.and %7, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.mux(%44, %wdata, %perfCnts_28) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %46 = firrtl.eq %addr, %c930_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %47 = firrtl.and %7, %46 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.mux(%47, %wdata, %pmpcfg2) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpcfg2, %48 : !firrtl.uint<64>
      %49 = firrtl.eq %addr, %c2901_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %50 = firrtl.and %7, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.mux(%50, %wdata, %perfCnts_85) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %52 = firrtl.eq %addr, %c945_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %53 = firrtl.and %7, %52 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_pmpaddr1_T = firrtl.and %wdata, %c1073741823_ui64 {name = "_pmpaddr1_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr1_T_2 = firrtl.and %pmpaddr1, %c18446744072635809792_ui64 {name = "_pmpaddr1_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr1_T_3 = firrtl.or %_pmpaddr1_T, %_pmpaddr1_T_2 {name = "_pmpaddr1_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %54 = firrtl.mux(%53, %_pmpaddr1_T_3, %pmpaddr1) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpaddr1, %54 : !firrtl.uint<64>
      %55 = firrtl.eq %addr, %c2886_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %56 = firrtl.and %7, %55 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.mux(%56, %wdata, %perfCnts_70) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %58 = firrtl.eq %addr, %c320_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %59 = firrtl.and %7, %58 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.mux(%59, %wdata, %sscratch) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %sscratch, %60 : !firrtl.uint<64>
      %61 = firrtl.eq %addr, %c2825_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %62 = firrtl.and %7, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %63 = firrtl.mux(%62, %wdata, %perfCnts_9) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %64 = firrtl.eq %addr, %c2819_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %65 = firrtl.and %7, %64 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %66 = firrtl.mux(%65, %wdata, %perfCnts_3) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %67 = firrtl.eq %addr, %c2869_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %68 = firrtl.and %7, %67 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %69 = firrtl.mux(%68, %wdata, %perfCnts_53) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %70 = firrtl.eq %addr, %c2897_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %71 = firrtl.and %7, %70 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %72 = firrtl.mux(%71, %wdata, %perfCnts_81) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %73 = firrtl.eq %addr, %c2857_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %74 = firrtl.and %7, %73 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %75 = firrtl.mux(%74, %wdata, %perfCnts_41) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_isMret_T = firrtl.eq %addr, %c770_ui10 {name = "_isMret_T"} : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %76 = firrtl.and %7, %_isMret_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_medeleg_T = firrtl.and %wdata, %c48127_ui64 {name = "_medeleg_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_medeleg_T_2 = firrtl.and %medeleg, %c18446744073709503488_ui64 {name = "_medeleg_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_medeleg_T_3 = firrtl.or %_medeleg_T, %_medeleg_T_2 {name = "_medeleg_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %77 = firrtl.mux(%76, %_medeleg_T_3, %medeleg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %medeleg, %77 : !firrtl.uint<64>
      %78 = firrtl.eq %addr, %c2929_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %79 = firrtl.and %7, %78 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.mux(%79, %wdata, %perfCnts_113) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %81 = firrtl.eq %addr, %c2852_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %82 = firrtl.and %7, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.mux(%82, %wdata, %perfCnts_36) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %84 = firrtl.eq %addr, %c261_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %85 = firrtl.and %7, %84 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.mux(%85, %wdata, %stvec) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %stvec, %86 : !firrtl.uint<64>
      %87 = firrtl.eq %addr, %c2829_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %88 = firrtl.and %7, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.mux(%88, %wdata, %perfCnts_13) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %90 = firrtl.eq %addr, %c2925_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %91 = firrtl.and %7, %90 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.mux(%91, %wdata, %perfCnts_109) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %93 = firrtl.eq %addr, %c2893_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %94 = firrtl.and %7, %93 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.mux(%94, %wdata, %perfCnts_77) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %96 = firrtl.eq %addr, %c321_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %97 = firrtl.and %7, %96 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.mux(%97, %wdata, %sepc) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %99 = firrtl.eq %addr, %c2880_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %100 = firrtl.and %7, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %101 = firrtl.mux(%100, %wdata, %perfCnts_64) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %102 = firrtl.eq %addr, %c834_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %103 = firrtl.and %7, %102 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.mux(%103, %wdata, %mcause) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %105 = firrtl.eq %addr, %c2833_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %106 = firrtl.and %7, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.mux(%106, %wdata, %perfCnts_17) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %108 = firrtl.eq %addr, %c2861_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %109 = firrtl.and %7, %108 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.mux(%109, %wdata, %perfCnts_45) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %111 = firrtl.eq %addr, %c774_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %112 = firrtl.and %7, %111 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %113 = firrtl.mux(%112, %wdata, %mcounteren) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mcounteren, %113 : !firrtl.uint<64>
      %114 = firrtl.eq %addr, %c2884_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %115 = firrtl.and %7, %114 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.mux(%115, %wdata, %perfCnts_68) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %117 = firrtl.eq %addr, %c2922_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %118 = firrtl.and %7, %117 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.mux(%118, %wdata, %perfCnts_106) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %120 = firrtl.eq %addr, %c2910_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %121 = firrtl.and %7, %120 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %122 = firrtl.mux(%121, %wdata, %perfCnts_94) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %123 = firrtl.eq %addr, %c2905_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %124 = firrtl.and %7, %123 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %125 = firrtl.mux(%124, %wdata, %perfCnts_89) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %126 = firrtl.eq %addr, %c260_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %127 = firrtl.and %7, %126 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mie_T = firrtl.and %wdata, %sieMask {name = "_mie_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mie_T_1 = firrtl.not %sieMask {name = "_mie_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_mie_T_2 = firrtl.and %mie, %_mie_T_1 {name = "_mie_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mie_T_3 = firrtl.or %_mie_T, %_mie_T_2 {name = "_mie_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %128 = firrtl.mux(%127, %_mie_T_3, %mie) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %129 = firrtl.eq %addr, %c2937_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %130 = firrtl.and %7, %129 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %131 = firrtl.mux(%130, %wdata, %perfCnts_121) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %132 = firrtl.eq %addr, %c2890_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %133 = firrtl.and %7, %132 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %134 = firrtl.mux(%133, %wdata, %perfCnts_74) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %135 = firrtl.eq %addr, %c2873_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %136 = firrtl.and %7, %135 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %137 = firrtl.mux(%136, %wdata, %perfCnts_57) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %138 = firrtl.eq %addr, %c2872_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %139 = firrtl.and %7, %138 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %140 = firrtl.mux(%139, %wdata, %perfCnts_56) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %141 = firrtl.eq %addr, %c2826_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %142 = firrtl.and %7, %141 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %143 = firrtl.mux(%142, %wdata, %perfCnts_10) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %144 = firrtl.eq %addr, %c2820_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %145 = firrtl.and %7, %144 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %146 = firrtl.mux(%145, %wdata, %perfCnts_4) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %147 = firrtl.eq %addr, %c2840_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %148 = firrtl.and %7, %147 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %149 = firrtl.mux(%148, %wdata, %perfCnts_24) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %150 = firrtl.eq %addr, %c2895_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %151 = firrtl.and %7, %150 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %152 = firrtl.mux(%151, %wdata, %perfCnts_79) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %153 = firrtl.eq %addr, %c2841_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %154 = firrtl.and %7, %153 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %155 = firrtl.mux(%154, %wdata, %perfCnts_25) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %156 = firrtl.eq %addr, %c2858_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %157 = firrtl.and %7, %156 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %158 = firrtl.mux(%157, %wdata, %perfCnts_42) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %159 = firrtl.eq %addr, %c256_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %160 = firrtl.and %7, %159 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mstatus_T = firrtl.and %wdata, %c811298_ui64 {name = "_mstatus_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mstatus_T_2 = firrtl.and %mstatus, %c18446744073708740317_ui64 {name = "_mstatus_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mstatus_T_3 = firrtl.or %_mstatus_T, %_mstatus_T_2 {name = "_mstatus_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mstatus_mstatusOld_WIRE_fs = firrtl.wire : !firrtl.uint<2>
      %_mstatus_mstatusOld_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatus_mstatusOld_WIRE_1, %_mstatus_T_3 : !firrtl.uint<64>
      %_mstatus_mstatusOld_T_11 = firrtl.bits %_mstatus_mstatusOld_WIRE_1 14 to 13 {name = "_mstatus_mstatusOld_T_11"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatus_mstatusOld_WIRE_fs, %_mstatus_mstatusOld_T_11 : !firrtl.uint<2>
      %mstatus_mstatusOld_fs = firrtl.wire : !firrtl.uint<2>
      firrtl.strictconnect %mstatus_mstatusOld_fs, %_mstatus_mstatusOld_WIRE_fs : !firrtl.uint<2>
      %_mstatus_mstatusNew_T = firrtl.andr %mstatus_mstatusOld_fs {name = "_mstatus_mstatusNew_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_mstatus_mstatusNew_T_1 = firrtl.bits %_mstatus_T_3 62 to 0 {name = "_mstatus_mstatusNew_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<63>
      %mstatus_mstatusNew = firrtl.cat %_mstatus_mstatusNew_T, %_mstatus_mstatusNew_T_1 {name = "mstatus_mstatusNew"} : (!firrtl.uint<1>, !firrtl.uint<63>) -> !firrtl.uint<64>
      %161 = firrtl.mux(%160, %mstatus_mstatusNew, %mstatus) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %162 = firrtl.eq %addr, %c2877_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %163 = firrtl.and %7, %162 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %164 = firrtl.mux(%163, %wdata, %perfCnts_61) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %165 = firrtl.eq %addr, %c2830_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %166 = firrtl.and %7, %165 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %167 = firrtl.mux(%166, %wdata, %perfCnts_14) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %168 = firrtl.eq %addr, %c2868_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %169 = firrtl.and %7, %168 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %170 = firrtl.mux(%169, %wdata, %perfCnts_52) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %171 = firrtl.eq %addr, %c2932_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %172 = firrtl.and %7, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %173 = firrtl.mux(%172, %wdata, %perfCnts_116) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %174 = firrtl.eq %addr, %c2836_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %175 = firrtl.and %7, %174 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %176 = firrtl.mux(%175, %wdata, %perfCnts_20) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %177 = firrtl.eq %addr, %c2845_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %178 = firrtl.and %7, %177 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %179 = firrtl.mux(%178, %wdata, %perfCnts_29) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %180 = firrtl.eq %addr, %c2900_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %181 = firrtl.and %7, %180 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %182 = firrtl.mux(%181, %wdata, %perfCnts_84) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %183 = firrtl.eq %addr, %c2851_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %184 = firrtl.and %7, %183 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %185 = firrtl.mux(%184, %wdata, %perfCnts_35) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %186 = firrtl.eq %addr, %c2862_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %187 = firrtl.and %7, %186 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %188 = firrtl.mux(%187, %wdata, %perfCnts_46) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %189 = firrtl.eq %addr, %c2926_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %190 = firrtl.and %7, %189 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %191 = firrtl.mux(%190, %wdata, %perfCnts_110) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %192 = firrtl.eq %addr, %c2883_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %193 = firrtl.and %7, %192 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %194 = firrtl.mux(%193, %wdata, %perfCnts_67) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %195 = firrtl.eq %addr, %c773_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %196 = firrtl.and %7, %195 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %197 = firrtl.mux(%196, %wdata, %mtvec) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mtvec, %197 : !firrtl.uint<64>
      %198 = firrtl.eq %addr, %c2909_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %199 = firrtl.and %7, %198 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %200 = firrtl.mux(%199, %wdata, %perfCnts_93) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %201 = firrtl.eq %addr, %c2936_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %202 = firrtl.and %7, %201 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %203 = firrtl.mux(%202, %wdata, %perfCnts_120) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %204 = firrtl.eq %addr, %c2904_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %205 = firrtl.and %7, %204 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %206 = firrtl.mux(%205, %wdata, %perfCnts_88) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %207 = firrtl.eq %addr, %c2941_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %208 = firrtl.and %7, %207 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %209 = firrtl.mux(%208, %wdata, %perfCnts_125) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %210 = firrtl.eq %addr, %c2894_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %211 = firrtl.and %7, %210 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %212 = firrtl.mux(%211, %wdata, %perfCnts_78) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %213 = firrtl.eq %addr, %c2849_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %214 = firrtl.and %7, %213 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %215 = firrtl.mux(%214, %wdata, %perfCnts_33) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %216 = firrtl.eq %addr, %c772_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %217 = firrtl.and %7, %216 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %218 = firrtl.mux(%217, %wdata, %128) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mie, %218 : !firrtl.uint<64>
      %219 = firrtl.eq %addr, %c2817_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %220 = firrtl.and %7, %219 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %221 = firrtl.mux(%220, %wdata, %perfCnts_1) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %222 = firrtl.eq %addr, %c2827_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %223 = firrtl.and %7, %222 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %224 = firrtl.mux(%223, %wdata, %perfCnts_11) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %225 = firrtl.eq %addr, %c2859_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %226 = firrtl.and %7, %225 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %227 = firrtl.mux(%226, %wdata, %perfCnts_43) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %228 = firrtl.eq %addr, %c2938_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %229 = firrtl.and %7, %228 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %230 = firrtl.mux(%229, %wdata, %perfCnts_122) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %231 = firrtl.eq %addr, %c2891_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %232 = firrtl.and %7, %231 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %233 = firrtl.mux(%232, %wdata, %perfCnts_75) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %234 = firrtl.eq %addr, %c2935_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %235 = firrtl.and %7, %234 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %236 = firrtl.mux(%235, %wdata, %perfCnts_119) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %237 = firrtl.eq %addr, %c947_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %238 = firrtl.and %7, %237 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_pmpaddr3_T = firrtl.and %wdata, %c1073741823_ui64 {name = "_pmpaddr3_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr3_T_2 = firrtl.and %pmpaddr3, %c18446744072635809792_ui64 {name = "_pmpaddr3_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr3_T_3 = firrtl.or %_pmpaddr3_T, %_pmpaddr3_T_2 {name = "_pmpaddr3_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %239 = firrtl.mux(%238, %_pmpaddr3_T_3, %pmpaddr3) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpaddr3, %239 : !firrtl.uint<64>
      %240 = firrtl.eq %addr, %c2906_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %241 = firrtl.and %7, %240 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %242 = firrtl.mux(%241, %wdata, %perfCnts_90) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %243 = firrtl.eq %addr, %c2839_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %244 = firrtl.and %7, %243 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %245 = firrtl.mux(%244, %wdata, %perfCnts_23) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %246 = firrtl.eq %addr, %c2943_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %247 = firrtl.and %7, %246 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %248 = firrtl.mux(%247, %wdata, %perfCnts_127) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %249 = firrtl.eq %addr, %c2856_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %250 = firrtl.and %7, %249 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %251 = firrtl.mux(%250, %wdata, %perfCnts_40) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %252 = firrtl.eq %addr, %c2896_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %253 = firrtl.and %7, %252 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %254 = firrtl.mux(%253, %wdata, %perfCnts_80) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %255 = firrtl.eq %addr, %c2871_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %256 = firrtl.and %7, %255 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %257 = firrtl.mux(%256, %wdata, %perfCnts_55) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %258 = firrtl.eq %addr, %c2824_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %259 = firrtl.and %7, %258 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %260 = firrtl.mux(%259, %wdata, %perfCnts_8) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %261 = firrtl.eq %addr, %c323_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %262 = firrtl.and %7, %261 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %263 = firrtl.mux(%262, %wdata, %stval) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %264 = firrtl.eq %addr, %c2923_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %265 = firrtl.and %7, %264 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %266 = firrtl.mux(%265, %wdata, %perfCnts_107) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %267 = firrtl.eq %addr, %c2874_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %268 = firrtl.and %7, %267 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %269 = firrtl.mux(%268, %wdata, %perfCnts_58) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %270 = firrtl.eq %addr, %c769_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %271 = firrtl.and %7, %270 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %272 = firrtl.mux(%271, %wdata, %misa) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %misa, %272 : !firrtl.uint<64>
      %273 = firrtl.eq %addr, %c2928_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %274 = firrtl.and %7, %273 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %275 = firrtl.mux(%274, %wdata, %perfCnts_112) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %276 = firrtl.eq %addr, %c2842_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %277 = firrtl.and %7, %276 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %278 = firrtl.mux(%277, %wdata, %perfCnts_26) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %279 = firrtl.eq %addr, %c2911_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %280 = firrtl.and %7, %279 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %281 = firrtl.mux(%280, %wdata, %perfCnts_95) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %282 = firrtl.eq %addr, %c2931_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %283 = firrtl.and %7, %282 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %284 = firrtl.mux(%283, %wdata, %perfCnts_115) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %285 = firrtl.eq %addr, %c2867_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %286 = firrtl.and %7, %285 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %287 = firrtl.mux(%286, %wdata, %perfCnts_51) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %288 = firrtl.eq %addr, %c768_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %289 = firrtl.and %7, %288 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mstatus_mstatusOld_WIRE_2_fs = firrtl.wire : !firrtl.uint<2>
      %_mstatus_mstatusOld_WIRE_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatus_mstatusOld_WIRE_3, %wdata : !firrtl.uint<64>
      %_mstatus_mstatusOld_T_35 = firrtl.bits %_mstatus_mstatusOld_WIRE_3 14 to 13 {name = "_mstatus_mstatusOld_T_35"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatus_mstatusOld_WIRE_2_fs, %_mstatus_mstatusOld_T_35 : !firrtl.uint<2>
      %mstatus_mstatusOld_1_fs = firrtl.wire : !firrtl.uint<2>
      firrtl.strictconnect %mstatus_mstatusOld_1_fs, %_mstatus_mstatusOld_WIRE_2_fs : !firrtl.uint<2>
      %_mstatus_mstatusNew_T_2 = firrtl.andr %mstatus_mstatusOld_1_fs {name = "_mstatus_mstatusNew_T_2"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_mstatus_mstatusNew_T_3 = firrtl.bits %wdata 62 to 0 {name = "_mstatus_mstatusNew_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<63>
      %mstatus_mstatusNew_1 = firrtl.cat %_mstatus_mstatusNew_T_2, %_mstatus_mstatusNew_T_3 {name = "mstatus_mstatusNew_1"} : (!firrtl.uint<1>, !firrtl.uint<63>) -> !firrtl.uint<64>
      %290 = firrtl.mux(%289, %mstatus_mstatusNew_1, %161) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %291 = firrtl.eq %addr, %c2835_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %292 = firrtl.and %7, %291 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %293 = firrtl.mux(%292, %wdata, %perfCnts_19) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %294 = firrtl.eq %addr, %c944_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %295 = firrtl.and %7, %294 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_pmpaddr0_T = firrtl.and %wdata, %c1073741823_ui64 {name = "_pmpaddr0_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr0_T_2 = firrtl.and %pmpaddr0, %c18446744072635809792_ui64 {name = "_pmpaddr0_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr0_T_3 = firrtl.or %_pmpaddr0_T, %_pmpaddr0_T_2 {name = "_pmpaddr0_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %296 = firrtl.mux(%295, %_pmpaddr0_T_3, %pmpaddr0) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpaddr0, %296 : !firrtl.uint<64>
      %297 = firrtl.eq %addr, %c2878_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %298 = firrtl.and %7, %297 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %299 = firrtl.mux(%298, %wdata, %perfCnts_62) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %300 = firrtl.eq %addr, %c2927_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %301 = firrtl.and %7, %300 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %302 = firrtl.mux(%301, %wdata, %perfCnts_111) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %303 = firrtl.eq %addr, %c2846_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %304 = firrtl.and %7, %303 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %305 = firrtl.mux(%304, %wdata, %perfCnts_30) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %306 = firrtl.eq %addr, %c2899_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %307 = firrtl.and %7, %306 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %308 = firrtl.mux(%307, %wdata, %perfCnts_83) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %309 = firrtl.eq %addr, %c2914_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %310 = firrtl.and %7, %309 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %311 = firrtl.mux(%310, %wdata, %perfCnts_98) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %312 = firrtl.eq %addr, %c2816_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %313 = firrtl.and %7, %312 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %314 = firrtl.mux(%313, %wdata, %perfCnts_0) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %315 = firrtl.eq %addr, %c2942_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %316 = firrtl.and %7, %315 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %317 = firrtl.mux(%316, %wdata, %perfCnts_126) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %318 = firrtl.eq %addr, %c2863_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %319 = firrtl.and %7, %318 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %320 = firrtl.mux(%319, %wdata, %perfCnts_47) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %321 = firrtl.eq %addr, %c2821_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %322 = firrtl.and %7, %321 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %323 = firrtl.mux(%322, %wdata, %perfCnts_5) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %324 = firrtl.eq %addr, %c2850_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %325 = firrtl.and %7, %324 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %326 = firrtl.mux(%325, %wdata, %perfCnts_34) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %327 = firrtl.eq %addr, %c2888_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %328 = firrtl.and %7, %327 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %329 = firrtl.mux(%328, %wdata, %perfCnts_72) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %330 = firrtl.eq %addr, %c2882_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %331 = firrtl.and %7, %330 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %332 = firrtl.mux(%331, %wdata, %perfCnts_66) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %333 = firrtl.eq %addr, %c2831_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %334 = firrtl.and %7, %333 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %335 = firrtl.mux(%334, %wdata, %perfCnts_15) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %336 = firrtl.eq %addr, %c2920_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %337 = firrtl.and %7, %336 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %338 = firrtl.mux(%337, %wdata, %perfCnts_104) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %339 = firrtl.eq %addr, %c2903_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %340 = firrtl.and %7, %339 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %341 = firrtl.mux(%340, %wdata, %perfCnts_87) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %342 = firrtl.eq %addr, %c2838_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %343 = firrtl.and %7, %342 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %344 = firrtl.mux(%343, %wdata, %perfCnts_22) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %345 = firrtl.eq %addr, %c2843_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %346 = firrtl.and %7, %345 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %347 = firrtl.mux(%346, %wdata, %perfCnts_27) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %348 = firrtl.eq %addr, %c2860_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %349 = firrtl.and %7, %348 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %350 = firrtl.mux(%349, %wdata, %perfCnts_44) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %351 = firrtl.eq %addr, %c2939_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %352 = firrtl.and %7, %351 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %353 = firrtl.mux(%352, %wdata, %perfCnts_123) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %354 = firrtl.eq %addr, %c2892_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %355 = firrtl.and %7, %354 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %356 = firrtl.mux(%355, %wdata, %perfCnts_76) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %357 = firrtl.eq %addr, %c2848_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %358 = firrtl.and %7, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %359 = firrtl.mux(%358, %wdata, %perfCnts_32) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %360 = firrtl.eq %addr, %c2924_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %361 = firrtl.and %7, %360 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %362 = firrtl.mux(%361, %wdata, %perfCnts_108) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %363 = firrtl.eq %addr, %c2818_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %364 = firrtl.and %7, %363 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %365 = firrtl.mux(%364, %wdata, %perfCnts_2) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %366 = firrtl.eq %addr, %c2919_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %367 = firrtl.and %7, %366 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %368 = firrtl.mux(%367, %wdata, %perfCnts_103) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %369 = firrtl.eq %addr, %c2865_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %370 = firrtl.and %7, %369 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %371 = firrtl.mux(%370, %wdata, %perfCnts_49) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %372 = firrtl.eq %addr, %c2875_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %373 = firrtl.and %7, %372 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %374 = firrtl.mux(%373, %wdata, %perfCnts_59) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %375 = firrtl.eq %addr, %c931_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %376 = firrtl.and %7, %375 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %377 = firrtl.mux(%376, %wdata, %pmpcfg3) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpcfg3, %377 : !firrtl.uint<64>
      %378 = firrtl.eq %addr, %c2885_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %379 = firrtl.and %7, %378 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %380 = firrtl.mux(%379, %wdata, %perfCnts_69) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %381 = firrtl.eq %addr, %c2870_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %382 = firrtl.and %7, %381 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %383 = firrtl.mux(%382, %wdata, %perfCnts_54) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %384 = firrtl.eq %addr, %c2828_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %385 = firrtl.and %7, %384 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %386 = firrtl.mux(%385, %wdata, %perfCnts_12) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %387 = firrtl.eq %addr, %c771_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %388 = firrtl.and %7, %387 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mideleg_T = firrtl.and %wdata, %c546_ui64 {name = "_mideleg_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mideleg_T_2 = firrtl.and %mideleg, %c18446744073709551069_ui64 {name = "_mideleg_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mideleg_T_3 = firrtl.or %_mideleg_T, %_mideleg_T_2 {name = "_mideleg_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %389 = firrtl.mux(%388, %_mideleg_T_3, %mideleg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mideleg, %389 : !firrtl.uint<64>
      %390 = firrtl.eq %addr, %c2907_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %391 = firrtl.and %7, %390 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %392 = firrtl.mux(%391, %wdata, %perfCnts_91) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %393 = firrtl.eq %addr, %c2855_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %394 = firrtl.and %7, %393 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %395 = firrtl.mux(%394, %wdata, %perfCnts_39) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %396 = firrtl.eq %addr, %c2853_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %397 = firrtl.and %7, %396 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %398 = firrtl.mux(%397, %wdata, %perfCnts_37) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %399 = firrtl.eq %addr, %c946_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %400 = firrtl.and %7, %399 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_pmpaddr2_T = firrtl.and %wdata, %c1073741823_ui64 {name = "_pmpaddr2_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr2_T_2 = firrtl.and %pmpaddr2, %c18446744072635809792_ui64 {name = "_pmpaddr2_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_pmpaddr2_T_3 = firrtl.or %_pmpaddr2_T, %_pmpaddr2_T_2 {name = "_pmpaddr2_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %401 = firrtl.mux(%400, %_pmpaddr2_T_3, %pmpaddr2) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpaddr2, %401 : !firrtl.uint<64>
      %402 = firrtl.eq %addr, %c2823_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %403 = firrtl.and %7, %402 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %404 = firrtl.mux(%403, %wdata, %perfCnts_7) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %405 = firrtl.eq %addr, %c2934_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %406 = firrtl.and %7, %405 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %407 = firrtl.mux(%406, %wdata, %perfCnts_118) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %408 = firrtl.eq %addr, %c2912_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %409 = firrtl.and %7, %408 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %410 = firrtl.mux(%409, %wdata, %perfCnts_96) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %411 = firrtl.eq %addr, %c929_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %412 = firrtl.and %7, %411 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %413 = firrtl.mux(%412, %wdata, %pmpcfg1) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpcfg1, %413 : !firrtl.uint<64>
      %414 = firrtl.eq %addr, %c2902_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %415 = firrtl.and %7, %414 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %416 = firrtl.mux(%415, %wdata, %perfCnts_86) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %417 = firrtl.eq %addr, %c832_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %418 = firrtl.and %7, %417 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %419 = firrtl.mux(%418, %wdata, %mscratch) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mscratch, %419 : !firrtl.uint<64>
      %420 = firrtl.eq %addr, %c2930_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %421 = firrtl.and %7, %420 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %422 = firrtl.mux(%421, %wdata, %perfCnts_114) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %423 = firrtl.eq %addr, %c833_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %424 = firrtl.and %7, %423 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %425 = firrtl.mux(%424, %wdata, %mepc) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %426 = firrtl.eq %addr, %c835_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %427 = firrtl.and %7, %426 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %428 = firrtl.mux(%427, %wdata, %mtval) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %429 = firrtl.eq %addr, %c262_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %430 = firrtl.and %7, %429 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %431 = firrtl.mux(%430, %wdata, %scounteren) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %scounteren, %431 : !firrtl.uint<64>
      %432 = firrtl.eq %addr, %c2913_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %433 = firrtl.and %7, %432 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %434 = firrtl.mux(%433, %wdata, %perfCnts_97) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %435 = firrtl.eq %addr, %c928_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %436 = firrtl.and %7, %435 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %437 = firrtl.mux(%436, %wdata, %pmpcfg0) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %pmpcfg0, %437 : !firrtl.uint<64>
      %438 = firrtl.eq %addr, %c2847_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %439 = firrtl.and %7, %438 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %440 = firrtl.mux(%439, %wdata, %perfCnts_31) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %441 = firrtl.eq %addr, %c2898_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %442 = firrtl.and %7, %441 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %443 = firrtl.mux(%442, %wdata, %perfCnts_82) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %444 = firrtl.eq %addr, %c2864_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %445 = firrtl.and %7, %444 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %446 = firrtl.mux(%445, %wdata, %perfCnts_48) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %447 = firrtl.eq %addr, %c322_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %448 = firrtl.and %7, %447 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %449 = firrtl.mux(%448, %wdata, %scause) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %450 = firrtl.eq %addr, %c2879_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %451 = firrtl.and %7, %450 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %452 = firrtl.mux(%451, %wdata, %perfCnts_63) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %453 = firrtl.eq %addr, %c2881_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %454 = firrtl.and %7, %453 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %455 = firrtl.mux(%454, %wdata, %perfCnts_65) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %456 = firrtl.eq %addr, %c2887_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %457 = firrtl.and %7, %456 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %458 = firrtl.mux(%457, %wdata, %perfCnts_71) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %459 = firrtl.eq %addr, %c2834_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %460 = firrtl.and %7, %459 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %461 = firrtl.mux(%460, %wdata, %perfCnts_18) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %462 = firrtl.eq %addr, %c2866_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %463 = firrtl.and %7, %462 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %464 = firrtl.mux(%463, %wdata, %perfCnts_50) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %465 = firrtl.eq %addr, %c2832_ui12 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %466 = firrtl.and %7, %465 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %467 = firrtl.mux(%466, %wdata, %perfCnts_16) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %isIllegalAddr = firrtl.wire : !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_1 = firrtl.not %_isIllegalAddr_illegalAddr_T {name = "_isIllegalAddr_illegalAddr_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %468 = firrtl.or %_isIllegalAddr_illegalAddr_T_4, %_isIllegalAddr_illegalAddr_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %469 = firrtl.or %_isIllegalAddr_illegalAddr_T_6, %468 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %470 = firrtl.or %_isIllegalAddr_illegalAddr_T_8, %469 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %471 = firrtl.or %_isIllegalAddr_illegalAddr_T_10, %470 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %472 = firrtl.or %_isIllegalAddr_illegalAddr_T_12, %471 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %473 = firrtl.or %_isIllegalAddr_illegalAddr_T_14, %472 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %474 = firrtl.or %_isIllegalAddr_illegalAddr_T_16, %473 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %475 = firrtl.or %_isIllegalAddr_illegalAddr_T_18, %474 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %476 = firrtl.or %_isIllegalAddr_illegalAddr_T_20, %475 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %477 = firrtl.or %_isIllegalAddr_illegalAddr_T_22, %476 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %478 = firrtl.or %_isIllegalAddr_illegalAddr_T_24, %477 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %479 = firrtl.or %_isIllegalAddr_illegalAddr_T_26, %478 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %480 = firrtl.or %_isIllegalAddr_illegalAddr_T_28, %479 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %481 = firrtl.or %_isIllegalAddr_illegalAddr_T_30, %480 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %482 = firrtl.or %_isIllegalAddr_illegalAddr_T_32, %481 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %483 = firrtl.or %_isIllegalAddr_illegalAddr_T_34, %482 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %484 = firrtl.or %_isIllegalAddr_illegalAddr_T_36, %483 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %485 = firrtl.or %_isIllegalAddr_illegalAddr_T_38, %484 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %486 = firrtl.or %_isIllegalAddr_illegalAddr_T_40, %485 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %487 = firrtl.or %_isIllegalAddr_illegalAddr_T_42, %486 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %488 = firrtl.or %_isIllegalAddr_illegalAddr_T_44, %487 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %489 = firrtl.or %_isIllegalAddr_illegalAddr_T_46, %488 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %490 = firrtl.or %_isIllegalAddr_illegalAddr_T_48, %489 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %491 = firrtl.or %_isIllegalAddr_illegalAddr_T_50, %490 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %492 = firrtl.or %_isIllegalAddr_illegalAddr_T_52, %491 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %493 = firrtl.or %_isIllegalAddr_illegalAddr_T_54, %492 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %494 = firrtl.or %_isIllegalAddr_illegalAddr_T_56, %493 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %495 = firrtl.or %_isIllegalAddr_illegalAddr_T_58, %494 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %496 = firrtl.or %_isIllegalAddr_illegalAddr_T_60, %495 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %497 = firrtl.or %_isIllegalAddr_illegalAddr_T_62, %496 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %498 = firrtl.or %_isIllegalAddr_illegalAddr_T_64, %497 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %499 = firrtl.or %_isIllegalAddr_illegalAddr_T_66, %498 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %500 = firrtl.or %_isIllegalAddr_illegalAddr_T_68, %499 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %501 = firrtl.or %_isIllegalAddr_illegalAddr_T_70, %500 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %502 = firrtl.or %_isIllegalAddr_illegalAddr_T_72, %501 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %503 = firrtl.or %_isIllegalAddr_illegalAddr_T_74, %502 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %504 = firrtl.or %_isIllegalAddr_illegalAddr_T_76, %503 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %505 = firrtl.or %_isIllegalAddr_illegalAddr_T_78, %504 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %506 = firrtl.or %_isIllegalAddr_illegalAddr_T_80, %505 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %507 = firrtl.or %_isIllegalAddr_illegalAddr_T_82, %506 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %508 = firrtl.or %_isIllegalAddr_illegalAddr_T_84, %507 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %509 = firrtl.or %_isIllegalAddr_illegalAddr_T_86, %508 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %510 = firrtl.or %_isIllegalAddr_illegalAddr_T_88, %509 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %511 = firrtl.or %_isIllegalAddr_illegalAddr_T_90, %510 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %512 = firrtl.or %_isIllegalAddr_illegalAddr_T_92, %511 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %513 = firrtl.or %_rdataDummy_T_3, %512 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %514 = firrtl.or %_isIllegalAddr_illegalAddr_T_96, %513 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %515 = firrtl.or %_isIllegalAddr_illegalAddr_T_98, %514 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %516 = firrtl.or %_isIllegalAddr_illegalAddr_T_100, %515 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %517 = firrtl.or %_isIllegalAddr_illegalAddr_T_102, %516 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %518 = firrtl.or %_isIllegalAddr_illegalAddr_T_104, %517 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %519 = firrtl.or %_isIllegalAddr_illegalAddr_T_106, %518 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %520 = firrtl.or %_isIllegalAddr_illegalAddr_T_108, %519 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %521 = firrtl.or %_isIllegalAddr_illegalAddr_T_110, %520 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %522 = firrtl.or %_isIllegalAddr_illegalAddr_T_112, %521 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %523 = firrtl.or %_isIllegalAddr_illegalAddr_T_114, %522 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %524 = firrtl.or %_isIllegalAddr_illegalAddr_T_116, %523 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %525 = firrtl.or %_isIllegalAddr_illegalAddr_T_118, %524 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %526 = firrtl.or %_isIllegalAddr_illegalAddr_T_120, %525 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %527 = firrtl.or %_isIllegalAddr_illegalAddr_T_122, %526 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %528 = firrtl.or %_isIllegalAddr_illegalAddr_T_124, %527 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %529 = firrtl.or %_isIllegalAddr_illegalAddr_T_126, %528 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %530 = firrtl.or %_isIllegalAddr_illegalAddr_T_128, %529 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %531 = firrtl.or %_isIllegalAddr_illegalAddr_T_130, %530 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %532 = firrtl.or %_isIllegalAddr_illegalAddr_T_132, %531 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %533 = firrtl.or %_isIllegalAddr_illegalAddr_T_134, %532 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %534 = firrtl.or %_isIllegalAddr_illegalAddr_T_136, %533 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %535 = firrtl.or %_isIllegalAddr_illegalAddr_T_138, %534 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %536 = firrtl.or %_isIllegalAddr_illegalAddr_T_140, %535 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %537 = firrtl.or %_isIllegalAddr_illegalAddr_T_142, %536 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %538 = firrtl.or %_isIllegalAddr_illegalAddr_T_144, %537 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %539 = firrtl.or %_isIllegalAddr_illegalAddr_T_146, %538 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %540 = firrtl.or %_isIllegalAddr_illegalAddr_T_148, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %541 = firrtl.or %_isIllegalAddr_illegalAddr_T_150, %540 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %542 = firrtl.or %_isIllegalAddr_illegalAddr_T_152, %541 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %543 = firrtl.or %_isIllegalAddr_illegalAddr_T_154, %542 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %544 = firrtl.or %_isIllegalAddr_illegalAddr_T_156, %543 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %545 = firrtl.or %_isIllegalAddr_illegalAddr_T_158, %544 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %546 = firrtl.or %_isIllegalAddr_illegalAddr_T_160, %545 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %547 = firrtl.or %_isIllegalAddr_illegalAddr_T_162, %546 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %548 = firrtl.or %_isIllegalAddr_illegalAddr_T_164, %547 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %549 = firrtl.or %_isIllegalAddr_illegalAddr_T_166, %548 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %550 = firrtl.or %_isIllegalAddr_illegalAddr_T_168, %549 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %551 = firrtl.or %_isIllegalAddr_illegalAddr_T_170, %550 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %552 = firrtl.or %_isIllegalAddr_illegalAddr_T_172, %551 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %553 = firrtl.or %_isIllegalAddr_illegalAddr_T_174, %552 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %554 = firrtl.or %_isIllegalAddr_illegalAddr_T_176, %553 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %555 = firrtl.or %_isIllegalAddr_illegalAddr_T_178, %554 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %556 = firrtl.or %_isIllegalAddr_illegalAddr_T_180, %555 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %557 = firrtl.or %_isIllegalAddr_illegalAddr_T_182, %556 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %558 = firrtl.or %_isIllegalAddr_illegalAddr_T_184, %557 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %559 = firrtl.or %_isIllegalAddr_illegalAddr_T_186, %558 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %560 = firrtl.or %_isIllegalAddr_illegalAddr_T_188, %559 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %561 = firrtl.or %_isIllegalAddr_illegalAddr_T_190, %560 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %562 = firrtl.or %_isIllegalAddr_illegalAddr_T_192, %561 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %563 = firrtl.or %_isIllegalAddr_illegalAddr_T_194, %562 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %564 = firrtl.or %_isIllegalAddr_illegalAddr_T_196, %563 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %565 = firrtl.or %_isIllegalAddr_illegalAddr_T_198, %564 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %566 = firrtl.or %_isIllegalAddr_illegalAddr_T_200, %565 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %567 = firrtl.or %_isIllegalAddr_illegalAddr_T_202, %566 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %568 = firrtl.or %_isIllegalAddr_illegalAddr_T_204, %567 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %569 = firrtl.or %_isIllegalAddr_illegalAddr_T_206, %568 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %570 = firrtl.or %_isIllegalAddr_illegalAddr_T_208, %569 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %571 = firrtl.or %_rdataDummy_T_2, %570 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %572 = firrtl.or %_isIllegalAddr_illegalAddr_T_212, %571 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %573 = firrtl.or %_isIllegalAddr_illegalAddr_T_214, %572 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %574 = firrtl.or %_isIllegalAddr_illegalAddr_T_216, %573 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %575 = firrtl.or %_isIllegalAddr_illegalAddr_T_218, %574 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %576 = firrtl.or %_isIllegalAddr_illegalAddr_T_220, %575 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %577 = firrtl.or %_isIllegalAddr_illegalAddr_T_222, %576 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %578 = firrtl.or %_isIllegalAddr_illegalAddr_T_224, %577 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %579 = firrtl.or %_isIllegalAddr_illegalAddr_T_226, %578 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %580 = firrtl.or %_isIllegalAddr_illegalAddr_T_228, %579 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %581 = firrtl.or %_isIllegalAddr_illegalAddr_T_230, %580 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %582 = firrtl.or %_isIllegalAddr_illegalAddr_T_232, %581 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %583 = firrtl.or %_isIllegalAddr_illegalAddr_T_234, %582 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %584 = firrtl.or %_isIllegalAddr_illegalAddr_T_236, %583 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %585 = firrtl.or %_isIllegalAddr_illegalAddr_T_238, %584 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %586 = firrtl.or %_isIllegalAddr_illegalAddr_T_240, %585 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %587 = firrtl.or %_isIllegalAddr_illegalAddr_T_242, %586 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %588 = firrtl.or %_isIllegalAddr_illegalAddr_T_244, %587 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %589 = firrtl.or %_isIllegalAddr_illegalAddr_T_246, %588 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %590 = firrtl.or %_isIllegalAddr_illegalAddr_T_248, %589 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %591 = firrtl.or %_isIllegalAddr_illegalAddr_T_250, %590 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %592 = firrtl.or %_isIllegalAddr_illegalAddr_T_252, %591 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %593 = firrtl.or %_isIllegalAddr_illegalAddr_T_254, %592 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %594 = firrtl.or %_isIllegalAddr_illegalAddr_T_256, %593 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %595 = firrtl.or %_isIllegalAddr_illegalAddr_T_258, %594 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %596 = firrtl.or %_isIllegalAddr_illegalAddr_T_260, %595 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %597 = firrtl.or %_isIllegalAddr_illegalAddr_T_262, %596 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %598 = firrtl.or %_isIllegalAddr_illegalAddr_T_264, %597 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %599 = firrtl.or %_isIllegalAddr_illegalAddr_T_266, %598 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %600 = firrtl.or %_isIllegalAddr_illegalAddr_T_268, %599 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %601 = firrtl.or %_isIllegalAddr_illegalAddr_T_270, %600 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %602 = firrtl.or %_isIllegalAddr_illegalAddr_T_272, %601 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %603 = firrtl.or %_isIllegalAddr_illegalAddr_T_274, %602 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %604 = firrtl.or %_isIllegalAddr_illegalAddr_T_276, %603 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %605 = firrtl.or %_isIllegalAddr_illegalAddr_T_278, %604 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %606 = firrtl.or %_isIllegalAddr_illegalAddr_T_280, %605 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %607 = firrtl.or %_isIllegalAddr_illegalAddr_T_282, %606 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %608 = firrtl.or %_isIllegalAddr_illegalAddr_T_284, %607 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %609 = firrtl.or %_isIllegalAddr_illegalAddr_T_286, %608 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %610 = firrtl.or %_isIllegalAddr_illegalAddr_T_288, %609 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %611 = firrtl.or %_isIllegalAddr_illegalAddr_T_290, %610 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %612 = firrtl.or %_isIllegalAddr_illegalAddr_T_292, %611 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %613 = firrtl.or %_isIllegalAddr_illegalAddr_T_294, %612 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %614 = firrtl.or %_isIllegalAddr_illegalAddr_T_296, %613 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %615 = firrtl.or %_isIllegalAddr_illegalAddr_T_298, %614 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %616 = firrtl.or %_isIllegalAddr_illegalAddr_T_300, %615 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %617 = firrtl.or %_isIllegalAddr_illegalAddr_T_302, %616 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %618 = firrtl.or %_isIllegalAddr_illegalAddr_T_304, %617 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %619 = firrtl.or %_isIllegalAddr_illegalAddr_T_306, %618 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %620 = firrtl.or %_isIllegalAddr_illegalAddr_T_308, %619 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %621 = firrtl.or %_isIllegalAddr_illegalAddr_T_310, %620 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %622 = firrtl.or %_isIllegalAddr_illegalAddr_T_312, %621 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %623 = firrtl.or %_isIllegalAddr_illegalAddr_T_314, %622 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %624 = firrtl.or %_isIllegalAddr_illegalAddr_T_316, %623 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %625 = firrtl.or %_isIllegalAddr_illegalAddr_T_318, %624 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %626 = firrtl.or %_isIllegalAddr_illegalAddr_T_320, %625 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %627 = firrtl.or %_isIllegalAddr_illegalAddr_T_322, %626 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isIllegalAddr_illegalAddr_T_323 = firrtl.mux(%627, %c0_ui1, %_isIllegalAddr_illegalAddr_T_1) {name = "_isIllegalAddr_illegalAddr_T_323"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %isIllegalAddr, %_isIllegalAddr_illegalAddr_T_323 : !firrtl.uint<1>
      %resetSatp = firrtl.and %_resetSatp_T, %_wen_T_4 {name = "resetSatp"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_0, %rdata : !firrtl.uint<64>
      %628 = firrtl.and %_wen_T_4, %6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %629 = firrtl.eq %addr, %c836_ui10 : (!firrtl.uint<12>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %630 = firrtl.and %628, %629 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mipReg_T = firrtl.and %wdata, %c1919_ui64 {name = "_mipReg_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mipReg_T_2 = firrtl.and %mipReg, %c18446744073709549696_ui64 {name = "_mipReg_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mipReg_T_3 = firrtl.or %_mipReg_T, %_mipReg_T_2 {name = "_mipReg_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %631 = firrtl.mux(%630, %_mipReg_T_3, %mipReg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %632 = firrtl.eq %addr, %c324_ui9 : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %633 = firrtl.and %628, %632 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mipReg_T_4 = firrtl.and %wdata, %sieMask {name = "_mipReg_T_4"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mipReg_T_5 = firrtl.not %sieMask {name = "_mipReg_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_mipReg_T_6 = firrtl.and %mipReg, %_mipReg_T_5 {name = "_mipReg_T_6"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mipReg_T_7 = firrtl.or %_mipReg_T_4, %_mipReg_T_6 {name = "_mipReg_T_7"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %634 = firrtl.mux(%633, %_mipReg_T_7, %631) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mipReg, %634 : !firrtl.uint<64>
      %_isEbreak_T = firrtl.eq %addr, %c1_ui1 {name = "_isEbreak_T"} : (!firrtl.uint<12>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %635 = firrtl.orr %io_in_bits_func : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_io_redirect_valid_T = firrtl.not %635 {name = "_io_redirect_valid_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_isEbreak_T_2 = firrtl.and %_isEbreak_T, %_io_redirect_valid_T {name = "_isEbreak_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %636 = firrtl.orr %addr : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %_isEcall_T = firrtl.not %636 {name = "_isEcall_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_isEcall_T_2 = firrtl.and %_isEcall_T, %_io_redirect_valid_T {name = "_isEcall_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isMret_T_2 = firrtl.and %_isMret_T, %_io_redirect_valid_T {name = "_isMret_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isSret_T = firrtl.eq %addr, %c258_ui9 {name = "_isSret_T"} : (!firrtl.uint<12>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %_isSret_T_2 = firrtl.and %_isSret_T, %_io_redirect_valid_T {name = "_isSret_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isUret_T = firrtl.eq %addr, %c2_ui2 {name = "_isUret_T"} : (!firrtl.uint<12>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_isUret_T_2 = firrtl.and %_isUret_T, %_io_redirect_valid_T {name = "_isUret_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %637 = firrtl.and %_wen_T_4, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %638 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %639 = firrtl.and %637, %638 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %639, "[%d] CSR: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %640 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %641 = firrtl.and %637, %640 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %641, "csr write: pc %x addr %x rdata %x wdata %x func %x\0A" {name = "printf_1"} (%io_cfIn_pc, %addr, %rdata, %wdata, %io_in_bits_func) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<12>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<7>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10371 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %642 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %643 = firrtl.and %637, %642 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %643, "[%d] CSR: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %644 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %645 = firrtl.and %637, %644 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %645, "[MST] time %d pc %x mstatus %x mideleg %x medeleg %x mode %x\0A" {name = "printf_3"} (%c, %io_cfIn_pc, %mstatus, %mideleg, %medeleg, %priviledgeMode) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<39>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<2>
      firrtl.strictconnect %io_imemMMU_priviledgeMode_4, %priviledgeMode : !firrtl.uint<2>
      %_io_dmemMMU_priviledgeMode_T_1 = firrtl.mux(%mstatusStruct_mprv, %mstatusStruct_mpp, %priviledgeMode) {name = "_io_dmemMMU_priviledgeMode_T_1"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %io_dmemMMU_priviledgeMode_5, %_io_dmemMMU_priviledgeMode_T_1 : !firrtl.uint<2>
      firrtl.strictconnect %io_dmemMMU_status_sum_6, %mstatusStruct_sum : !firrtl.uint<1>
      firrtl.strictconnect %io_dmemMMU_status_mxr_7, %mstatusStruct_mxr : !firrtl.uint<1>
      %hasInstrPageFault = firrtl.wire : !firrtl.uint<1>
      %dmemAddrMisalignedAddr = firrtl.wire : !firrtl.uint<39>
      %_hasInstrPageFault_T = firrtl.and %io_cfIn_exceptionVec_12, %io_in_valid {name = "_hasInstrPageFault_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %hasInstrPageFault, %_hasInstrPageFault_T : !firrtl.uint<1>
      %646 = firrtl.bits %lsuAddr__bore 38 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<39>
      firrtl.strictconnect %dmemAddrMisalignedAddr, %646 : !firrtl.uint<39>
      %_tvalWen_T = firrtl.or %hasInstrPageFault, %io_dmemMMU_loadPF {name = "_tvalWen_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %647 = firrtl.or %_tvalWen_T, %io_dmemMMU_storePF : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tval_T = firrtl.add %io_cfIn_pc, %c2_ui2 {name = "_tval_T"} : (!firrtl.uint<39>, !firrtl.uint<2>) -> !firrtl.uint<40>
      %_tval_T_2 = firrtl.bits %_tval_T 38 to 0 {name = "_tval_T_2"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %tval_signBit = firrtl.bits %_tval_T 38 to 38 {name = "tval_signBit"} : (!firrtl.uint<40>) -> !firrtl.uint<1>
      %_tval_T_3 = firrtl.mux(%tval_signBit, %c33554431_ui25, %c0_ui25) {name = "_tval_T_3"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_tval_T_4 = firrtl.cat %_tval_T_3, %_tval_T_2 {name = "_tval_T_4"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %tval_signBit_1 = firrtl.bits %io_cfIn_pc 38 to 38 {name = "tval_signBit_1"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_tval_T_6 = firrtl.mux(%tval_signBit_1, %c33554431_ui25, %c0_ui25) {name = "_tval_T_6"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_tval_T_7 = firrtl.cat %_tval_T_6, %io_cfIn_pc {name = "_tval_T_7"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %_tval_T_8 = firrtl.mux(%io_cfIn_crossPageIPFFix, %_tval_T_4, %_tval_T_7) {name = "_tval_T_8"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %signBit = firrtl.bits %io_dmemMMU_addr 38 to 38 {name = "signBit"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_tval_T_9 = firrtl.mux(%signBit, %c33554431_ui25, %c0_ui25) {name = "_tval_T_9"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_tval_T_10 = firrtl.cat %_tval_T_9, %io_dmemMMU_addr {name = "_tval_T_10"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %tval = firrtl.mux(%hasInstrPageFault, %_tval_T_8, %_tval_T_10) {name = "tval"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %648 = firrtl.andr %priviledgeMode : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %649 = firrtl.and %647, %648 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %650 = firrtl.mux(%649, %tval, %428) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %651 = firrtl.mux(%648, %263, %tval) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %652 = firrtl.mux(%647, %651, %263) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %c_1 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10435 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T_2 = firrtl.add %c_1, %c1_ui1 {name = "_c_T_2"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_3 = firrtl.bits %_c_T_2 63 to 0 {name = "_c_T_3"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c_1, %_c_T_3 : !firrtl.uint<64>
      %653 = firrtl.mux(%signBit, %c33554431_ui25, %c0_ui25) : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %654 = firrtl.cat %653, %io_dmemMMU_addr : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %655 = firrtl.and %647, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %656 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %657 = firrtl.and %655, %656 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %657, "[%d] CSR: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %658 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %659 = firrtl.and %655, %658 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %659, "[PF] %d: ipf %b tval %x := addr %x pc %x priviledgeMode %x\0A" {name = "printf_5"} (%c_1, %hasInstrPageFault, %tval, %654, %io_cfIn_pc, %priviledgeMode) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<39>, !firrtl.uint<2>
      %660 = firrtl.or %io_cfIn_exceptionVec_4, %io_cfIn_exceptionVec_6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %signBit_1 = firrtl.bits %dmemAddrMisalignedAddr 38 to 38 {name = "signBit_1"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_mtval_T_4 = firrtl.mux(%signBit_1, %c33554431_ui25, %c0_ui25) {name = "_mtval_T_4"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_mtval_T_5 = firrtl.cat %_mtval_T_4, %dmemAddrMisalignedAddr {name = "_mtval_T_5"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %661 = firrtl.mux(%660, %_mtval_T_5, %650) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %c_2 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10499 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T_4 = firrtl.add %c_2, %c1_ui1 {name = "_c_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_5 = firrtl.bits %_c_T_4 63 to 0 {name = "_c_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c_2, %_c_T_5 : !firrtl.uint<64>
      %662 = firrtl.mux(%signBit_1, %c33554431_ui25, %c0_ui25) : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %663 = firrtl.cat %662, %dmemAddrMisalignedAddr : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %664 = firrtl.and %660, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %665 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %666 = firrtl.and %664, %665 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %666, "[%d] CSR: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %667 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %668 = firrtl.and %664, %667 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %668, "[ML] %d: addr %x pc %x priviledgeMode %x\0A" {name = "printf_7"} (%c_2, %663, %io_cfIn_pc, %priviledgeMode) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<39>, !firrtl.uint<2>
      %mipRaiseIntr_e_m = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_e_h = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_e_s = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_e_u = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_t_m = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_t_h = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_t_s = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_t_u = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_s_m = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_s_h = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_s_s = firrtl.wire : !firrtl.uint<1>
      %mipRaiseIntr_s_u = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_e_m, %mip_e_m : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_e_h, %mip_e_h : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_e_u, %mip_e_u : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_t_m, %mip_t_m : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_t_h, %mip_t_h : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_t_s, %mip_t_s : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_t_u, %mip_t_u : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_s_m, %mip_s_m : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_s_h, %mip_s_h : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_s_s, %mip_s_s : !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_s_u, %mip_s_u : !firrtl.uint<1>
      %_mipRaiseIntr_e_s_T = firrtl.or %mip_e_s, %meip__bore {name = "_mipRaiseIntr_e_s_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mipRaiseIntr_e_s, %_mipRaiseIntr_e_s_T : !firrtl.uint<1>
      %ideleg_lo = firrtl.cat %mipRaiseIntr_s_s, %mipRaiseIntr_s_u {name = "ideleg_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %ideleg_hi = firrtl.cat %mipRaiseIntr_s_m, %mipRaiseIntr_s_h {name = "ideleg_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_ideleg_T = firrtl.cat %ideleg_hi, %ideleg_lo {name = "_ideleg_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %ideleg_lo_1 = firrtl.cat %mipRaiseIntr_t_s, %mipRaiseIntr_t_u {name = "ideleg_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %ideleg_hi_1 = firrtl.cat %mipRaiseIntr_t_m, %mipRaiseIntr_t_h {name = "ideleg_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_ideleg_T_1 = firrtl.cat %ideleg_hi_1, %ideleg_lo_1 {name = "_ideleg_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %ideleg_lo_2 = firrtl.cat %mipRaiseIntr_e_s, %mipRaiseIntr_e_u {name = "ideleg_lo_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %ideleg_hi_2 = firrtl.cat %mipRaiseIntr_e_m, %mipRaiseIntr_e_h {name = "ideleg_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_ideleg_T_2 = firrtl.cat %ideleg_hi_2, %ideleg_lo_2 {name = "_ideleg_T_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %ideleg_hi_3 = firrtl.cat %_ideleg_T_2, %_ideleg_T_1 {name = "ideleg_hi_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_ideleg_T_3 = firrtl.cat %ideleg_hi_3, %_ideleg_T {name = "_ideleg_T_3"} : (!firrtl.uint<8>, !firrtl.uint<4>) -> !firrtl.uint<12>
      %669 = firrtl.bits %mideleg 11 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<12>
      %670 = firrtl.and %669, %_ideleg_T_3 : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      %ideleg = firrtl.pad %670, 64 {name = "ideleg"} : (!firrtl.uint<12>) -> !firrtl.uint<64>
      %intrVecEnable_0 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_1 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_2 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_3 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_4 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_5 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_6 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_7 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_8 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_9 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_10 = firrtl.wire : !firrtl.uint<1>
      %intrVecEnable_11 = firrtl.wire : !firrtl.uint<1>
      %671 = firrtl.bits %ideleg 0 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %672 = firrtl.bits %ideleg 1 to 1 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %673 = firrtl.bits %ideleg 2 to 2 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %674 = firrtl.bits %ideleg 3 to 3 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %675 = firrtl.bits %ideleg 4 to 4 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %676 = firrtl.bits %ideleg 5 to 5 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %677 = firrtl.bits %ideleg 6 to 6 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %678 = firrtl.bits %ideleg 7 to 7 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %679 = firrtl.bits %ideleg 8 to 8 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %680 = firrtl.bits %ideleg 9 to 9 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %681 = firrtl.bits %ideleg 10 to 10 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %682 = firrtl.bits %ideleg 11 to 11 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_csrExceptionVec_9_T = firrtl.eq %priviledgeMode, %c1_ui1 {name = "_csrExceptionVec_9_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_0_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_0_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_11_T_2 = firrtl.lt %priviledgeMode, %c1_ui1 {name = "_intrVecEnable_11_T_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_0_T_3 = firrtl.or %_intrVecEnable_0_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_0_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_csrExceptionVec_11_T = firrtl.andr %priviledgeMode {name = "_csrExceptionVec_11_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_intrVecEnable_0_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_0_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_delegS_T_3 = firrtl.lt %priviledgeMode, %c3_ui2 {name = "_delegS_T_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_intrVecEnable_0_T_7 = firrtl.or %_intrVecEnable_0_T_5, %_delegS_T_3 {name = "_intrVecEnable_0_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_0_T_8 = firrtl.mux(%671, %_intrVecEnable_0_T_3, %_intrVecEnable_0_T_7) {name = "_intrVecEnable_0_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_0, %_intrVecEnable_0_T_8 : !firrtl.uint<1>
      %_intrVecEnable_1_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_1_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_1_T_3 = firrtl.or %_intrVecEnable_1_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_1_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_1_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_1_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_1_T_7 = firrtl.or %_intrVecEnable_1_T_5, %_delegS_T_3 {name = "_intrVecEnable_1_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_1_T_8 = firrtl.mux(%672, %_intrVecEnable_1_T_3, %_intrVecEnable_1_T_7) {name = "_intrVecEnable_1_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_1, %_intrVecEnable_1_T_8 : !firrtl.uint<1>
      %_intrVecEnable_2_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_2_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_2_T_3 = firrtl.or %_intrVecEnable_2_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_2_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_2_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_2_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_2_T_7 = firrtl.or %_intrVecEnable_2_T_5, %_delegS_T_3 {name = "_intrVecEnable_2_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_2_T_8 = firrtl.mux(%673, %_intrVecEnable_2_T_3, %_intrVecEnable_2_T_7) {name = "_intrVecEnable_2_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_2, %_intrVecEnable_2_T_8 : !firrtl.uint<1>
      %_intrVecEnable_3_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_3_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_3_T_3 = firrtl.or %_intrVecEnable_3_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_3_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_3_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_3_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_3_T_7 = firrtl.or %_intrVecEnable_3_T_5, %_delegS_T_3 {name = "_intrVecEnable_3_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_3_T_8 = firrtl.mux(%674, %_intrVecEnable_3_T_3, %_intrVecEnable_3_T_7) {name = "_intrVecEnable_3_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_3, %_intrVecEnable_3_T_8 : !firrtl.uint<1>
      %_intrVecEnable_4_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_4_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_4_T_3 = firrtl.or %_intrVecEnable_4_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_4_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_4_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_4_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_4_T_7 = firrtl.or %_intrVecEnable_4_T_5, %_delegS_T_3 {name = "_intrVecEnable_4_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_4_T_8 = firrtl.mux(%675, %_intrVecEnable_4_T_3, %_intrVecEnable_4_T_7) {name = "_intrVecEnable_4_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_4, %_intrVecEnable_4_T_8 : !firrtl.uint<1>
      %_intrVecEnable_5_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_5_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_5_T_3 = firrtl.or %_intrVecEnable_5_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_5_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_5_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_5_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_5_T_7 = firrtl.or %_intrVecEnable_5_T_5, %_delegS_T_3 {name = "_intrVecEnable_5_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_5_T_8 = firrtl.mux(%676, %_intrVecEnable_5_T_3, %_intrVecEnable_5_T_7) {name = "_intrVecEnable_5_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_5, %_intrVecEnable_5_T_8 : !firrtl.uint<1>
      %_intrVecEnable_6_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_6_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_6_T_3 = firrtl.or %_intrVecEnable_6_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_6_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_6_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_6_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_6_T_7 = firrtl.or %_intrVecEnable_6_T_5, %_delegS_T_3 {name = "_intrVecEnable_6_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_6_T_8 = firrtl.mux(%677, %_intrVecEnable_6_T_3, %_intrVecEnable_6_T_7) {name = "_intrVecEnable_6_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_6, %_intrVecEnable_6_T_8 : !firrtl.uint<1>
      %_intrVecEnable_7_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_7_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_7_T_3 = firrtl.or %_intrVecEnable_7_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_7_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_7_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_7_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_7_T_7 = firrtl.or %_intrVecEnable_7_T_5, %_delegS_T_3 {name = "_intrVecEnable_7_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_7_T_8 = firrtl.mux(%678, %_intrVecEnable_7_T_3, %_intrVecEnable_7_T_7) {name = "_intrVecEnable_7_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_7, %_intrVecEnable_7_T_8 : !firrtl.uint<1>
      %_intrVecEnable_8_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_8_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_8_T_3 = firrtl.or %_intrVecEnable_8_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_8_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_8_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_8_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_8_T_7 = firrtl.or %_intrVecEnable_8_T_5, %_delegS_T_3 {name = "_intrVecEnable_8_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_8_T_8 = firrtl.mux(%679, %_intrVecEnable_8_T_3, %_intrVecEnable_8_T_7) {name = "_intrVecEnable_8_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_8, %_intrVecEnable_8_T_8 : !firrtl.uint<1>
      %_intrVecEnable_9_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_9_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_9_T_3 = firrtl.or %_intrVecEnable_9_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_9_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_9_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_9_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_9_T_7 = firrtl.or %_intrVecEnable_9_T_5, %_delegS_T_3 {name = "_intrVecEnable_9_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_9_T_8 = firrtl.mux(%680, %_intrVecEnable_9_T_3, %_intrVecEnable_9_T_7) {name = "_intrVecEnable_9_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_9, %_intrVecEnable_9_T_8 : !firrtl.uint<1>
      %_intrVecEnable_10_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_10_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_10_T_3 = firrtl.or %_intrVecEnable_10_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_10_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_10_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_10_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_10_T_7 = firrtl.or %_intrVecEnable_10_T_5, %_delegS_T_3 {name = "_intrVecEnable_10_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_10_T_8 = firrtl.mux(%681, %_intrVecEnable_10_T_3, %_intrVecEnable_10_T_7) {name = "_intrVecEnable_10_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_10, %_intrVecEnable_10_T_8 : !firrtl.uint<1>
      %_intrVecEnable_11_T_1 = firrtl.and %_csrExceptionVec_9_T, %mstatusStruct_ie_s {name = "_intrVecEnable_11_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_11_T_3 = firrtl.or %_intrVecEnable_11_T_1, %_intrVecEnable_11_T_2 {name = "_intrVecEnable_11_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_11_T_5 = firrtl.and %_csrExceptionVec_11_T, %mstatusStruct_ie_m {name = "_intrVecEnable_11_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_11_T_7 = firrtl.or %_intrVecEnable_11_T_5, %_delegS_T_3 {name = "_intrVecEnable_11_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_intrVecEnable_11_T_8 = firrtl.mux(%682, %_intrVecEnable_11_T_3, %_intrVecEnable_11_T_7) {name = "_intrVecEnable_11_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %intrVecEnable_11, %_intrVecEnable_11_T_8 : !firrtl.uint<1>
      %_intrVec_T = firrtl.bits %mie 11 to 0 {name = "_intrVec_T"} : (!firrtl.uint<64>) -> !firrtl.uint<12>
      %_intrVec_T_1 = firrtl.cat %ideleg_hi, %ideleg_lo {name = "_intrVec_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_intrVec_T_2 = firrtl.cat %ideleg_hi_1, %ideleg_lo_1 {name = "_intrVec_T_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_intrVec_T_3 = firrtl.cat %ideleg_hi_2, %ideleg_lo_2 {name = "_intrVec_T_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %intrVec_hi_3 = firrtl.cat %_intrVec_T_3, %_intrVec_T_2 {name = "intrVec_hi_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_intrVec_T_4 = firrtl.cat %intrVec_hi_3, %_intrVec_T_1 {name = "_intrVec_T_4"} : (!firrtl.uint<8>, !firrtl.uint<4>) -> !firrtl.uint<12>
      %_intrVec_T_5 = firrtl.and %_intrVec_T, %_intrVec_T_4 {name = "_intrVec_T_5"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      %intrVec_lo_lo_hi = firrtl.cat %intrVecEnable_2, %intrVecEnable_1 {name = "intrVec_lo_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %intrVec_lo_lo = firrtl.cat %intrVec_lo_lo_hi, %intrVecEnable_0 {name = "intrVec_lo_lo"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %intrVec_lo_hi_hi = firrtl.cat %intrVecEnable_5, %intrVecEnable_4 {name = "intrVec_lo_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %intrVec_lo_hi = firrtl.cat %intrVec_lo_hi_hi, %intrVecEnable_3 {name = "intrVec_lo_hi"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %intrVec_lo_3 = firrtl.cat %intrVec_lo_hi, %intrVec_lo_lo {name = "intrVec_lo_3"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<6>
      %intrVec_hi_lo_hi = firrtl.cat %intrVecEnable_8, %intrVecEnable_7 {name = "intrVec_hi_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %intrVec_hi_lo = firrtl.cat %intrVec_hi_lo_hi, %intrVecEnable_6 {name = "intrVec_hi_lo"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %intrVec_hi_hi_hi = firrtl.cat %intrVecEnable_11, %intrVecEnable_10 {name = "intrVec_hi_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %intrVec_hi_hi = firrtl.cat %intrVec_hi_hi_hi, %intrVecEnable_9 {name = "intrVec_hi_hi"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %intrVec_hi_4 = firrtl.cat %intrVec_hi_hi, %intrVec_hi_lo {name = "intrVec_hi_4"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<6>
      %_intrVec_T_6 = firrtl.cat %intrVec_hi_4, %intrVec_lo_3 {name = "_intrVec_T_6"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<12>
      %intrVec = firrtl.and %_intrVec_T_5, %_intrVec_T_6 {name = "intrVec"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      %683 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<12>
      firrtl.strictconnect %683, %intrVec : !firrtl.uint<12>
      %_intrNO_T = firrtl.mux(%io_cfIn_intrVec_4, %c4_ui3, %c0_ui3) {name = "_intrNO_T"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %684 = firrtl.pad %_intrNO_T, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %_intrNO_T_1 = firrtl.mux(%io_cfIn_intrVec_8, %c8_ui4, %684) {name = "_intrNO_T_1"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_intrNO_T_2 = firrtl.mux(%io_cfIn_intrVec_0, %c0_ui4, %_intrNO_T_1) {name = "_intrNO_T_2"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_intrNO_T_3 = firrtl.mux(%io_cfIn_intrVec_5, %c5_ui4, %_intrNO_T_2) {name = "_intrNO_T_3"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_intrNO_T_4 = firrtl.mux(%io_cfIn_intrVec_9, %c9_ui4, %_intrNO_T_3) {name = "_intrNO_T_4"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_intrNO_T_5 = firrtl.mux(%io_cfIn_intrVec_1, %c1_ui4, %_intrNO_T_4) {name = "_intrNO_T_5"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_intrNO_T_6 = firrtl.mux(%io_cfIn_intrVec_7, %c7_ui4, %_intrNO_T_5) {name = "_intrNO_T_6"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_intrNO_T_7 = firrtl.mux(%io_cfIn_intrVec_11, %c11_ui4, %_intrNO_T_6) {name = "_intrNO_T_7"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %intrNO = firrtl.mux(%io_cfIn_intrVec_3, %c3_ui4, %_intrNO_T_7) {name = "intrNO"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %lo_lo_hi_2 = firrtl.cat %io_cfIn_intrVec_2, %io_cfIn_intrVec_1 {name = "lo_lo_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseIntr_lo_lo = firrtl.cat %lo_lo_hi_2, %io_cfIn_intrVec_0 {name = "raiseIntr_lo_lo"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %lo_hi_hi_2 = firrtl.cat %io_cfIn_intrVec_5, %io_cfIn_intrVec_4 {name = "lo_hi_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseIntr_lo_hi = firrtl.cat %lo_hi_hi_2, %io_cfIn_intrVec_3 {name = "raiseIntr_lo_hi"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %raiseIntr_lo = firrtl.cat %raiseIntr_lo_hi, %raiseIntr_lo_lo {name = "raiseIntr_lo"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<6>
      %hi_lo_hi_2 = firrtl.cat %io_cfIn_intrVec_8, %io_cfIn_intrVec_7 {name = "hi_lo_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseIntr_hi_lo = firrtl.cat %hi_lo_hi_2, %io_cfIn_intrVec_6 {name = "raiseIntr_hi_lo"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %hi_hi_hi_2 = firrtl.cat %io_cfIn_intrVec_11, %io_cfIn_intrVec_10 {name = "hi_hi_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseIntr_hi_hi = firrtl.cat %hi_hi_hi_2, %io_cfIn_intrVec_9 {name = "raiseIntr_hi_hi"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %raiseIntr_hi = firrtl.cat %raiseIntr_hi_hi, %raiseIntr_hi_lo {name = "raiseIntr_hi"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<6>
      %_raiseIntr_T = firrtl.cat %raiseIntr_hi, %raiseIntr_lo {name = "_raiseIntr_T"} : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<12>
      %raiseIntr = firrtl.orr %_raiseIntr_T {name = "raiseIntr"} : (!firrtl.uint<12>) -> !firrtl.uint<1>
      %csrExceptionVec_2 = firrtl.wire : !firrtl.uint<1>
      %csrExceptionVec_3 = firrtl.wire : !firrtl.uint<1>
      %csrExceptionVec_8 = firrtl.wire : !firrtl.uint<1>
      %csrExceptionVec_9 = firrtl.wire : !firrtl.uint<1>
      %csrExceptionVec_11 = firrtl.wire : !firrtl.uint<1>
      %_csrExceptionVec_3_T = firrtl.and %io_in_valid, %_isEbreak_T_2 {name = "_csrExceptionVec_3_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %csrExceptionVec_3, %_csrExceptionVec_3_T : !firrtl.uint<1>
      %_csrExceptionVec_11_T_1 = firrtl.and %_csrExceptionVec_11_T, %io_in_valid {name = "_csrExceptionVec_11_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_csrExceptionVec_11_T_2 = firrtl.and %_csrExceptionVec_11_T_1, %_isEcall_T_2 {name = "_csrExceptionVec_11_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %csrExceptionVec_11, %_csrExceptionVec_11_T_2 : !firrtl.uint<1>
      %_csrExceptionVec_9_T_1 = firrtl.and %_csrExceptionVec_9_T, %io_in_valid {name = "_csrExceptionVec_9_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_csrExceptionVec_9_T_2 = firrtl.and %_csrExceptionVec_9_T_1, %_isEcall_T_2 {name = "_csrExceptionVec_9_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %csrExceptionVec_9, %_csrExceptionVec_9_T_2 : !firrtl.uint<1>
      %685 = firrtl.orr %priviledgeMode : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_csrExceptionVec_8_T = firrtl.not %685 {name = "_csrExceptionVec_8_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_csrExceptionVec_8_T_1 = firrtl.and %_csrExceptionVec_8_T, %io_in_valid {name = "_csrExceptionVec_8_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_csrExceptionVec_8_T_2 = firrtl.and %_csrExceptionVec_8_T_1, %_isEcall_T_2 {name = "_csrExceptionVec_8_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %csrExceptionVec_8, %_csrExceptionVec_8_T_2 : !firrtl.uint<1>
      %_csrExceptionVec_2_T = firrtl.or %isIllegalAddr, %isIllegalAccess {name = "_csrExceptionVec_2_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_csrExceptionVec_2_T_1 = firrtl.and %_csrExceptionVec_2_T, %_wen_T_4 {name = "_csrExceptionVec_2_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %csrExceptionVec_2, %_csrExceptionVec_2_T_1 : !firrtl.uint<1>
      %lo_lo_hi = firrtl.cat %csrExceptionVec_3, %csrExceptionVec_2 {name = "lo_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseExceptionVec_lo_lo = firrtl.cat %lo_lo_hi, %c0_ui2 {name = "raiseExceptionVec_lo_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %raiseExceptionVec_lo = firrtl.cat %c0_ui4, %raiseExceptionVec_lo_lo {name = "raiseExceptionVec_lo"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %hi_lo_lo = firrtl.cat %csrExceptionVec_9, %csrExceptionVec_8 {name = "hi_lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_lo_hi = firrtl.cat %csrExceptionVec_11, %c0_ui1 {name = "hi_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseExceptionVec_hi_lo = firrtl.cat %hi_lo_hi, %hi_lo_lo {name = "raiseExceptionVec_hi_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_hi_lo = firrtl.cat %io_dmemMMU_loadPF, %c0_ui1 {name = "hi_hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_hi_hi = firrtl.cat %io_dmemMMU_storePF, %c0_ui1 {name = "hi_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseExceptionVec_hi_hi = firrtl.cat %hi_hi_hi, %hi_hi_lo {name = "raiseExceptionVec_hi_hi"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %raiseExceptionVec_hi = firrtl.cat %raiseExceptionVec_hi_hi, %raiseExceptionVec_hi_lo {name = "raiseExceptionVec_hi"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_raiseExceptionVec_T = firrtl.cat %raiseExceptionVec_hi, %raiseExceptionVec_lo {name = "_raiseExceptionVec_T"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo_lo_lo_1 = firrtl.cat %io_cfIn_exceptionVec_1, %io_cfIn_exceptionVec_0 {name = "lo_lo_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_lo_hi_1 = firrtl.cat %io_cfIn_exceptionVec_3, %io_cfIn_exceptionVec_2 {name = "lo_lo_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseExceptionVec_lo_lo_1 = firrtl.cat %lo_lo_hi_1, %lo_lo_lo_1 {name = "raiseExceptionVec_lo_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %lo_hi_lo_1 = firrtl.cat %io_cfIn_exceptionVec_5, %io_cfIn_exceptionVec_4 {name = "lo_hi_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_hi_hi_1 = firrtl.cat %io_cfIn_exceptionVec_7, %io_cfIn_exceptionVec_6 {name = "lo_hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseExceptionVec_lo_hi_1 = firrtl.cat %lo_hi_hi_1, %lo_hi_lo_1 {name = "raiseExceptionVec_lo_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %raiseExceptionVec_lo_1 = firrtl.cat %raiseExceptionVec_lo_hi_1, %raiseExceptionVec_lo_lo_1 {name = "raiseExceptionVec_lo_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %hi_lo_lo_1 = firrtl.cat %io_cfIn_exceptionVec_9, %io_cfIn_exceptionVec_8 {name = "hi_lo_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_lo_hi_1 = firrtl.cat %io_cfIn_exceptionVec_11, %io_cfIn_exceptionVec_10 {name = "hi_lo_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseExceptionVec_hi_lo_1 = firrtl.cat %hi_lo_hi_1, %hi_lo_lo_1 {name = "raiseExceptionVec_hi_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_hi_lo_1 = firrtl.cat %io_cfIn_exceptionVec_13, %io_cfIn_exceptionVec_12 {name = "hi_hi_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_hi_hi_1 = firrtl.cat %io_cfIn_exceptionVec_15, %io_cfIn_exceptionVec_14 {name = "hi_hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %raiseExceptionVec_hi_hi_1 = firrtl.cat %hi_hi_hi_1, %hi_hi_lo_1 {name = "raiseExceptionVec_hi_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %raiseExceptionVec_hi_1 = firrtl.cat %raiseExceptionVec_hi_hi_1, %raiseExceptionVec_hi_lo_1 {name = "raiseExceptionVec_hi_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_raiseExceptionVec_T_1 = firrtl.cat %raiseExceptionVec_hi_1, %raiseExceptionVec_lo_1 {name = "_raiseExceptionVec_T_1"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %raiseExceptionVec = firrtl.or %_raiseExceptionVec_T, %_raiseExceptionVec_T_1 {name = "raiseExceptionVec"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %raiseException = firrtl.orr %raiseExceptionVec {name = "raiseException"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T = firrtl.bits %raiseExceptionVec 5 to 5 {name = "_exceptionNO_T"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_1 = firrtl.mux(%_exceptionNO_T, %c5_ui3, %c0_ui3) {name = "_exceptionNO_T_1"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_exceptionNO_T_2 = firrtl.bits %raiseExceptionVec 7 to 7 {name = "_exceptionNO_T_2"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_3 = firrtl.mux(%_exceptionNO_T_2, %c7_ui3, %_exceptionNO_T_1) {name = "_exceptionNO_T_3"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_exceptionNO_T_4 = firrtl.bits %raiseExceptionVec 13 to 13 {name = "_exceptionNO_T_4"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %686 = firrtl.pad %_exceptionNO_T_3, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %_exceptionNO_T_5 = firrtl.mux(%_exceptionNO_T_4, %c13_ui4, %686) {name = "_exceptionNO_T_5"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_6 = firrtl.bits %raiseExceptionVec 15 to 15 {name = "_exceptionNO_T_6"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_7 = firrtl.mux(%_exceptionNO_T_6, %c15_ui4, %_exceptionNO_T_5) {name = "_exceptionNO_T_7"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_8 = firrtl.bits %raiseExceptionVec 4 to 4 {name = "_exceptionNO_T_8"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_9 = firrtl.mux(%_exceptionNO_T_8, %c4_ui4, %_exceptionNO_T_7) {name = "_exceptionNO_T_9"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_10 = firrtl.bits %raiseExceptionVec 6 to 6 {name = "_exceptionNO_T_10"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_11 = firrtl.mux(%_exceptionNO_T_10, %c6_ui4, %_exceptionNO_T_9) {name = "_exceptionNO_T_11"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_12 = firrtl.bits %raiseExceptionVec 8 to 8 {name = "_exceptionNO_T_12"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_13 = firrtl.mux(%_exceptionNO_T_12, %c8_ui4, %_exceptionNO_T_11) {name = "_exceptionNO_T_13"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_14 = firrtl.bits %raiseExceptionVec 9 to 9 {name = "_exceptionNO_T_14"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_15 = firrtl.mux(%_exceptionNO_T_14, %c9_ui4, %_exceptionNO_T_13) {name = "_exceptionNO_T_15"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_16 = firrtl.bits %raiseExceptionVec 11 to 11 {name = "_exceptionNO_T_16"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_17 = firrtl.mux(%_exceptionNO_T_16, %c11_ui4, %_exceptionNO_T_15) {name = "_exceptionNO_T_17"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_18 = firrtl.bits %raiseExceptionVec 0 to 0 {name = "_exceptionNO_T_18"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_19 = firrtl.mux(%_exceptionNO_T_18, %c0_ui4, %_exceptionNO_T_17) {name = "_exceptionNO_T_19"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_20 = firrtl.bits %raiseExceptionVec 2 to 2 {name = "_exceptionNO_T_20"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_21 = firrtl.mux(%_exceptionNO_T_20, %c2_ui4, %_exceptionNO_T_19) {name = "_exceptionNO_T_21"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_22 = firrtl.bits %raiseExceptionVec 1 to 1 {name = "_exceptionNO_T_22"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_23 = firrtl.mux(%_exceptionNO_T_22, %c1_ui4, %_exceptionNO_T_21) {name = "_exceptionNO_T_23"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_24 = firrtl.bits %raiseExceptionVec 12 to 12 {name = "_exceptionNO_T_24"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_exceptionNO_T_25 = firrtl.mux(%_exceptionNO_T_24, %c12_ui4, %_exceptionNO_T_23) {name = "_exceptionNO_T_25"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_exceptionNO_T_26 = firrtl.bits %raiseExceptionVec 3 to 3 {name = "_exceptionNO_T_26"} : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %exceptionNO = firrtl.mux(%_exceptionNO_T_26, %c3_ui4, %_exceptionNO_T_25) {name = "exceptionNO"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_wenFix_8, %raiseException : !firrtl.uint<1>
      %_causeNO_T = firrtl.shl %raiseIntr, 63 {name = "_causeNO_T"} : (!firrtl.uint<1>) -> !firrtl.uint<64>
      %_causeNO_T_1 = firrtl.mux(%raiseIntr, %intrNO, %exceptionNO) {name = "_causeNO_T_1"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %687 = firrtl.bits %_causeNO_T 63 to 4 : (!firrtl.uint<64>) -> !firrtl.uint<60>
      %688 = firrtl.bits %_causeNO_T 3 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %689 = firrtl.or %688, %_causeNO_T_1 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %causeNO = firrtl.cat %687, %689 {name = "causeNO"} : (!firrtl.uint<60>, !firrtl.uint<4>) -> !firrtl.uint<64>
      %_io_intrNO_T = firrtl.mux(%raiseIntr, %causeNO, %c0_ui64) {name = "_io_intrNO_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_intrNO_3, %_io_intrNO_T : !firrtl.uint<64>
      %_raiseExceptionIntr_T = firrtl.or %raiseException, %raiseIntr {name = "_raiseExceptionIntr_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %raiseExceptionIntr = firrtl.and %_raiseExceptionIntr_T, %io_instrValid {name = "raiseExceptionIntr"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %retTarget = firrtl.wire : !firrtl.uint<39>
      %trapTarget = firrtl.wire : !firrtl.uint<39>
      %_io_redirect_valid_T_1 = firrtl.and %io_in_valid, %_io_redirect_valid_T {name = "_io_redirect_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_redirect_valid_T_2 = firrtl.or %_io_redirect_valid_T_1, %raiseExceptionIntr {name = "_io_redirect_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_redirect_valid_T_3 = firrtl.or %_io_redirect_valid_T_2, %resetSatp {name = "_io_redirect_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_redirect_valid_2, %_io_redirect_valid_T_3 : !firrtl.uint<1>
      %_io_redirect_target_T = firrtl.add %io_cfIn_pc, %c4_ui3 {name = "_io_redirect_target_T"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_io_redirect_target_T_1 = firrtl.bits %_io_redirect_target_T 38 to 0 {name = "_io_redirect_target_T_1"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      %_io_redirect_target_T_2 = firrtl.mux(%raiseExceptionIntr, %trapTarget, %retTarget) {name = "_io_redirect_target_T_2"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_io_redirect_target_T_3 = firrtl.mux(%resetSatp, %_io_redirect_target_T_1, %_io_redirect_target_T_2) {name = "_io_redirect_target_T_3"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_target_1, %_io_redirect_target_T_3 : !firrtl.uint<39>
      %lo_lo = firrtl.cat %lo_lo_hi, %c0_ui2 {name = "lo_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %lo = firrtl.cat %c0_ui4, %lo_lo {name = "lo"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %hi_lo = firrtl.cat %hi_lo_hi, %hi_lo_lo {name = "hi_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_hi = firrtl.cat %hi_hi_hi, %hi_hi_lo {name = "hi_hi"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi = firrtl.cat %hi_hi, %hi_lo {name = "hi"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %690 = firrtl.cat %hi, %lo : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo_lo_1 = firrtl.cat %lo_lo_hi_1, %lo_lo_lo_1 {name = "lo_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %lo_hi_1 = firrtl.cat %lo_hi_hi_1, %lo_hi_lo_1 {name = "lo_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %lo_1 = firrtl.cat %lo_hi_1, %lo_lo_1 {name = "lo_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %hi_lo_1 = firrtl.cat %hi_lo_hi_1, %hi_lo_lo_1 {name = "hi_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_hi_1 = firrtl.cat %hi_hi_hi_1, %hi_hi_lo_1 {name = "hi_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_1 = firrtl.cat %hi_hi_1, %hi_lo_1 {name = "hi_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %691 = firrtl.cat %hi_1, %lo_1 : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %692 = firrtl.and %raiseExceptionIntr, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %693 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %694 = firrtl.and %692, %693 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %694, "[%d] CSR: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %695 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %696 = firrtl.and %692, %695 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %696, "excin %b excgen %b" {name = "printf_9"} (%690, %691) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>
      %lo_lo_2 = firrtl.cat %lo_lo_hi_2, %io_cfIn_intrVec_0 {name = "lo_lo_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %lo_hi_2 = firrtl.cat %lo_hi_hi_2, %io_cfIn_intrVec_3 {name = "lo_hi_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %lo_2 = firrtl.cat %lo_hi_2, %lo_lo_2 {name = "lo_2"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<6>
      %hi_lo_2 = firrtl.cat %hi_lo_hi_2, %io_cfIn_intrVec_6 {name = "hi_lo_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %hi_hi_2 = firrtl.cat %hi_hi_hi_2, %io_cfIn_intrVec_9 {name = "hi_hi_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %hi_2 = firrtl.cat %hi_hi_2, %hi_lo_2 {name = "hi_2"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<6>
      %697 = firrtl.cat %hi_2, %lo_2 : (!firrtl.uint<6>, !firrtl.uint<6>) -> !firrtl.uint<12>
      %698 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %699 = firrtl.and %692, %698 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %699, "[%d] CSR: " {name = "printf_10"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %700 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %701 = firrtl.and %692, %700 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %701, "int/exc: pc %x int (%d):%x exc: (%d):%x\0A" {name = "printf_11"} (%io_cfIn_pc, %intrNO, %697, %exceptionNO, %raiseExceptionVec) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<4>, !firrtl.uint<12>, !firrtl.uint<4>, !firrtl.uint<16>
      %c_3 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 10563 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T_6 = firrtl.add %c_3, %c1_ui1 {name = "_c_T_6"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_7 = firrtl.bits %_c_T_6 63 to 0 {name = "_c_T_7"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c_3, %_c_T_7 : !firrtl.uint<64>
      %702 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %703 = firrtl.and %692, %702 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %703, "[%d] CSR: " {name = "printf_12"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %704 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %705 = firrtl.and %692, %704 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %705, "[MST] time %d pc %x mstatus %x mideleg %x medeleg %x mode %x\0A" {name = "printf_13"} (%c_3, %io_cfIn_pc, %mstatus, %mideleg, %medeleg, %priviledgeMode) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<39>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<2>
      %706 = firrtl.and %io_redirect_valid_2, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %707 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %708 = firrtl.and %706, %707 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %708, "[%d] CSR: " {name = "printf_14"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %709 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %710 = firrtl.and %706, %709 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %710, "redirect to %x\0A" {name = "printf_15"} (%io_redirect_target_1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>
      %711 = firrtl.and %resetSatp, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %712 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %713 = firrtl.and %711, %712 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %713, "[%d] CSR: " {name = "printf_16"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %714 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %715 = firrtl.and %711, %714 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %715, "satp reset\0A" {name = "printf_17"}  : !firrtl.clock, !firrtl.uint<1>
      %deleg = firrtl.mux(%raiseIntr, %mideleg, %medeleg) {name = "deleg"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_delegS_T = firrtl.bits %causeNO 3 to 0 {name = "_delegS_T"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      %_delegS_T_1 = firrtl.dshr %deleg, %_delegS_T {name = "_delegS_T_1"} : (!firrtl.uint<64>, !firrtl.uint<4>) -> !firrtl.uint<64>
      %_delegS_T_2 = firrtl.bits %_delegS_T_1 0 to 0 {name = "_delegS_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %delegS = firrtl.and %_delegS_T_2, %_delegS_T_3 {name = "delegS"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tvalWen_T_1 = firrtl.or %_tvalWen_T, %io_dmemMMU_storePF {name = "_tvalWen_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tvalWen_T_2 = firrtl.or %_tvalWen_T_1, %io_cfIn_exceptionVec_4 {name = "_tvalWen_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tvalWen_T_3 = firrtl.or %_tvalWen_T_2, %io_cfIn_exceptionVec_6 {name = "_tvalWen_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tvalWen_T_4 = firrtl.not %_tvalWen_T_3 {name = "_tvalWen_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %tvalWen = firrtl.or %_tvalWen_T_4, %raiseIntr {name = "tvalWen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_trapTarget_T = firrtl.mux(%delegS, %stvec, %mtvec) {name = "_trapTarget_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_trapTarget_T_1 = firrtl.bits %_trapTarget_T 38 to 0 {name = "_trapTarget_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<39>
      firrtl.strictconnect %trapTarget, %_trapTarget_T_1 : !firrtl.uint<39>
      %716 = firrtl.and %io_in_valid, %_isMret_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mstatusOld_WIRE_mpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusOld_WIRE_pie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusOld_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusOld_WIRE_1, %mstatus : !firrtl.uint<64>
      %_mstatusOld_T_7 = firrtl.bits %_mstatusOld_WIRE_1 7 to 7 {name = "_mstatusOld_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusOld_WIRE_pie_m, %_mstatusOld_T_7 : !firrtl.uint<1>
      %_mstatusOld_T_10 = firrtl.bits %_mstatusOld_WIRE_1 12 to 11 {name = "_mstatusOld_T_10"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusOld_WIRE_mpp, %_mstatusOld_T_10 : !firrtl.uint<2>
      %mstatusOld_mpp = firrtl.wire : !firrtl.uint<2>
      %mstatusOld_pie_m = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusOld_mpp, %_mstatusOld_WIRE_mpp : !firrtl.uint<2>
      firrtl.strictconnect %mstatusOld_pie_m, %_mstatusOld_WIRE_pie_m : !firrtl.uint<1>
      %_mstatusNew_WIRE_sd = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_pad1 = firrtl.wire : !firrtl.uint<27>
      %_mstatusNew_WIRE_sxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_uxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_pad0 = firrtl.wire : !firrtl.uint<9>
      %_mstatusNew_WIRE_tsr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_tw = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_tvm = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_mxr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_sum = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_mprv = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_xs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_fs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_hpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_spp = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_pie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_pie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_pie_u = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_ie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_ie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_ie_u = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusNew_WIRE_1, %mstatus : !firrtl.uint<64>
      %_mstatusNew_T = firrtl.bits %_mstatusNew_WIRE_1 0 to 0 {name = "_mstatusNew_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_ie_u, %_mstatusNew_T : !firrtl.uint<1>
      %_mstatusNew_T_1 = firrtl.bits %_mstatusNew_WIRE_1 1 to 1 {name = "_mstatusNew_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_ie_s, %_mstatusNew_T_1 : !firrtl.uint<1>
      %_mstatusNew_T_2 = firrtl.bits %_mstatusNew_WIRE_1 2 to 2 {name = "_mstatusNew_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_ie_h, %_mstatusNew_T_2 : !firrtl.uint<1>
      %_mstatusNew_T_4 = firrtl.bits %_mstatusNew_WIRE_1 4 to 4 {name = "_mstatusNew_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_pie_u, %_mstatusNew_T_4 : !firrtl.uint<1>
      %_mstatusNew_T_5 = firrtl.bits %_mstatusNew_WIRE_1 5 to 5 {name = "_mstatusNew_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_pie_s, %_mstatusNew_T_5 : !firrtl.uint<1>
      %_mstatusNew_T_6 = firrtl.bits %_mstatusNew_WIRE_1 6 to 6 {name = "_mstatusNew_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_pie_h, %_mstatusNew_T_6 : !firrtl.uint<1>
      %_mstatusNew_T_8 = firrtl.bits %_mstatusNew_WIRE_1 8 to 8 {name = "_mstatusNew_T_8"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_spp, %_mstatusNew_T_8 : !firrtl.uint<1>
      %_mstatusNew_T_9 = firrtl.bits %_mstatusNew_WIRE_1 10 to 9 {name = "_mstatusNew_T_9"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_hpp, %_mstatusNew_T_9 : !firrtl.uint<2>
      %_mstatusNew_T_11 = firrtl.bits %_mstatusNew_WIRE_1 14 to 13 {name = "_mstatusNew_T_11"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_fs, %_mstatusNew_T_11 : !firrtl.uint<2>
      %_mstatusNew_T_12 = firrtl.bits %_mstatusNew_WIRE_1 16 to 15 {name = "_mstatusNew_T_12"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_xs, %_mstatusNew_T_12 : !firrtl.uint<2>
      %_mstatusNew_T_13 = firrtl.bits %_mstatusNew_WIRE_1 17 to 17 {name = "_mstatusNew_T_13"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_mprv, %_mstatusNew_T_13 : !firrtl.uint<1>
      %_mstatusNew_T_14 = firrtl.bits %_mstatusNew_WIRE_1 18 to 18 {name = "_mstatusNew_T_14"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_sum, %_mstatusNew_T_14 : !firrtl.uint<1>
      %_mstatusNew_T_15 = firrtl.bits %_mstatusNew_WIRE_1 19 to 19 {name = "_mstatusNew_T_15"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_mxr, %_mstatusNew_T_15 : !firrtl.uint<1>
      %_mstatusNew_T_16 = firrtl.bits %_mstatusNew_WIRE_1 20 to 20 {name = "_mstatusNew_T_16"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_tvm, %_mstatusNew_T_16 : !firrtl.uint<1>
      %_mstatusNew_T_17 = firrtl.bits %_mstatusNew_WIRE_1 21 to 21 {name = "_mstatusNew_T_17"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_tw, %_mstatusNew_T_17 : !firrtl.uint<1>
      %_mstatusNew_T_18 = firrtl.bits %_mstatusNew_WIRE_1 22 to 22 {name = "_mstatusNew_T_18"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_tsr, %_mstatusNew_T_18 : !firrtl.uint<1>
      %_mstatusNew_T_19 = firrtl.bits %_mstatusNew_WIRE_1 31 to 23 {name = "_mstatusNew_T_19"} : (!firrtl.uint<64>) -> !firrtl.uint<9>
      firrtl.strictconnect %_mstatusNew_WIRE_pad0, %_mstatusNew_T_19 : !firrtl.uint<9>
      %_mstatusNew_T_20 = firrtl.bits %_mstatusNew_WIRE_1 33 to 32 {name = "_mstatusNew_T_20"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_uxl, %_mstatusNew_T_20 : !firrtl.uint<2>
      %_mstatusNew_T_21 = firrtl.bits %_mstatusNew_WIRE_1 35 to 34 {name = "_mstatusNew_T_21"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_sxl, %_mstatusNew_T_21 : !firrtl.uint<2>
      %_mstatusNew_T_22 = firrtl.bits %_mstatusNew_WIRE_1 62 to 36 {name = "_mstatusNew_T_22"} : (!firrtl.uint<64>) -> !firrtl.uint<27>
      firrtl.strictconnect %_mstatusNew_WIRE_pad1, %_mstatusNew_T_22 : !firrtl.uint<27>
      %_mstatusNew_T_23 = firrtl.bits %_mstatusNew_WIRE_1 63 to 63 {name = "_mstatusNew_T_23"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_sd, %_mstatusNew_T_23 : !firrtl.uint<1>
      %mstatusNew_sd = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_pad1 = firrtl.wire : !firrtl.uint<27>
      %mstatusNew_sxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_uxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_pad0 = firrtl.wire : !firrtl.uint<9>
      %mstatusNew_tsr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_tw = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_tvm = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_mxr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_sum = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_mprv = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_xs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_fs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_hpp = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_spp = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_pie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_pie_s = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_pie_u = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_ie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_ie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_ie_s = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_ie_u = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_sd, %_mstatusNew_WIRE_sd : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_pad1, %_mstatusNew_WIRE_pad1 : !firrtl.uint<27>
      firrtl.strictconnect %mstatusNew_sxl, %_mstatusNew_WIRE_sxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_uxl, %_mstatusNew_WIRE_uxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_pad0, %_mstatusNew_WIRE_pad0 : !firrtl.uint<9>
      firrtl.strictconnect %mstatusNew_tsr, %_mstatusNew_WIRE_tsr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_tw, %_mstatusNew_WIRE_tw : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_tvm, %_mstatusNew_WIRE_tvm : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_mxr, %_mstatusNew_WIRE_mxr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_sum, %_mstatusNew_WIRE_sum : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_mprv, %_mstatusNew_WIRE_mprv : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_xs, %_mstatusNew_WIRE_xs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_fs, %_mstatusNew_WIRE_fs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_hpp, %_mstatusNew_WIRE_hpp : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_spp, %_mstatusNew_WIRE_spp : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_pie_h, %_mstatusNew_WIRE_pie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_pie_s, %_mstatusNew_WIRE_pie_s : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_pie_u, %_mstatusNew_WIRE_pie_u : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_ie_h, %_mstatusNew_WIRE_ie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_ie_s, %_mstatusNew_WIRE_ie_s : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_ie_u, %_mstatusNew_WIRE_ie_u : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_ie_m, %mstatusOld_pie_m : !firrtl.uint<1>
      %717 = firrtl.mux(%716, %mstatusOld_mpp, %priviledgeMode) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %mstatus_lo = firrtl.cat %mstatusNew_ie_s, %mstatusNew_ie_u {name = "mstatus_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi = firrtl.cat %mstatusNew_ie_m, %mstatusNew_ie_h {name = "mstatus_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_8 = firrtl.cat %mstatus_hi, %mstatus_lo {name = "_mstatus_T_8"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_1 = firrtl.cat %mstatusNew_pie_s, %mstatusNew_pie_u {name = "mstatus_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_1 = firrtl.cat %c1_ui1, %mstatusNew_pie_h {name = "mstatus_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_9 = firrtl.cat %mstatus_hi_1, %mstatus_lo_1 {name = "_mstatus_T_9"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_lo_lo = firrtl.cat %_mstatus_T_9, %_mstatus_T_8 {name = "mstatus_lo_lo_lo"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_lo_hi = firrtl.cat %mstatusNew_hpp, %mstatusNew_spp {name = "mstatus_lo_lo_hi"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %mstatus_lo_lo = firrtl.cat %mstatus_lo_lo_hi, %mstatus_lo_lo_lo {name = "mstatus_lo_lo"} : (!firrtl.uint<3>, !firrtl.uint<8>) -> !firrtl.uint<11>
      %mstatus_lo_hi_lo = firrtl.cat %mstatusNew_fs, %c0_ui2 {name = "mstatus_lo_hi_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi_hi_hi = firrtl.cat %mstatusNew_sum, %mstatusNew_mprv {name = "mstatus_lo_hi_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_lo_hi_hi = firrtl.cat %mstatus_lo_hi_hi_hi, %mstatusNew_xs {name = "mstatus_lo_hi_hi"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi = firrtl.cat %mstatus_lo_hi_hi, %mstatus_lo_hi_lo {name = "mstatus_lo_hi"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_2 = firrtl.cat %mstatus_lo_hi, %mstatus_lo_lo {name = "mstatus_lo_2"} : (!firrtl.uint<8>, !firrtl.uint<11>) -> !firrtl.uint<19>
      %mstatus_hi_lo_lo = firrtl.cat %mstatusNew_tvm, %mstatusNew_mxr {name = "mstatus_hi_lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo_hi = firrtl.cat %mstatusNew_tsr, %mstatusNew_tw {name = "mstatus_hi_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo = firrtl.cat %mstatus_hi_lo_hi, %mstatus_hi_lo_lo {name = "mstatus_hi_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_hi_hi_lo = firrtl.cat %mstatusNew_uxl, %mstatusNew_pad0 {name = "mstatus_hi_hi_lo"} : (!firrtl.uint<2>, !firrtl.uint<9>) -> !firrtl.uint<11>
      %mstatus_hi_hi_hi_hi = firrtl.cat %mstatusNew_sd, %mstatusNew_pad1 {name = "mstatus_hi_hi_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<27>) -> !firrtl.uint<28>
      %mstatus_hi_hi_hi = firrtl.cat %mstatus_hi_hi_hi_hi, %mstatusNew_sxl {name = "mstatus_hi_hi_hi"} : (!firrtl.uint<28>, !firrtl.uint<2>) -> !firrtl.uint<30>
      %mstatus_hi_hi = firrtl.cat %mstatus_hi_hi_hi, %mstatus_hi_hi_lo {name = "mstatus_hi_hi"} : (!firrtl.uint<30>, !firrtl.uint<11>) -> !firrtl.uint<41>
      %mstatus_hi_2 = firrtl.cat %mstatus_hi_hi, %mstatus_hi_lo {name = "mstatus_hi_2"} : (!firrtl.uint<41>, !firrtl.uint<4>) -> !firrtl.uint<45>
      %_mstatus_T_10 = firrtl.cat %mstatus_hi_2, %mstatus_lo_2 {name = "_mstatus_T_10"} : (!firrtl.uint<45>, !firrtl.uint<19>) -> !firrtl.uint<64>
      %718 = firrtl.mux(%716, %_mstatus_T_10, %290) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_retTarget_T = firrtl.bits %mepc 38 to 0 {name = "_retTarget_T"} : (!firrtl.uint<64>) -> !firrtl.uint<39>
      %719 = firrtl.and %io_in_valid, %_isSret_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mstatusOld_WIRE_2_spp = firrtl.wire : !firrtl.uint<1>
      %_mstatusOld_WIRE_2_pie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusOld_WIRE_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusOld_WIRE_3, %mstatus : !firrtl.uint<64>
      %_mstatusOld_T_29 = firrtl.bits %_mstatusOld_WIRE_3 5 to 5 {name = "_mstatusOld_T_29"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusOld_WIRE_2_pie_s, %_mstatusOld_T_29 : !firrtl.uint<1>
      %_mstatusOld_T_32 = firrtl.bits %_mstatusOld_WIRE_3 8 to 8 {name = "_mstatusOld_T_32"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusOld_WIRE_2_spp, %_mstatusOld_T_32 : !firrtl.uint<1>
      %mstatusOld_1_spp = firrtl.wire : !firrtl.uint<1>
      %mstatusOld_1_pie_s = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusOld_1_spp, %_mstatusOld_WIRE_2_spp : !firrtl.uint<1>
      firrtl.strictconnect %mstatusOld_1_pie_s, %_mstatusOld_WIRE_2_pie_s : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_sd = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_pad1 = firrtl.wire : !firrtl.uint<27>
      %_mstatusNew_WIRE_2_sxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_2_uxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_2_pad0 = firrtl.wire : !firrtl.uint<9>
      %_mstatusNew_WIRE_2_tsr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_tw = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_tvm = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_mxr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_sum = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_mprv = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_xs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_2_fs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_2_mpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_2_hpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_2_pie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_pie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_pie_u = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_ie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_ie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_2_ie_u = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusNew_WIRE_3, %mstatus : !firrtl.uint<64>
      %_mstatusNew_T_24 = firrtl.bits %_mstatusNew_WIRE_3 0 to 0 {name = "_mstatusNew_T_24"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_ie_u, %_mstatusNew_T_24 : !firrtl.uint<1>
      %_mstatusNew_T_26 = firrtl.bits %_mstatusNew_WIRE_3 2 to 2 {name = "_mstatusNew_T_26"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_ie_h, %_mstatusNew_T_26 : !firrtl.uint<1>
      %_mstatusNew_T_27 = firrtl.bits %_mstatusNew_WIRE_3 3 to 3 {name = "_mstatusNew_T_27"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_ie_m, %_mstatusNew_T_27 : !firrtl.uint<1>
      %_mstatusNew_T_28 = firrtl.bits %_mstatusNew_WIRE_3 4 to 4 {name = "_mstatusNew_T_28"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_pie_u, %_mstatusNew_T_28 : !firrtl.uint<1>
      %_mstatusNew_T_30 = firrtl.bits %_mstatusNew_WIRE_3 6 to 6 {name = "_mstatusNew_T_30"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_pie_h, %_mstatusNew_T_30 : !firrtl.uint<1>
      %_mstatusNew_T_31 = firrtl.bits %_mstatusNew_WIRE_3 7 to 7 {name = "_mstatusNew_T_31"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_pie_m, %_mstatusNew_T_31 : !firrtl.uint<1>
      %_mstatusNew_T_33 = firrtl.bits %_mstatusNew_WIRE_3 10 to 9 {name = "_mstatusNew_T_33"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_2_hpp, %_mstatusNew_T_33 : !firrtl.uint<2>
      %_mstatusNew_T_34 = firrtl.bits %_mstatusNew_WIRE_3 12 to 11 {name = "_mstatusNew_T_34"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_2_mpp, %_mstatusNew_T_34 : !firrtl.uint<2>
      %_mstatusNew_T_35 = firrtl.bits %_mstatusNew_WIRE_3 14 to 13 {name = "_mstatusNew_T_35"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_2_fs, %_mstatusNew_T_35 : !firrtl.uint<2>
      %_mstatusNew_T_36 = firrtl.bits %_mstatusNew_WIRE_3 16 to 15 {name = "_mstatusNew_T_36"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_2_xs, %_mstatusNew_T_36 : !firrtl.uint<2>
      %_mstatusNew_T_37 = firrtl.bits %_mstatusNew_WIRE_3 17 to 17 {name = "_mstatusNew_T_37"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_mprv, %_mstatusNew_T_37 : !firrtl.uint<1>
      %_mstatusNew_T_38 = firrtl.bits %_mstatusNew_WIRE_3 18 to 18 {name = "_mstatusNew_T_38"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_sum, %_mstatusNew_T_38 : !firrtl.uint<1>
      %_mstatusNew_T_39 = firrtl.bits %_mstatusNew_WIRE_3 19 to 19 {name = "_mstatusNew_T_39"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_mxr, %_mstatusNew_T_39 : !firrtl.uint<1>
      %_mstatusNew_T_40 = firrtl.bits %_mstatusNew_WIRE_3 20 to 20 {name = "_mstatusNew_T_40"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_tvm, %_mstatusNew_T_40 : !firrtl.uint<1>
      %_mstatusNew_T_41 = firrtl.bits %_mstatusNew_WIRE_3 21 to 21 {name = "_mstatusNew_T_41"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_tw, %_mstatusNew_T_41 : !firrtl.uint<1>
      %_mstatusNew_T_42 = firrtl.bits %_mstatusNew_WIRE_3 22 to 22 {name = "_mstatusNew_T_42"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_tsr, %_mstatusNew_T_42 : !firrtl.uint<1>
      %_mstatusNew_T_43 = firrtl.bits %_mstatusNew_WIRE_3 31 to 23 {name = "_mstatusNew_T_43"} : (!firrtl.uint<64>) -> !firrtl.uint<9>
      firrtl.strictconnect %_mstatusNew_WIRE_2_pad0, %_mstatusNew_T_43 : !firrtl.uint<9>
      %_mstatusNew_T_44 = firrtl.bits %_mstatusNew_WIRE_3 33 to 32 {name = "_mstatusNew_T_44"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_2_uxl, %_mstatusNew_T_44 : !firrtl.uint<2>
      %_mstatusNew_T_45 = firrtl.bits %_mstatusNew_WIRE_3 35 to 34 {name = "_mstatusNew_T_45"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_2_sxl, %_mstatusNew_T_45 : !firrtl.uint<2>
      %_mstatusNew_T_46 = firrtl.bits %_mstatusNew_WIRE_3 62 to 36 {name = "_mstatusNew_T_46"} : (!firrtl.uint<64>) -> !firrtl.uint<27>
      firrtl.strictconnect %_mstatusNew_WIRE_2_pad1, %_mstatusNew_T_46 : !firrtl.uint<27>
      %_mstatusNew_T_47 = firrtl.bits %_mstatusNew_WIRE_3 63 to 63 {name = "_mstatusNew_T_47"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_2_sd, %_mstatusNew_T_47 : !firrtl.uint<1>
      %mstatusNew_1_sd = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_pad1 = firrtl.wire : !firrtl.uint<27>
      %mstatusNew_1_sxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_1_uxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_1_pad0 = firrtl.wire : !firrtl.uint<9>
      %mstatusNew_1_tsr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_tw = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_tvm = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_mxr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_sum = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_mprv = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_xs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_1_fs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_1_mpp = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_1_hpp = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_1_pie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_pie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_pie_u = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_ie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_ie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_ie_s = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_1_ie_u = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_sd, %_mstatusNew_WIRE_2_sd : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_pad1, %_mstatusNew_WIRE_2_pad1 : !firrtl.uint<27>
      firrtl.strictconnect %mstatusNew_1_sxl, %_mstatusNew_WIRE_2_sxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_1_uxl, %_mstatusNew_WIRE_2_uxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_1_pad0, %_mstatusNew_WIRE_2_pad0 : !firrtl.uint<9>
      firrtl.strictconnect %mstatusNew_1_tsr, %_mstatusNew_WIRE_2_tsr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_tw, %_mstatusNew_WIRE_2_tw : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_tvm, %_mstatusNew_WIRE_2_tvm : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_mxr, %_mstatusNew_WIRE_2_mxr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_sum, %_mstatusNew_WIRE_2_sum : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_mprv, %_mstatusNew_WIRE_2_mprv : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_xs, %_mstatusNew_WIRE_2_xs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_1_fs, %_mstatusNew_WIRE_2_fs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_1_mpp, %_mstatusNew_WIRE_2_mpp : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_1_hpp, %_mstatusNew_WIRE_2_hpp : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_1_pie_m, %_mstatusNew_WIRE_2_pie_m : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_pie_h, %_mstatusNew_WIRE_2_pie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_pie_u, %_mstatusNew_WIRE_2_pie_u : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_ie_m, %_mstatusNew_WIRE_2_ie_m : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_ie_h, %_mstatusNew_WIRE_2_ie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_ie_u, %_mstatusNew_WIRE_2_ie_u : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_1_ie_s, %mstatusOld_1_pie_s : !firrtl.uint<1>
      %_priviledgeMode_T = firrtl.cat %c0_ui1, %mstatusOld_1_spp {name = "_priviledgeMode_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %720 = firrtl.mux(%719, %_priviledgeMode_T, %717) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %mstatus_lo_3 = firrtl.cat %mstatusNew_1_ie_s, %mstatusNew_1_ie_u {name = "mstatus_lo_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_3 = firrtl.cat %mstatusNew_1_ie_m, %mstatusNew_1_ie_h {name = "mstatus_hi_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_11 = firrtl.cat %mstatus_hi_3, %mstatus_lo_3 {name = "_mstatus_T_11"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_4 = firrtl.cat %c1_ui1, %mstatusNew_1_pie_u {name = "mstatus_lo_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_4 = firrtl.cat %mstatusNew_1_pie_m, %mstatusNew_1_pie_h {name = "mstatus_hi_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_12 = firrtl.cat %mstatus_hi_4, %mstatus_lo_4 {name = "_mstatus_T_12"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_lo_lo_1 = firrtl.cat %_mstatus_T_12, %_mstatus_T_11 {name = "mstatus_lo_lo_lo_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_lo_hi_1 = firrtl.cat %mstatusNew_1_hpp, %c0_ui1 {name = "mstatus_lo_lo_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %mstatus_lo_lo_1 = firrtl.cat %mstatus_lo_lo_hi_1, %mstatus_lo_lo_lo_1 {name = "mstatus_lo_lo_1"} : (!firrtl.uint<3>, !firrtl.uint<8>) -> !firrtl.uint<11>
      %mstatus_lo_hi_lo_1 = firrtl.cat %mstatusNew_1_fs, %mstatusNew_1_mpp {name = "mstatus_lo_hi_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi_hi_hi_1 = firrtl.cat %mstatusNew_1_sum, %mstatusNew_1_mprv {name = "mstatus_lo_hi_hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_lo_hi_hi_1 = firrtl.cat %mstatus_lo_hi_hi_hi_1, %mstatusNew_1_xs {name = "mstatus_lo_hi_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi_1 = firrtl.cat %mstatus_lo_hi_hi_1, %mstatus_lo_hi_lo_1 {name = "mstatus_lo_hi_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_5 = firrtl.cat %mstatus_lo_hi_1, %mstatus_lo_lo_1 {name = "mstatus_lo_5"} : (!firrtl.uint<8>, !firrtl.uint<11>) -> !firrtl.uint<19>
      %mstatus_hi_lo_lo_1 = firrtl.cat %mstatusNew_1_tvm, %mstatusNew_1_mxr {name = "mstatus_hi_lo_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo_hi_1 = firrtl.cat %mstatusNew_1_tsr, %mstatusNew_1_tw {name = "mstatus_hi_lo_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo_1 = firrtl.cat %mstatus_hi_lo_hi_1, %mstatus_hi_lo_lo_1 {name = "mstatus_hi_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_hi_hi_lo_1 = firrtl.cat %mstatusNew_1_uxl, %mstatusNew_1_pad0 {name = "mstatus_hi_hi_lo_1"} : (!firrtl.uint<2>, !firrtl.uint<9>) -> !firrtl.uint<11>
      %mstatus_hi_hi_hi_hi_1 = firrtl.cat %mstatusNew_1_sd, %mstatusNew_1_pad1 {name = "mstatus_hi_hi_hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<27>) -> !firrtl.uint<28>
      %mstatus_hi_hi_hi_1 = firrtl.cat %mstatus_hi_hi_hi_hi_1, %mstatusNew_1_sxl {name = "mstatus_hi_hi_hi_1"} : (!firrtl.uint<28>, !firrtl.uint<2>) -> !firrtl.uint<30>
      %mstatus_hi_hi_1 = firrtl.cat %mstatus_hi_hi_hi_1, %mstatus_hi_hi_lo_1 {name = "mstatus_hi_hi_1"} : (!firrtl.uint<30>, !firrtl.uint<11>) -> !firrtl.uint<41>
      %mstatus_hi_5 = firrtl.cat %mstatus_hi_hi_1, %mstatus_hi_lo_1 {name = "mstatus_hi_5"} : (!firrtl.uint<41>, !firrtl.uint<4>) -> !firrtl.uint<45>
      %_mstatus_T_13 = firrtl.cat %mstatus_hi_5, %mstatus_lo_5 {name = "_mstatus_T_13"} : (!firrtl.uint<45>, !firrtl.uint<19>) -> !firrtl.uint<64>
      %721 = firrtl.mux(%719, %_mstatus_T_13, %718) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %722 = firrtl.or %719, %716 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %723 = firrtl.mux(%722, %c0_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %lr, %723 : !firrtl.uint<1>
      %_retTarget_T_1 = firrtl.bits %sepc 38 to 0 {name = "_retTarget_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<39>
      %724 = firrtl.mux(%719, %_retTarget_T_1, %_retTarget_T) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %725 = firrtl.and %io_in_valid, %_isUret_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mstatusOld_WIRE_4_pie_u = firrtl.wire : !firrtl.uint<1>
      %_mstatusOld_WIRE_5 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusOld_WIRE_5, %mstatus : !firrtl.uint<64>
      %_mstatusOld_T_52 = firrtl.bits %_mstatusOld_WIRE_5 4 to 4 {name = "_mstatusOld_T_52"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusOld_WIRE_4_pie_u, %_mstatusOld_T_52 : !firrtl.uint<1>
      %mstatusOld_2_pie_u = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusOld_2_pie_u, %_mstatusOld_WIRE_4_pie_u : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_sd = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_pad1 = firrtl.wire : !firrtl.uint<27>
      %_mstatusNew_WIRE_4_sxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_4_uxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_4_pad0 = firrtl.wire : !firrtl.uint<9>
      %_mstatusNew_WIRE_4_tsr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_tw = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_tvm = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_mxr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_sum = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_mprv = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_xs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_4_fs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_4_mpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_4_hpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_4_spp = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_pie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_pie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_pie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_ie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_ie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_4_ie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_5 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusNew_WIRE_5, %mstatus : !firrtl.uint<64>
      %_mstatusNew_T_49 = firrtl.bits %_mstatusNew_WIRE_5 1 to 1 {name = "_mstatusNew_T_49"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_ie_s, %_mstatusNew_T_49 : !firrtl.uint<1>
      %_mstatusNew_T_50 = firrtl.bits %_mstatusNew_WIRE_5 2 to 2 {name = "_mstatusNew_T_50"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_ie_h, %_mstatusNew_T_50 : !firrtl.uint<1>
      %_mstatusNew_T_51 = firrtl.bits %_mstatusNew_WIRE_5 3 to 3 {name = "_mstatusNew_T_51"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_ie_m, %_mstatusNew_T_51 : !firrtl.uint<1>
      %_mstatusNew_T_53 = firrtl.bits %_mstatusNew_WIRE_5 5 to 5 {name = "_mstatusNew_T_53"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_pie_s, %_mstatusNew_T_53 : !firrtl.uint<1>
      %_mstatusNew_T_54 = firrtl.bits %_mstatusNew_WIRE_5 6 to 6 {name = "_mstatusNew_T_54"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_pie_h, %_mstatusNew_T_54 : !firrtl.uint<1>
      %_mstatusNew_T_55 = firrtl.bits %_mstatusNew_WIRE_5 7 to 7 {name = "_mstatusNew_T_55"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_pie_m, %_mstatusNew_T_55 : !firrtl.uint<1>
      %_mstatusNew_T_56 = firrtl.bits %_mstatusNew_WIRE_5 8 to 8 {name = "_mstatusNew_T_56"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_spp, %_mstatusNew_T_56 : !firrtl.uint<1>
      %_mstatusNew_T_57 = firrtl.bits %_mstatusNew_WIRE_5 10 to 9 {name = "_mstatusNew_T_57"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_4_hpp, %_mstatusNew_T_57 : !firrtl.uint<2>
      %_mstatusNew_T_58 = firrtl.bits %_mstatusNew_WIRE_5 12 to 11 {name = "_mstatusNew_T_58"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_4_mpp, %_mstatusNew_T_58 : !firrtl.uint<2>
      %_mstatusNew_T_59 = firrtl.bits %_mstatusNew_WIRE_5 14 to 13 {name = "_mstatusNew_T_59"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_4_fs, %_mstatusNew_T_59 : !firrtl.uint<2>
      %_mstatusNew_T_60 = firrtl.bits %_mstatusNew_WIRE_5 16 to 15 {name = "_mstatusNew_T_60"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_4_xs, %_mstatusNew_T_60 : !firrtl.uint<2>
      %_mstatusNew_T_61 = firrtl.bits %_mstatusNew_WIRE_5 17 to 17 {name = "_mstatusNew_T_61"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_mprv, %_mstatusNew_T_61 : !firrtl.uint<1>
      %_mstatusNew_T_62 = firrtl.bits %_mstatusNew_WIRE_5 18 to 18 {name = "_mstatusNew_T_62"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_sum, %_mstatusNew_T_62 : !firrtl.uint<1>
      %_mstatusNew_T_63 = firrtl.bits %_mstatusNew_WIRE_5 19 to 19 {name = "_mstatusNew_T_63"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_mxr, %_mstatusNew_T_63 : !firrtl.uint<1>
      %_mstatusNew_T_64 = firrtl.bits %_mstatusNew_WIRE_5 20 to 20 {name = "_mstatusNew_T_64"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_tvm, %_mstatusNew_T_64 : !firrtl.uint<1>
      %_mstatusNew_T_65 = firrtl.bits %_mstatusNew_WIRE_5 21 to 21 {name = "_mstatusNew_T_65"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_tw, %_mstatusNew_T_65 : !firrtl.uint<1>
      %_mstatusNew_T_66 = firrtl.bits %_mstatusNew_WIRE_5 22 to 22 {name = "_mstatusNew_T_66"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_tsr, %_mstatusNew_T_66 : !firrtl.uint<1>
      %_mstatusNew_T_67 = firrtl.bits %_mstatusNew_WIRE_5 31 to 23 {name = "_mstatusNew_T_67"} : (!firrtl.uint<64>) -> !firrtl.uint<9>
      firrtl.strictconnect %_mstatusNew_WIRE_4_pad0, %_mstatusNew_T_67 : !firrtl.uint<9>
      %_mstatusNew_T_68 = firrtl.bits %_mstatusNew_WIRE_5 33 to 32 {name = "_mstatusNew_T_68"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_4_uxl, %_mstatusNew_T_68 : !firrtl.uint<2>
      %_mstatusNew_T_69 = firrtl.bits %_mstatusNew_WIRE_5 35 to 34 {name = "_mstatusNew_T_69"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_4_sxl, %_mstatusNew_T_69 : !firrtl.uint<2>
      %_mstatusNew_T_70 = firrtl.bits %_mstatusNew_WIRE_5 62 to 36 {name = "_mstatusNew_T_70"} : (!firrtl.uint<64>) -> !firrtl.uint<27>
      firrtl.strictconnect %_mstatusNew_WIRE_4_pad1, %_mstatusNew_T_70 : !firrtl.uint<27>
      %_mstatusNew_T_71 = firrtl.bits %_mstatusNew_WIRE_5 63 to 63 {name = "_mstatusNew_T_71"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_4_sd, %_mstatusNew_T_71 : !firrtl.uint<1>
      %mstatusNew_2_sd = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_pad1 = firrtl.wire : !firrtl.uint<27>
      %mstatusNew_2_sxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_2_uxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_2_pad0 = firrtl.wire : !firrtl.uint<9>
      %mstatusNew_2_tsr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_tw = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_tvm = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_mxr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_sum = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_mprv = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_xs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_2_fs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_2_mpp = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_2_hpp = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_2_spp = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_pie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_pie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_pie_s = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_ie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_ie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_ie_s = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_2_ie_u = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_sd, %_mstatusNew_WIRE_4_sd : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_pad1, %_mstatusNew_WIRE_4_pad1 : !firrtl.uint<27>
      firrtl.strictconnect %mstatusNew_2_sxl, %_mstatusNew_WIRE_4_sxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_2_uxl, %_mstatusNew_WIRE_4_uxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_2_pad0, %_mstatusNew_WIRE_4_pad0 : !firrtl.uint<9>
      firrtl.strictconnect %mstatusNew_2_tsr, %_mstatusNew_WIRE_4_tsr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_tw, %_mstatusNew_WIRE_4_tw : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_tvm, %_mstatusNew_WIRE_4_tvm : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_mxr, %_mstatusNew_WIRE_4_mxr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_sum, %_mstatusNew_WIRE_4_sum : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_mprv, %_mstatusNew_WIRE_4_mprv : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_xs, %_mstatusNew_WIRE_4_xs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_2_fs, %_mstatusNew_WIRE_4_fs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_2_mpp, %_mstatusNew_WIRE_4_mpp : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_2_hpp, %_mstatusNew_WIRE_4_hpp : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_2_spp, %_mstatusNew_WIRE_4_spp : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_pie_m, %_mstatusNew_WIRE_4_pie_m : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_pie_h, %_mstatusNew_WIRE_4_pie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_pie_s, %_mstatusNew_WIRE_4_pie_s : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_ie_m, %_mstatusNew_WIRE_4_ie_m : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_ie_h, %_mstatusNew_WIRE_4_ie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_ie_s, %_mstatusNew_WIRE_4_ie_s : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_2_ie_u, %mstatusOld_2_pie_u : !firrtl.uint<1>
      %726 = firrtl.mux(%725, %c0_ui2, %720) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %mstatus_lo_6 = firrtl.cat %mstatusNew_2_ie_s, %mstatusNew_2_ie_u {name = "mstatus_lo_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_6 = firrtl.cat %mstatusNew_2_ie_m, %mstatusNew_2_ie_h {name = "mstatus_hi_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_14 = firrtl.cat %mstatus_hi_6, %mstatus_lo_6 {name = "_mstatus_T_14"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_7 = firrtl.cat %mstatusNew_2_pie_s, %c1_ui1 {name = "mstatus_lo_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_7 = firrtl.cat %mstatusNew_2_pie_m, %mstatusNew_2_pie_h {name = "mstatus_hi_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_15 = firrtl.cat %mstatus_hi_7, %mstatus_lo_7 {name = "_mstatus_T_15"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_lo_lo_2 = firrtl.cat %_mstatus_T_15, %_mstatus_T_14 {name = "mstatus_lo_lo_lo_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_lo_hi_2 = firrtl.cat %mstatusNew_2_hpp, %mstatusNew_2_spp {name = "mstatus_lo_lo_hi_2"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %mstatus_lo_lo_2 = firrtl.cat %mstatus_lo_lo_hi_2, %mstatus_lo_lo_lo_2 {name = "mstatus_lo_lo_2"} : (!firrtl.uint<3>, !firrtl.uint<8>) -> !firrtl.uint<11>
      %mstatus_lo_hi_lo_2 = firrtl.cat %mstatusNew_2_fs, %mstatusNew_2_mpp {name = "mstatus_lo_hi_lo_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi_hi_hi_2 = firrtl.cat %mstatusNew_2_sum, %mstatusNew_2_mprv {name = "mstatus_lo_hi_hi_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_lo_hi_hi_2 = firrtl.cat %mstatus_lo_hi_hi_hi_2, %mstatusNew_2_xs {name = "mstatus_lo_hi_hi_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi_2 = firrtl.cat %mstatus_lo_hi_hi_2, %mstatus_lo_hi_lo_2 {name = "mstatus_lo_hi_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_8 = firrtl.cat %mstatus_lo_hi_2, %mstatus_lo_lo_2 {name = "mstatus_lo_8"} : (!firrtl.uint<8>, !firrtl.uint<11>) -> !firrtl.uint<19>
      %mstatus_hi_lo_lo_2 = firrtl.cat %mstatusNew_2_tvm, %mstatusNew_2_mxr {name = "mstatus_hi_lo_lo_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo_hi_2 = firrtl.cat %mstatusNew_2_tsr, %mstatusNew_2_tw {name = "mstatus_hi_lo_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo_2 = firrtl.cat %mstatus_hi_lo_hi_2, %mstatus_hi_lo_lo_2 {name = "mstatus_hi_lo_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_hi_hi_lo_2 = firrtl.cat %mstatusNew_2_uxl, %mstatusNew_2_pad0 {name = "mstatus_hi_hi_lo_2"} : (!firrtl.uint<2>, !firrtl.uint<9>) -> !firrtl.uint<11>
      %mstatus_hi_hi_hi_hi_2 = firrtl.cat %mstatusNew_2_sd, %mstatusNew_2_pad1 {name = "mstatus_hi_hi_hi_hi_2"} : (!firrtl.uint<1>, !firrtl.uint<27>) -> !firrtl.uint<28>
      %mstatus_hi_hi_hi_2 = firrtl.cat %mstatus_hi_hi_hi_hi_2, %mstatusNew_2_sxl {name = "mstatus_hi_hi_hi_2"} : (!firrtl.uint<28>, !firrtl.uint<2>) -> !firrtl.uint<30>
      %mstatus_hi_hi_2 = firrtl.cat %mstatus_hi_hi_hi_2, %mstatus_hi_hi_lo_2 {name = "mstatus_hi_hi_2"} : (!firrtl.uint<30>, !firrtl.uint<11>) -> !firrtl.uint<41>
      %mstatus_hi_8 = firrtl.cat %mstatus_hi_hi_2, %mstatus_hi_lo_2 {name = "mstatus_hi_8"} : (!firrtl.uint<41>, !firrtl.uint<4>) -> !firrtl.uint<45>
      %_mstatus_T_16 = firrtl.cat %mstatus_hi_8, %mstatus_lo_8 {name = "_mstatus_T_16"} : (!firrtl.uint<45>, !firrtl.uint<19>) -> !firrtl.uint<64>
      %727 = firrtl.mux(%725, %_mstatus_T_16, %721) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_retTarget_T_2 = firrtl.bits %invalid_ui64 38 to 0 {name = "_retTarget_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<39>
      %728 = firrtl.mux(%725, %_retTarget_T_2, %724) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %retTarget, %728 : !firrtl.uint<39>
      %_mstatusOld_WIRE_6_ie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusOld_WIRE_6_ie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusOld_WIRE_7 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusOld_WIRE_7, %mstatus : !firrtl.uint<64>
      %_mstatusOld_T_73 = firrtl.bits %_mstatusOld_WIRE_7 1 to 1 {name = "_mstatusOld_T_73"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusOld_WIRE_6_ie_s, %_mstatusOld_T_73 : !firrtl.uint<1>
      %_mstatusOld_T_75 = firrtl.bits %_mstatusOld_WIRE_7 3 to 3 {name = "_mstatusOld_T_75"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusOld_WIRE_6_ie_m, %_mstatusOld_T_75 : !firrtl.uint<1>
      %mstatusOld_3_ie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusOld_3_ie_s = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusOld_3_ie_m, %_mstatusOld_WIRE_6_ie_m : !firrtl.uint<1>
      firrtl.strictconnect %mstatusOld_3_ie_s, %_mstatusOld_WIRE_6_ie_s : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_sd = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_pad1 = firrtl.wire : !firrtl.uint<27>
      %_mstatusNew_WIRE_6_sxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_6_uxl = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_6_pad0 = firrtl.wire : !firrtl.uint<9>
      %_mstatusNew_WIRE_6_tsr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_tw = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_tvm = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_mxr = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_sum = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_mprv = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_xs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_6_fs = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_6_mpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_6_hpp = firrtl.wire : !firrtl.uint<2>
      %_mstatusNew_WIRE_6_spp = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_pie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_pie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_pie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_pie_u = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_ie_m = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_ie_h = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_ie_s = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_6_ie_u = firrtl.wire : !firrtl.uint<1>
      %_mstatusNew_WIRE_7 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_mstatusNew_WIRE_7, %mstatus : !firrtl.uint<64>
      %_mstatusNew_T_72 = firrtl.bits %_mstatusNew_WIRE_7 0 to 0 {name = "_mstatusNew_T_72"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_ie_u, %_mstatusNew_T_72 : !firrtl.uint<1>
      %_mstatusNew_T_73 = firrtl.bits %_mstatusNew_WIRE_7 1 to 1 {name = "_mstatusNew_T_73"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_ie_s, %_mstatusNew_T_73 : !firrtl.uint<1>
      %_mstatusNew_T_74 = firrtl.bits %_mstatusNew_WIRE_7 2 to 2 {name = "_mstatusNew_T_74"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_ie_h, %_mstatusNew_T_74 : !firrtl.uint<1>
      %_mstatusNew_T_75 = firrtl.bits %_mstatusNew_WIRE_7 3 to 3 {name = "_mstatusNew_T_75"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_ie_m, %_mstatusNew_T_75 : !firrtl.uint<1>
      %_mstatusNew_T_76 = firrtl.bits %_mstatusNew_WIRE_7 4 to 4 {name = "_mstatusNew_T_76"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_pie_u, %_mstatusNew_T_76 : !firrtl.uint<1>
      %_mstatusNew_T_77 = firrtl.bits %_mstatusNew_WIRE_7 5 to 5 {name = "_mstatusNew_T_77"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_pie_s, %_mstatusNew_T_77 : !firrtl.uint<1>
      %_mstatusNew_T_78 = firrtl.bits %_mstatusNew_WIRE_7 6 to 6 {name = "_mstatusNew_T_78"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_pie_h, %_mstatusNew_T_78 : !firrtl.uint<1>
      %_mstatusNew_T_79 = firrtl.bits %_mstatusNew_WIRE_7 7 to 7 {name = "_mstatusNew_T_79"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_pie_m, %_mstatusNew_T_79 : !firrtl.uint<1>
      %_mstatusNew_T_80 = firrtl.bits %_mstatusNew_WIRE_7 8 to 8 {name = "_mstatusNew_T_80"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_spp, %_mstatusNew_T_80 : !firrtl.uint<1>
      %_mstatusNew_T_81 = firrtl.bits %_mstatusNew_WIRE_7 10 to 9 {name = "_mstatusNew_T_81"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_6_hpp, %_mstatusNew_T_81 : !firrtl.uint<2>
      %_mstatusNew_T_82 = firrtl.bits %_mstatusNew_WIRE_7 12 to 11 {name = "_mstatusNew_T_82"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_6_mpp, %_mstatusNew_T_82 : !firrtl.uint<2>
      %_mstatusNew_T_83 = firrtl.bits %_mstatusNew_WIRE_7 14 to 13 {name = "_mstatusNew_T_83"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_6_fs, %_mstatusNew_T_83 : !firrtl.uint<2>
      %_mstatusNew_T_84 = firrtl.bits %_mstatusNew_WIRE_7 16 to 15 {name = "_mstatusNew_T_84"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_6_xs, %_mstatusNew_T_84 : !firrtl.uint<2>
      %_mstatusNew_T_85 = firrtl.bits %_mstatusNew_WIRE_7 17 to 17 {name = "_mstatusNew_T_85"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_mprv, %_mstatusNew_T_85 : !firrtl.uint<1>
      %_mstatusNew_T_86 = firrtl.bits %_mstatusNew_WIRE_7 18 to 18 {name = "_mstatusNew_T_86"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_sum, %_mstatusNew_T_86 : !firrtl.uint<1>
      %_mstatusNew_T_87 = firrtl.bits %_mstatusNew_WIRE_7 19 to 19 {name = "_mstatusNew_T_87"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_mxr, %_mstatusNew_T_87 : !firrtl.uint<1>
      %_mstatusNew_T_88 = firrtl.bits %_mstatusNew_WIRE_7 20 to 20 {name = "_mstatusNew_T_88"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_tvm, %_mstatusNew_T_88 : !firrtl.uint<1>
      %_mstatusNew_T_89 = firrtl.bits %_mstatusNew_WIRE_7 21 to 21 {name = "_mstatusNew_T_89"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_tw, %_mstatusNew_T_89 : !firrtl.uint<1>
      %_mstatusNew_T_90 = firrtl.bits %_mstatusNew_WIRE_7 22 to 22 {name = "_mstatusNew_T_90"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_tsr, %_mstatusNew_T_90 : !firrtl.uint<1>
      %_mstatusNew_T_91 = firrtl.bits %_mstatusNew_WIRE_7 31 to 23 {name = "_mstatusNew_T_91"} : (!firrtl.uint<64>) -> !firrtl.uint<9>
      firrtl.strictconnect %_mstatusNew_WIRE_6_pad0, %_mstatusNew_T_91 : !firrtl.uint<9>
      %_mstatusNew_T_92 = firrtl.bits %_mstatusNew_WIRE_7 33 to 32 {name = "_mstatusNew_T_92"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_6_uxl, %_mstatusNew_T_92 : !firrtl.uint<2>
      %_mstatusNew_T_93 = firrtl.bits %_mstatusNew_WIRE_7 35 to 34 {name = "_mstatusNew_T_93"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %_mstatusNew_WIRE_6_sxl, %_mstatusNew_T_93 : !firrtl.uint<2>
      %_mstatusNew_T_94 = firrtl.bits %_mstatusNew_WIRE_7 62 to 36 {name = "_mstatusNew_T_94"} : (!firrtl.uint<64>) -> !firrtl.uint<27>
      firrtl.strictconnect %_mstatusNew_WIRE_6_pad1, %_mstatusNew_T_94 : !firrtl.uint<27>
      %_mstatusNew_T_95 = firrtl.bits %_mstatusNew_WIRE_7 63 to 63 {name = "_mstatusNew_T_95"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %_mstatusNew_WIRE_6_sd, %_mstatusNew_T_95 : !firrtl.uint<1>
      %mstatusNew_3_sd = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_pad1 = firrtl.wire : !firrtl.uint<27>
      %mstatusNew_3_sxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_3_uxl = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_3_pad0 = firrtl.wire : !firrtl.uint<9>
      %mstatusNew_3_tsr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_tw = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_tvm = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_mxr = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_sum = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_mprv = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_xs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_3_fs = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_3_mpp = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_3_hpp = firrtl.wire : !firrtl.uint<2>
      %mstatusNew_3_spp = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_pie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_pie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_pie_s = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_pie_u = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_ie_m = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_ie_h = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_ie_s = firrtl.wire : !firrtl.uint<1>
      %mstatusNew_3_ie_u = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_sd, %_mstatusNew_WIRE_6_sd : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_pad1, %_mstatusNew_WIRE_6_pad1 : !firrtl.uint<27>
      firrtl.strictconnect %mstatusNew_3_sxl, %_mstatusNew_WIRE_6_sxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_3_uxl, %_mstatusNew_WIRE_6_uxl : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_3_pad0, %_mstatusNew_WIRE_6_pad0 : !firrtl.uint<9>
      firrtl.strictconnect %mstatusNew_3_tsr, %_mstatusNew_WIRE_6_tsr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_tw, %_mstatusNew_WIRE_6_tw : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_tvm, %_mstatusNew_WIRE_6_tvm : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_mxr, %_mstatusNew_WIRE_6_mxr : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_sum, %_mstatusNew_WIRE_6_sum : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_mprv, %_mstatusNew_WIRE_6_mprv : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_xs, %_mstatusNew_WIRE_6_xs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_3_fs, %_mstatusNew_WIRE_6_fs : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_3_hpp, %_mstatusNew_WIRE_6_hpp : !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_3_pie_h, %_mstatusNew_WIRE_6_pie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_pie_u, %_mstatusNew_WIRE_6_pie_u : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_ie_h, %_mstatusNew_WIRE_6_ie_h : !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_ie_u, %_mstatusNew_WIRE_6_ie_u : !firrtl.uint<1>
      %729 = firrtl.and %raiseExceptionIntr, %delegS : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %730 = firrtl.mux(%729, %causeNO, %449) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %scause, %730 : !firrtl.uint<64>
      %sepc_signBit = firrtl.bits %io_cfIn_pc 38 to 38 {name = "sepc_signBit"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_sepc_T_4 = firrtl.mux(%sepc_signBit, %c33554431_ui25, %c0_ui25) {name = "_sepc_T_4"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_sepc_T_5 = firrtl.cat %_sepc_T_4, %io_cfIn_pc {name = "_sepc_T_5"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %731 = firrtl.and %raiseExceptionIntr, %delegS : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %732 = firrtl.mux(%731, %_sepc_T_5, %98) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %sepc, %732 : !firrtl.uint<64>
      %733 = firrtl.bits %priviledgeMode 0 to 0 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %734 = firrtl.mux(%delegS, %733, %_mstatusNew_WIRE_6_spp) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_spp, %734 : !firrtl.uint<1>
      %735 = firrtl.mux(%delegS, %mstatusOld_3_ie_s, %_mstatusNew_WIRE_6_pie_s) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_pie_s, %735 : !firrtl.uint<1>
      %736 = firrtl.mux(%delegS, %c0_ui1, %_mstatusNew_WIRE_6_ie_s) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_ie_s, %736 : !firrtl.uint<1>
      %737 = firrtl.and %delegS, %tvalWen : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %738 = firrtl.and %raiseExceptionIntr, %737 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %739 = firrtl.mux(%738, %c0_ui64, %652) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %stval, %739 : !firrtl.uint<64>
      %740 = firrtl.mux(%delegS, %104, %causeNO) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %741 = firrtl.mux(%raiseExceptionIntr, %740, %104) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mcause, %741 : !firrtl.uint<64>
      %mepc_signBit = firrtl.bits %io_cfIn_pc 38 to 38 {name = "mepc_signBit"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_mepc_T_4 = firrtl.mux(%mepc_signBit, %c33554431_ui25, %c0_ui25) {name = "_mepc_T_4"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_mepc_T_5 = firrtl.cat %_mepc_T_4, %io_cfIn_pc {name = "_mepc_T_5"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      %742 = firrtl.mux(%delegS, %425, %_mepc_T_5) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %743 = firrtl.mux(%raiseExceptionIntr, %742, %425) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mepc, %743 : !firrtl.uint<64>
      %744 = firrtl.mux(%delegS, %_mstatusNew_WIRE_6_mpp, %priviledgeMode) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %mstatusNew_3_mpp, %744 : !firrtl.uint<2>
      %745 = firrtl.mux(%delegS, %_mstatusNew_WIRE_6_pie_m, %mstatusOld_3_ie_m) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_pie_m, %745 : !firrtl.uint<1>
      %746 = firrtl.mux(%delegS, %_mstatusNew_WIRE_6_ie_m, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mstatusNew_3_ie_m, %746 : !firrtl.uint<1>
      %747 = firrtl.mux(%delegS, %c1_ui2, %c3_ui2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %748 = firrtl.mux(%raiseExceptionIntr, %747, %726) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %priviledgeMode, %748 : !firrtl.uint<2>
      %749 = firrtl.mux(%tvalWen, %c0_ui64, %661) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %750 = firrtl.mux(%delegS, %661, %749) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %751 = firrtl.mux(%raiseExceptionIntr, %750, %661) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mtval, %751 : !firrtl.uint<64>
      %mstatus_lo_9 = firrtl.cat %mstatusNew_3_ie_s, %mstatusNew_3_ie_u {name = "mstatus_lo_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_9 = firrtl.cat %mstatusNew_3_ie_m, %mstatusNew_3_ie_h {name = "mstatus_hi_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_17 = firrtl.cat %mstatus_hi_9, %mstatus_lo_9 {name = "_mstatus_T_17"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_10 = firrtl.cat %mstatusNew_3_pie_s, %mstatusNew_3_pie_u {name = "mstatus_lo_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_10 = firrtl.cat %mstatusNew_3_pie_m, %mstatusNew_3_pie_h {name = "mstatus_hi_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_mstatus_T_18 = firrtl.cat %mstatus_hi_10, %mstatus_lo_10 {name = "_mstatus_T_18"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_lo_lo_3 = firrtl.cat %_mstatus_T_18, %_mstatus_T_17 {name = "mstatus_lo_lo_lo_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_lo_hi_3 = firrtl.cat %mstatusNew_3_hpp, %mstatusNew_3_spp {name = "mstatus_lo_lo_hi_3"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %mstatus_lo_lo_3 = firrtl.cat %mstatus_lo_lo_hi_3, %mstatus_lo_lo_lo_3 {name = "mstatus_lo_lo_3"} : (!firrtl.uint<3>, !firrtl.uint<8>) -> !firrtl.uint<11>
      %mstatus_lo_hi_lo_3 = firrtl.cat %mstatusNew_3_fs, %mstatusNew_3_mpp {name = "mstatus_lo_hi_lo_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi_hi_hi_3 = firrtl.cat %mstatusNew_3_sum, %mstatusNew_3_mprv {name = "mstatus_lo_hi_hi_hi_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_lo_hi_hi_3 = firrtl.cat %mstatus_lo_hi_hi_hi_3, %mstatusNew_3_xs {name = "mstatus_lo_hi_hi_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_lo_hi_3 = firrtl.cat %mstatus_lo_hi_hi_3, %mstatus_lo_hi_lo_3 {name = "mstatus_lo_hi_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %mstatus_lo_11 = firrtl.cat %mstatus_lo_hi_3, %mstatus_lo_lo_3 {name = "mstatus_lo_11"} : (!firrtl.uint<8>, !firrtl.uint<11>) -> !firrtl.uint<19>
      %mstatus_hi_lo_lo_3 = firrtl.cat %mstatusNew_3_tvm, %mstatusNew_3_mxr {name = "mstatus_hi_lo_lo_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo_hi_3 = firrtl.cat %mstatusNew_3_tsr, %mstatusNew_3_tw {name = "mstatus_hi_lo_hi_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %mstatus_hi_lo_3 = firrtl.cat %mstatus_hi_lo_hi_3, %mstatus_hi_lo_lo_3 {name = "mstatus_hi_lo_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %mstatus_hi_hi_lo_3 = firrtl.cat %mstatusNew_3_uxl, %mstatusNew_3_pad0 {name = "mstatus_hi_hi_lo_3"} : (!firrtl.uint<2>, !firrtl.uint<9>) -> !firrtl.uint<11>
      %mstatus_hi_hi_hi_hi_3 = firrtl.cat %mstatusNew_3_sd, %mstatusNew_3_pad1 {name = "mstatus_hi_hi_hi_hi_3"} : (!firrtl.uint<1>, !firrtl.uint<27>) -> !firrtl.uint<28>
      %mstatus_hi_hi_hi_3 = firrtl.cat %mstatus_hi_hi_hi_hi_3, %mstatusNew_3_sxl {name = "mstatus_hi_hi_hi_3"} : (!firrtl.uint<28>, !firrtl.uint<2>) -> !firrtl.uint<30>
      %mstatus_hi_hi_3 = firrtl.cat %mstatus_hi_hi_hi_3, %mstatus_hi_hi_lo_3 {name = "mstatus_hi_hi_3"} : (!firrtl.uint<30>, !firrtl.uint<11>) -> !firrtl.uint<41>
      %mstatus_hi_11 = firrtl.cat %mstatus_hi_hi_3, %mstatus_hi_lo_3 {name = "mstatus_hi_11"} : (!firrtl.uint<41>, !firrtl.uint<4>) -> !firrtl.uint<45>
      %_mstatus_T_19 = firrtl.cat %mstatus_hi_11, %mstatus_lo_11 {name = "_mstatus_T_19"} : (!firrtl.uint<45>, !firrtl.uint<19>) -> !firrtl.uint<64>
      %752 = firrtl.mux(%raiseExceptionIntr, %_mstatus_T_19, %727) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mstatus, %752 : !firrtl.uint<64>
      %perfCntCond_0 = firrtl.wire : !firrtl.uint<1>
      %_perfCnts_0_T_4 = firrtl.add %perfCnts_0, %c1_ui1 {name = "_perfCnts_0_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_0_T_5 = firrtl.bits %_perfCnts_0_T_4 63 to 0 {name = "_perfCnts_0_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %753 = firrtl.mux(%perfCntCond_0, %_perfCnts_0_T_5, %314) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_0, %753 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_1, %221 : !firrtl.uint<64>
      %_perfCnts_2_T_4 = firrtl.add %perfCnts_2, %c1_ui1 {name = "_perfCnts_2_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_2_T_5 = firrtl.bits %_perfCnts_2_T_4 63 to 0 {name = "_perfCnts_2_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %754 = firrtl.mux(%perfCntCond_2__bore, %_perfCnts_2_T_5, %365) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_perfCnts_3_T_4 = firrtl.add %perfCnts_3, %c1_ui1 {name = "_perfCnts_3_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_3_T_5 = firrtl.bits %_perfCnts_3_T_4 63 to 0 {name = "_perfCnts_3_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %755 = firrtl.mux(%perfCntCond_3__bore, %_perfCnts_3_T_5, %66) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_3, %755 : !firrtl.uint<64>
      %_perfCnts_4_T_4 = firrtl.add %perfCnts_4, %c1_ui1 {name = "_perfCnts_4_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_4_T_5 = firrtl.bits %_perfCnts_4_T_4 63 to 0 {name = "_perfCnts_4_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %756 = firrtl.mux(%perfCntCond_4__bore, %_perfCnts_4_T_5, %146) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_4, %756 : !firrtl.uint<64>
      %_perfCnts_5_T_4 = firrtl.add %perfCnts_5, %c1_ui1 {name = "_perfCnts_5_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_5_T_5 = firrtl.bits %_perfCnts_5_T_4 63 to 0 {name = "_perfCnts_5_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %757 = firrtl.mux(%perfCntCond_5__bore, %_perfCnts_5_T_5, %323) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_5, %757 : !firrtl.uint<64>
      %_perfCnts_6_T_4 = firrtl.add %perfCnts_6, %c1_ui1 {name = "_perfCnts_6_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_6_T_5 = firrtl.bits %_perfCnts_6_T_4 63 to 0 {name = "_perfCnts_6_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %758 = firrtl.mux(%perfCntCond_6__bore, %_perfCnts_6_T_5, %13) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_6, %758 : !firrtl.uint<64>
      %_perfCnts_7_T_4 = firrtl.add %perfCnts_7, %c1_ui1 {name = "_perfCnts_7_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_7_T_5 = firrtl.bits %_perfCnts_7_T_4 63 to 0 {name = "_perfCnts_7_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %759 = firrtl.mux(%perfCntCond_7__bore, %_perfCnts_7_T_5, %404) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_7, %759 : !firrtl.uint<64>
      %_perfCnts_8_T_4 = firrtl.add %perfCnts_8, %c1_ui1 {name = "_perfCnts_8_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_8_T_5 = firrtl.bits %_perfCnts_8_T_4 63 to 0 {name = "_perfCnts_8_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %760 = firrtl.mux(%perfCntCond_8__bore, %_perfCnts_8_T_5, %260) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_8, %760 : !firrtl.uint<64>
      %_perfCnts_9_T_4 = firrtl.add %perfCnts_9, %c1_ui1 {name = "_perfCnts_9_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_9_T_5 = firrtl.bits %_perfCnts_9_T_4 63 to 0 {name = "_perfCnts_9_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %761 = firrtl.mux(%perfCntCond_9__bore, %_perfCnts_9_T_5, %63) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_9, %761 : !firrtl.uint<64>
      %_perfCnts_10_T_4 = firrtl.add %perfCnts_10, %c1_ui1 {name = "_perfCnts_10_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_10_T_5 = firrtl.bits %_perfCnts_10_T_4 63 to 0 {name = "_perfCnts_10_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %762 = firrtl.mux(%perfCntCond_10__bore, %_perfCnts_10_T_5, %143) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_10, %762 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_11, %224 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_12, %386 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_13, %89 : !firrtl.uint<64>
      %_perfCnts_14_T_4 = firrtl.add %perfCnts_14, %c1_ui1 {name = "_perfCnts_14_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_14_T_5 = firrtl.bits %_perfCnts_14_T_4 63 to 0 {name = "_perfCnts_14_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %763 = firrtl.mux(%perfCntCond_14__bore, %_perfCnts_14_T_5, %167) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_14, %763 : !firrtl.uint<64>
      %_perfCnts_15_T_4 = firrtl.add %perfCnts_15, %c1_ui1 {name = "_perfCnts_15_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_15_T_5 = firrtl.bits %_perfCnts_15_T_4 63 to 0 {name = "_perfCnts_15_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %764 = firrtl.mux(%perfCntCond_15__bore, %_perfCnts_15_T_5, %335) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_15, %764 : !firrtl.uint<64>
      %_perfCnts_16_T_4 = firrtl.add %perfCnts_16, %c1_ui1 {name = "_perfCnts_16_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_16_T_5 = firrtl.bits %_perfCnts_16_T_4 63 to 0 {name = "_perfCnts_16_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %765 = firrtl.mux(%perfCntCond_16__bore, %_perfCnts_16_T_5, %467) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_16, %765 : !firrtl.uint<64>
      %_perfCnts_17_T_4 = firrtl.add %perfCnts_17, %c1_ui1 {name = "_perfCnts_17_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_17_T_5 = firrtl.bits %_perfCnts_17_T_4 63 to 0 {name = "_perfCnts_17_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %766 = firrtl.mux(%perfCntCond_17__bore, %_perfCnts_17_T_5, %107) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_17, %766 : !firrtl.uint<64>
      %_perfCnts_18_T_4 = firrtl.add %perfCnts_18, %c1_ui1 {name = "_perfCnts_18_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_18_T_5 = firrtl.bits %_perfCnts_18_T_4 63 to 0 {name = "_perfCnts_18_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %767 = firrtl.mux(%perfCntCond_18__bore, %_perfCnts_18_T_5, %461) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_18, %767 : !firrtl.uint<64>
      %_perfCnts_19_T_4 = firrtl.add %perfCnts_19, %c1_ui1 {name = "_perfCnts_19_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_19_T_5 = firrtl.bits %_perfCnts_19_T_4 63 to 0 {name = "_perfCnts_19_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %768 = firrtl.mux(%perfCntCond_19__bore, %_perfCnts_19_T_5, %293) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_19, %768 : !firrtl.uint<64>
      %_perfCnts_20_T_4 = firrtl.add %perfCnts_20, %c1_ui1 {name = "_perfCnts_20_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_20_T_5 = firrtl.bits %_perfCnts_20_T_4 63 to 0 {name = "_perfCnts_20_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %769 = firrtl.mux(%perfCntCond_20__bore, %_perfCnts_20_T_5, %176) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_20, %769 : !firrtl.uint<64>
      %_perfCnts_21_T_4 = firrtl.add %perfCnts_21, %c1_ui1 {name = "_perfCnts_21_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_21_T_5 = firrtl.bits %_perfCnts_21_T_4 63 to 0 {name = "_perfCnts_21_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %770 = firrtl.mux(%perfCntCond_21__bore, %_perfCnts_21_T_5, %31) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_21, %770 : !firrtl.uint<64>
      %_perfCnts_22_T_4 = firrtl.add %perfCnts_22, %c1_ui1 {name = "_perfCnts_22_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_22_T_5 = firrtl.bits %_perfCnts_22_T_4 63 to 0 {name = "_perfCnts_22_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %771 = firrtl.mux(%perfCntCond_22__bore, %_perfCnts_22_T_5, %344) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_22, %771 : !firrtl.uint<64>
      %_perfCnts_23_T_4 = firrtl.add %perfCnts_23, %c1_ui1 {name = "_perfCnts_23_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_23_T_5 = firrtl.bits %_perfCnts_23_T_4 63 to 0 {name = "_perfCnts_23_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %772 = firrtl.mux(%perfCntCond_23__bore, %_perfCnts_23_T_5, %245) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_23, %772 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_24, %149 : !firrtl.uint<64>
      %_perfCnts_25_T_4 = firrtl.add %perfCnts_25, %c1_ui1 {name = "_perfCnts_25_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_25_T_5 = firrtl.bits %_perfCnts_25_T_4 63 to 0 {name = "_perfCnts_25_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %773 = firrtl.mux(%perfCntCond_25__bore, %_perfCnts_25_T_5, %155) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_25, %773 : !firrtl.uint<64>
      %_perfCnts_26_T_4 = firrtl.add %perfCnts_26, %c1_ui1 {name = "_perfCnts_26_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_26_T_5 = firrtl.bits %_perfCnts_26_T_4 63 to 0 {name = "_perfCnts_26_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %774 = firrtl.mux(%perfCntCond_26__bore, %_perfCnts_26_T_5, %278) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_26, %774 : !firrtl.uint<64>
      %_perfCnts_27_T_4 = firrtl.add %perfCnts_27, %c1_ui1 {name = "_perfCnts_27_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_27_T_5 = firrtl.bits %_perfCnts_27_T_4 63 to 0 {name = "_perfCnts_27_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %775 = firrtl.mux(%perfCntCond_27__bore, %_perfCnts_27_T_5, %347) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_27, %775 : !firrtl.uint<64>
      %_perfCnts_28_T_4 = firrtl.add %perfCnts_28, %c1_ui1 {name = "_perfCnts_28_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_28_T_5 = firrtl.bits %_perfCnts_28_T_4 63 to 0 {name = "_perfCnts_28_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %776 = firrtl.mux(%perfCntCond_28__bore, %_perfCnts_28_T_5, %45) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_28, %776 : !firrtl.uint<64>
      %_perfCnts_29_T_4 = firrtl.add %perfCnts_29, %c1_ui1 {name = "_perfCnts_29_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_29_T_5 = firrtl.bits %_perfCnts_29_T_4 63 to 0 {name = "_perfCnts_29_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %777 = firrtl.mux(%perfCntCond_29__bore, %_perfCnts_29_T_5, %179) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_29, %777 : !firrtl.uint<64>
      %_perfCnts_30_T_4 = firrtl.add %perfCnts_30, %c1_ui1 {name = "_perfCnts_30_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_30_T_5 = firrtl.bits %_perfCnts_30_T_4 63 to 0 {name = "_perfCnts_30_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %778 = firrtl.mux(%perfCntCond_30__bore, %_perfCnts_30_T_5, %305) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_30, %778 : !firrtl.uint<64>
      %_perfCnts_31_T_4 = firrtl.add %perfCnts_31, %c1_ui1 {name = "_perfCnts_31_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_31_T_5 = firrtl.bits %_perfCnts_31_T_4 63 to 0 {name = "_perfCnts_31_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %779 = firrtl.mux(%perfCntCond_31__bore, %_perfCnts_31_T_5, %440) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_31, %779 : !firrtl.uint<64>
      %_perfCnts_32_T_4 = firrtl.add %perfCnts_32, %c1_ui1 {name = "_perfCnts_32_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_32_T_5 = firrtl.bits %_perfCnts_32_T_4 63 to 0 {name = "_perfCnts_32_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %780 = firrtl.mux(%perfCntCond_32__bore, %_perfCnts_32_T_5, %359) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_32, %780 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_33, %215 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_34, %326 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_35, %185 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_36, %83 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_37, %398 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_38, %34 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_39, %395 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_40, %251 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_41, %75 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_42, %158 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_43, %227 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_44, %350 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_45, %110 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_46, %188 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_47, %320 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_48, %446 : !firrtl.uint<64>
      %_perfCnts_49_T_4 = firrtl.add %perfCnts_49, %c1_ui1 {name = "_perfCnts_49_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_49_T_5 = firrtl.bits %_perfCnts_49_T_4 63 to 0 {name = "_perfCnts_49_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %781 = firrtl.mux(%perfCntCond_49__bore, %_perfCnts_49_T_5, %371) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_49, %781 : !firrtl.uint<64>
      %_perfCnts_50_T_4 = firrtl.add %perfCnts_50, %c1_ui1 {name = "_perfCnts_50_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_50_T_5 = firrtl.bits %_perfCnts_50_T_4 63 to 0 {name = "_perfCnts_50_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %782 = firrtl.mux(%perfCntCond_50__bore, %_perfCnts_50_T_5, %464) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_50, %782 : !firrtl.uint<64>
      %_perfCnts_51_T_4 = firrtl.add %perfCnts_51, %c1_ui1 {name = "_perfCnts_51_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_51_T_5 = firrtl.bits %_perfCnts_51_T_4 63 to 0 {name = "_perfCnts_51_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %783 = firrtl.mux(%perfCntCond_51__bore, %_perfCnts_51_T_5, %287) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_51, %783 : !firrtl.uint<64>
      %_perfCnts_52_T_4 = firrtl.add %perfCnts_52, %c1_ui1 {name = "_perfCnts_52_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_52_T_5 = firrtl.bits %_perfCnts_52_T_4 63 to 0 {name = "_perfCnts_52_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %784 = firrtl.mux(%perfCntCond_52__bore, %_perfCnts_52_T_5, %170) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_52, %784 : !firrtl.uint<64>
      %_perfCnts_53_T_4 = firrtl.add %perfCnts_53, %c1_ui1 {name = "_perfCnts_53_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_perfCnts_53_T_5 = firrtl.bits %_perfCnts_53_T_4 63 to 0 {name = "_perfCnts_53_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %785 = firrtl.mux(%perfCntCond_53__bore, %_perfCnts_53_T_5, %69) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_53, %785 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_54, %383 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_55, %257 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_56, %140 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_57, %137 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_58, %269 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_59, %374 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_60, %19 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_61, %164 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_62, %299 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_63, %452 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_64, %101 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_65, %455 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_66, %332 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_67, %194 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_68, %116 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_69, %380 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_70, %57 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_71, %458 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_72, %329 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_73, %16 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_74, %134 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_75, %233 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_76, %356 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_77, %95 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_78, %212 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_79, %152 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_80, %254 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_81, %72 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_82, %443 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_83, %308 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_84, %182 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_85, %51 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_86, %416 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_87, %341 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_88, %206 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_89, %125 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_90, %242 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_91, %392 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_92, %28 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_93, %200 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_94, %122 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_95, %281 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_96, %410 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_97, %434 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_98, %311 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_102, %39 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_103, %368 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_104, %338 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_105, %22 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_106, %119 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_107, %266 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_108, %362 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_109, %92 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_110, %191 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_111, %302 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_112, %275 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_113, %80 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_114, %422 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_115, %284 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_116, %173 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_117, %42 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_118, %407 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_119, %236 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_120, %203 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_121, %131 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_122, %230 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_123, %353 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_124, %25 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_125, %209 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_126, %317 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_127, %248 : !firrtl.uint<64>
      %_perfCnts_2_T_6 = firrtl.add %perfCnts_2, %c2_ui2 {name = "_perfCnts_2_T_6"} : (!firrtl.uint<64>, !firrtl.uint<2>) -> !firrtl.uint<65>
      %_perfCnts_2_T_7 = firrtl.bits %_perfCnts_2_T_6 63 to 0 {name = "_perfCnts_2_T_7"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %786 = firrtl.mux(%perfCntCond_3__bore, %_perfCnts_2_T_7, %754) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_2, %786 : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_101, %perfCnts_102 : !firrtl.uint<64>
      %787 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %787, %c1_ui1 : !firrtl.uint<1>
      %788 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %789 = firrtl.and %nutcoretrap__bore, %788 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %789, "======== PerfCnt =========\0A" {name = "printf_18"}  : !firrtl.clock, !firrtl.uint<1>
      %790 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %791 = firrtl.and %nutcoretrap__bore, %790 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %791, "%d <- Mcycle\0A" {name = "printf_19"} (%perfCnts_0) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %792 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %793 = firrtl.and %nutcoretrap__bore, %792 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %793, "%d <- Minstret\0A" {name = "printf_20"} (%perfCnts_2) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %794 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %795 = firrtl.and %nutcoretrap__bore, %794 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %795, "%d <- MultiCommit\0A" {name = "printf_21"} (%perfCnts_3) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %796 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %797 = firrtl.and %nutcoretrap__bore, %796 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %797, "%d <- MimemStall\0A" {name = "printf_22"} (%perfCnts_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %798 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %799 = firrtl.and %nutcoretrap__bore, %798 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %799, "%d <- MaluInstr\0A" {name = "printf_23"} (%perfCnts_5) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %800 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %801 = firrtl.and %nutcoretrap__bore, %800 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %801, "%d <- MbruInstr\0A" {name = "printf_24"} (%perfCnts_6) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %802 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %803 = firrtl.and %nutcoretrap__bore, %802 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %803, "%d <- MlsuInstr\0A" {name = "printf_25"} (%perfCnts_7) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %804 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %805 = firrtl.and %nutcoretrap__bore, %804 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %805, "%d <- MmduInstr\0A" {name = "printf_26"} (%perfCnts_8) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %806 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %807 = firrtl.and %nutcoretrap__bore, %806 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %807, "%d <- McsrInstr\0A" {name = "printf_27"} (%perfCnts_9) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %808 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %809 = firrtl.and %nutcoretrap__bore, %808 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %809, "%d <- MloadInstr\0A" {name = "printf_28"} (%perfCnts_10) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %810 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %811 = firrtl.and %nutcoretrap__bore, %810 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %811, "%d <- MmmioInstr\0A" {name = "printf_29"} (%perfCnts_11) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %812 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %813 = firrtl.and %nutcoretrap__bore, %812 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %813, "%d <- MmulInstr\0A" {name = "printf_30"} (%perfCnts_14) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %814 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %815 = firrtl.and %nutcoretrap__bore, %814 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %815, "%d <- MifuFlush\0A" {name = "printf_31"} (%perfCnts_15) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %816 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %817 = firrtl.and %nutcoretrap__bore, %816 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %817, "%d <- MbpBRight\0A" {name = "printf_32"} (%perfCnts_16) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %818 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %819 = firrtl.and %nutcoretrap__bore, %818 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %819, "%d <- MbpBWrong\0A" {name = "printf_33"} (%perfCnts_17) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %820 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %821 = firrtl.and %nutcoretrap__bore, %820 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %821, "%d <- MbpJRight\0A" {name = "printf_34"} (%perfCnts_18) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %822 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %823 = firrtl.and %nutcoretrap__bore, %822 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %823, "%d <- MbpJWrong\0A" {name = "printf_35"} (%perfCnts_19) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %824 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %825 = firrtl.and %nutcoretrap__bore, %824 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %825, "%d <- MbpIRight\0A" {name = "printf_36"} (%perfCnts_20) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %826 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %827 = firrtl.and %nutcoretrap__bore, %826 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %827, "%d <- MbpIWrong\0A" {name = "printf_37"} (%perfCnts_21) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %828 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %829 = firrtl.and %nutcoretrap__bore, %828 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %829, "%d <- MbpRRight\0A" {name = "printf_38"} (%perfCnts_22) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %830 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %831 = firrtl.and %nutcoretrap__bore, %830 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %831, "%d <- MbpRWrong\0A" {name = "printf_39"} (%perfCnts_23) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %832 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %833 = firrtl.and %nutcoretrap__bore, %832 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %833, "%d <- Custom1\0A" {name = "printf_40"} (%perfCnts_25) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %834 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %835 = firrtl.and %nutcoretrap__bore, %834 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %835, "%d <- Custom2\0A" {name = "printf_41"} (%perfCnts_26) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %836 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %837 = firrtl.and %nutcoretrap__bore, %836 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %837, "%d <- Custom3\0A" {name = "printf_42"} (%perfCnts_27) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %838 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %839 = firrtl.and %nutcoretrap__bore, %838 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %839, "%d <- Custom4\0A" {name = "printf_43"} (%perfCnts_28) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %840 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %841 = firrtl.and %nutcoretrap__bore, %840 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %841, "%d <- Custom5\0A" {name = "printf_44"} (%perfCnts_29) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %842 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %843 = firrtl.and %nutcoretrap__bore, %842 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %843, "%d <- Custom6\0A" {name = "printf_45"} (%perfCnts_30) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %844 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %845 = firrtl.and %nutcoretrap__bore, %844 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %845, "%d <- Custom7\0A" {name = "printf_46"} (%perfCnts_31) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %846 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %847 = firrtl.and %nutcoretrap__bore, %846 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %847, "%d <- Custom8\0A" {name = "printf_47"} (%perfCnts_32) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %848 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %849 = firrtl.and %nutcoretrap__bore, %848 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %849, "%d <- MrawStall\0A" {name = "printf_48"} (%perfCnts_49) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %850 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %851 = firrtl.and %nutcoretrap__bore, %850 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %851, "%d <- MexuBusy\0A" {name = "printf_49"} (%perfCnts_50) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %852 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %853 = firrtl.and %nutcoretrap__bore, %852 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %853, "%d <- MloadStall\0A" {name = "printf_50"} (%perfCnts_51) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %854 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %855 = firrtl.and %nutcoretrap__bore, %854 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %855, "%d <- MstoreStall\0A" {name = "printf_51"} (%perfCnts_52) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %856 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %857 = firrtl.and %nutcoretrap__bore, %856 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %857, "%d <- ISUIssue\0A" {name = "printf_52"} (%perfCnts_53) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %858 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %859 = firrtl.and %nutcoretrap__bore, %858 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %859, "======== PerfCntCSV =========\0A\0A" {name = "printf_53"}  : !firrtl.clock, !firrtl.uint<1>
      %860 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %861 = firrtl.and %nutcoretrap__bore, %860 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %861, "Mcycle, " {name = "printf_54"}  : !firrtl.clock, !firrtl.uint<1>
      %862 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %863 = firrtl.and %nutcoretrap__bore, %862 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %863, "Minstret, " {name = "printf_55"}  : !firrtl.clock, !firrtl.uint<1>
      %864 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %865 = firrtl.and %nutcoretrap__bore, %864 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %865, "MultiCommit, " {name = "printf_56"}  : !firrtl.clock, !firrtl.uint<1>
      %866 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %867 = firrtl.and %nutcoretrap__bore, %866 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %867, "MimemStall, " {name = "printf_57"}  : !firrtl.clock, !firrtl.uint<1>
      %868 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %869 = firrtl.and %nutcoretrap__bore, %868 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %869, "MaluInstr, " {name = "printf_58"}  : !firrtl.clock, !firrtl.uint<1>
      %870 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %871 = firrtl.and %nutcoretrap__bore, %870 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %871, "MbruInstr, " {name = "printf_59"}  : !firrtl.clock, !firrtl.uint<1>
      %872 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %873 = firrtl.and %nutcoretrap__bore, %872 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %873, "MlsuInstr, " {name = "printf_60"}  : !firrtl.clock, !firrtl.uint<1>
      %874 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %875 = firrtl.and %nutcoretrap__bore, %874 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %875, "MmduInstr, " {name = "printf_61"}  : !firrtl.clock, !firrtl.uint<1>
      %876 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %877 = firrtl.and %nutcoretrap__bore, %876 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %877, "McsrInstr, " {name = "printf_62"}  : !firrtl.clock, !firrtl.uint<1>
      %878 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %879 = firrtl.and %nutcoretrap__bore, %878 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %879, "MloadInstr, " {name = "printf_63"}  : !firrtl.clock, !firrtl.uint<1>
      %880 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %881 = firrtl.and %nutcoretrap__bore, %880 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %881, "MmmioInstr, " {name = "printf_64"}  : !firrtl.clock, !firrtl.uint<1>
      %882 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %883 = firrtl.and %nutcoretrap__bore, %882 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %883, "MmulInstr, " {name = "printf_65"}  : !firrtl.clock, !firrtl.uint<1>
      %884 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %885 = firrtl.and %nutcoretrap__bore, %884 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %885, "MifuFlush, " {name = "printf_66"}  : !firrtl.clock, !firrtl.uint<1>
      %886 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %887 = firrtl.and %nutcoretrap__bore, %886 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %887, "MbpBRight, " {name = "printf_67"}  : !firrtl.clock, !firrtl.uint<1>
      %888 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %889 = firrtl.and %nutcoretrap__bore, %888 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %889, "MbpBWrong, " {name = "printf_68"}  : !firrtl.clock, !firrtl.uint<1>
      %890 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %891 = firrtl.and %nutcoretrap__bore, %890 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %891, "MbpJRight, " {name = "printf_69"}  : !firrtl.clock, !firrtl.uint<1>
      %892 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %893 = firrtl.and %nutcoretrap__bore, %892 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %893, "MbpJWrong, " {name = "printf_70"}  : !firrtl.clock, !firrtl.uint<1>
      %894 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %895 = firrtl.and %nutcoretrap__bore, %894 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %895, "MbpIRight, " {name = "printf_71"}  : !firrtl.clock, !firrtl.uint<1>
      %896 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %897 = firrtl.and %nutcoretrap__bore, %896 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %897, "MbpIWrong, " {name = "printf_72"}  : !firrtl.clock, !firrtl.uint<1>
      %898 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %899 = firrtl.and %nutcoretrap__bore, %898 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %899, "MbpRRight, " {name = "printf_73"}  : !firrtl.clock, !firrtl.uint<1>
      %900 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %901 = firrtl.and %nutcoretrap__bore, %900 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %901, "MbpRWrong, " {name = "printf_74"}  : !firrtl.clock, !firrtl.uint<1>
      %902 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %903 = firrtl.and %nutcoretrap__bore, %902 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %903, "Custom1, " {name = "printf_75"}  : !firrtl.clock, !firrtl.uint<1>
      %904 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %905 = firrtl.and %nutcoretrap__bore, %904 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %905, "Custom2, " {name = "printf_76"}  : !firrtl.clock, !firrtl.uint<1>
      %906 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %907 = firrtl.and %nutcoretrap__bore, %906 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %907, "Custom3, " {name = "printf_77"}  : !firrtl.clock, !firrtl.uint<1>
      %908 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %909 = firrtl.and %nutcoretrap__bore, %908 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %909, "Custom4, " {name = "printf_78"}  : !firrtl.clock, !firrtl.uint<1>
      %910 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %911 = firrtl.and %nutcoretrap__bore, %910 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %911, "Custom5, " {name = "printf_79"}  : !firrtl.clock, !firrtl.uint<1>
      %912 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %913 = firrtl.and %nutcoretrap__bore, %912 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %913, "Custom6, " {name = "printf_80"}  : !firrtl.clock, !firrtl.uint<1>
      %914 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %915 = firrtl.and %nutcoretrap__bore, %914 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %915, "Custom7, " {name = "printf_81"}  : !firrtl.clock, !firrtl.uint<1>
      %916 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %917 = firrtl.and %nutcoretrap__bore, %916 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %917, "Custom8, " {name = "printf_82"}  : !firrtl.clock, !firrtl.uint<1>
      %918 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %919 = firrtl.and %nutcoretrap__bore, %918 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %919, "MrawStall, " {name = "printf_83"}  : !firrtl.clock, !firrtl.uint<1>
      %920 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %921 = firrtl.and %nutcoretrap__bore, %920 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %921, "MexuBusy, " {name = "printf_84"}  : !firrtl.clock, !firrtl.uint<1>
      %922 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %923 = firrtl.and %nutcoretrap__bore, %922 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %923, "MloadStall, " {name = "printf_85"}  : !firrtl.clock, !firrtl.uint<1>
      %924 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %925 = firrtl.and %nutcoretrap__bore, %924 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %925, "MstoreStall, " {name = "printf_86"}  : !firrtl.clock, !firrtl.uint<1>
      %926 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %927 = firrtl.and %nutcoretrap__bore, %926 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %927, "ISUIssue, " {name = "printf_87"}  : !firrtl.clock, !firrtl.uint<1>
      %928 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %929 = firrtl.and %nutcoretrap__bore, %928 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %929, "\0A\0A\0A" {name = "printf_88"}  : !firrtl.clock, !firrtl.uint<1>
      %930 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %931 = firrtl.and %nutcoretrap__bore, %930 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %931, "%d, " {name = "printf_89"} (%perfCnts_0) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %932 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %933 = firrtl.and %nutcoretrap__bore, %932 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %933, "%d, " {name = "printf_90"} (%perfCnts_2) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %934 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %935 = firrtl.and %nutcoretrap__bore, %934 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %935, "%d, " {name = "printf_91"} (%perfCnts_3) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %936 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %937 = firrtl.and %nutcoretrap__bore, %936 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %937, "%d, " {name = "printf_92"} (%perfCnts_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %938 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %939 = firrtl.and %nutcoretrap__bore, %938 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %939, "%d, " {name = "printf_93"} (%perfCnts_5) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %940 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %941 = firrtl.and %nutcoretrap__bore, %940 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %941, "%d, " {name = "printf_94"} (%perfCnts_6) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %942 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %943 = firrtl.and %nutcoretrap__bore, %942 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %943, "%d, " {name = "printf_95"} (%perfCnts_7) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %944 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %945 = firrtl.and %nutcoretrap__bore, %944 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %945, "%d, " {name = "printf_96"} (%perfCnts_8) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %946 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %947 = firrtl.and %nutcoretrap__bore, %946 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %947, "%d, " {name = "printf_97"} (%perfCnts_9) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %948 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %949 = firrtl.and %nutcoretrap__bore, %948 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %949, "%d, " {name = "printf_98"} (%perfCnts_10) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %950 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %951 = firrtl.and %nutcoretrap__bore, %950 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %951, "%d, " {name = "printf_99"} (%perfCnts_11) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %952 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %953 = firrtl.and %nutcoretrap__bore, %952 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %953, "%d, " {name = "printf_100"} (%perfCnts_14) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %954 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %955 = firrtl.and %nutcoretrap__bore, %954 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %955, "%d, " {name = "printf_101"} (%perfCnts_15) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %956 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %957 = firrtl.and %nutcoretrap__bore, %956 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %957, "%d, " {name = "printf_102"} (%perfCnts_16) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %958 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %959 = firrtl.and %nutcoretrap__bore, %958 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %959, "%d, " {name = "printf_103"} (%perfCnts_17) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %960 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %961 = firrtl.and %nutcoretrap__bore, %960 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %961, "%d, " {name = "printf_104"} (%perfCnts_18) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %962 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %963 = firrtl.and %nutcoretrap__bore, %962 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %963, "%d, " {name = "printf_105"} (%perfCnts_19) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %964 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %965 = firrtl.and %nutcoretrap__bore, %964 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %965, "%d, " {name = "printf_106"} (%perfCnts_20) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %966 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %967 = firrtl.and %nutcoretrap__bore, %966 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %967, "%d, " {name = "printf_107"} (%perfCnts_21) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %968 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %969 = firrtl.and %nutcoretrap__bore, %968 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %969, "%d, " {name = "printf_108"} (%perfCnts_22) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %970 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %971 = firrtl.and %nutcoretrap__bore, %970 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %971, "%d, " {name = "printf_109"} (%perfCnts_23) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %972 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %973 = firrtl.and %nutcoretrap__bore, %972 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %973, "%d, " {name = "printf_110"} (%perfCnts_25) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %974 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %975 = firrtl.and %nutcoretrap__bore, %974 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %975, "%d, " {name = "printf_111"} (%perfCnts_26) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %976 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %977 = firrtl.and %nutcoretrap__bore, %976 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %977, "%d, " {name = "printf_112"} (%perfCnts_27) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %978 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %979 = firrtl.and %nutcoretrap__bore, %978 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %979, "%d, " {name = "printf_113"} (%perfCnts_28) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %980 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %981 = firrtl.and %nutcoretrap__bore, %980 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %981, "%d, " {name = "printf_114"} (%perfCnts_29) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %982 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %983 = firrtl.and %nutcoretrap__bore, %982 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %983, "%d, " {name = "printf_115"} (%perfCnts_30) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %984 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %985 = firrtl.and %nutcoretrap__bore, %984 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %985, "%d, " {name = "printf_116"} (%perfCnts_31) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %986 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %987 = firrtl.and %nutcoretrap__bore, %986 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %987, "%d, " {name = "printf_117"} (%perfCnts_32) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %988 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %989 = firrtl.and %nutcoretrap__bore, %988 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %989, "%d, " {name = "printf_118"} (%perfCnts_49) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %990 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %991 = firrtl.and %nutcoretrap__bore, %990 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %991, "%d, " {name = "printf_119"} (%perfCnts_50) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %992 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %993 = firrtl.and %nutcoretrap__bore, %992 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %993, "%d, " {name = "printf_120"} (%perfCnts_51) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %994 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %995 = firrtl.and %nutcoretrap__bore, %994 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %995, "%d, " {name = "printf_121"} (%perfCnts_52) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %996 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %997 = firrtl.and %nutcoretrap__bore, %996 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %997, "%d, " {name = "printf_122"} (%perfCnts_53) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %998 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %999 = firrtl.and %nutcoretrap__bore, %998 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %999, "\0A\0A\0A" {name = "printf_123"}  : !firrtl.clock, !firrtl.uint<1>
      %CSRDiffWrapper_clock, %CSRDiffWrapper_io_csrState_priviledgeMode, %CSRDiffWrapper_io_csrState_mstatus, %CSRDiffWrapper_io_csrState_sstatus, %CSRDiffWrapper_io_csrState_mepc, %CSRDiffWrapper_io_csrState_sepc, %CSRDiffWrapper_io_csrState_mtval, %CSRDiffWrapper_io_csrState_stval, %CSRDiffWrapper_io_csrState_mtvec, %CSRDiffWrapper_io_csrState_stvec, %CSRDiffWrapper_io_csrState_mcause, %CSRDiffWrapper_io_csrState_scause, %CSRDiffWrapper_io_csrState_satp, %CSRDiffWrapper_io_csrState_mip, %CSRDiffWrapper_io_csrState_mie, %CSRDiffWrapper_io_csrState_mscratch, %CSRDiffWrapper_io_csrState_sscratch, %CSRDiffWrapper_io_csrState_mideleg, %CSRDiffWrapper_io_csrState_medeleg, %CSRDiffWrapper_io_archEvent_valid, %CSRDiffWrapper_io_archEvent_interrupt, %CSRDiffWrapper_io_archEvent_exception, %CSRDiffWrapper_io_archEvent_exceptionPC, %CSRDiffWrapper_io_archEvent_exceptionInst = firrtl.instance CSRDiffWrapper @CSRDiffWrapper(in clock: !firrtl.clock, in io_csrState_priviledgeMode: !firrtl.uint<64>, in io_csrState_mstatus: !firrtl.uint<64>, in io_csrState_sstatus: !firrtl.uint<64>, in io_csrState_mepc: !firrtl.uint<64>, in io_csrState_sepc: !firrtl.uint<64>, in io_csrState_mtval: !firrtl.uint<64>, in io_csrState_stval: !firrtl.uint<64>, in io_csrState_mtvec: !firrtl.uint<64>, in io_csrState_stvec: !firrtl.uint<64>, in io_csrState_mcause: !firrtl.uint<64>, in io_csrState_scause: !firrtl.uint<64>, in io_csrState_satp: !firrtl.uint<64>, in io_csrState_mip: !firrtl.uint<64>, in io_csrState_mie: !firrtl.uint<64>, in io_csrState_mscratch: !firrtl.uint<64>, in io_csrState_sscratch: !firrtl.uint<64>, in io_csrState_mideleg: !firrtl.uint<64>, in io_csrState_medeleg: !firrtl.uint<64>, in io_archEvent_valid: !firrtl.uint<1>, in io_archEvent_interrupt: !firrtl.uint<32>, in io_archEvent_exception: !firrtl.uint<32>, in io_archEvent_exceptionPC: !firrtl.uint<64>, in io_archEvent_exceptionInst: !firrtl.uint<32>)
      %1000 = firrtl.wire : !firrtl.uint<64>
      %1001 = firrtl.wire : !firrtl.uint<64>
      %1002 = firrtl.wire : !firrtl.uint<64>
      %1003 = firrtl.wire : !firrtl.uint<64>
      %1004 = firrtl.wire : !firrtl.uint<64>
      %1005 = firrtl.wire : !firrtl.uint<64>
      %1006 = firrtl.wire : !firrtl.uint<64>
      %1007 = firrtl.wire : !firrtl.uint<64>
      %1008 = firrtl.wire : !firrtl.uint<64>
      %1009 = firrtl.wire : !firrtl.uint<64>
      %1010 = firrtl.wire : !firrtl.uint<64>
      %1011 = firrtl.wire : !firrtl.uint<64>
      %1012 = firrtl.wire : !firrtl.uint<64>
      %1013 = firrtl.wire : !firrtl.uint<64>
      %1014 = firrtl.wire : !firrtl.uint<64>
      %1015 = firrtl.wire : !firrtl.uint<64>
      %1016 = firrtl.wire : !firrtl.uint<64>
      %1017 = firrtl.wire : !firrtl.uint<64>
      %1018 = firrtl.wire : !firrtl.uint<1>
      %1019 = firrtl.wire : !firrtl.uint<32>
      %1020 = firrtl.wire : !firrtl.uint<32>
      %1021 = firrtl.wire : !firrtl.uint<64>
      %1022 = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_priviledgeMode, %1000 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mstatus, %1001 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_sstatus, %1002 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mepc, %1003 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_sepc, %1004 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mtval, %1005 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_stval, %1006 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mtvec, %1007 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_stvec, %1008 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mcause, %1009 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_scause, %1010 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_satp, %1011 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mip, %1012 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mie, %1013 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mscratch, %1014 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_sscratch, %1015 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_mideleg, %1016 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_csrState_medeleg, %1017 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_archEvent_valid, %1018 : !firrtl.uint<1>
      firrtl.strictconnect %CSRDiffWrapper_io_archEvent_interrupt, %1019 : !firrtl.uint<32>
      firrtl.strictconnect %CSRDiffWrapper_io_archEvent_exception, %1020 : !firrtl.uint<32>
      firrtl.strictconnect %CSRDiffWrapper_io_archEvent_exceptionPC, %1021 : !firrtl.uint<64>
      firrtl.strictconnect %CSRDiffWrapper_io_archEvent_exceptionInst, %1022 : !firrtl.uint<32>
      firrtl.strictconnect %CSRDiffWrapper_clock, %clock : !firrtl.clock
      %1023 = firrtl.pad %priviledgeMode, 64 : (!firrtl.uint<2>) -> !firrtl.uint<64>
      firrtl.strictconnect %1000, %1023 : !firrtl.uint<64>
      firrtl.strictconnect %1001, %mstatus : !firrtl.uint<64>
      firrtl.strictconnect %1002, %_rdata_T_54 : !firrtl.uint<64>
      firrtl.strictconnect %1003, %mepc : !firrtl.uint<64>
      firrtl.strictconnect %1004, %sepc : !firrtl.uint<64>
      firrtl.strictconnect %1005, %mtval : !firrtl.uint<64>
      firrtl.strictconnect %1006, %stval : !firrtl.uint<64>
      firrtl.strictconnect %1007, %mtvec : !firrtl.uint<64>
      firrtl.strictconnect %1008, %stvec : !firrtl.uint<64>
      firrtl.strictconnect %1009, %mcause : !firrtl.uint<64>
      firrtl.strictconnect %1010, %scause : !firrtl.uint<64>
      firrtl.strictconnect %1011, %satp : !firrtl.uint<64>
      firrtl.strictconnect %1012, %mipReg : !firrtl.uint<64>
      firrtl.strictconnect %1013, %mie : !firrtl.uint<64>
      firrtl.strictconnect %1014, %mscratch : !firrtl.uint<64>
      firrtl.strictconnect %1015, %sscratch : !firrtl.uint<64>
      firrtl.strictconnect %1016, %mideleg : !firrtl.uint<64>
      firrtl.strictconnect %1017, %medeleg : !firrtl.uint<64>
      firrtl.strictconnect %1018, %raiseExceptionIntr : !firrtl.uint<1>
      %1024 = firrtl.and %raiseIntr, %io_instrValid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1025 = firrtl.mux(%1024, %intrNO, %c0_ui4) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %1026 = firrtl.pad %1025, 32 : (!firrtl.uint<4>) -> !firrtl.uint<32>
      firrtl.strictconnect %1019, %1026 : !firrtl.uint<32>
      %1027 = firrtl.and %raiseException, %io_instrValid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1028 = firrtl.mux(%1027, %exceptionNO, %c0_ui4) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %1029 = firrtl.pad %1028, 32 : (!firrtl.uint<4>) -> !firrtl.uint<32>
      firrtl.strictconnect %1020, %1029 : !firrtl.uint<32>
      %signBit_2 = firrtl.bits %io_cfIn_pc 38 to 38 {name = "signBit_2"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %1030 = firrtl.mux(%signBit_2, %c33554431_ui25, %c0_ui25) : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %1031 = firrtl.cat %1030, %io_cfIn_pc : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      firrtl.strictconnect %1021, %1031 : !firrtl.uint<64>
      %1032 = firrtl.bits %io_cfIn_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      firrtl.strictconnect %1022, %1032 : !firrtl.uint<32>
      firrtl.strictconnect %perfCntCond_0, %787 : !firrtl.uint<1>
      firrtl.strictconnect %lr__bore, %lr : !firrtl.uint<1>
      firrtl.strictconnect %lrAddr__bore, %lrAddr : !firrtl.uint<64>
      firrtl.strictconnect %satp__bore, %satp : !firrtl.uint<64>
      firrtl.strictconnect %satp__bore_0, %satp : !firrtl.uint<64>
      firrtl.strictconnect %perfCnts_0__bore, %perfCnts_0 : !firrtl.uint<64>
      firrtl.strictconnect %_WIRE__bore, %683 : !firrtl.uint<12>
      firrtl.strictconnect %_WIRE__bore_0, %683 : !firrtl.uint<12>
      firrtl.strictconnect %perfCnts_2__bore, %perfCnts_2 : !firrtl.uint<64>
    }
    firrtl.module private @MOU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_func: !firrtl.uint<7>, in %io_cfIn_pc: !firrtl.uint<39>, out %io_redirect_target: !firrtl.uint<39>, out %io_redirect_valid: !firrtl.uint<1>, out %_WIRE_1__bore: !firrtl.uint<1>, out %_WIRE_1__bore_0: !firrtl.uint<1>, out %_WIRE_1__bore_1: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>, out %_WIRE__bore_0: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "io_in_ready"}
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %io_redirect_target_0 = firrtl.wire {name = "io_redirect_target"} : !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_target, %io_redirect_target_0 : !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_valid, %io_in_valid : !firrtl.uint<1>
      %_io_redirect_target_T = firrtl.add %io_cfIn_pc, %c4_ui3 {name = "_io_redirect_target_T"} : (!firrtl.uint<39>, !firrtl.uint<3>) -> !firrtl.uint<40>
      %_io_redirect_target_T_1 = firrtl.bits %_io_redirect_target_T 38 to 0 {name = "_io_redirect_target_T_1"} : (!firrtl.uint<40>) -> !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_target_0, %_io_redirect_target_T_1 : !firrtl.uint<39>
      %_flushICache_T = firrtl.eq %io_in_bits_func, %c1_ui1 {name = "_flushICache_T"} : (!firrtl.uint<7>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %flushICache = firrtl.and %io_in_valid, %_flushICache_T {name = "flushICache"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %0, %flushICache : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %1 = firrtl.and %flushICache, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.and %1, %2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %3, "[%d] MOU: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %4 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.and %1, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %5, "Flush I$ at %x\0A" {name = "printf_1"} (%io_cfIn_pc) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>
      %_flushTLB_T = firrtl.eq %io_in_bits_func, %c2_ui2 {name = "_flushTLB_T"} : (!firrtl.uint<7>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %flushTLB = firrtl.and %io_in_valid, %_flushTLB_T {name = "flushTLB"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %6, %flushTLB : !firrtl.uint<1>
      %7 = firrtl.and %flushTLB, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %9 = firrtl.and %7, %8 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %9, "[%d] MOU: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %10 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %11 = firrtl.and %7, %10 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %11, "Sfence.vma at %x\0A" {name = "printf_3"} (%io_cfIn_pc) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>
      firrtl.strictconnect %_WIRE_1__bore, %6 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_1__bore_0, %6 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_1__bore_1, %6 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %0 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore_0, %0 : !firrtl.uint<1>
    }
    firrtl.extmodule private @DifftestTrapEvent(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_hasTrap: !firrtl.uint<1>, in io_cycleCnt: !firrtl.uint<64>, in io_instrCnt: !firrtl.uint<64>, in io_hasWFI: !firrtl.uint<1>, in io_code: !firrtl.uint<3>, in io_pc: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "DifftestTrapEvent"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "DifftestTrapEvent"}
    firrtl.module private @DummyDPICWrapper_3(in %clock: !firrtl.clock, in %io_hasTrap: !firrtl.uint<1>, in %io_cycleCnt: !firrtl.uint<64>, in %io_instrCnt: !firrtl.uint<64>, in %io_code: !firrtl.uint<3>, in %io_pc: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %dpic_clock, %dpic_enable, %dpic_io_hasTrap, %dpic_io_cycleCnt, %dpic_io_instrCnt, %dpic_io_hasWFI, %dpic_io_code, %dpic_io_pc, %dpic_io_coreid = firrtl.instance dpic @DifftestTrapEvent(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_hasTrap: !firrtl.uint<1>, in io_cycleCnt: !firrtl.uint<64>, in io_instrCnt: !firrtl.uint<64>, in io_hasWFI: !firrtl.uint<1>, in io_code: !firrtl.uint<3>, in io_pc: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>)
      firrtl.strictconnect %dpic_io_hasTrap, %io_hasTrap : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_cycleCnt, %io_cycleCnt : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_instrCnt, %io_instrCnt : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_hasWFI, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_code, %io_code : !firrtl.uint<3>
      firrtl.strictconnect %dpic_io_pc, %io_pc : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_coreid, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dpic_enable, %c1_ui1 : !firrtl.uint<1>
    }
    firrtl.module private @EXU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_cf_instr: !firrtl.uint<64>, in %io_in_bits_cf_pc: !firrtl.uint<39>, in %io_in_bits_cf_pnpc: !firrtl.uint<39>, in %io_in_bits_cf_exceptionVec_0: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_1: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_2: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_3: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_5: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_7: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_8: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_9: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_10: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_11: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_12: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_13: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_14: !firrtl.uint<1>, in %io_in_bits_cf_exceptionVec_15: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_0: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_1: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_2: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_3: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_4: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_5: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_6: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_7: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_8: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_9: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_10: !firrtl.uint<1>, in %io_in_bits_cf_intrVec_11: !firrtl.uint<1>, in %io_in_bits_cf_brIdx: !firrtl.uint<4>, in %io_in_bits_cf_crossPageIPFFix: !firrtl.uint<1>, in %io_in_bits_ctrl_fuType: !firrtl.uint<3>, in %io_in_bits_ctrl_fuOpType: !firrtl.uint<7>, in %io_in_bits_ctrl_rfWen: !firrtl.uint<1>, in %io_in_bits_ctrl_rfDest: !firrtl.uint<5>, in %io_in_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, in %io_in_bits_data_src1: !firrtl.uint<64>, in %io_in_bits_data_src2: !firrtl.uint<64>, in %io_in_bits_data_imm: !firrtl.uint<64>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_decode_cf_instr: !firrtl.uint<64>, out %io_out_bits_decode_cf_pc: !firrtl.uint<39>, out %io_out_bits_decode_cf_redirect_target: !firrtl.uint<39>, out %io_out_bits_decode_cf_redirect_valid: !firrtl.uint<1>, out %io_out_bits_decode_ctrl_fuType: !firrtl.uint<3>, out %io_out_bits_decode_ctrl_rfWen: !firrtl.uint<1>, out %io_out_bits_decode_ctrl_rfDest: !firrtl.uint<5>, out %io_out_bits_isMMIO: !firrtl.uint<1>, out %io_out_bits_intrNO: !firrtl.uint<64>, out %io_out_bits_commits_0: !firrtl.uint<64>, out %io_out_bits_commits_1: !firrtl.uint<64>, out %io_out_bits_commits_2: !firrtl.uint<64>, out %io_out_bits_commits_3: !firrtl.uint<64>, in %io_flush: !firrtl.uint<1>, in %io_dmem_req_ready: !firrtl.uint<1>, out %io_dmem_req_valid: !firrtl.uint<1>, out %io_dmem_req_bits_addr: !firrtl.uint<39>, out %io_dmem_req_bits_size: !firrtl.uint<3>, out %io_dmem_req_bits_cmd: !firrtl.uint<4>, out %io_dmem_req_bits_wmask: !firrtl.uint<8>, out %io_dmem_req_bits_wdata: !firrtl.uint<64>, in %io_dmem_resp_valid: !firrtl.uint<1>, in %io_dmem_resp_bits_rdata: !firrtl.uint<64>, out %io_forward_valid: !firrtl.uint<1>, out %io_forward_wb_rfWen: !firrtl.uint<1>, out %io_forward_wb_rfDest: !firrtl.uint<5>, out %io_forward_wb_rfData: !firrtl.uint<64>, out %io_forward_fuType: !firrtl.uint<3>, out %io_memMMU_imem_priviledgeMode: !firrtl.uint<2>, out %io_memMMU_dmem_priviledgeMode: !firrtl.uint<2>, out %io_memMMU_dmem_status_sum: !firrtl.uint<1>, out %io_memMMU_dmem_status_mxr: !firrtl.uint<1>, in %io_memMMU_dmem_loadPF: !firrtl.uint<1>, in %io_memMMU_dmem_storePF: !firrtl.uint<1>, in %io_memMMU_dmem_addr: !firrtl.uint<39>, in %lsu_lsExecUnit_dtlbPF__bore: !firrtl.uint<1>, in %lsu_dtlbPF__bore: !firrtl.uint<1>, out %alu_REG__bore_valid: !firrtl.uint<1>, out %alu_REG__bore_pc: !firrtl.uint<39>, out %alu_REG__bore_isMissPredict: !firrtl.uint<1>, out %alu_REG__bore_actualTarget: !firrtl.uint<39>, out %alu_REG__bore_actualTaken: !firrtl.uint<1>, out %alu_REG__bore_fuOpType: !firrtl.uint<7>, out %alu_REG__bore_btbType: !firrtl.uint<2>, out %alu_REG__bore_isRVC: !firrtl.uint<1>, in %csr_perfCntCond_4__bore: !firrtl.uint<1>, in %lsu_lsExecUnit_dtlbEnable__bore: !firrtl.uint<1>, out %csr_satp__bore: !firrtl.uint<64>, out %csr_satp__bore_0: !firrtl.uint<64>, in %csr_perfCntCond_53__bore: !firrtl.uint<1>, in %csr_msip__bore: !firrtl.uint<1>, in %csr_meip__bore: !firrtl.uint<1>, in %csr_perfCntCond_2__bore: !firrtl.uint<1>, out %mou__WIRE_1__bore: !firrtl.uint<1>, out %mou__WIRE_1__bore_0: !firrtl.uint<1>, out %mou__WIRE_1__bore_1: !firrtl.uint<1>, in %lsu_lsuMMIO__bore: !firrtl.uint<1>, in %csr_mtip__bore: !firrtl.uint<1>, in %csr_perfCntCond_50__bore: !firrtl.uint<1>, in %csr_perfCntCond_3__bore: !firrtl.uint<1>, out %csr__WIRE__bore: !firrtl.uint<12>, out %csr__WIRE__bore_0: !firrtl.uint<12>, out %mou__WIRE__bore: !firrtl.uint<1>, out %mou__WIRE__bore_0: !firrtl.uint<1>, in %csr_perfCntCond_49__bore: !firrtl.uint<1>, in %csr_perfCntCond_15__bore: !firrtl.uint<1>, in %lsu_lsExecUnit_dtlbFinish__bore: !firrtl.uint<1>, out %lsu__WIRE__bore: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c1073741824_ui31 = firrtl.constant 1073741824 : !firrtl.uint<31>
      %c805306368_ui30 = firrtl.constant 805306368 : !firrtl.uint<30>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_decode_cf_redirect_target_2 = firrtl.wire {name = "io_out_bits_decode_cf_redirect_target"} : !firrtl.uint<39>
      %io_out_bits_decode_cf_redirect_valid_3 = firrtl.wire {name = "io_out_bits_decode_cf_redirect_valid"} : !firrtl.uint<1>
      %io_out_bits_decode_ctrl_rfWen_4 = firrtl.wire {name = "io_out_bits_decode_ctrl_rfWen"} : !firrtl.uint<1>
      %io_out_bits_isMMIO_5 = firrtl.wire {name = "io_out_bits_isMMIO"} : !firrtl.uint<1>
      %io_out_bits_intrNO_6 = firrtl.wire {name = "io_out_bits_intrNO"} : !firrtl.uint<64>
      %io_out_bits_commits_0_7 = firrtl.wire {name = "io_out_bits_commits_0"} : !firrtl.uint<64>
      %io_out_bits_commits_1_8 = firrtl.wire {name = "io_out_bits_commits_1"} : !firrtl.uint<64>
      %io_out_bits_commits_2_9 = firrtl.wire {name = "io_out_bits_commits_2"} : !firrtl.uint<64>
      %io_out_bits_commits_3_10 = firrtl.wire {name = "io_out_bits_commits_3"} : !firrtl.uint<64>
      %io_dmem_req_valid_11 = firrtl.wire {name = "io_dmem_req_valid"} : !firrtl.uint<1>
      %io_dmem_req_bits_addr_12 = firrtl.wire {name = "io_dmem_req_bits_addr"} : !firrtl.uint<39>
      %io_dmem_req_bits_size_13 = firrtl.wire {name = "io_dmem_req_bits_size"} : !firrtl.uint<3>
      %io_dmem_req_bits_cmd_14 = firrtl.wire {name = "io_dmem_req_bits_cmd"} : !firrtl.uint<4>
      %io_dmem_req_bits_wmask_15 = firrtl.wire {name = "io_dmem_req_bits_wmask"} : !firrtl.uint<8>
      %io_dmem_req_bits_wdata_16 = firrtl.wire {name = "io_dmem_req_bits_wdata"} : !firrtl.uint<64>
      %io_forward_wb_rfData_17 = firrtl.wire {name = "io_forward_wb_rfData"} : !firrtl.uint<64>
      %io_memMMU_imem_priviledgeMode_18 = firrtl.wire {name = "io_memMMU_imem_priviledgeMode"} : !firrtl.uint<2>
      %io_memMMU_dmem_priviledgeMode_19 = firrtl.wire {name = "io_memMMU_dmem_priviledgeMode"} : !firrtl.uint<2>
      %io_memMMU_dmem_status_sum_20 = firrtl.wire {name = "io_memMMU_dmem_status_sum"} : !firrtl.uint<1>
      %io_memMMU_dmem_status_mxr_21 = firrtl.wire {name = "io_memMMU_dmem_status_mxr"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_decode_cf_instr, %io_in_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_decode_cf_pc, %io_in_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_decode_cf_redirect_target, %io_out_bits_decode_cf_redirect_target_2 : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_decode_cf_redirect_valid, %io_out_bits_decode_cf_redirect_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_decode_ctrl_fuType, %io_in_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_decode_ctrl_rfWen, %io_out_bits_decode_ctrl_rfWen_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_decode_ctrl_rfDest, %io_in_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %io_out_bits_isMMIO, %io_out_bits_isMMIO_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_intrNO, %io_out_bits_intrNO_6 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_commits_0, %io_out_bits_commits_0_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_commits_1, %io_out_bits_commits_1_8 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_commits_2, %io_out_bits_commits_2_9 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_commits_3, %io_out_bits_commits_3_10 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_req_valid, %io_dmem_req_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_bits_addr, %io_dmem_req_bits_addr_12 : !firrtl.uint<39>
      firrtl.strictconnect %io_dmem_req_bits_size, %io_dmem_req_bits_size_13 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_cmd, %io_dmem_req_bits_cmd_14 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_wmask, %io_dmem_req_bits_wmask_15 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wdata, %io_dmem_req_bits_wdata_16 : !firrtl.uint<64>
      firrtl.strictconnect %io_forward_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_forward_wb_rfWen, %io_in_bits_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %io_forward_wb_rfDest, %io_in_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %io_forward_wb_rfData, %io_forward_wb_rfData_17 : !firrtl.uint<64>
      firrtl.strictconnect %io_forward_fuType, %io_in_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %io_memMMU_imem_priviledgeMode, %io_memMMU_imem_priviledgeMode_18 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_priviledgeMode, %io_memMMU_dmem_priviledgeMode_19 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_status_sum, %io_memMMU_dmem_status_sum_20 : !firrtl.uint<1>
      firrtl.strictconnect %io_memMMU_dmem_status_mxr, %io_memMMU_dmem_status_mxr_21 : !firrtl.uint<1>
      %fuValids_0 = firrtl.wire : !firrtl.uint<1>
      %fuValids_1 = firrtl.wire : !firrtl.uint<1>
      %fuValids_2 = firrtl.wire : !firrtl.uint<1>
      %fuValids_3 = firrtl.wire : !firrtl.uint<1>
      %fuValids_4 = firrtl.wire : !firrtl.uint<1>
      %0 = firrtl.orr %io_in_bits_ctrl_fuType : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_fuValids_0_T = firrtl.not %0 {name = "_fuValids_0_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_fuValids_0_T_1 = firrtl.and %_fuValids_0_T, %io_in_valid {name = "_fuValids_0_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_csr_io_instrValid_T = firrtl.not %io_flush {name = "_csr_io_instrValid_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_fuValids_0_T_3 = firrtl.and %_fuValids_0_T_1, %_csr_io_instrValid_T {name = "_fuValids_0_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %fuValids_0, %_fuValids_0_T_3 : !firrtl.uint<1>
      %_fuValids_1_T = firrtl.eq %io_in_bits_ctrl_fuType, %c1_ui1 {name = "_fuValids_1_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_fuValids_1_T_1 = firrtl.and %_fuValids_1_T, %io_in_valid {name = "_fuValids_1_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_fuValids_1_T_3 = firrtl.and %_fuValids_1_T_1, %_csr_io_instrValid_T {name = "_fuValids_1_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %fuValids_1, %_fuValids_1_T_3 : !firrtl.uint<1>
      %_fuValids_2_T = firrtl.eq %io_in_bits_ctrl_fuType, %c2_ui2 {name = "_fuValids_2_T"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_fuValids_2_T_1 = firrtl.and %_fuValids_2_T, %io_in_valid {name = "_fuValids_2_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_fuValids_2_T_3 = firrtl.and %_fuValids_2_T_1, %_csr_io_instrValid_T {name = "_fuValids_2_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %fuValids_2, %_fuValids_2_T_3 : !firrtl.uint<1>
      %_fuValids_3_T = firrtl.eq %io_in_bits_ctrl_fuType, %c3_ui2 {name = "_fuValids_3_T"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_fuValids_3_T_1 = firrtl.and %_fuValids_3_T, %io_in_valid {name = "_fuValids_3_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_fuValids_3_T_3 = firrtl.and %_fuValids_3_T_1, %_csr_io_instrValid_T {name = "_fuValids_3_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %fuValids_3, %_fuValids_3_T_3 : !firrtl.uint<1>
      %_fuValids_4_T = firrtl.eq %io_in_bits_ctrl_fuType, %c4_ui3 {name = "_fuValids_4_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_fuValids_4_T_1 = firrtl.and %_fuValids_4_T, %io_in_valid {name = "_fuValids_4_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_fuValids_4_T_3 = firrtl.and %_fuValids_4_T_1, %_csr_io_instrValid_T {name = "_fuValids_4_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %fuValids_4, %_fuValids_4_T_3 : !firrtl.uint<1>
      %alu_clock, %alu_reset, %alu_io_in_valid, %alu_io_in_bits_src1, %alu_io_in_bits_src2, %alu_io_in_bits_func, %alu_io_out_valid, %alu_io_out_bits, %alu_io_cfIn_instr, %alu_io_cfIn_pc, %alu_io_cfIn_pnpc, %alu_io_cfIn_brIdx, %alu_io_redirect_target, %alu_io_redirect_valid, %alu_io_offset, %alu__WIRE_7__bore, %alu_REG__bore_valid_22, %alu_REG__bore_pc_23, %alu_REG__bore_isMissPredict_24, %alu_REG__bore_actualTarget_25, %alu_REG__bore_actualTaken_26, %alu_REG__bore_fuOpType_27, %alu_REG__bore_btbType_28, %alu_REG__bore_isRVC_29, %alu__WIRE_14__bore, %alu__WIRE_6__bore, %alu__WIRE_15__bore, %alu__WIRE_2__bore, %alu__WIRE_8__bore, %alu__WIRE_1__bore, %alu__WIRE_13__bore, %alu__WIRE_11__bore, %alu__WIRE_3__bore, %alu__WIRE_12__bore, %alu__WIRE_9__bore, %alu__WIRE_5__bore, %alu__WIRE_16__bore, %alu__WIRE_10__bore, %alu__WIRE_4__bore = firrtl.instance alu @ALU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_src1: !firrtl.uint<64>, in io_in_bits_src2: !firrtl.uint<64>, in io_in_bits_func: !firrtl.uint<7>, out io_out_valid: !firrtl.uint<1>, out io_out_bits: !firrtl.uint<64>, in io_cfIn_instr: !firrtl.uint<64>, in io_cfIn_pc: !firrtl.uint<39>, in io_cfIn_pnpc: !firrtl.uint<39>, in io_cfIn_brIdx: !firrtl.uint<4>, out io_redirect_target: !firrtl.uint<39>, out io_redirect_valid: !firrtl.uint<1>, in io_offset: !firrtl.uint<64>, out _WIRE_7__bore: !firrtl.uint<1>, out REG__bore_valid: !firrtl.uint<1>, out REG__bore_pc: !firrtl.uint<39>, out REG__bore_isMissPredict: !firrtl.uint<1>, out REG__bore_actualTarget: !firrtl.uint<39>, out REG__bore_actualTaken: !firrtl.uint<1>, out REG__bore_fuOpType: !firrtl.uint<7>, out REG__bore_btbType: !firrtl.uint<2>, out REG__bore_isRVC: !firrtl.uint<1>, out _WIRE_14__bore: !firrtl.uint<1>, out _WIRE_6__bore: !firrtl.uint<1>, out _WIRE_15__bore: !firrtl.uint<1>, out _WIRE_2__bore: !firrtl.uint<1>, out _WIRE_8__bore: !firrtl.uint<1>, out _WIRE_1__bore: !firrtl.uint<1>, out _WIRE_13__bore: !firrtl.uint<1>, out _WIRE_11__bore: !firrtl.uint<1>, out _WIRE_3__bore: !firrtl.uint<1>, out _WIRE_12__bore: !firrtl.uint<1>, out _WIRE_9__bore: !firrtl.uint<1>, out _WIRE_5__bore: !firrtl.uint<1>, out _WIRE_16__bore: !firrtl.uint<1>, out _WIRE_10__bore: !firrtl.uint<1>, out _WIRE_4__bore: !firrtl.uint<1>)
      %1 = firrtl.wire : !firrtl.uint<1>
      %_io_forward_wb_rfData_T = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<64>
      %3 = firrtl.wire : !firrtl.uint<39>
      %4 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %alu_io_in_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %alu_io_in_bits_src1, %io_in_bits_data_src1 : !firrtl.uint<64>
      firrtl.strictconnect %alu_io_in_bits_src2, %io_in_bits_data_src2 : !firrtl.uint<64>
      firrtl.strictconnect %alu_io_in_bits_func, %io_in_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %_io_forward_wb_rfData_T, %alu_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %2, %alu_io_out_bits : !firrtl.uint<64>
      firrtl.strictconnect %alu_io_cfIn_instr, %io_in_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %alu_io_cfIn_pc, %io_in_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %alu_io_cfIn_pnpc, %io_in_bits_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %alu_io_cfIn_brIdx, %io_in_bits_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %3, %alu_io_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %4, %alu_io_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %alu_io_offset, %io_in_bits_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %alu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %alu_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %1, %fuValids_0 : !firrtl.uint<1>
      %lsu_clock, %lsu_reset, %lsu_io_in_valid, %lsu_io_in_bits_src1, %lsu_io_in_bits_src2, %lsu_io_in_bits_func, %lsu_io_out_valid, %lsu_io_out_bits, %lsu_io_wdata, %lsu_io_instr, %lsu_io_dmem_req_ready, %lsu_io_dmem_req_valid, %lsu_io_dmem_req_bits_addr, %lsu_io_dmem_req_bits_size, %lsu_io_dmem_req_bits_cmd, %lsu_io_dmem_req_bits_wmask, %lsu_io_dmem_req_bits_wdata, %lsu_io_dmem_resp_valid, %lsu_io_dmem_resp_bits_rdata, %lsu_io_isMMIO, %lsu_io_dtlbPF, %lsu_io_loadAddrMisaligned, %lsu_io_storeAddrMisaligned, %lsu_lsExecUnit_dtlbPF__bore_30, %lsu_dtlbPF__bore_31, %lsu_lr__bore, %lsu_lsExecUnit_r_1__bore, %lsu_lrAddr__bore, %lsu_lsExecUnit_dtlbEnable__bore_32, %lsu_setLrAddr__bore, %lsu_lsExecUnit_r__bore, %lsu_setLrVal__bore, %lsu_lsuMMIO__bore_33, %lsu_lsExecUnit__WIRE__bore, %lsu_setLr__bore, %lsu_lsExecUnit_io_in_bits_src1__bore, %lsu_lsExecUnit_dtlbFinish__bore_34, %lsu__WIRE__bore_35 = firrtl.instance lsu @UnpipelinedLSU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_src1: !firrtl.uint<64>, in io_in_bits_src2: !firrtl.uint<64>, in io_in_bits_func: !firrtl.uint<7>, out io_out_valid: !firrtl.uint<1>, out io_out_bits: !firrtl.uint<64>, in io_wdata: !firrtl.uint<64>, in io_instr: !firrtl.uint<32>, in io_dmem_req_ready: !firrtl.uint<1>, out io_dmem_req_valid: !firrtl.uint<1>, out io_dmem_req_bits_addr: !firrtl.uint<39>, out io_dmem_req_bits_size: !firrtl.uint<3>, out io_dmem_req_bits_cmd: !firrtl.uint<4>, out io_dmem_req_bits_wmask: !firrtl.uint<8>, out io_dmem_req_bits_wdata: !firrtl.uint<64>, in io_dmem_resp_valid: !firrtl.uint<1>, in io_dmem_resp_bits_rdata: !firrtl.uint<64>, out io_isMMIO: !firrtl.uint<1>, out io_dtlbPF: !firrtl.uint<1>, out io_loadAddrMisaligned: !firrtl.uint<1>, out io_storeAddrMisaligned: !firrtl.uint<1>, in lsExecUnit_dtlbPF__bore: !firrtl.uint<1>, in dtlbPF__bore: !firrtl.uint<1>, in lr__bore: !firrtl.uint<1>, out lsExecUnit_r_1__bore: !firrtl.uint<1>, in lrAddr__bore: !firrtl.uint<64>, in lsExecUnit_dtlbEnable__bore: !firrtl.uint<1>, out setLrAddr__bore: !firrtl.uint<64>, out lsExecUnit_r__bore: !firrtl.uint<1>, out setLrVal__bore: !firrtl.uint<1>, in lsuMMIO__bore: !firrtl.uint<1>, out lsExecUnit__WIRE__bore: !firrtl.uint<1>, out setLr__bore: !firrtl.uint<1>, out lsExecUnit_io_in_bits_src1__bore: !firrtl.uint<64>, in lsExecUnit_dtlbFinish__bore: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>)
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<64>
      %8 = firrtl.wire : !firrtl.uint<32>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<39>
      %11 = firrtl.wire : !firrtl.uint<3>
      %12 = firrtl.wire : !firrtl.uint<4>
      %13 = firrtl.wire : !firrtl.uint<8>
      %14 = firrtl.wire : !firrtl.uint<64>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %lsu_io_in_valid, %5 : !firrtl.uint<1>
      firrtl.strictconnect %lsu_io_in_bits_src1, %io_in_bits_data_src1 : !firrtl.uint<64>
      firrtl.strictconnect %lsu_io_in_bits_src2, %io_in_bits_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %lsu_io_in_bits_func, %io_in_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %6, %lsu_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %7, %lsu_io_out_bits : !firrtl.uint<64>
      firrtl.strictconnect %lsu_io_wdata, %io_in_bits_data_src2 : !firrtl.uint<64>
      firrtl.strictconnect %lsu_io_instr, %8 : !firrtl.uint<32>
      firrtl.strictconnect %lsu_io_dmem_req_ready, %io_dmem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %9, %lsu_io_dmem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %10, %lsu_io_dmem_req_bits_addr : !firrtl.uint<39>
      firrtl.strictconnect %11, %lsu_io_dmem_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %12, %lsu_io_dmem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %13, %lsu_io_dmem_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %14, %lsu_io_dmem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %lsu_io_dmem_resp_valid, %io_dmem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %lsu_io_dmem_resp_bits_rdata, %io_dmem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %15, %lsu_io_isMMIO : !firrtl.uint<1>
      firrtl.strictconnect %16, %lsu_io_dtlbPF : !firrtl.uint<1>
      firrtl.strictconnect %17, %lsu_io_loadAddrMisaligned : !firrtl.uint<1>
      firrtl.strictconnect %18, %lsu_io_storeAddrMisaligned : !firrtl.uint<1>
      firrtl.strictconnect %lsu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %lsu_reset, %reset : !firrtl.uint<1>
      %lsuTlbPF = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %5, %fuValids_1 : !firrtl.uint<1>
      firrtl.strictconnect %lsuTlbPF, %16 : !firrtl.uint<1>
      %19 = firrtl.bits %io_in_bits_cf_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      firrtl.strictconnect %8, %19 : !firrtl.uint<32>
      %20 = firrtl.bits %io_in_bits_cf_pc 38 to 30 : (!firrtl.uint<39>) -> !firrtl.uint<9>
      %21 = firrtl.bits %io_in_bits_cf_pc 29 to 0 : (!firrtl.uint<39>) -> !firrtl.uint<30>
      %22 = firrtl.xor %21, %c805306368_ui30 : (!firrtl.uint<30>, !firrtl.uint<30>) -> !firrtl.uint<30>
      %_io_out_bits_isMMIO_T = firrtl.cat %20, %22 {name = "_io_out_bits_isMMIO_T"} : (!firrtl.uint<9>, !firrtl.uint<30>) -> !firrtl.uint<39>
      %_io_out_bits_isMMIO_T_1 = firrtl.bits %_io_out_bits_isMMIO_T 31 to 28 {name = "_io_out_bits_isMMIO_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<4>
      %23 = firrtl.orr %_io_out_bits_isMMIO_T_1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_isMMIO_T_2 = firrtl.not %23 {name = "_io_out_bits_isMMIO_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.bits %io_in_bits_cf_pc 38 to 31 : (!firrtl.uint<39>) -> !firrtl.uint<8>
      %25 = firrtl.bits %io_in_bits_cf_pc 30 to 0 : (!firrtl.uint<39>) -> !firrtl.uint<31>
      %26 = firrtl.xor %25, %c1073741824_ui31 : (!firrtl.uint<31>, !firrtl.uint<31>) -> !firrtl.uint<31>
      %_io_out_bits_isMMIO_T_3 = firrtl.cat %24, %26 {name = "_io_out_bits_isMMIO_T_3"} : (!firrtl.uint<8>, !firrtl.uint<31>) -> !firrtl.uint<39>
      %_io_out_bits_isMMIO_T_4 = firrtl.bits %_io_out_bits_isMMIO_T_3 31 to 30 {name = "_io_out_bits_isMMIO_T_4"} : (!firrtl.uint<39>) -> !firrtl.uint<2>
      %27 = firrtl.orr %_io_out_bits_isMMIO_T_4 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_bits_isMMIO_T_5 = firrtl.not %27 {name = "_io_out_bits_isMMIO_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_isMMIO_T_6 = firrtl.or %_io_out_bits_isMMIO_T_2, %_io_out_bits_isMMIO_T_5 {name = "_io_out_bits_isMMIO_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_isMMIO_T_7 = firrtl.and %_io_out_bits_isMMIO_T_6, %io_out_valid_1 {name = "_io_out_bits_isMMIO_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_isMMIO_T_8 = firrtl.or %15, %_io_out_bits_isMMIO_T_7 {name = "_io_out_bits_isMMIO_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_isMMIO_5, %_io_out_bits_isMMIO_T_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_bits_addr_12, %10 : !firrtl.uint<39>
      firrtl.strictconnect %io_dmem_req_bits_size_13, %11 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_cmd_14, %12 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_wmask_15, %13 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wdata_16, %14 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_req_valid_11, %9 : !firrtl.uint<1>
      %mdu_clock, %mdu_reset, %mdu_io_in_valid, %mdu_io_in_bits_src1, %mdu_io_in_bits_src2, %mdu_io_in_bits_func, %mdu_io_out_valid, %mdu_io_out_bits, %mdu__WIRE__bore = firrtl.instance mdu @MDU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_src1: !firrtl.uint<64>, in io_in_bits_src2: !firrtl.uint<64>, in io_in_bits_func: !firrtl.uint<7>, out io_out_valid: !firrtl.uint<1>, out io_out_bits: !firrtl.uint<64>, out _WIRE__bore: !firrtl.uint<1>)
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<1>
      %30 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %mdu_io_in_valid, %28 : !firrtl.uint<1>
      firrtl.strictconnect %mdu_io_in_bits_src1, %io_in_bits_data_src1 : !firrtl.uint<64>
      firrtl.strictconnect %mdu_io_in_bits_src2, %io_in_bits_data_src2 : !firrtl.uint<64>
      firrtl.strictconnect %mdu_io_in_bits_func, %io_in_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %29, %mdu_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %30, %mdu_io_out_bits : !firrtl.uint<64>
      firrtl.strictconnect %mdu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mdu_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %28, %fuValids_2 : !firrtl.uint<1>
      %csr_clock, %csr_reset, %csr_io_in_valid, %csr_io_in_bits_src1, %csr_io_in_bits_src2, %csr_io_in_bits_func, %csr_io_out_valid, %csr_io_out_bits, %csr_io_cfIn_instr, %csr_io_cfIn_pc, %csr_io_cfIn_exceptionVec_0, %csr_io_cfIn_exceptionVec_1, %csr_io_cfIn_exceptionVec_2, %csr_io_cfIn_exceptionVec_3, %csr_io_cfIn_exceptionVec_4, %csr_io_cfIn_exceptionVec_5, %csr_io_cfIn_exceptionVec_6, %csr_io_cfIn_exceptionVec_7, %csr_io_cfIn_exceptionVec_8, %csr_io_cfIn_exceptionVec_9, %csr_io_cfIn_exceptionVec_10, %csr_io_cfIn_exceptionVec_11, %csr_io_cfIn_exceptionVec_12, %csr_io_cfIn_exceptionVec_13, %csr_io_cfIn_exceptionVec_14, %csr_io_cfIn_exceptionVec_15, %csr_io_cfIn_intrVec_0, %csr_io_cfIn_intrVec_1, %csr_io_cfIn_intrVec_2, %csr_io_cfIn_intrVec_3, %csr_io_cfIn_intrVec_4, %csr_io_cfIn_intrVec_5, %csr_io_cfIn_intrVec_6, %csr_io_cfIn_intrVec_7, %csr_io_cfIn_intrVec_8, %csr_io_cfIn_intrVec_9, %csr_io_cfIn_intrVec_10, %csr_io_cfIn_intrVec_11, %csr_io_cfIn_crossPageIPFFix, %csr_io_redirect_target, %csr_io_redirect_valid, %csr_io_instrValid, %csr_io_intrNO, %csr_io_imemMMU_priviledgeMode, %csr_io_dmemMMU_priviledgeMode, %csr_io_dmemMMU_status_sum, %csr_io_dmemMMU_status_mxr, %csr_io_dmemMMU_loadPF, %csr_io_dmemMMU_storePF, %csr_io_dmemMMU_addr, %csr_io_wenFix, %csr_perfCntCond_29__bore, %csr_perfCntCond_21__bore, %csr_perfCntCond_4__bore_36, %csr_perfCntCond_28__bore, %csr_lr__bore, %csr_perfCntCond_22__bore, %csr_perfCntCond_52__bore, %csr_lrAddr__bore, %csr_perfCntCond_17__bore, %csr_satp__bore_37, %csr_satp__bore_0_38, %csr_perfCntCond_53__bore_39, %csr_perfCntCond_30__bore, %csr_setLrAddr__bore, %csr_perfCntCond_9__bore, %csr_msip__bore_40, %csr_perfCntCond_16__bore, %csr_perfCntCond_20__bore, %csr_perfCntCond_14__bore, %csr_meip__bore_41, %csr_perfCntCond_2__bore_42, %csr_perfCntCond_51__bore, %csr_setLrVal__bore, %csr_perfCntCond_7__bore, %csr_mtip__bore_43, %csr_perfCntCond_50__bore_44, %csr_perfCntCond_10__bore, %csr_perfCnts_0__bore, %csr_perfCntCond_3__bore_45, %csr_perfCntCond_18__bore, %csr_perfCntCond_25__bore, %csr_perfCntCond_6__bore, %csr_setLr__bore, %csr__WIRE__bore_46, %csr__WIRE__bore_0_47, %csr_perfCntCond_19__bore, %csr_nutcoretrap__bore, %csr_perfCntCond_31__bore, %csr_perfCntCond_27__bore, %csr_lsuAddr__bore, %csr_perfCntCond_8__bore, %csr_perfCntCond_5__bore, %csr_perfCntCond_23__bore, %csr_perfCntCond_49__bore_48, %csr_perfCntCond_15__bore_49, %csr_perfCntCond_32__bore, %csr_perfCntCond_26__bore, %csr_perfCnts_2__bore = firrtl.instance csr @CSR(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_src1: !firrtl.uint<64>, in io_in_bits_src2: !firrtl.uint<64>, in io_in_bits_func: !firrtl.uint<7>, out io_out_valid: !firrtl.uint<1>, out io_out_bits: !firrtl.uint<64>, in io_cfIn_instr: !firrtl.uint<64>, in io_cfIn_pc: !firrtl.uint<39>, in io_cfIn_exceptionVec_0: !firrtl.uint<1>, in io_cfIn_exceptionVec_1: !firrtl.uint<1>, in io_cfIn_exceptionVec_2: !firrtl.uint<1>, in io_cfIn_exceptionVec_3: !firrtl.uint<1>, in io_cfIn_exceptionVec_4: !firrtl.uint<1>, in io_cfIn_exceptionVec_5: !firrtl.uint<1>, in io_cfIn_exceptionVec_6: !firrtl.uint<1>, in io_cfIn_exceptionVec_7: !firrtl.uint<1>, in io_cfIn_exceptionVec_8: !firrtl.uint<1>, in io_cfIn_exceptionVec_9: !firrtl.uint<1>, in io_cfIn_exceptionVec_10: !firrtl.uint<1>, in io_cfIn_exceptionVec_11: !firrtl.uint<1>, in io_cfIn_exceptionVec_12: !firrtl.uint<1>, in io_cfIn_exceptionVec_13: !firrtl.uint<1>, in io_cfIn_exceptionVec_14: !firrtl.uint<1>, in io_cfIn_exceptionVec_15: !firrtl.uint<1>, in io_cfIn_intrVec_0: !firrtl.uint<1>, in io_cfIn_intrVec_1: !firrtl.uint<1>, in io_cfIn_intrVec_2: !firrtl.uint<1>, in io_cfIn_intrVec_3: !firrtl.uint<1>, in io_cfIn_intrVec_4: !firrtl.uint<1>, in io_cfIn_intrVec_5: !firrtl.uint<1>, in io_cfIn_intrVec_6: !firrtl.uint<1>, in io_cfIn_intrVec_7: !firrtl.uint<1>, in io_cfIn_intrVec_8: !firrtl.uint<1>, in io_cfIn_intrVec_9: !firrtl.uint<1>, in io_cfIn_intrVec_10: !firrtl.uint<1>, in io_cfIn_intrVec_11: !firrtl.uint<1>, in io_cfIn_crossPageIPFFix: !firrtl.uint<1>, out io_redirect_target: !firrtl.uint<39>, out io_redirect_valid: !firrtl.uint<1>, in io_instrValid: !firrtl.uint<1>, out io_intrNO: !firrtl.uint<64>, out io_imemMMU_priviledgeMode: !firrtl.uint<2>, out io_dmemMMU_priviledgeMode: !firrtl.uint<2>, out io_dmemMMU_status_sum: !firrtl.uint<1>, out io_dmemMMU_status_mxr: !firrtl.uint<1>, in io_dmemMMU_loadPF: !firrtl.uint<1>, in io_dmemMMU_storePF: !firrtl.uint<1>, in io_dmemMMU_addr: !firrtl.uint<39>, out io_wenFix: !firrtl.uint<1>, in perfCntCond_29__bore: !firrtl.uint<1>, in perfCntCond_21__bore: !firrtl.uint<1>, in perfCntCond_4__bore: !firrtl.uint<1>, in perfCntCond_28__bore: !firrtl.uint<1>, out lr__bore: !firrtl.uint<1>, in perfCntCond_22__bore: !firrtl.uint<1>, in perfCntCond_52__bore: !firrtl.uint<1>, out lrAddr__bore: !firrtl.uint<64>, in perfCntCond_17__bore: !firrtl.uint<1>, out satp__bore: !firrtl.uint<64>, out satp__bore_0: !firrtl.uint<64>, in perfCntCond_53__bore: !firrtl.uint<1>, in perfCntCond_30__bore: !firrtl.uint<1>, in setLrAddr__bore: !firrtl.uint<64>, in perfCntCond_9__bore: !firrtl.uint<1>, in msip__bore: !firrtl.uint<1>, in perfCntCond_16__bore: !firrtl.uint<1>, in perfCntCond_20__bore: !firrtl.uint<1>, in perfCntCond_14__bore: !firrtl.uint<1>, in meip__bore: !firrtl.uint<1>, in perfCntCond_2__bore: !firrtl.uint<1>, in perfCntCond_51__bore: !firrtl.uint<1>, in setLrVal__bore: !firrtl.uint<1>, in perfCntCond_7__bore: !firrtl.uint<1>, in mtip__bore: !firrtl.uint<1>, in perfCntCond_50__bore: !firrtl.uint<1>, in perfCntCond_10__bore: !firrtl.uint<1>, out perfCnts_0__bore: !firrtl.uint<64>, in perfCntCond_3__bore: !firrtl.uint<1>, in perfCntCond_18__bore: !firrtl.uint<1>, in perfCntCond_25__bore: !firrtl.uint<1>, in perfCntCond_6__bore: !firrtl.uint<1>, in setLr__bore: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<12>, out _WIRE__bore_0: !firrtl.uint<12>, in perfCntCond_19__bore: !firrtl.uint<1>, in nutcoretrap__bore: !firrtl.uint<1>, in perfCntCond_31__bore: !firrtl.uint<1>, in perfCntCond_27__bore: !firrtl.uint<1>, in lsuAddr__bore: !firrtl.uint<64>, in perfCntCond_8__bore: !firrtl.uint<1>, in perfCntCond_5__bore: !firrtl.uint<1>, in perfCntCond_23__bore: !firrtl.uint<1>, in perfCntCond_49__bore: !firrtl.uint<1>, in perfCntCond_15__bore: !firrtl.uint<1>, in perfCntCond_32__bore: !firrtl.uint<1>, in perfCntCond_26__bore: !firrtl.uint<1>, out perfCnts_2__bore: !firrtl.uint<64>)
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<1>
      %33 = firrtl.wire : !firrtl.uint<64>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<1>
      %36 = firrtl.wire : !firrtl.uint<39>
      %37 = firrtl.wire : !firrtl.uint<1>
      %38 = firrtl.wire : !firrtl.uint<1>
      %39 = firrtl.wire : !firrtl.uint<64>
      %40 = firrtl.wire : !firrtl.uint<2>
      %41 = firrtl.wire : !firrtl.uint<2>
      %42 = firrtl.wire : !firrtl.uint<1>
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_in_valid, %31 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_in_bits_src1, %io_in_bits_data_src1 : !firrtl.uint<64>
      firrtl.strictconnect %csr_io_in_bits_src2, %io_in_bits_data_src2 : !firrtl.uint<64>
      firrtl.strictconnect %csr_io_in_bits_func, %io_in_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %32, %csr_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %33, %csr_io_out_bits : !firrtl.uint<64>
      firrtl.strictconnect %csr_io_cfIn_instr, %io_in_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %csr_io_cfIn_pc, %io_in_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_0, %io_in_bits_cf_exceptionVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_1, %io_in_bits_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_2, %io_in_bits_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_3, %io_in_bits_cf_exceptionVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_4, %34 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_5, %io_in_bits_cf_exceptionVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_6, %35 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_7, %io_in_bits_cf_exceptionVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_8, %io_in_bits_cf_exceptionVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_9, %io_in_bits_cf_exceptionVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_10, %io_in_bits_cf_exceptionVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_11, %io_in_bits_cf_exceptionVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_12, %io_in_bits_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_13, %io_in_bits_cf_exceptionVec_13 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_14, %io_in_bits_cf_exceptionVec_14 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_exceptionVec_15, %io_in_bits_cf_exceptionVec_15 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_0, %io_in_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_1, %io_in_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_2, %io_in_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_3, %io_in_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_4, %io_in_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_5, %io_in_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_6, %io_in_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_7, %io_in_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_8, %io_in_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_9, %io_in_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_10, %io_in_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_intrVec_11, %io_in_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_cfIn_crossPageIPFFix, %io_in_bits_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %36, %csr_io_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %37, %csr_io_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_instrValid, %38 : !firrtl.uint<1>
      firrtl.strictconnect %39, %csr_io_intrNO : !firrtl.uint<64>
      firrtl.strictconnect %40, %csr_io_imemMMU_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %41, %csr_io_dmemMMU_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %42, %csr_io_dmemMMU_status_sum : !firrtl.uint<1>
      firrtl.strictconnect %43, %csr_io_dmemMMU_status_mxr : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_dmemMMU_loadPF, %io_memMMU_dmem_loadPF : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_dmemMMU_storePF, %io_memMMU_dmem_storePF : !firrtl.uint<1>
      firrtl.strictconnect %csr_io_dmemMMU_addr, %io_memMMU_dmem_addr : !firrtl.uint<39>
      firrtl.strictconnect %44, %csr_io_wenFix : !firrtl.uint<1>
      firrtl.strictconnect %csr_clock, %clock : !firrtl.clock
      firrtl.strictconnect %csr_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %31, %fuValids_3 : !firrtl.uint<1>
      firrtl.strictconnect %34, %17 : !firrtl.uint<1>
      firrtl.strictconnect %35, %18 : !firrtl.uint<1>
      %_csr_io_instrValid_T_1 = firrtl.and %io_in_valid, %_csr_io_instrValid_T {name = "_csr_io_instrValid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %38, %_csr_io_instrValid_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_intrNO_6, %39 : !firrtl.uint<64>
      firrtl.strictconnect %io_memMMU_imem_priviledgeMode_18, %40 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_priviledgeMode_19, %41 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_status_sum_20, %42 : !firrtl.uint<1>
      firrtl.strictconnect %io_memMMU_dmem_status_mxr_21, %43 : !firrtl.uint<1>
      %mou_clock, %mou_reset, %mou_io_in_valid, %mou_io_in_bits_func, %mou_io_cfIn_pc, %mou_io_redirect_target, %mou_io_redirect_valid, %mou__WIRE_1__bore_50, %mou__WIRE_1__bore_0_51, %mou__WIRE_1__bore_1_52, %mou__WIRE__bore_53, %mou__WIRE__bore_0_54 = firrtl.instance mou @MOU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_func: !firrtl.uint<7>, in io_cfIn_pc: !firrtl.uint<39>, out io_redirect_target: !firrtl.uint<39>, out io_redirect_valid: !firrtl.uint<1>, out _WIRE_1__bore: !firrtl.uint<1>, out _WIRE_1__bore_0: !firrtl.uint<1>, out _WIRE_1__bore_1: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>, out _WIRE__bore_0: !firrtl.uint<1>)
      %45 = firrtl.wire : !firrtl.uint<1>
      %46 = firrtl.wire : !firrtl.uint<39>
      %47 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %mou_io_in_valid, %45 : !firrtl.uint<1>
      firrtl.strictconnect %mou_io_in_bits_func, %io_in_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %mou_io_cfIn_pc, %io_in_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %46, %mou_io_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %47, %mou_io_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %mou_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mou_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %45, %fuValids_4 : !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T = firrtl.not %lsuTlbPF {name = "_io_out_bits_decode_ctrl_rfWen_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_1 = firrtl.not %17 {name = "_io_out_bits_decode_ctrl_rfWen_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_2 = firrtl.and %_io_out_bits_decode_ctrl_rfWen_T, %_io_out_bits_decode_ctrl_rfWen_T_1 {name = "_io_out_bits_decode_ctrl_rfWen_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_3 = firrtl.not %18 {name = "_io_out_bits_decode_ctrl_rfWen_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_4 = firrtl.and %_io_out_bits_decode_ctrl_rfWen_T_2, %_io_out_bits_decode_ctrl_rfWen_T_3 {name = "_io_out_bits_decode_ctrl_rfWen_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_5 = firrtl.not %fuValids_1 {name = "_io_out_bits_decode_ctrl_rfWen_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_6 = firrtl.or %_io_out_bits_decode_ctrl_rfWen_T_4, %_io_out_bits_decode_ctrl_rfWen_T_5 {name = "_io_out_bits_decode_ctrl_rfWen_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_7 = firrtl.and %io_in_bits_ctrl_rfWen, %_io_out_bits_decode_ctrl_rfWen_T_6 {name = "_io_out_bits_decode_ctrl_rfWen_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_8 = firrtl.and %44, %fuValids_3 {name = "_io_out_bits_decode_ctrl_rfWen_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_9 = firrtl.not %_io_out_bits_decode_ctrl_rfWen_T_8 {name = "_io_out_bits_decode_ctrl_rfWen_T_9"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_ctrl_rfWen_T_10 = firrtl.and %_io_out_bits_decode_ctrl_rfWen_T_7, %_io_out_bits_decode_ctrl_rfWen_T_9 {name = "_io_out_bits_decode_ctrl_rfWen_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_decode_ctrl_rfWen_4, %_io_out_bits_decode_ctrl_rfWen_T_10 : !firrtl.uint<1>
      %_io_out_bits_decode_cf_redirect_T_target = firrtl.mux(%37, %36, %3) {name = "_io_out_bits_decode_cf_redirect_T_target"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_io_out_bits_decode_cf_redirect_T_valid = firrtl.mux(%37, %37, %4) {name = "_io_out_bits_decode_cf_redirect_T_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_decode_cf_redirect_T_1_target = firrtl.mux(%47, %46, %_io_out_bits_decode_cf_redirect_T_target) {name = "_io_out_bits_decode_cf_redirect_T_1_target"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_io_out_bits_decode_cf_redirect_T_1_valid = firrtl.mux(%47, %47, %_io_out_bits_decode_cf_redirect_T_valid) {name = "_io_out_bits_decode_cf_redirect_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_decode_cf_redirect_target_2, %_io_out_bits_decode_cf_redirect_T_1_target : !firrtl.uint<39>
      firrtl.strictconnect %io_out_bits_decode_cf_redirect_valid_3, %_io_out_bits_decode_cf_redirect_T_1_valid : !firrtl.uint<1>
      %48 = firrtl.or %47, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.or %48, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %50 = firrtl.and %49, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.and %50, %51 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %52, "[%d] EXU: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %53 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.and %50, %53 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %54, "[REDIRECT] mou %x csr %x alu %x \0A" {name = "printf_1"} (%47, %37, %4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %55 = firrtl.or %48, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.and %55, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %58 = firrtl.and %56, %57 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %58, "[%d] EXU: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %59 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.and %56, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %60, "[REDIRECT] flush: %d mou %x csr %x alu %x\0A" {name = "printf_3"} (%io_flush, %46, %36, %3) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>, !firrtl.uint<39>
      %_io_out_valid_T = firrtl.eq %io_in_bits_ctrl_fuType, %c1_ui1 {name = "_io_out_valid_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.mux(%_io_out_valid_T, %6, %c1_ui1) {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_2 = firrtl.eq %io_in_bits_ctrl_fuType, %c2_ui2 {name = "_io_out_valid_T_2"} : (!firrtl.uint<3>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_valid_T_3 = firrtl.mux(%_io_out_valid_T_2, %29, %_io_out_valid_T_1) {name = "_io_out_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_4 = firrtl.and %io_in_valid, %_io_out_valid_T_3 {name = "_io_out_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_commits_0_7, %2 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_commits_1_8, %7 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_commits_3_10, %33 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_commits_2_9, %30 : !firrtl.uint<64>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %io_out_valid_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_2 : !firrtl.uint<1>
      %_io_forward_wb_rfData_T_1 = firrtl.mux(%_io_forward_wb_rfData_T, %2, %7) {name = "_io_forward_wb_rfData_T_1"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_forward_wb_rfData_17, %_io_forward_wb_rfData_T_1 : !firrtl.uint<64>
      %isBru = firrtl.bits %io_in_bits_ctrl_fuOpType 4 to 4 {name = "isBru"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %61 = firrtl.not %isBru : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.and %_io_forward_wb_rfData_T, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %63 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %63, %62 : !firrtl.uint<1>
      %64 = firrtl.and %_io_forward_wb_rfData_T, %isBru : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %65, %64 : !firrtl.uint<1>
      %66 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %66, %6 : !firrtl.uint<1>
      %67 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %67, %29 : !firrtl.uint<1>
      %68 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %68, %32 : !firrtl.uint<1>
      %cycleCnt = firrtl.wire : !firrtl.uint<64>
      %instrCnt = firrtl.wire : !firrtl.uint<64>
      %_nutcoretrap_T = firrtl.and %io_in_bits_ctrl_isNutCoreTrap, %io_in_valid {name = "_nutcoretrap_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %nutcoretrap = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %nutcoretrap, %_nutcoretrap_T : !firrtl.uint<1>
      %difftest_hasTrap = firrtl.wire : !firrtl.uint<1>
      %difftest_cycleCnt = firrtl.wire : !firrtl.uint<64>
      %difftest_instrCnt = firrtl.wire : !firrtl.uint<64>
      %difftest_code = firrtl.wire : !firrtl.uint<3>
      %difftest_pc = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_hasTrap = firrtl.wire : !firrtl.uint<1>
      %difftest_sink_cycleCnt = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_instrCnt = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_code = firrtl.wire : !firrtl.uint<3>
      %difftest_sink_pc = firrtl.wire : !firrtl.uint<64>
      %difftest_sink_module_clock, %difftest_sink_module_io_hasTrap, %difftest_sink_module_io_cycleCnt, %difftest_sink_module_io_instrCnt, %difftest_sink_module_io_code, %difftest_sink_module_io_pc = firrtl.instance difftest_sink_module @DummyDPICWrapper_3(in clock: !firrtl.clock, in io_hasTrap: !firrtl.uint<1>, in io_cycleCnt: !firrtl.uint<64>, in io_instrCnt: !firrtl.uint<64>, in io_code: !firrtl.uint<3>, in io_pc: !firrtl.uint<64>)
      firrtl.strictconnect %difftest_sink_module_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftest_sink_module_io_pc, %difftest_sink_pc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_code, %difftest_sink_code : !firrtl.uint<3>
      firrtl.strictconnect %difftest_sink_module_io_instrCnt, %difftest_sink_instrCnt : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_cycleCnt, %difftest_sink_cycleCnt : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_module_io_hasTrap, %difftest_sink_hasTrap : !firrtl.uint<1>
      firrtl.strictconnect %difftest_sink_hasTrap, %difftest_hasTrap : !firrtl.uint<1>
      firrtl.strictconnect %difftest_sink_cycleCnt, %difftest_cycleCnt : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_instrCnt, %difftest_instrCnt : !firrtl.uint<64>
      firrtl.strictconnect %difftest_sink_code, %difftest_code : !firrtl.uint<3>
      firrtl.strictconnect %difftest_sink_pc, %difftest_pc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_hasTrap, %nutcoretrap : !firrtl.uint<1>
      %69 = firrtl.bits %io_in_bits_data_src1 2 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<3>
      firrtl.strictconnect %difftest_code, %69 : !firrtl.uint<3>
      %70 = firrtl.pad %io_in_bits_cf_pc, 64 : (!firrtl.uint<39>) -> !firrtl.uint<64>
      firrtl.strictconnect %difftest_pc, %70 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_cycleCnt, %cycleCnt : !firrtl.uint<64>
      firrtl.strictconnect %difftest_instrCnt, %instrCnt : !firrtl.uint<64>
      firrtl.strictconnect %lsu_lsExecUnit_dtlbPF__bore_30, %lsu_lsExecUnit_dtlbPF__bore : !firrtl.uint<1>
      firrtl.strictconnect %lsu_dtlbPF__bore_31, %lsu_dtlbPF__bore : !firrtl.uint<1>
      firrtl.strictconnect %alu_REG__bore_valid, %alu_REG__bore_valid_22 : !firrtl.uint<1>
      firrtl.strictconnect %alu_REG__bore_pc, %alu_REG__bore_pc_23 : !firrtl.uint<39>
      firrtl.strictconnect %alu_REG__bore_isMissPredict, %alu_REG__bore_isMissPredict_24 : !firrtl.uint<1>
      firrtl.strictconnect %alu_REG__bore_actualTarget, %alu_REG__bore_actualTarget_25 : !firrtl.uint<39>
      firrtl.strictconnect %alu_REG__bore_actualTaken, %alu_REG__bore_actualTaken_26 : !firrtl.uint<1>
      firrtl.strictconnect %alu_REG__bore_fuOpType, %alu_REG__bore_fuOpType_27 : !firrtl.uint<7>
      firrtl.strictconnect %alu_REG__bore_btbType, %alu_REG__bore_btbType_28 : !firrtl.uint<2>
      firrtl.strictconnect %alu_REG__bore_isRVC, %alu_REG__bore_isRVC_29 : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_4__bore_36, %csr_perfCntCond_4__bore : !firrtl.uint<1>
      firrtl.strictconnect %lsu_lsExecUnit_dtlbEnable__bore_32, %lsu_lsExecUnit_dtlbEnable__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_satp__bore, %csr_satp__bore_37 : !firrtl.uint<64>
      firrtl.strictconnect %csr_satp__bore_0, %csr_satp__bore_0_38 : !firrtl.uint<64>
      firrtl.strictconnect %csr_perfCntCond_53__bore_39, %csr_perfCntCond_53__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_msip__bore_40, %csr_msip__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_meip__bore_41, %csr_meip__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_2__bore_42, %csr_perfCntCond_2__bore : !firrtl.uint<1>
      firrtl.strictconnect %mou__WIRE_1__bore, %mou__WIRE_1__bore_50 : !firrtl.uint<1>
      firrtl.strictconnect %mou__WIRE_1__bore_0, %mou__WIRE_1__bore_0_51 : !firrtl.uint<1>
      firrtl.strictconnect %mou__WIRE_1__bore_1, %mou__WIRE_1__bore_1_52 : !firrtl.uint<1>
      firrtl.strictconnect %lsu_lsuMMIO__bore_33, %lsu_lsuMMIO__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_mtip__bore_43, %csr_mtip__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_50__bore_44, %csr_perfCntCond_50__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_3__bore_45, %csr_perfCntCond_3__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr__WIRE__bore, %csr__WIRE__bore_46 : !firrtl.uint<12>
      firrtl.strictconnect %csr__WIRE__bore_0, %csr__WIRE__bore_0_47 : !firrtl.uint<12>
      firrtl.strictconnect %mou__WIRE__bore, %mou__WIRE__bore_53 : !firrtl.uint<1>
      firrtl.strictconnect %mou__WIRE__bore_0, %mou__WIRE__bore_0_54 : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_49__bore_48, %csr_perfCntCond_49__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_15__bore_49, %csr_perfCntCond_15__bore : !firrtl.uint<1>
      firrtl.strictconnect %lsu_lsExecUnit_dtlbFinish__bore_34, %lsu_lsExecUnit_dtlbFinish__bore : !firrtl.uint<1>
      firrtl.strictconnect %lsu__WIRE__bore, %lsu__WIRE__bore_35 : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_29__bore, %alu__WIRE_7__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_21__bore, %alu__WIRE_14__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_28__bore, %alu__WIRE_6__bore : !firrtl.uint<1>
      firrtl.strictconnect %lsu_lr__bore, %csr_lr__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_22__bore, %alu__WIRE_15__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_52__bore, %lsu_lsExecUnit_r_1__bore : !firrtl.uint<1>
      firrtl.strictconnect %lsu_lrAddr__bore, %csr_lrAddr__bore : !firrtl.uint<64>
      firrtl.strictconnect %csr_perfCntCond_17__bore, %alu__WIRE_2__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_30__bore, %alu__WIRE_8__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_setLrAddr__bore, %lsu_setLrAddr__bore : !firrtl.uint<64>
      firrtl.strictconnect %csr_perfCntCond_9__bore, %68 : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_16__bore, %alu__WIRE_1__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_20__bore, %alu__WIRE_13__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_14__bore, %mdu__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_51__bore, %lsu_lsExecUnit_r__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_setLrVal__bore, %lsu_setLrVal__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_7__bore, %66 : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_10__bore, %lsu_lsExecUnit__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %cycleCnt, %csr_perfCnts_0__bore : !firrtl.uint<64>
      firrtl.strictconnect %csr_perfCntCond_18__bore, %alu__WIRE_11__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_25__bore, %alu__WIRE_3__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_6__bore, %65 : !firrtl.uint<1>
      firrtl.strictconnect %csr_setLr__bore, %lsu_setLr__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_19__bore, %alu__WIRE_12__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_nutcoretrap__bore, %nutcoretrap : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_31__bore, %alu__WIRE_9__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_27__bore, %alu__WIRE_5__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_lsuAddr__bore, %lsu_lsExecUnit_io_in_bits_src1__bore : !firrtl.uint<64>
      firrtl.strictconnect %csr_perfCntCond_8__bore, %67 : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_5__bore, %63 : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_23__bore, %alu__WIRE_16__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_32__bore, %alu__WIRE_10__bore : !firrtl.uint<1>
      firrtl.strictconnect %csr_perfCntCond_26__bore, %alu__WIRE_4__bore : !firrtl.uint<1>
      firrtl.strictconnect %instrCnt, %csr_perfCnts_2__bore : !firrtl.uint<64>
    }
    firrtl.extmodule private @DifftestInstrCommit(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_valid: !firrtl.uint<1>, in io_skip: !firrtl.uint<1>, in io_isRVC: !firrtl.uint<1>, in io_rfwen: !firrtl.uint<1>, in io_fpwen: !firrtl.uint<1>, in io_vecwen: !firrtl.uint<1>, in io_wpdest: !firrtl.uint<5>, in io_wdest: !firrtl.uint<8>, in io_pc: !firrtl.uint<64>, in io_instr: !firrtl.uint<32>, in io_robIdx: !firrtl.uint<10>, in io_lqIdx: !firrtl.uint<7>, in io_sqIdx: !firrtl.uint<7>, in io_isLoad: !firrtl.uint<1>, in io_isStore: !firrtl.uint<1>, in io_nFused: !firrtl.uint<8>, in io_special: !firrtl.uint<8>, in io_coreid: !firrtl.uint<8>, in io_index: !firrtl.uint<8>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "DifftestInstrCommit"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "DifftestInstrCommit"}
    firrtl.module private @DummyDPICWrapper_4(in %clock: !firrtl.clock, in %io_valid: !firrtl.uint<1>, in %io_skip: !firrtl.uint<1>, in %io_isRVC: !firrtl.uint<1>, in %io_rfwen: !firrtl.uint<1>, in %io_wpdest: !firrtl.uint<5>, in %io_wdest: !firrtl.uint<8>, in %io_pc: !firrtl.uint<64>, in %io_instr: !firrtl.uint<32>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui10 = firrtl.constant 0 : !firrtl.uint<10>
      %c0_ui7 = firrtl.constant 0 : !firrtl.uint<7>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %dpic_clock, %dpic_enable, %dpic_io_valid, %dpic_io_skip, %dpic_io_isRVC, %dpic_io_rfwen, %dpic_io_fpwen, %dpic_io_vecwen, %dpic_io_wpdest, %dpic_io_wdest, %dpic_io_pc, %dpic_io_instr, %dpic_io_robIdx, %dpic_io_lqIdx, %dpic_io_sqIdx, %dpic_io_isLoad, %dpic_io_isStore, %dpic_io_nFused, %dpic_io_special, %dpic_io_coreid, %dpic_io_index = firrtl.instance dpic @DifftestInstrCommit(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_valid: !firrtl.uint<1>, in io_skip: !firrtl.uint<1>, in io_isRVC: !firrtl.uint<1>, in io_rfwen: !firrtl.uint<1>, in io_fpwen: !firrtl.uint<1>, in io_vecwen: !firrtl.uint<1>, in io_wpdest: !firrtl.uint<5>, in io_wdest: !firrtl.uint<8>, in io_pc: !firrtl.uint<64>, in io_instr: !firrtl.uint<32>, in io_robIdx: !firrtl.uint<10>, in io_lqIdx: !firrtl.uint<7>, in io_sqIdx: !firrtl.uint<7>, in io_isLoad: !firrtl.uint<1>, in io_isStore: !firrtl.uint<1>, in io_nFused: !firrtl.uint<8>, in io_special: !firrtl.uint<8>, in io_coreid: !firrtl.uint<8>, in io_index: !firrtl.uint<8>)
      firrtl.strictconnect %dpic_io_valid, %io_valid : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_skip, %io_skip : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_isRVC, %io_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_rfwen, %io_rfwen : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_fpwen, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_vecwen, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_wpdest, %io_wpdest : !firrtl.uint<5>
      firrtl.strictconnect %dpic_io_wdest, %io_wdest : !firrtl.uint<8>
      firrtl.strictconnect %dpic_io_pc, %io_pc : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_instr, %io_instr : !firrtl.uint<32>
      firrtl.strictconnect %dpic_io_robIdx, %c0_ui10 : !firrtl.uint<10>
      firrtl.strictconnect %dpic_io_lqIdx, %c0_ui7 : !firrtl.uint<7>
      firrtl.strictconnect %dpic_io_sqIdx, %c0_ui7 : !firrtl.uint<7>
      firrtl.strictconnect %dpic_io_isLoad, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_isStore, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_nFused, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_io_special, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_io_coreid, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_io_index, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dpic_enable, %io_valid : !firrtl.uint<1>
    }
    firrtl.module private @Delayer(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %i_valid: !firrtl.uint<1>, in %i_skip: !firrtl.uint<1>, in %i_isRVC: !firrtl.uint<1>, in %i_rfwen: !firrtl.uint<1>, in %i_wpdest: !firrtl.uint<5>, in %i_wdest: !firrtl.uint<8>, in %i_pc: !firrtl.uint<64>, in %i_instr: !firrtl.uint<32>, out %o_valid: !firrtl.uint<1>, out %o_skip: !firrtl.uint<1>, out %o_isRVC: !firrtl.uint<1>, out %o_rfwen: !firrtl.uint<1>, out %o_wpdest: !firrtl.uint<5>, out %o_wdest: !firrtl.uint<8>, out %o_pc: !firrtl.uint<64>, out %o_instr: !firrtl.uint<32>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui5 = firrtl.constant 0 : !firrtl.uint<5>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %REG_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %REG_skip = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %REG_isRVC = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %REG_rfwen = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %REG_wpdest = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 6 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %REG_wdest = firrtl.regreset %clock, %reset, %c0_ui8 {firrtl.random_init_start = 11 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>
      %REG_pc = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 19 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %REG_instr = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 83 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      firrtl.strictconnect %REG_instr, %i_instr : !firrtl.uint<32>
      firrtl.strictconnect %REG_pc, %i_pc : !firrtl.uint<64>
      firrtl.strictconnect %REG_wdest, %i_wdest : !firrtl.uint<8>
      firrtl.strictconnect %REG_wpdest, %i_wpdest : !firrtl.uint<5>
      firrtl.strictconnect %REG_rfwen, %i_rfwen : !firrtl.uint<1>
      firrtl.strictconnect %REG_isRVC, %i_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %REG_skip, %i_skip : !firrtl.uint<1>
      firrtl.strictconnect %REG_valid, %i_valid : !firrtl.uint<1>
      firrtl.strictconnect %o_valid, %REG_valid : !firrtl.uint<1>
      firrtl.strictconnect %o_skip, %REG_skip : !firrtl.uint<1>
      firrtl.strictconnect %o_isRVC, %REG_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %o_rfwen, %REG_rfwen : !firrtl.uint<1>
      firrtl.strictconnect %o_wpdest, %REG_wpdest : !firrtl.uint<5>
      firrtl.strictconnect %o_wdest, %REG_wdest : !firrtl.uint<8>
      firrtl.strictconnect %o_pc, %REG_pc : !firrtl.uint<64>
      firrtl.strictconnect %o_instr, %REG_instr : !firrtl.uint<32>
    }
    firrtl.extmodule private @DifftestIntWriteback(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_valid: !firrtl.uint<1>, in io_address: !firrtl.uint<5>, in io_data: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "DifftestIntWriteback"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "DifftestIntWriteback"}
    firrtl.module private @DummyDPICWrapper_5(in %clock: !firrtl.clock, in %io_valid: !firrtl.uint<1>, in %io_address: !firrtl.uint<5>, in %io_data: !firrtl.uint<64>) {
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %dpic_clock, %dpic_enable, %dpic_io_valid, %dpic_io_address, %dpic_io_data, %dpic_io_coreid = firrtl.instance dpic @DifftestIntWriteback(in clock: !firrtl.clock, in enable: !firrtl.uint<1>, in io_valid: !firrtl.uint<1>, in io_address: !firrtl.uint<5>, in io_data: !firrtl.uint<64>, in io_coreid: !firrtl.uint<8>)
      firrtl.strictconnect %dpic_io_valid, %io_valid : !firrtl.uint<1>
      firrtl.strictconnect %dpic_io_address, %io_address : !firrtl.uint<5>
      firrtl.strictconnect %dpic_io_data, %io_data : !firrtl.uint<64>
      firrtl.strictconnect %dpic_io_coreid, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %dpic_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dpic_enable, %io_valid : !firrtl.uint<1>
    }
    firrtl.module private @Delayer_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %i_valid: !firrtl.uint<1>, in %i_address: !firrtl.uint<5>, in %i_data: !firrtl.uint<64>, out %o_valid: !firrtl.uint<1>, out %o_address: !firrtl.uint<5>, out %o_data: !firrtl.uint<64>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui5 = firrtl.constant 0 : !firrtl.uint<5>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %REG_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %REG_address = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %REG_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 6 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      firrtl.strictconnect %REG_data, %i_data : !firrtl.uint<64>
      firrtl.strictconnect %REG_address, %i_address : !firrtl.uint<5>
      firrtl.strictconnect %REG_valid, %i_valid : !firrtl.uint<1>
      firrtl.strictconnect %o_valid, %REG_valid : !firrtl.uint<1>
      firrtl.strictconnect %o_address, %REG_address : !firrtl.uint<5>
      firrtl.strictconnect %o_data, %REG_data : !firrtl.uint<64>
    }
    firrtl.module private @WBU(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1> [{class = "firrtl.transforms.DontTouchAnnotation"}], in %io_in_bits_decode_cf_instr: !firrtl.uint<64>, in %io_in_bits_decode_cf_pc: !firrtl.uint<39>, in %io_in_bits_decode_cf_redirect_target: !firrtl.uint<39>, in %io_in_bits_decode_cf_redirect_valid: !firrtl.uint<1>, in %io_in_bits_decode_ctrl_fuType: !firrtl.uint<3>, in %io_in_bits_decode_ctrl_rfWen: !firrtl.uint<1>, in %io_in_bits_decode_ctrl_rfDest: !firrtl.uint<5>, in %io_in_bits_isMMIO: !firrtl.uint<1>, in %io_in_bits_intrNO: !firrtl.uint<64>, in %io_in_bits_commits_0: !firrtl.uint<64>, in %io_in_bits_commits_1: !firrtl.uint<64>, in %io_in_bits_commits_2: !firrtl.uint<64>, in %io_in_bits_commits_3: !firrtl.uint<64>, out %io_wb_rfWen: !firrtl.uint<1>, out %io_wb_rfDest: !firrtl.uint<5>, out %io_wb_rfData: !firrtl.uint<64>, out %io_redirect_target: !firrtl.uint<39>, out %io_redirect_valid: !firrtl.uint<1>, out %io_in_valid__bore: !firrtl.uint<1>, out %falseWire__bore: !firrtl.uint<1>) {
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "difftest_commit_fpwen"}
      %c0_ui25 = firrtl.constant 0 : !firrtl.uint<25>
      %c33554431_ui25 = firrtl.constant 33554431 : !firrtl.uint<25>
      %io_wb_rfWen_0 = firrtl.wire {name = "io_wb_rfWen"} : !firrtl.uint<1>
      %io_wb_rfData_1 = firrtl.wire {name = "io_wb_rfData"} : !firrtl.uint<64>
      %io_redirect_valid_2 = firrtl.wire {name = "io_redirect_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_wb_rfWen, %io_wb_rfWen_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_wb_rfDest, %io_in_bits_decode_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %io_wb_rfData, %io_wb_rfData_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_redirect_target, %io_in_bits_decode_cf_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_valid, %io_redirect_valid_2 : !firrtl.uint<1>
      %_io_wb_rfWen_T = firrtl.and %io_in_bits_decode_ctrl_rfWen, %io_in_valid {name = "_io_wb_rfWen_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_wb_rfWen_0, %_io_wb_rfWen_T : !firrtl.uint<1>
      %0 = firrtl.multibit_mux %io_in_bits_decode_ctrl_fuType, %c0_ui64, %io_in_bits_commits_3, %io_in_bits_commits_2, %io_in_bits_commits_1, %io_in_bits_commits_0 : !firrtl.uint<3>, !firrtl.uint<64>
      firrtl.strictconnect %io_wb_rfData_1, %0 : !firrtl.uint<64>
      %_io_redirect_valid_T = firrtl.and %io_in_bits_decode_cf_redirect_valid, %io_in_valid {name = "_io_redirect_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_redirect_valid_2, %_io_redirect_valid_T : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %1 = firrtl.and %io_in_valid, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.and %1, %2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %3, "[%d] WBU: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %4 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.and %1, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %5, "[COMMIT] pc = 0x%x inst %x wen %x wdst %x wdata %x mmio %x intrNO %x\0A" {name = "printf_1"} (%io_in_bits_decode_cf_pc, %io_in_bits_decode_cf_instr, %io_wb_rfWen_0, %io_in_bits_decode_ctrl_rfDest, %io_wb_rfData_1, %io_in_bits_isMMIO, %io_in_bits_intrNO) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<64>
      %falseWire = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %falseWire, %c0_ui1 : !firrtl.uint<1>
      %difftest_commit_isRVC = firrtl.wire : !firrtl.uint<1>
      %difftest_commit_rfwen = firrtl.wire : !firrtl.uint<1>
      %difftest_commit_wdest = firrtl.wire : !firrtl.uint<8>
      %difftest_commit_pc = firrtl.wire : !firrtl.uint<64>
      %difftest_commit_instr = firrtl.wire : !firrtl.uint<32>
      %difftest_commit_sink_valid = firrtl.wire : !firrtl.uint<1>
      %difftest_commit_sink_skip = firrtl.wire : !firrtl.uint<1>
      %difftest_commit_sink_isRVC = firrtl.wire : !firrtl.uint<1>
      %difftest_commit_sink_rfwen = firrtl.wire : !firrtl.uint<1>
      %difftest_commit_sink_wpdest = firrtl.wire : !firrtl.uint<5>
      %difftest_commit_sink_wdest = firrtl.wire : !firrtl.uint<8>
      %difftest_commit_sink_pc = firrtl.wire : !firrtl.uint<64>
      %difftest_commit_sink_instr = firrtl.wire : !firrtl.uint<32>
      %difftest_commit_sink_module_clock, %difftest_commit_sink_module_io_valid, %difftest_commit_sink_module_io_skip, %difftest_commit_sink_module_io_isRVC, %difftest_commit_sink_module_io_rfwen, %difftest_commit_sink_module_io_wpdest, %difftest_commit_sink_module_io_wdest, %difftest_commit_sink_module_io_pc, %difftest_commit_sink_module_io_instr = firrtl.instance difftest_commit_sink_module @DummyDPICWrapper_4(in clock: !firrtl.clock, in io_valid: !firrtl.uint<1>, in io_skip: !firrtl.uint<1>, in io_isRVC: !firrtl.uint<1>, in io_rfwen: !firrtl.uint<1>, in io_wpdest: !firrtl.uint<5>, in io_wdest: !firrtl.uint<8>, in io_pc: !firrtl.uint<64>, in io_instr: !firrtl.uint<32>)
      firrtl.strictconnect %difftest_commit_sink_module_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftest_commit_sink_module_io_instr, %difftest_commit_sink_instr : !firrtl.uint<32>
      firrtl.strictconnect %difftest_commit_sink_module_io_pc, %difftest_commit_sink_pc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_commit_sink_module_io_wdest, %difftest_commit_sink_wdest : !firrtl.uint<8>
      firrtl.strictconnect %difftest_commit_sink_module_io_wpdest, %difftest_commit_sink_wpdest : !firrtl.uint<5>
      firrtl.strictconnect %difftest_commit_sink_module_io_rfwen, %difftest_commit_sink_rfwen : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_module_io_isRVC, %difftest_commit_sink_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_module_io_skip, %difftest_commit_sink_skip : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_module_io_valid, %difftest_commit_sink_valid : !firrtl.uint<1>
      %difftest_commit_sink_delayer_clock, %difftest_commit_sink_delayer_reset, %difftest_commit_sink_delayer_i_valid, %difftest_commit_sink_delayer_i_skip, %difftest_commit_sink_delayer_i_isRVC, %difftest_commit_sink_delayer_i_rfwen, %difftest_commit_sink_delayer_i_wpdest, %difftest_commit_sink_delayer_i_wdest, %difftest_commit_sink_delayer_i_pc, %difftest_commit_sink_delayer_i_instr, %difftest_commit_sink_delayer_o_valid, %difftest_commit_sink_delayer_o_skip, %difftest_commit_sink_delayer_o_isRVC, %difftest_commit_sink_delayer_o_rfwen, %difftest_commit_sink_delayer_o_wpdest, %difftest_commit_sink_delayer_o_wdest, %difftest_commit_sink_delayer_o_pc, %difftest_commit_sink_delayer_o_instr = firrtl.instance difftest_commit_sink_delayer @Delayer(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in i_valid: !firrtl.uint<1>, in i_skip: !firrtl.uint<1>, in i_isRVC: !firrtl.uint<1>, in i_rfwen: !firrtl.uint<1>, in i_wpdest: !firrtl.uint<5>, in i_wdest: !firrtl.uint<8>, in i_pc: !firrtl.uint<64>, in i_instr: !firrtl.uint<32>, out o_valid: !firrtl.uint<1>, out o_skip: !firrtl.uint<1>, out o_isRVC: !firrtl.uint<1>, out o_rfwen: !firrtl.uint<1>, out o_wpdest: !firrtl.uint<5>, out o_wdest: !firrtl.uint<8>, out o_pc: !firrtl.uint<64>, out o_instr: !firrtl.uint<32>)
      firrtl.strictconnect %difftest_commit_sink_delayer_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftest_commit_sink_delayer_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_instr, %difftest_commit_instr : !firrtl.uint<32>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_pc, %difftest_commit_pc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_wdest, %difftest_commit_wdest : !firrtl.uint<8>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_wpdest, %io_in_bits_decode_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_rfwen, %difftest_commit_rfwen : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_isRVC, %difftest_commit_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_skip, %io_in_bits_isMMIO : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_delayer_i_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_valid, %difftest_commit_sink_delayer_o_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_skip, %difftest_commit_sink_delayer_o_skip : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_isRVC, %difftest_commit_sink_delayer_o_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_rfwen, %difftest_commit_sink_delayer_o_rfwen : !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_sink_wpdest, %difftest_commit_sink_delayer_o_wpdest : !firrtl.uint<5>
      firrtl.strictconnect %difftest_commit_sink_wdest, %difftest_commit_sink_delayer_o_wdest : !firrtl.uint<8>
      firrtl.strictconnect %difftest_commit_sink_pc, %difftest_commit_sink_delayer_o_pc : !firrtl.uint<64>
      firrtl.strictconnect %difftest_commit_sink_instr, %difftest_commit_sink_delayer_o_instr : !firrtl.uint<32>
      %difftest_commit_pc_signBit = firrtl.bits %io_in_bits_decode_cf_pc 38 to 38 {name = "difftest_commit_pc_signBit"} : (!firrtl.uint<39>) -> !firrtl.uint<1>
      %_difftest_commit_pc_T = firrtl.mux(%difftest_commit_pc_signBit, %c33554431_ui25, %c0_ui25) {name = "_difftest_commit_pc_T"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_difftest_commit_pc_T_1 = firrtl.cat %_difftest_commit_pc_T, %io_in_bits_decode_cf_pc {name = "_difftest_commit_pc_T_1"} : (!firrtl.uint<25>, !firrtl.uint<39>) -> !firrtl.uint<64>
      firrtl.strictconnect %difftest_commit_pc, %_difftest_commit_pc_T_1 : !firrtl.uint<64>
      %6 = firrtl.bits %io_in_bits_decode_cf_instr 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      firrtl.strictconnect %difftest_commit_instr, %6 : !firrtl.uint<32>
      %_difftest_commit_isRVC_T = firrtl.bits %io_in_bits_decode_cf_instr 1 to 0 {name = "_difftest_commit_isRVC_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %7 = firrtl.andr %_difftest_commit_isRVC_T : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_difftest_commit_isRVC_T_1 = firrtl.not %7 {name = "_difftest_commit_isRVC_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_isRVC, %_difftest_commit_isRVC_T_1 : !firrtl.uint<1>
      %_difftest_wb_valid_T = firrtl.orr %io_in_bits_decode_ctrl_rfDest {name = "_difftest_wb_valid_T"} : (!firrtl.uint<5>) -> !firrtl.uint<1>
      %_difftest_commit_rfwen_T_1 = firrtl.and %io_wb_rfWen_0, %_difftest_wb_valid_T {name = "_difftest_commit_rfwen_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %difftest_commit_rfwen, %_difftest_commit_rfwen_T_1 : !firrtl.uint<1>
      %8 = firrtl.pad %io_in_bits_decode_ctrl_rfDest, 8 : (!firrtl.uint<5>) -> !firrtl.uint<8>
      firrtl.strictconnect %difftest_commit_wdest, %8 : !firrtl.uint<8>
      %difftest_wb_valid = firrtl.wire : !firrtl.uint<1>
      %difftest_wb_data = firrtl.wire : !firrtl.uint<64>
      %difftest_wb_sink_valid = firrtl.wire : !firrtl.uint<1>
      %difftest_wb_sink_address = firrtl.wire : !firrtl.uint<5>
      %difftest_wb_sink_data = firrtl.wire : !firrtl.uint<64>
      %difftest_wb_sink_module_clock, %difftest_wb_sink_module_io_valid, %difftest_wb_sink_module_io_address, %difftest_wb_sink_module_io_data = firrtl.instance difftest_wb_sink_module @DummyDPICWrapper_5(in clock: !firrtl.clock, in io_valid: !firrtl.uint<1>, in io_address: !firrtl.uint<5>, in io_data: !firrtl.uint<64>)
      firrtl.strictconnect %difftest_wb_sink_module_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftest_wb_sink_module_io_data, %difftest_wb_sink_data : !firrtl.uint<64>
      firrtl.strictconnect %difftest_wb_sink_module_io_address, %difftest_wb_sink_address : !firrtl.uint<5>
      firrtl.strictconnect %difftest_wb_sink_module_io_valid, %difftest_wb_sink_valid : !firrtl.uint<1>
      %difftest_wb_sink_delayer_clock, %difftest_wb_sink_delayer_reset, %difftest_wb_sink_delayer_i_valid, %difftest_wb_sink_delayer_i_address, %difftest_wb_sink_delayer_i_data, %difftest_wb_sink_delayer_o_valid, %difftest_wb_sink_delayer_o_address, %difftest_wb_sink_delayer_o_data = firrtl.instance difftest_wb_sink_delayer @Delayer_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in i_valid: !firrtl.uint<1>, in i_address: !firrtl.uint<5>, in i_data: !firrtl.uint<64>, out o_valid: !firrtl.uint<1>, out o_address: !firrtl.uint<5>, out o_data: !firrtl.uint<64>)
      firrtl.strictconnect %difftest_wb_sink_delayer_clock, %clock : !firrtl.clock
      firrtl.strictconnect %difftest_wb_sink_delayer_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %difftest_wb_sink_delayer_i_data, %difftest_wb_data : !firrtl.uint<64>
      firrtl.strictconnect %difftest_wb_sink_delayer_i_address, %io_in_bits_decode_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %difftest_wb_sink_delayer_i_valid, %difftest_wb_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftest_wb_sink_valid, %difftest_wb_sink_delayer_o_valid : !firrtl.uint<1>
      firrtl.strictconnect %difftest_wb_sink_address, %difftest_wb_sink_delayer_o_address : !firrtl.uint<5>
      firrtl.strictconnect %difftest_wb_sink_data, %difftest_wb_sink_delayer_o_data : !firrtl.uint<64>
      %_difftest_wb_valid_T_1 = firrtl.and %io_wb_rfWen_0, %_difftest_wb_valid_T {name = "_difftest_wb_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %difftest_wb_valid, %_difftest_wb_valid_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %difftest_wb_data, %io_wb_rfData_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_valid__bore, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %falseWire__bore, %falseWire : !firrtl.uint<1>
    }
    firrtl.module private @Backend_inorder(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_cf_instr: !firrtl.uint<64>, in %io_in_0_bits_cf_pc: !firrtl.uint<39>, in %io_in_0_bits_cf_pnpc: !firrtl.uint<39>, in %io_in_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, in %io_in_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, in %io_in_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_0: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_1: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_2: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_3: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_4: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_5: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_6: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_7: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_8: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_9: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_10: !firrtl.uint<1>, in %io_in_0_bits_cf_intrVec_11: !firrtl.uint<1>, in %io_in_0_bits_cf_brIdx: !firrtl.uint<4>, in %io_in_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, in %io_in_0_bits_ctrl_src1Type: !firrtl.uint<1>, in %io_in_0_bits_ctrl_src2Type: !firrtl.uint<1>, in %io_in_0_bits_ctrl_fuType: !firrtl.uint<3>, in %io_in_0_bits_ctrl_fuOpType: !firrtl.uint<7>, in %io_in_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, in %io_in_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, in %io_in_0_bits_ctrl_rfWen: !firrtl.uint<1>, in %io_in_0_bits_ctrl_rfDest: !firrtl.uint<5>, in %io_in_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, in %io_in_0_bits_data_imm: !firrtl.uint<64>, in %io_flush: !firrtl.uint<2>, in %io_dmem_req_ready: !firrtl.uint<1>, out %io_dmem_req_valid: !firrtl.uint<1>, out %io_dmem_req_bits_addr: !firrtl.uint<39>, out %io_dmem_req_bits_size: !firrtl.uint<3>, out %io_dmem_req_bits_cmd: !firrtl.uint<4>, out %io_dmem_req_bits_wmask: !firrtl.uint<8>, out %io_dmem_req_bits_wdata: !firrtl.uint<64>, in %io_dmem_resp_valid: !firrtl.uint<1>, in %io_dmem_resp_bits_rdata: !firrtl.uint<64>, out %io_memMMU_imem_priviledgeMode: !firrtl.uint<2>, out %io_memMMU_dmem_priviledgeMode: !firrtl.uint<2>, out %io_memMMU_dmem_status_sum: !firrtl.uint<1>, out %io_memMMU_dmem_status_mxr: !firrtl.uint<1>, in %io_memMMU_dmem_loadPF: !firrtl.uint<1>, in %io_memMMU_dmem_storePF: !firrtl.uint<1>, in %io_memMMU_dmem_addr: !firrtl.uint<39>, out %io_redirect_target: !firrtl.uint<39>, out %io_redirect_valid: !firrtl.uint<1>, in %exu_lsu_lsExecUnit_dtlbPF__bore: !firrtl.uint<1>, in %exu_lsu_dtlbPF__bore: !firrtl.uint<1>, out %exu_alu_REG__bore_valid: !firrtl.uint<1>, out %exu_alu_REG__bore_pc: !firrtl.uint<39>, out %exu_alu_REG__bore_isMissPredict: !firrtl.uint<1>, out %exu_alu_REG__bore_actualTarget: !firrtl.uint<39>, out %exu_alu_REG__bore_actualTaken: !firrtl.uint<1>, out %exu_alu_REG__bore_fuOpType: !firrtl.uint<7>, out %exu_alu_REG__bore_btbType: !firrtl.uint<2>, out %exu_alu_REG__bore_isRVC: !firrtl.uint<1>, in %exu_csr_perfCntCond_4__bore: !firrtl.uint<1>, in %exu_lsu_lsExecUnit_dtlbEnable__bore: !firrtl.uint<1>, out %exu_csr_satp__bore: !firrtl.uint<64>, out %exu_csr_satp__bore_0: !firrtl.uint<64>, in %exu_csr_msip__bore: !firrtl.uint<1>, in %exu_csr_meip__bore: !firrtl.uint<1>, out %exu_mou__WIRE_1__bore: !firrtl.uint<1>, out %exu_mou__WIRE_1__bore_0: !firrtl.uint<1>, out %exu_mou__WIRE_1__bore_1: !firrtl.uint<1>, in %exu_lsu_lsuMMIO__bore: !firrtl.uint<1>, in %exu_csr_mtip__bore: !firrtl.uint<1>, out %exu_csr__WIRE__bore: !firrtl.uint<12>, out %exu_csr__WIRE__bore_0: !firrtl.uint<12>, out %exu_mou__WIRE__bore: !firrtl.uint<1>, out %exu_mou__WIRE__bore_0: !firrtl.uint<1>, in %exu_csr_perfCntCond_15__bore: !firrtl.uint<1>, in %exu_lsu_lsExecUnit_dtlbFinish__bore: !firrtl.uint<1>, out %exu_lsu__WIRE__bore: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_in_0_ready_0 = firrtl.wire {name = "io_in_0_ready"} : !firrtl.uint<1>
      %io_dmem_req_valid_1 = firrtl.wire {name = "io_dmem_req_valid"} : !firrtl.uint<1>
      %io_dmem_req_bits_addr_2 = firrtl.wire {name = "io_dmem_req_bits_addr"} : !firrtl.uint<39>
      %io_dmem_req_bits_size_3 = firrtl.wire {name = "io_dmem_req_bits_size"} : !firrtl.uint<3>
      %io_dmem_req_bits_cmd_4 = firrtl.wire {name = "io_dmem_req_bits_cmd"} : !firrtl.uint<4>
      %io_dmem_req_bits_wmask_5 = firrtl.wire {name = "io_dmem_req_bits_wmask"} : !firrtl.uint<8>
      %io_dmem_req_bits_wdata_6 = firrtl.wire {name = "io_dmem_req_bits_wdata"} : !firrtl.uint<64>
      %io_memMMU_imem_priviledgeMode_7 = firrtl.wire {name = "io_memMMU_imem_priviledgeMode"} : !firrtl.uint<2>
      %io_memMMU_dmem_priviledgeMode_8 = firrtl.wire {name = "io_memMMU_dmem_priviledgeMode"} : !firrtl.uint<2>
      %io_memMMU_dmem_status_sum_9 = firrtl.wire {name = "io_memMMU_dmem_status_sum"} : !firrtl.uint<1>
      %io_memMMU_dmem_status_mxr_10 = firrtl.wire {name = "io_memMMU_dmem_status_mxr"} : !firrtl.uint<1>
      %io_redirect_target_11 = firrtl.wire {name = "io_redirect_target"} : !firrtl.uint<39>
      %io_redirect_valid_12 = firrtl.wire {name = "io_redirect_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_ready, %io_in_0_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_valid, %io_dmem_req_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_bits_addr, %io_dmem_req_bits_addr_2 : !firrtl.uint<39>
      firrtl.strictconnect %io_dmem_req_bits_size, %io_dmem_req_bits_size_3 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_cmd, %io_dmem_req_bits_cmd_4 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_wmask, %io_dmem_req_bits_wmask_5 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wdata, %io_dmem_req_bits_wdata_6 : !firrtl.uint<64>
      firrtl.strictconnect %io_memMMU_imem_priviledgeMode, %io_memMMU_imem_priviledgeMode_7 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_priviledgeMode, %io_memMMU_dmem_priviledgeMode_8 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_status_sum, %io_memMMU_dmem_status_sum_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_memMMU_dmem_status_mxr, %io_memMMU_dmem_status_mxr_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_redirect_target, %io_redirect_target_11 : !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_valid, %io_redirect_valid_12 : !firrtl.uint<1>
      %isu_clock, %isu_reset, %isu_io_in_0_ready, %isu_io_in_0_valid, %isu_io_in_0_bits_cf_instr, %isu_io_in_0_bits_cf_pc, %isu_io_in_0_bits_cf_pnpc, %isu_io_in_0_bits_cf_exceptionVec_1, %isu_io_in_0_bits_cf_exceptionVec_2, %isu_io_in_0_bits_cf_exceptionVec_12, %isu_io_in_0_bits_cf_intrVec_0, %isu_io_in_0_bits_cf_intrVec_1, %isu_io_in_0_bits_cf_intrVec_2, %isu_io_in_0_bits_cf_intrVec_3, %isu_io_in_0_bits_cf_intrVec_4, %isu_io_in_0_bits_cf_intrVec_5, %isu_io_in_0_bits_cf_intrVec_6, %isu_io_in_0_bits_cf_intrVec_7, %isu_io_in_0_bits_cf_intrVec_8, %isu_io_in_0_bits_cf_intrVec_9, %isu_io_in_0_bits_cf_intrVec_10, %isu_io_in_0_bits_cf_intrVec_11, %isu_io_in_0_bits_cf_brIdx, %isu_io_in_0_bits_cf_crossPageIPFFix, %isu_io_in_0_bits_ctrl_src1Type, %isu_io_in_0_bits_ctrl_src2Type, %isu_io_in_0_bits_ctrl_fuType, %isu_io_in_0_bits_ctrl_fuOpType, %isu_io_in_0_bits_ctrl_rfSrc1, %isu_io_in_0_bits_ctrl_rfSrc2, %isu_io_in_0_bits_ctrl_rfWen, %isu_io_in_0_bits_ctrl_rfDest, %isu_io_in_0_bits_ctrl_isNutCoreTrap, %isu_io_in_0_bits_data_imm, %isu_io_out_ready, %isu_io_out_valid, %isu_io_out_bits_cf_instr, %isu_io_out_bits_cf_pc, %isu_io_out_bits_cf_pnpc, %isu_io_out_bits_cf_exceptionVec_1, %isu_io_out_bits_cf_exceptionVec_2, %isu_io_out_bits_cf_exceptionVec_12, %isu_io_out_bits_cf_intrVec_0, %isu_io_out_bits_cf_intrVec_1, %isu_io_out_bits_cf_intrVec_2, %isu_io_out_bits_cf_intrVec_3, %isu_io_out_bits_cf_intrVec_4, %isu_io_out_bits_cf_intrVec_5, %isu_io_out_bits_cf_intrVec_6, %isu_io_out_bits_cf_intrVec_7, %isu_io_out_bits_cf_intrVec_8, %isu_io_out_bits_cf_intrVec_9, %isu_io_out_bits_cf_intrVec_10, %isu_io_out_bits_cf_intrVec_11, %isu_io_out_bits_cf_brIdx, %isu_io_out_bits_cf_crossPageIPFFix, %isu_io_out_bits_ctrl_fuType, %isu_io_out_bits_ctrl_fuOpType, %isu_io_out_bits_ctrl_rfWen, %isu_io_out_bits_ctrl_rfDest, %isu_io_out_bits_ctrl_isNutCoreTrap, %isu_io_out_bits_data_src1, %isu_io_out_bits_data_src2, %isu_io_out_bits_data_imm, %isu_io_wb_rfWen, %isu_io_wb_rfDest, %isu_io_wb_rfData, %isu_io_forward_valid, %isu_io_forward_wb_rfWen, %isu_io_forward_wb_rfDest, %isu_io_forward_wb_rfData, %isu_io_forward_fuType, %isu_io_flush, %isu__WIRE_2__bore, %isu__WIRE_1__bore, %isu__WIRE__bore = firrtl.instance isu @ISU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_cf_instr: !firrtl.uint<64>, in io_in_0_bits_cf_pc: !firrtl.uint<39>, in io_in_0_bits_cf_pnpc: !firrtl.uint<39>, in io_in_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, in io_in_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, in io_in_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_0: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_1: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_2: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_3: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_4: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_5: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_6: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_7: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_8: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_9: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_10: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_11: !firrtl.uint<1>, in io_in_0_bits_cf_brIdx: !firrtl.uint<4>, in io_in_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, in io_in_0_bits_ctrl_src1Type: !firrtl.uint<1>, in io_in_0_bits_ctrl_src2Type: !firrtl.uint<1>, in io_in_0_bits_ctrl_fuType: !firrtl.uint<3>, in io_in_0_bits_ctrl_fuOpType: !firrtl.uint<7>, in io_in_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, in io_in_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, in io_in_0_bits_ctrl_rfWen: !firrtl.uint<1>, in io_in_0_bits_ctrl_rfDest: !firrtl.uint<5>, in io_in_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, in io_in_0_bits_data_imm: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_cf_instr: !firrtl.uint<64>, out io_out_bits_cf_pc: !firrtl.uint<39>, out io_out_bits_cf_pnpc: !firrtl.uint<39>, out io_out_bits_cf_exceptionVec_1: !firrtl.uint<1>, out io_out_bits_cf_exceptionVec_2: !firrtl.uint<1>, out io_out_bits_cf_exceptionVec_12: !firrtl.uint<1>, out io_out_bits_cf_intrVec_0: !firrtl.uint<1>, out io_out_bits_cf_intrVec_1: !firrtl.uint<1>, out io_out_bits_cf_intrVec_2: !firrtl.uint<1>, out io_out_bits_cf_intrVec_3: !firrtl.uint<1>, out io_out_bits_cf_intrVec_4: !firrtl.uint<1>, out io_out_bits_cf_intrVec_5: !firrtl.uint<1>, out io_out_bits_cf_intrVec_6: !firrtl.uint<1>, out io_out_bits_cf_intrVec_7: !firrtl.uint<1>, out io_out_bits_cf_intrVec_8: !firrtl.uint<1>, out io_out_bits_cf_intrVec_9: !firrtl.uint<1>, out io_out_bits_cf_intrVec_10: !firrtl.uint<1>, out io_out_bits_cf_intrVec_11: !firrtl.uint<1>, out io_out_bits_cf_brIdx: !firrtl.uint<4>, out io_out_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out io_out_bits_ctrl_fuType: !firrtl.uint<3>, out io_out_bits_ctrl_fuOpType: !firrtl.uint<7>, out io_out_bits_ctrl_rfWen: !firrtl.uint<1>, out io_out_bits_ctrl_rfDest: !firrtl.uint<5>, out io_out_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out io_out_bits_data_src1: !firrtl.uint<64>, out io_out_bits_data_src2: !firrtl.uint<64>, out io_out_bits_data_imm: !firrtl.uint<64>, in io_wb_rfWen: !firrtl.uint<1>, in io_wb_rfDest: !firrtl.uint<5>, in io_wb_rfData: !firrtl.uint<64>, in io_forward_valid: !firrtl.uint<1>, in io_forward_wb_rfWen: !firrtl.uint<1>, in io_forward_wb_rfDest: !firrtl.uint<5>, in io_forward_wb_rfData: !firrtl.uint<64>, in io_forward_fuType: !firrtl.uint<3>, in io_flush: !firrtl.uint<1>, out _WIRE_2__bore: !firrtl.uint<1>, out _WIRE_1__bore: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<1>
      %3 = firrtl.wire : !firrtl.uint<64>
      %4 = firrtl.wire : !firrtl.uint<39>
      %5 = firrtl.wire : !firrtl.uint<39>
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<1>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<1>
      %21 = firrtl.wire : !firrtl.uint<4>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<3>
      %24 = firrtl.wire : !firrtl.uint<7>
      %25 = firrtl.wire : !firrtl.uint<1>
      %26 = firrtl.wire : !firrtl.uint<5>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<64>
      %29 = firrtl.wire : !firrtl.uint<64>
      %30 = firrtl.wire : !firrtl.uint<64>
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<5>
      %33 = firrtl.wire : !firrtl.uint<64>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<1>
      %36 = firrtl.wire : !firrtl.uint<5>
      %37 = firrtl.wire : !firrtl.uint<64>
      %38 = firrtl.wire : !firrtl.uint<3>
      %39 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %isu_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_valid, %io_in_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_instr, %io_in_0_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %isu_io_in_0_bits_cf_pc, %io_in_0_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %isu_io_in_0_bits_cf_pnpc, %io_in_0_bits_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %isu_io_in_0_bits_cf_exceptionVec_1, %io_in_0_bits_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_exceptionVec_2, %io_in_0_bits_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_exceptionVec_12, %io_in_0_bits_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_0, %io_in_0_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_1, %io_in_0_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_2, %io_in_0_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_3, %io_in_0_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_4, %io_in_0_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_5, %io_in_0_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_6, %io_in_0_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_7, %io_in_0_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_8, %io_in_0_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_9, %io_in_0_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_10, %io_in_0_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_intrVec_11, %io_in_0_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_cf_brIdx, %io_in_0_bits_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %isu_io_in_0_bits_cf_crossPageIPFFix, %io_in_0_bits_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_src1Type, %io_in_0_bits_ctrl_src1Type : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_src2Type, %io_in_0_bits_ctrl_src2Type : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_fuType, %io_in_0_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_fuOpType, %io_in_0_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_rfSrc1, %io_in_0_bits_ctrl_rfSrc1 : !firrtl.uint<5>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_rfSrc2, %io_in_0_bits_ctrl_rfSrc2 : !firrtl.uint<5>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_rfWen, %io_in_0_bits_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_rfDest, %io_in_0_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %isu_io_in_0_bits_ctrl_isNutCoreTrap, %io_in_0_bits_ctrl_isNutCoreTrap : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_in_0_bits_data_imm, %io_in_0_bits_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %isu_io_out_ready, %1 : !firrtl.uint<1>
      firrtl.strictconnect %2, %isu_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %3, %isu_io_out_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %4, %isu_io_out_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %5, %isu_io_out_bits_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %6, %isu_io_out_bits_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %7, %isu_io_out_bits_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %8, %isu_io_out_bits_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %9, %isu_io_out_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %10, %isu_io_out_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %11, %isu_io_out_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %12, %isu_io_out_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %13, %isu_io_out_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %14, %isu_io_out_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %15, %isu_io_out_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %16, %isu_io_out_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %17, %isu_io_out_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %18, %isu_io_out_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %19, %isu_io_out_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %20, %isu_io_out_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %21, %isu_io_out_bits_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %22, %isu_io_out_bits_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %23, %isu_io_out_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %24, %isu_io_out_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %25, %isu_io_out_bits_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %26, %isu_io_out_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %27, %isu_io_out_bits_ctrl_isNutCoreTrap : !firrtl.uint<1>
      firrtl.strictconnect %28, %isu_io_out_bits_data_src1 : !firrtl.uint<64>
      firrtl.strictconnect %29, %isu_io_out_bits_data_src2 : !firrtl.uint<64>
      firrtl.strictconnect %30, %isu_io_out_bits_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %isu_io_wb_rfWen, %31 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_wb_rfDest, %32 : !firrtl.uint<5>
      firrtl.strictconnect %isu_io_wb_rfData, %33 : !firrtl.uint<64>
      firrtl.strictconnect %isu_io_forward_valid, %34 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_forward_wb_rfWen, %35 : !firrtl.uint<1>
      firrtl.strictconnect %isu_io_forward_wb_rfDest, %36 : !firrtl.uint<5>
      firrtl.strictconnect %isu_io_forward_wb_rfData, %37 : !firrtl.uint<64>
      firrtl.strictconnect %isu_io_forward_fuType, %38 : !firrtl.uint<3>
      firrtl.strictconnect %isu_io_flush, %39 : !firrtl.uint<1>
      firrtl.strictconnect %isu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %isu_reset, %reset : !firrtl.uint<1>
      %exu_clock, %exu_reset, %exu_io_in_ready, %exu_io_in_valid, %exu_io_in_bits_cf_instr, %exu_io_in_bits_cf_pc, %exu_io_in_bits_cf_pnpc, %exu_io_in_bits_cf_exceptionVec_0, %exu_io_in_bits_cf_exceptionVec_1, %exu_io_in_bits_cf_exceptionVec_2, %exu_io_in_bits_cf_exceptionVec_3, %exu_io_in_bits_cf_exceptionVec_5, %exu_io_in_bits_cf_exceptionVec_7, %exu_io_in_bits_cf_exceptionVec_8, %exu_io_in_bits_cf_exceptionVec_9, %exu_io_in_bits_cf_exceptionVec_10, %exu_io_in_bits_cf_exceptionVec_11, %exu_io_in_bits_cf_exceptionVec_12, %exu_io_in_bits_cf_exceptionVec_13, %exu_io_in_bits_cf_exceptionVec_14, %exu_io_in_bits_cf_exceptionVec_15, %exu_io_in_bits_cf_intrVec_0, %exu_io_in_bits_cf_intrVec_1, %exu_io_in_bits_cf_intrVec_2, %exu_io_in_bits_cf_intrVec_3, %exu_io_in_bits_cf_intrVec_4, %exu_io_in_bits_cf_intrVec_5, %exu_io_in_bits_cf_intrVec_6, %exu_io_in_bits_cf_intrVec_7, %exu_io_in_bits_cf_intrVec_8, %exu_io_in_bits_cf_intrVec_9, %exu_io_in_bits_cf_intrVec_10, %exu_io_in_bits_cf_intrVec_11, %exu_io_in_bits_cf_brIdx, %exu_io_in_bits_cf_crossPageIPFFix, %exu_io_in_bits_ctrl_fuType, %exu_io_in_bits_ctrl_fuOpType, %exu_io_in_bits_ctrl_rfWen, %exu_io_in_bits_ctrl_rfDest, %exu_io_in_bits_ctrl_isNutCoreTrap, %exu_io_in_bits_data_src1, %exu_io_in_bits_data_src2, %exu_io_in_bits_data_imm, %exu_io_out_valid, %exu_io_out_bits_decode_cf_instr, %exu_io_out_bits_decode_cf_pc, %exu_io_out_bits_decode_cf_redirect_target, %exu_io_out_bits_decode_cf_redirect_valid, %exu_io_out_bits_decode_ctrl_fuType, %exu_io_out_bits_decode_ctrl_rfWen, %exu_io_out_bits_decode_ctrl_rfDest, %exu_io_out_bits_isMMIO, %exu_io_out_bits_intrNO, %exu_io_out_bits_commits_0, %exu_io_out_bits_commits_1, %exu_io_out_bits_commits_2, %exu_io_out_bits_commits_3, %exu_io_flush, %exu_io_dmem_req_ready, %exu_io_dmem_req_valid, %exu_io_dmem_req_bits_addr, %exu_io_dmem_req_bits_size, %exu_io_dmem_req_bits_cmd, %exu_io_dmem_req_bits_wmask, %exu_io_dmem_req_bits_wdata, %exu_io_dmem_resp_valid, %exu_io_dmem_resp_bits_rdata, %exu_io_forward_valid, %exu_io_forward_wb_rfWen, %exu_io_forward_wb_rfDest, %exu_io_forward_wb_rfData, %exu_io_forward_fuType, %exu_io_memMMU_imem_priviledgeMode, %exu_io_memMMU_dmem_priviledgeMode, %exu_io_memMMU_dmem_status_sum, %exu_io_memMMU_dmem_status_mxr, %exu_io_memMMU_dmem_loadPF, %exu_io_memMMU_dmem_storePF, %exu_io_memMMU_dmem_addr, %exu_lsu_lsExecUnit_dtlbPF__bore_13, %exu_lsu_dtlbPF__bore_14, %exu_alu_REG__bore_valid_15, %exu_alu_REG__bore_pc_16, %exu_alu_REG__bore_isMissPredict_17, %exu_alu_REG__bore_actualTarget_18, %exu_alu_REG__bore_actualTaken_19, %exu_alu_REG__bore_fuOpType_20, %exu_alu_REG__bore_btbType_21, %exu_alu_REG__bore_isRVC_22, %exu_csr_perfCntCond_4__bore_23, %exu_lsu_lsExecUnit_dtlbEnable__bore_24, %exu_csr_satp__bore_25, %exu_csr_satp__bore_0_26, %exu_csr_perfCntCond_53__bore, %exu_csr_msip__bore_27, %exu_csr_meip__bore_28, %exu_csr_perfCntCond_2__bore, %exu_mou__WIRE_1__bore_29, %exu_mou__WIRE_1__bore_0_30, %exu_mou__WIRE_1__bore_1_31, %exu_lsu_lsuMMIO__bore_32, %exu_csr_mtip__bore_33, %exu_csr_perfCntCond_50__bore, %exu_csr_perfCntCond_3__bore, %exu_csr__WIRE__bore_34, %exu_csr__WIRE__bore_0_35, %exu_mou__WIRE__bore_36, %exu_mou__WIRE__bore_0_37, %exu_csr_perfCntCond_49__bore, %exu_csr_perfCntCond_15__bore_38, %exu_lsu_lsExecUnit_dtlbFinish__bore_39, %exu_lsu__WIRE__bore_40 = firrtl.instance exu @EXU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_cf_instr: !firrtl.uint<64>, in io_in_bits_cf_pc: !firrtl.uint<39>, in io_in_bits_cf_pnpc: !firrtl.uint<39>, in io_in_bits_cf_exceptionVec_0: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_1: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_2: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_3: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_5: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_7: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_8: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_9: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_10: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_11: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_12: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_13: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_14: !firrtl.uint<1>, in io_in_bits_cf_exceptionVec_15: !firrtl.uint<1>, in io_in_bits_cf_intrVec_0: !firrtl.uint<1>, in io_in_bits_cf_intrVec_1: !firrtl.uint<1>, in io_in_bits_cf_intrVec_2: !firrtl.uint<1>, in io_in_bits_cf_intrVec_3: !firrtl.uint<1>, in io_in_bits_cf_intrVec_4: !firrtl.uint<1>, in io_in_bits_cf_intrVec_5: !firrtl.uint<1>, in io_in_bits_cf_intrVec_6: !firrtl.uint<1>, in io_in_bits_cf_intrVec_7: !firrtl.uint<1>, in io_in_bits_cf_intrVec_8: !firrtl.uint<1>, in io_in_bits_cf_intrVec_9: !firrtl.uint<1>, in io_in_bits_cf_intrVec_10: !firrtl.uint<1>, in io_in_bits_cf_intrVec_11: !firrtl.uint<1>, in io_in_bits_cf_brIdx: !firrtl.uint<4>, in io_in_bits_cf_crossPageIPFFix: !firrtl.uint<1>, in io_in_bits_ctrl_fuType: !firrtl.uint<3>, in io_in_bits_ctrl_fuOpType: !firrtl.uint<7>, in io_in_bits_ctrl_rfWen: !firrtl.uint<1>, in io_in_bits_ctrl_rfDest: !firrtl.uint<5>, in io_in_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, in io_in_bits_data_src1: !firrtl.uint<64>, in io_in_bits_data_src2: !firrtl.uint<64>, in io_in_bits_data_imm: !firrtl.uint<64>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_decode_cf_instr: !firrtl.uint<64>, out io_out_bits_decode_cf_pc: !firrtl.uint<39>, out io_out_bits_decode_cf_redirect_target: !firrtl.uint<39>, out io_out_bits_decode_cf_redirect_valid: !firrtl.uint<1>, out io_out_bits_decode_ctrl_fuType: !firrtl.uint<3>, out io_out_bits_decode_ctrl_rfWen: !firrtl.uint<1>, out io_out_bits_decode_ctrl_rfDest: !firrtl.uint<5>, out io_out_bits_isMMIO: !firrtl.uint<1>, out io_out_bits_intrNO: !firrtl.uint<64>, out io_out_bits_commits_0: !firrtl.uint<64>, out io_out_bits_commits_1: !firrtl.uint<64>, out io_out_bits_commits_2: !firrtl.uint<64>, out io_out_bits_commits_3: !firrtl.uint<64>, in io_flush: !firrtl.uint<1>, in io_dmem_req_ready: !firrtl.uint<1>, out io_dmem_req_valid: !firrtl.uint<1>, out io_dmem_req_bits_addr: !firrtl.uint<39>, out io_dmem_req_bits_size: !firrtl.uint<3>, out io_dmem_req_bits_cmd: !firrtl.uint<4>, out io_dmem_req_bits_wmask: !firrtl.uint<8>, out io_dmem_req_bits_wdata: !firrtl.uint<64>, in io_dmem_resp_valid: !firrtl.uint<1>, in io_dmem_resp_bits_rdata: !firrtl.uint<64>, out io_forward_valid: !firrtl.uint<1>, out io_forward_wb_rfWen: !firrtl.uint<1>, out io_forward_wb_rfDest: !firrtl.uint<5>, out io_forward_wb_rfData: !firrtl.uint<64>, out io_forward_fuType: !firrtl.uint<3>, out io_memMMU_imem_priviledgeMode: !firrtl.uint<2>, out io_memMMU_dmem_priviledgeMode: !firrtl.uint<2>, out io_memMMU_dmem_status_sum: !firrtl.uint<1>, out io_memMMU_dmem_status_mxr: !firrtl.uint<1>, in io_memMMU_dmem_loadPF: !firrtl.uint<1>, in io_memMMU_dmem_storePF: !firrtl.uint<1>, in io_memMMU_dmem_addr: !firrtl.uint<39>, in lsu_lsExecUnit_dtlbPF__bore: !firrtl.uint<1>, in lsu_dtlbPF__bore: !firrtl.uint<1>, out alu_REG__bore_valid: !firrtl.uint<1>, out alu_REG__bore_pc: !firrtl.uint<39>, out alu_REG__bore_isMissPredict: !firrtl.uint<1>, out alu_REG__bore_actualTarget: !firrtl.uint<39>, out alu_REG__bore_actualTaken: !firrtl.uint<1>, out alu_REG__bore_fuOpType: !firrtl.uint<7>, out alu_REG__bore_btbType: !firrtl.uint<2>, out alu_REG__bore_isRVC: !firrtl.uint<1>, in csr_perfCntCond_4__bore: !firrtl.uint<1>, in lsu_lsExecUnit_dtlbEnable__bore: !firrtl.uint<1>, out csr_satp__bore: !firrtl.uint<64>, out csr_satp__bore_0: !firrtl.uint<64>, in csr_perfCntCond_53__bore: !firrtl.uint<1>, in csr_msip__bore: !firrtl.uint<1>, in csr_meip__bore: !firrtl.uint<1>, in csr_perfCntCond_2__bore: !firrtl.uint<1>, out mou__WIRE_1__bore: !firrtl.uint<1>, out mou__WIRE_1__bore_0: !firrtl.uint<1>, out mou__WIRE_1__bore_1: !firrtl.uint<1>, in lsu_lsuMMIO__bore: !firrtl.uint<1>, in csr_mtip__bore: !firrtl.uint<1>, in csr_perfCntCond_50__bore: !firrtl.uint<1>, in csr_perfCntCond_3__bore: !firrtl.uint<1>, out csr__WIRE__bore: !firrtl.uint<12>, out csr__WIRE__bore_0: !firrtl.uint<12>, out mou__WIRE__bore: !firrtl.uint<1>, out mou__WIRE__bore_0: !firrtl.uint<1>, in csr_perfCntCond_49__bore: !firrtl.uint<1>, in csr_perfCntCond_15__bore: !firrtl.uint<1>, in lsu_lsExecUnit_dtlbFinish__bore: !firrtl.uint<1>, out lsu__WIRE__bore: !firrtl.uint<1>)
      %40 = firrtl.wire : !firrtl.uint<1>
      %41 = firrtl.wire : !firrtl.uint<1>
      %42 = firrtl.wire : !firrtl.uint<64>
      %43 = firrtl.wire : !firrtl.uint<39>
      %44 = firrtl.wire : !firrtl.uint<39>
      %45 = firrtl.wire : !firrtl.uint<1>
      %46 = firrtl.wire : !firrtl.uint<1>
      %47 = firrtl.wire : !firrtl.uint<1>
      %48 = firrtl.wire : !firrtl.uint<1>
      %49 = firrtl.wire : !firrtl.uint<1>
      %50 = firrtl.wire : !firrtl.uint<1>
      %51 = firrtl.wire : !firrtl.uint<1>
      %52 = firrtl.wire : !firrtl.uint<1>
      %53 = firrtl.wire : !firrtl.uint<1>
      %54 = firrtl.wire : !firrtl.uint<1>
      %55 = firrtl.wire : !firrtl.uint<1>
      %56 = firrtl.wire : !firrtl.uint<1>
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<1>
      %59 = firrtl.wire : !firrtl.uint<1>
      %60 = firrtl.wire : !firrtl.uint<1>
      %61 = firrtl.wire : !firrtl.uint<1>
      %62 = firrtl.wire : !firrtl.uint<1>
      %63 = firrtl.wire : !firrtl.uint<1>
      %64 = firrtl.wire : !firrtl.uint<1>
      %65 = firrtl.wire : !firrtl.uint<1>
      %66 = firrtl.wire : !firrtl.uint<1>
      %67 = firrtl.wire : !firrtl.uint<1>
      %68 = firrtl.wire : !firrtl.uint<1>
      %69 = firrtl.wire : !firrtl.uint<1>
      %70 = firrtl.wire : !firrtl.uint<1>
      %71 = firrtl.wire : !firrtl.uint<4>
      %72 = firrtl.wire : !firrtl.uint<1>
      %73 = firrtl.wire : !firrtl.uint<3>
      %74 = firrtl.wire : !firrtl.uint<7>
      %75 = firrtl.wire : !firrtl.uint<1>
      %76 = firrtl.wire : !firrtl.uint<5>
      %77 = firrtl.wire : !firrtl.uint<1>
      %78 = firrtl.wire : !firrtl.uint<64>
      %79 = firrtl.wire : !firrtl.uint<64>
      %80 = firrtl.wire : !firrtl.uint<64>
      %81 = firrtl.wire : !firrtl.uint<1>
      %82 = firrtl.wire : !firrtl.uint<64>
      %83 = firrtl.wire : !firrtl.uint<39>
      %84 = firrtl.wire : !firrtl.uint<39>
      %85 = firrtl.wire : !firrtl.uint<1>
      %86 = firrtl.wire : !firrtl.uint<3>
      %87 = firrtl.wire : !firrtl.uint<1>
      %88 = firrtl.wire : !firrtl.uint<5>
      %89 = firrtl.wire : !firrtl.uint<1>
      %90 = firrtl.wire : !firrtl.uint<64>
      %91 = firrtl.wire : !firrtl.uint<64>
      %92 = firrtl.wire : !firrtl.uint<64>
      %93 = firrtl.wire : !firrtl.uint<64>
      %94 = firrtl.wire : !firrtl.uint<64>
      %95 = firrtl.wire : !firrtl.uint<1>
      %96 = firrtl.wire : !firrtl.uint<1>
      %97 = firrtl.wire : !firrtl.uint<39>
      %98 = firrtl.wire : !firrtl.uint<3>
      %99 = firrtl.wire : !firrtl.uint<4>
      %100 = firrtl.wire : !firrtl.uint<8>
      %101 = firrtl.wire : !firrtl.uint<64>
      %102 = firrtl.wire : !firrtl.uint<1>
      %103 = firrtl.wire : !firrtl.uint<1>
      %104 = firrtl.wire : !firrtl.uint<5>
      %105 = firrtl.wire : !firrtl.uint<64>
      %106 = firrtl.wire : !firrtl.uint<3>
      %107 = firrtl.wire : !firrtl.uint<2>
      %108 = firrtl.wire : !firrtl.uint<2>
      %109 = firrtl.wire : !firrtl.uint<1>
      %110 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %40, %exu_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_valid, %41 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_instr, %42 : !firrtl.uint<64>
      firrtl.strictconnect %exu_io_in_bits_cf_pc, %43 : !firrtl.uint<39>
      firrtl.strictconnect %exu_io_in_bits_cf_pnpc, %44 : !firrtl.uint<39>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_0, %45 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_1, %46 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_2, %47 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_3, %48 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_5, %49 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_7, %50 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_8, %51 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_9, %52 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_10, %53 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_11, %54 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_12, %55 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_13, %56 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_14, %57 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_exceptionVec_15, %58 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_0, %59 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_1, %60 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_2, %61 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_3, %62 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_4, %63 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_5, %64 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_6, %65 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_7, %66 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_8, %67 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_9, %68 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_10, %69 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_intrVec_11, %70 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_cf_brIdx, %71 : !firrtl.uint<4>
      firrtl.strictconnect %exu_io_in_bits_cf_crossPageIPFFix, %72 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_ctrl_fuType, %73 : !firrtl.uint<3>
      firrtl.strictconnect %exu_io_in_bits_ctrl_fuOpType, %74 : !firrtl.uint<7>
      firrtl.strictconnect %exu_io_in_bits_ctrl_rfWen, %75 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_ctrl_rfDest, %76 : !firrtl.uint<5>
      firrtl.strictconnect %exu_io_in_bits_ctrl_isNutCoreTrap, %77 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_data_src1, %78 : !firrtl.uint<64>
      firrtl.strictconnect %exu_io_in_bits_data_src2, %79 : !firrtl.uint<64>
      firrtl.strictconnect %exu_io_in_bits_data_imm, %80 : !firrtl.uint<64>
      firrtl.strictconnect %81, %exu_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %82, %exu_io_out_bits_decode_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %83, %exu_io_out_bits_decode_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %84, %exu_io_out_bits_decode_cf_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %85, %exu_io_out_bits_decode_cf_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %86, %exu_io_out_bits_decode_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %87, %exu_io_out_bits_decode_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %88, %exu_io_out_bits_decode_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %89, %exu_io_out_bits_isMMIO : !firrtl.uint<1>
      firrtl.strictconnect %90, %exu_io_out_bits_intrNO : !firrtl.uint<64>
      firrtl.strictconnect %91, %exu_io_out_bits_commits_0 : !firrtl.uint<64>
      firrtl.strictconnect %92, %exu_io_out_bits_commits_1 : !firrtl.uint<64>
      firrtl.strictconnect %93, %exu_io_out_bits_commits_2 : !firrtl.uint<64>
      firrtl.strictconnect %94, %exu_io_out_bits_commits_3 : !firrtl.uint<64>
      firrtl.strictconnect %exu_io_flush, %95 : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_dmem_req_ready, %io_dmem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %96, %exu_io_dmem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %97, %exu_io_dmem_req_bits_addr : !firrtl.uint<39>
      firrtl.strictconnect %98, %exu_io_dmem_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %99, %exu_io_dmem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %100, %exu_io_dmem_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %101, %exu_io_dmem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %exu_io_dmem_resp_valid, %io_dmem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_dmem_resp_bits_rdata, %io_dmem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %102, %exu_io_forward_valid : !firrtl.uint<1>
      firrtl.strictconnect %103, %exu_io_forward_wb_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %104, %exu_io_forward_wb_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %105, %exu_io_forward_wb_rfData : !firrtl.uint<64>
      firrtl.strictconnect %106, %exu_io_forward_fuType : !firrtl.uint<3>
      firrtl.strictconnect %107, %exu_io_memMMU_imem_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %108, %exu_io_memMMU_dmem_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %109, %exu_io_memMMU_dmem_status_sum : !firrtl.uint<1>
      firrtl.strictconnect %110, %exu_io_memMMU_dmem_status_mxr : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_memMMU_dmem_loadPF, %io_memMMU_dmem_loadPF : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_memMMU_dmem_storePF, %io_memMMU_dmem_storePF : !firrtl.uint<1>
      firrtl.strictconnect %exu_io_memMMU_dmem_addr, %io_memMMU_dmem_addr : !firrtl.uint<39>
      firrtl.strictconnect %exu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %exu_reset, %reset : !firrtl.uint<1>
      %wbu_clock, %wbu_reset, %wbu_io_in_valid, %wbu_io_in_bits_decode_cf_instr, %wbu_io_in_bits_decode_cf_pc, %wbu_io_in_bits_decode_cf_redirect_target, %wbu_io_in_bits_decode_cf_redirect_valid, %wbu_io_in_bits_decode_ctrl_fuType, %wbu_io_in_bits_decode_ctrl_rfWen, %wbu_io_in_bits_decode_ctrl_rfDest, %wbu_io_in_bits_isMMIO, %wbu_io_in_bits_intrNO, %wbu_io_in_bits_commits_0, %wbu_io_in_bits_commits_1, %wbu_io_in_bits_commits_2, %wbu_io_in_bits_commits_3, %wbu_io_wb_rfWen, %wbu_io_wb_rfDest, %wbu_io_wb_rfData, %wbu_io_redirect_target, %wbu_io_redirect_valid, %wbu_io_in_valid__bore, %wbu_falseWire__bore = firrtl.instance wbu @WBU(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_decode_cf_instr: !firrtl.uint<64>, in io_in_bits_decode_cf_pc: !firrtl.uint<39>, in io_in_bits_decode_cf_redirect_target: !firrtl.uint<39>, in io_in_bits_decode_cf_redirect_valid: !firrtl.uint<1>, in io_in_bits_decode_ctrl_fuType: !firrtl.uint<3>, in io_in_bits_decode_ctrl_rfWen: !firrtl.uint<1>, in io_in_bits_decode_ctrl_rfDest: !firrtl.uint<5>, in io_in_bits_isMMIO: !firrtl.uint<1>, in io_in_bits_intrNO: !firrtl.uint<64>, in io_in_bits_commits_0: !firrtl.uint<64>, in io_in_bits_commits_1: !firrtl.uint<64>, in io_in_bits_commits_2: !firrtl.uint<64>, in io_in_bits_commits_3: !firrtl.uint<64>, out io_wb_rfWen: !firrtl.uint<1>, out io_wb_rfDest: !firrtl.uint<5>, out io_wb_rfData: !firrtl.uint<64>, out io_redirect_target: !firrtl.uint<39>, out io_redirect_valid: !firrtl.uint<1>, out io_in_valid__bore: !firrtl.uint<1>, out falseWire__bore: !firrtl.uint<1>)
      %111 = firrtl.wire : !firrtl.uint<1>
      %112 = firrtl.wire : !firrtl.uint<64>
      %113 = firrtl.wire : !firrtl.uint<39>
      %114 = firrtl.wire : !firrtl.uint<39>
      %115 = firrtl.wire : !firrtl.uint<1>
      %116 = firrtl.wire : !firrtl.uint<3>
      %117 = firrtl.wire : !firrtl.uint<1>
      %118 = firrtl.wire : !firrtl.uint<5>
      %119 = firrtl.wire : !firrtl.uint<1>
      %120 = firrtl.wire : !firrtl.uint<64>
      %121 = firrtl.wire : !firrtl.uint<64>
      %122 = firrtl.wire : !firrtl.uint<64>
      %123 = firrtl.wire : !firrtl.uint<64>
      %124 = firrtl.wire : !firrtl.uint<64>
      %125 = firrtl.wire : !firrtl.uint<1>
      %126 = firrtl.wire : !firrtl.uint<5>
      %127 = firrtl.wire : !firrtl.uint<64>
      %128 = firrtl.wire : !firrtl.uint<39>
      %129 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_valid, %111 : !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_bits_decode_cf_instr, %112 : !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_decode_cf_pc, %113 : !firrtl.uint<39>
      firrtl.strictconnect %wbu_io_in_bits_decode_cf_redirect_target, %114 : !firrtl.uint<39>
      firrtl.strictconnect %wbu_io_in_bits_decode_cf_redirect_valid, %115 : !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_bits_decode_ctrl_fuType, %116 : !firrtl.uint<3>
      firrtl.strictconnect %wbu_io_in_bits_decode_ctrl_rfWen, %117 : !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_bits_decode_ctrl_rfDest, %118 : !firrtl.uint<5>
      firrtl.strictconnect %wbu_io_in_bits_isMMIO, %119 : !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_bits_intrNO, %120 : !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_commits_0, %121 : !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_commits_1, %122 : !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_commits_2, %123 : !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_commits_3, %124 : !firrtl.uint<64>
      firrtl.strictconnect %125, %wbu_io_wb_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %126, %wbu_io_wb_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %127, %wbu_io_wb_rfData : !firrtl.uint<64>
      firrtl.strictconnect %128, %wbu_io_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %129, %wbu_io_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %wbu_clock, %clock : !firrtl.clock
      firrtl.strictconnect %wbu_reset, %reset : !firrtl.uint<1>
      %_isu_io_flush_T = firrtl.bits %io_flush 0 to 0 {name = "_isu_io_flush_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %130 = firrtl.mux(%81, %c0_ui1, %valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_exu_io_in_bits_T = firrtl.and %2, %40 {name = "_exu_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %131 = firrtl.mux(%_exu_io_in_bits_T, %c1_ui1, %130) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %132 = firrtl.mux(%_isu_io_flush_T, %c0_ui1, %131) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid, %132 : !firrtl.uint<1>
      firrtl.strictconnect %1, %40 : !firrtl.uint<1>
      %exu_io_in_bits_r_cf_instr = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %exu_io_in_bits_r_cf_pc = firrtl.reg %clock {firrtl.random_init_start = 65 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %exu_io_in_bits_r_cf_pnpc = firrtl.reg %clock {firrtl.random_init_start = 104 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %exu_io_in_bits_r_cf_exceptionVec_0 = firrtl.reg %clock {firrtl.random_init_start = 184 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_1 = firrtl.reg %clock {firrtl.random_init_start = 185 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_2 = firrtl.reg %clock {firrtl.random_init_start = 186 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_3 = firrtl.reg %clock {firrtl.random_init_start = 187 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_5 = firrtl.reg %clock {firrtl.random_init_start = 189 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_7 = firrtl.reg %clock {firrtl.random_init_start = 191 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_8 = firrtl.reg %clock {firrtl.random_init_start = 192 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_9 = firrtl.reg %clock {firrtl.random_init_start = 193 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_10 = firrtl.reg %clock {firrtl.random_init_start = 194 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_11 = firrtl.reg %clock {firrtl.random_init_start = 195 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_12 = firrtl.reg %clock {firrtl.random_init_start = 196 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_13 = firrtl.reg %clock {firrtl.random_init_start = 197 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_14 = firrtl.reg %clock {firrtl.random_init_start = 198 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_exceptionVec_15 = firrtl.reg %clock {firrtl.random_init_start = 199 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_0 = firrtl.reg %clock {firrtl.random_init_start = 200 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_1 = firrtl.reg %clock {firrtl.random_init_start = 201 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_2 = firrtl.reg %clock {firrtl.random_init_start = 202 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_3 = firrtl.reg %clock {firrtl.random_init_start = 203 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_4 = firrtl.reg %clock {firrtl.random_init_start = 204 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_5 = firrtl.reg %clock {firrtl.random_init_start = 205 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_6 = firrtl.reg %clock {firrtl.random_init_start = 206 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_7 = firrtl.reg %clock {firrtl.random_init_start = 207 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_8 = firrtl.reg %clock {firrtl.random_init_start = 208 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_9 = firrtl.reg %clock {firrtl.random_init_start = 209 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_10 = firrtl.reg %clock {firrtl.random_init_start = 210 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_intrVec_11 = firrtl.reg %clock {firrtl.random_init_start = 211 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_cf_brIdx = firrtl.reg %clock {firrtl.random_init_start = 212 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %exu_io_in_bits_r_cf_crossPageIPFFix = firrtl.reg %clock {firrtl.random_init_start = 217 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_ctrl_fuType = firrtl.reg %clock {firrtl.random_init_start = 285 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %exu_io_in_bits_r_ctrl_fuOpType = firrtl.reg %clock {firrtl.random_init_start = 288 : ui64} : !firrtl.clock, !firrtl.uint<7>
      %exu_io_in_bits_r_ctrl_rfWen = firrtl.reg %clock {firrtl.random_init_start = 305 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_ctrl_rfDest = firrtl.reg %clock {firrtl.random_init_start = 306 : ui64} : !firrtl.clock, !firrtl.uint<5>
      %exu_io_in_bits_r_ctrl_isNutCoreTrap = firrtl.reg %clock {firrtl.random_init_start = 311 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %exu_io_in_bits_r_data_src1 = firrtl.reg %clock {firrtl.random_init_start = 316 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %exu_io_in_bits_r_data_src2 = firrtl.reg %clock {firrtl.random_init_start = 380 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %exu_io_in_bits_r_data_imm = firrtl.reg %clock {firrtl.random_init_start = 444 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %133 = firrtl.mux(%_exu_io_in_bits_T, %3, %exu_io_in_bits_r_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %exu_io_in_bits_r_cf_instr, %133 : !firrtl.uint<64>
      %134 = firrtl.mux(%_exu_io_in_bits_T, %4, %exu_io_in_bits_r_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %exu_io_in_bits_r_cf_pc, %134 : !firrtl.uint<39>
      %135 = firrtl.mux(%_exu_io_in_bits_T, %5, %exu_io_in_bits_r_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %exu_io_in_bits_r_cf_pnpc, %135 : !firrtl.uint<39>
      %136 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_0, %136 : !firrtl.uint<1>
      %137 = firrtl.mux(%_exu_io_in_bits_T, %6, %exu_io_in_bits_r_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_1, %137 : !firrtl.uint<1>
      %138 = firrtl.mux(%_exu_io_in_bits_T, %7, %exu_io_in_bits_r_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_2, %138 : !firrtl.uint<1>
      %139 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_3, %139 : !firrtl.uint<1>
      %140 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_5, %140 : !firrtl.uint<1>
      %141 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_7, %141 : !firrtl.uint<1>
      %142 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_8, %142 : !firrtl.uint<1>
      %143 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_9, %143 : !firrtl.uint<1>
      %144 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_10, %144 : !firrtl.uint<1>
      %145 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_11, %145 : !firrtl.uint<1>
      %146 = firrtl.mux(%_exu_io_in_bits_T, %8, %exu_io_in_bits_r_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_12, %146 : !firrtl.uint<1>
      %147 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_13) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_13, %147 : !firrtl.uint<1>
      %148 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_14) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_14, %148 : !firrtl.uint<1>
      %149 = firrtl.mux(%_exu_io_in_bits_T, %c0_ui1, %exu_io_in_bits_r_cf_exceptionVec_15) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_exceptionVec_15, %149 : !firrtl.uint<1>
      %150 = firrtl.mux(%_exu_io_in_bits_T, %9, %exu_io_in_bits_r_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_0, %150 : !firrtl.uint<1>
      %151 = firrtl.mux(%_exu_io_in_bits_T, %10, %exu_io_in_bits_r_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_1, %151 : !firrtl.uint<1>
      %152 = firrtl.mux(%_exu_io_in_bits_T, %11, %exu_io_in_bits_r_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_2, %152 : !firrtl.uint<1>
      %153 = firrtl.mux(%_exu_io_in_bits_T, %12, %exu_io_in_bits_r_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_3, %153 : !firrtl.uint<1>
      %154 = firrtl.mux(%_exu_io_in_bits_T, %13, %exu_io_in_bits_r_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_4, %154 : !firrtl.uint<1>
      %155 = firrtl.mux(%_exu_io_in_bits_T, %14, %exu_io_in_bits_r_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_5, %155 : !firrtl.uint<1>
      %156 = firrtl.mux(%_exu_io_in_bits_T, %15, %exu_io_in_bits_r_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_6, %156 : !firrtl.uint<1>
      %157 = firrtl.mux(%_exu_io_in_bits_T, %16, %exu_io_in_bits_r_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_7, %157 : !firrtl.uint<1>
      %158 = firrtl.mux(%_exu_io_in_bits_T, %17, %exu_io_in_bits_r_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_8, %158 : !firrtl.uint<1>
      %159 = firrtl.mux(%_exu_io_in_bits_T, %18, %exu_io_in_bits_r_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_9, %159 : !firrtl.uint<1>
      %160 = firrtl.mux(%_exu_io_in_bits_T, %19, %exu_io_in_bits_r_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_10, %160 : !firrtl.uint<1>
      %161 = firrtl.mux(%_exu_io_in_bits_T, %20, %exu_io_in_bits_r_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_intrVec_11, %161 : !firrtl.uint<1>
      %162 = firrtl.mux(%_exu_io_in_bits_T, %21, %exu_io_in_bits_r_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %exu_io_in_bits_r_cf_brIdx, %162 : !firrtl.uint<4>
      %163 = firrtl.mux(%_exu_io_in_bits_T, %22, %exu_io_in_bits_r_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_cf_crossPageIPFFix, %163 : !firrtl.uint<1>
      %164 = firrtl.mux(%_exu_io_in_bits_T, %23, %exu_io_in_bits_r_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %exu_io_in_bits_r_ctrl_fuType, %164 : !firrtl.uint<3>
      %165 = firrtl.mux(%_exu_io_in_bits_T, %24, %exu_io_in_bits_r_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %exu_io_in_bits_r_ctrl_fuOpType, %165 : !firrtl.uint<7>
      %166 = firrtl.mux(%_exu_io_in_bits_T, %25, %exu_io_in_bits_r_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_ctrl_rfWen, %166 : !firrtl.uint<1>
      %167 = firrtl.mux(%_exu_io_in_bits_T, %26, %exu_io_in_bits_r_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %exu_io_in_bits_r_ctrl_rfDest, %167 : !firrtl.uint<5>
      %168 = firrtl.mux(%_exu_io_in_bits_T, %27, %exu_io_in_bits_r_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %exu_io_in_bits_r_ctrl_isNutCoreTrap, %168 : !firrtl.uint<1>
      %169 = firrtl.mux(%_exu_io_in_bits_T, %28, %exu_io_in_bits_r_data_src1) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %exu_io_in_bits_r_data_src1, %169 : !firrtl.uint<64>
      %170 = firrtl.mux(%_exu_io_in_bits_T, %29, %exu_io_in_bits_r_data_src2) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %exu_io_in_bits_r_data_src2, %170 : !firrtl.uint<64>
      %171 = firrtl.mux(%_exu_io_in_bits_T, %30, %exu_io_in_bits_r_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %exu_io_in_bits_r_data_imm, %171 : !firrtl.uint<64>
      firrtl.strictconnect %80, %exu_io_in_bits_r_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %79, %exu_io_in_bits_r_data_src2 : !firrtl.uint<64>
      firrtl.strictconnect %78, %exu_io_in_bits_r_data_src1 : !firrtl.uint<64>
      firrtl.strictconnect %77, %exu_io_in_bits_r_ctrl_isNutCoreTrap : !firrtl.uint<1>
      firrtl.strictconnect %76, %exu_io_in_bits_r_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %75, %exu_io_in_bits_r_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %74, %exu_io_in_bits_r_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %73, %exu_io_in_bits_r_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %72, %exu_io_in_bits_r_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %71, %exu_io_in_bits_r_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %59, %exu_io_in_bits_r_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %60, %exu_io_in_bits_r_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %61, %exu_io_in_bits_r_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %62, %exu_io_in_bits_r_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %63, %exu_io_in_bits_r_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %64, %exu_io_in_bits_r_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %65, %exu_io_in_bits_r_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %66, %exu_io_in_bits_r_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %67, %exu_io_in_bits_r_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %68, %exu_io_in_bits_r_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %69, %exu_io_in_bits_r_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %70, %exu_io_in_bits_r_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %45, %exu_io_in_bits_r_cf_exceptionVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %46, %exu_io_in_bits_r_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %47, %exu_io_in_bits_r_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %48, %exu_io_in_bits_r_cf_exceptionVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %49, %exu_io_in_bits_r_cf_exceptionVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %50, %exu_io_in_bits_r_cf_exceptionVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %51, %exu_io_in_bits_r_cf_exceptionVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %52, %exu_io_in_bits_r_cf_exceptionVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %53, %exu_io_in_bits_r_cf_exceptionVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %54, %exu_io_in_bits_r_cf_exceptionVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %55, %exu_io_in_bits_r_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %56, %exu_io_in_bits_r_cf_exceptionVec_13 : !firrtl.uint<1>
      firrtl.strictconnect %57, %exu_io_in_bits_r_cf_exceptionVec_14 : !firrtl.uint<1>
      firrtl.strictconnect %58, %exu_io_in_bits_r_cf_exceptionVec_15 : !firrtl.uint<1>
      firrtl.strictconnect %44, %exu_io_in_bits_r_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %43, %exu_io_in_bits_r_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %42, %exu_io_in_bits_r_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %41, %valid : !firrtl.uint<1>
      %_exu_io_flush_T = firrtl.bits %io_flush 1 to 1 {name = "_exu_io_flush_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %valid_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 508 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %172 = firrtl.mux(%_exu_io_flush_T, %c0_ui1, %81) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid_1, %172 : !firrtl.uint<1>
      %wbu_io_in_bits_r_decode_cf_instr = firrtl.reg %clock {firrtl.random_init_start = 509 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %wbu_io_in_bits_r_decode_cf_pc = firrtl.reg %clock {firrtl.random_init_start = 573 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %wbu_io_in_bits_r_decode_cf_redirect_target = firrtl.reg %clock {firrtl.random_init_start = 651 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %wbu_io_in_bits_r_decode_cf_redirect_valid = firrtl.reg %clock {firrtl.random_init_start = 691 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %wbu_io_in_bits_r_decode_ctrl_fuType = firrtl.reg %clock {firrtl.random_init_start = 793 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %wbu_io_in_bits_r_decode_ctrl_rfWen = firrtl.reg %clock {firrtl.random_init_start = 813 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %wbu_io_in_bits_r_decode_ctrl_rfDest = firrtl.reg %clock {firrtl.random_init_start = 814 : ui64} : !firrtl.clock, !firrtl.uint<5>
      %wbu_io_in_bits_r_isMMIO = firrtl.reg %clock {firrtl.random_init_start = 1016 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %wbu_io_in_bits_r_intrNO = firrtl.reg %clock {firrtl.random_init_start = 1017 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %wbu_io_in_bits_r_commits_0 = firrtl.reg %clock {firrtl.random_init_start = 1081 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %wbu_io_in_bits_r_commits_1 = firrtl.reg %clock {firrtl.random_init_start = 1145 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %wbu_io_in_bits_r_commits_2 = firrtl.reg %clock {firrtl.random_init_start = 1209 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %wbu_io_in_bits_r_commits_3 = firrtl.reg %clock {firrtl.random_init_start = 1273 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %173 = firrtl.mux(%81, %82, %wbu_io_in_bits_r_decode_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_r_decode_cf_instr, %173 : !firrtl.uint<64>
      %174 = firrtl.mux(%81, %83, %wbu_io_in_bits_r_decode_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %wbu_io_in_bits_r_decode_cf_pc, %174 : !firrtl.uint<39>
      %175 = firrtl.mux(%81, %84, %wbu_io_in_bits_r_decode_cf_redirect_target) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %wbu_io_in_bits_r_decode_cf_redirect_target, %175 : !firrtl.uint<39>
      %176 = firrtl.mux(%81, %85, %wbu_io_in_bits_r_decode_cf_redirect_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_bits_r_decode_cf_redirect_valid, %176 : !firrtl.uint<1>
      %177 = firrtl.mux(%81, %86, %wbu_io_in_bits_r_decode_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %wbu_io_in_bits_r_decode_ctrl_fuType, %177 : !firrtl.uint<3>
      %178 = firrtl.mux(%81, %87, %wbu_io_in_bits_r_decode_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_bits_r_decode_ctrl_rfWen, %178 : !firrtl.uint<1>
      %179 = firrtl.mux(%81, %88, %wbu_io_in_bits_r_decode_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %wbu_io_in_bits_r_decode_ctrl_rfDest, %179 : !firrtl.uint<5>
      %180 = firrtl.mux(%81, %89, %wbu_io_in_bits_r_isMMIO) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wbu_io_in_bits_r_isMMIO, %180 : !firrtl.uint<1>
      %181 = firrtl.mux(%81, %90, %wbu_io_in_bits_r_intrNO) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_r_intrNO, %181 : !firrtl.uint<64>
      %182 = firrtl.mux(%81, %91, %wbu_io_in_bits_r_commits_0) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_r_commits_0, %182 : !firrtl.uint<64>
      %183 = firrtl.mux(%81, %92, %wbu_io_in_bits_r_commits_1) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_r_commits_1, %183 : !firrtl.uint<64>
      %184 = firrtl.mux(%81, %93, %wbu_io_in_bits_r_commits_2) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_r_commits_2, %184 : !firrtl.uint<64>
      %185 = firrtl.mux(%81, %94, %wbu_io_in_bits_r_commits_3) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %wbu_io_in_bits_r_commits_3, %185 : !firrtl.uint<64>
      firrtl.strictconnect %121, %wbu_io_in_bits_r_commits_0 : !firrtl.uint<64>
      firrtl.strictconnect %122, %wbu_io_in_bits_r_commits_1 : !firrtl.uint<64>
      firrtl.strictconnect %123, %wbu_io_in_bits_r_commits_2 : !firrtl.uint<64>
      firrtl.strictconnect %124, %wbu_io_in_bits_r_commits_3 : !firrtl.uint<64>
      firrtl.strictconnect %120, %wbu_io_in_bits_r_intrNO : !firrtl.uint<64>
      firrtl.strictconnect %119, %wbu_io_in_bits_r_isMMIO : !firrtl.uint<1>
      firrtl.strictconnect %118, %wbu_io_in_bits_r_decode_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %117, %wbu_io_in_bits_r_decode_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %116, %wbu_io_in_bits_r_decode_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %115, %wbu_io_in_bits_r_decode_cf_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %114, %wbu_io_in_bits_r_decode_cf_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %113, %wbu_io_in_bits_r_decode_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %112, %wbu_io_in_bits_r_decode_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %111, %valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_ready_0, %0 : !firrtl.uint<1>
      firrtl.strictconnect %39, %_isu_io_flush_T : !firrtl.uint<1>
      firrtl.strictconnect %95, %_exu_io_flush_T : !firrtl.uint<1>
      firrtl.strictconnect %31, %125 : !firrtl.uint<1>
      firrtl.strictconnect %32, %126 : !firrtl.uint<5>
      firrtl.strictconnect %33, %127 : !firrtl.uint<64>
      firrtl.strictconnect %io_redirect_target_11, %128 : !firrtl.uint<39>
      firrtl.strictconnect %io_redirect_valid_12, %129 : !firrtl.uint<1>
      firrtl.strictconnect %34, %102 : !firrtl.uint<1>
      firrtl.strictconnect %35, %103 : !firrtl.uint<1>
      firrtl.strictconnect %36, %104 : !firrtl.uint<5>
      firrtl.strictconnect %37, %105 : !firrtl.uint<64>
      firrtl.strictconnect %38, %106 : !firrtl.uint<3>
      firrtl.strictconnect %io_memMMU_imem_priviledgeMode_7, %107 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_priviledgeMode_8, %108 : !firrtl.uint<2>
      firrtl.strictconnect %io_memMMU_dmem_status_sum_9, %109 : !firrtl.uint<1>
      firrtl.strictconnect %io_memMMU_dmem_status_mxr_10, %110 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_req_bits_addr_2, %97 : !firrtl.uint<39>
      firrtl.strictconnect %io_dmem_req_bits_size_3, %98 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_req_bits_cmd_4, %99 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_req_bits_wmask_5, %100 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_req_bits_wdata_6, %101 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_req_valid_1, %96 : !firrtl.uint<1>
      firrtl.strictconnect %exu_lsu_lsExecUnit_dtlbPF__bore_13, %exu_lsu_lsExecUnit_dtlbPF__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_lsu_dtlbPF__bore_14, %exu_lsu_dtlbPF__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_alu_REG__bore_valid, %exu_alu_REG__bore_valid_15 : !firrtl.uint<1>
      firrtl.strictconnect %exu_alu_REG__bore_pc, %exu_alu_REG__bore_pc_16 : !firrtl.uint<39>
      firrtl.strictconnect %exu_alu_REG__bore_isMissPredict, %exu_alu_REG__bore_isMissPredict_17 : !firrtl.uint<1>
      firrtl.strictconnect %exu_alu_REG__bore_actualTarget, %exu_alu_REG__bore_actualTarget_18 : !firrtl.uint<39>
      firrtl.strictconnect %exu_alu_REG__bore_actualTaken, %exu_alu_REG__bore_actualTaken_19 : !firrtl.uint<1>
      firrtl.strictconnect %exu_alu_REG__bore_fuOpType, %exu_alu_REG__bore_fuOpType_20 : !firrtl.uint<7>
      firrtl.strictconnect %exu_alu_REG__bore_btbType, %exu_alu_REG__bore_btbType_21 : !firrtl.uint<2>
      firrtl.strictconnect %exu_alu_REG__bore_isRVC, %exu_alu_REG__bore_isRVC_22 : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_perfCntCond_4__bore_23, %exu_csr_perfCntCond_4__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_lsu_lsExecUnit_dtlbEnable__bore_24, %exu_lsu_lsExecUnit_dtlbEnable__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_satp__bore, %exu_csr_satp__bore_25 : !firrtl.uint<64>
      firrtl.strictconnect %exu_csr_satp__bore_0, %exu_csr_satp__bore_0_26 : !firrtl.uint<64>
      firrtl.strictconnect %exu_csr_msip__bore_27, %exu_csr_msip__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_meip__bore_28, %exu_csr_meip__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_mou__WIRE_1__bore, %exu_mou__WIRE_1__bore_29 : !firrtl.uint<1>
      firrtl.strictconnect %exu_mou__WIRE_1__bore_0, %exu_mou__WIRE_1__bore_0_30 : !firrtl.uint<1>
      firrtl.strictconnect %exu_mou__WIRE_1__bore_1, %exu_mou__WIRE_1__bore_1_31 : !firrtl.uint<1>
      firrtl.strictconnect %exu_lsu_lsuMMIO__bore_32, %exu_lsu_lsuMMIO__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_mtip__bore_33, %exu_csr_mtip__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr__WIRE__bore, %exu_csr__WIRE__bore_34 : !firrtl.uint<12>
      firrtl.strictconnect %exu_csr__WIRE__bore_0, %exu_csr__WIRE__bore_0_35 : !firrtl.uint<12>
      firrtl.strictconnect %exu_mou__WIRE__bore, %exu_mou__WIRE__bore_36 : !firrtl.uint<1>
      firrtl.strictconnect %exu_mou__WIRE__bore_0, %exu_mou__WIRE__bore_0_37 : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_perfCntCond_15__bore_38, %exu_csr_perfCntCond_15__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_lsu_lsExecUnit_dtlbFinish__bore_39, %exu_lsu_lsExecUnit_dtlbFinish__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_lsu__WIRE__bore, %exu_lsu__WIRE__bore_40 : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_perfCntCond_53__bore, %isu__WIRE_2__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_perfCntCond_50__bore, %isu__WIRE_1__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_perfCntCond_49__bore, %isu__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_perfCntCond_2__bore, %wbu_io_in_valid__bore : !firrtl.uint<1>
      firrtl.strictconnect %exu_csr_perfCntCond_3__bore, %wbu_falseWire__bore : !firrtl.uint<1>
    }
    firrtl.module private @LockingArbiter(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_addr: !firrtl.uint<32>, in %io_in_0_bits_size: !firrtl.uint<3>, in %io_in_0_bits_cmd: !firrtl.uint<4>, in %io_in_0_bits_wmask: !firrtl.uint<8>, in %io_in_0_bits_wdata: !firrtl.uint<64>, out %io_in_1_ready: !firrtl.uint<1>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_addr: !firrtl.uint<32>, in %io_in_1_bits_size: !firrtl.uint<3>, in %io_in_1_bits_cmd: !firrtl.uint<4>, in %io_in_1_bits_wmask: !firrtl.uint<8>, in %io_in_1_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_size: !firrtl.uint<3>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_wmask: !firrtl.uint<8>, out %io_out_bits_wdata: !firrtl.uint<64>, out %io_chosen: !firrtl.uint<1>) {
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_in_0_ready_0 = firrtl.wire {name = "io_in_0_ready"} : !firrtl.uint<1>
      %io_in_1_ready_1 = firrtl.wire {name = "io_in_1_ready"} : !firrtl.uint<1>
      %io_out_valid_2 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_addr_3 = firrtl.wire {name = "io_out_bits_addr"} : !firrtl.uint<32>
      %io_out_bits_size_4 = firrtl.wire {name = "io_out_bits_size"} : !firrtl.uint<3>
      %io_out_bits_cmd_5 = firrtl.wire {name = "io_out_bits_cmd"} : !firrtl.uint<4>
      %io_out_bits_wmask_6 = firrtl.wire {name = "io_out_bits_wmask"} : !firrtl.uint<8>
      %io_out_bits_wdata_7 = firrtl.wire {name = "io_out_bits_wdata"} : !firrtl.uint<64>
      %io_chosen_8 = firrtl.wire {name = "io_chosen"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_ready, %io_in_0_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready, %io_in_1_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_out_bits_addr_3 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size, %io_out_bits_size_4 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd, %io_out_bits_cmd_5 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask, %io_out_bits_wmask_6 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata, %io_out_bits_wdata_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_chosen, %io_chosen_8 : !firrtl.uint<1>
      %io_chosen_choice = firrtl.wire : !firrtl.uint<1>
      %0 = firrtl.mux(%io_chosen_8, %io_in_1_valid, %io_in_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%io_chosen_8, %io_in_1_bits_addr, %io_in_0_bits_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %2 = firrtl.mux(%io_chosen_8, %io_in_1_bits_size, %io_in_0_bits_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %3 = firrtl.mux(%io_chosen_8, %io_in_1_bits_cmd, %io_in_0_bits_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %4 = firrtl.mux(%io_chosen_8, %io_in_1_bits_wmask, %io_in_0_bits_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %5 = firrtl.mux(%io_chosen_8, %io_in_1_bits_wdata, %io_in_0_bits_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_valid_2, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr_3, %1 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size_4, %2 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd_5, %3 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask_6, %4 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata_7, %5 : !firrtl.uint<64>
      %lockCount_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %lockIdx = firrtl.reg %clock {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %locked = firrtl.orr %lockCount_value {name = "locked"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_wantsLock_T = firrtl.bits %io_out_bits_cmd_5 0 to 0 {name = "_wantsLock_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_wantsLock_T_1 = firrtl.bits %io_out_bits_cmd_5 1 to 1 {name = "_wantsLock_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %wantsLock = firrtl.and %_wantsLock_T, %_wantsLock_T_1 {name = "wantsLock"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.and %io_out_ready, %io_out_valid_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.and %6, %wantsLock : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.mux(%7, %io_chosen_8, %lockIdx) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %lockIdx, %8 : !firrtl.uint<1>
      %_value_T = firrtl.add %lockCount_value, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_1 = firrtl.bits %_value_T 2 to 0 {name = "_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %9 = firrtl.mux(%7, %_value_T_1, %lockCount_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %lockCount_value, %9 : !firrtl.uint<3>
      %10 = firrtl.mux(%locked, %lockIdx, %io_chosen_choice) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_chosen_8, %10 : !firrtl.uint<1>
      %11 = firrtl.not %io_in_0_valid : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_0_ready_T = firrtl.not %lockIdx {name = "_io_in_0_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_0_ready_T_1 = firrtl.mux(%locked, %_io_in_0_ready_T, %c1_ui1) {name = "_io_in_0_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_0_ready_T_2 = firrtl.and %_io_in_0_ready_T_1, %io_out_ready {name = "_io_in_0_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_ready_0, %_io_in_0_ready_T_2 : !firrtl.uint<1>
      %_io_in_1_ready_T_1 = firrtl.mux(%locked, %lockIdx, %11) {name = "_io_in_1_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_1_ready_T_2 = firrtl.and %_io_in_1_ready_T_1, %io_out_ready {name = "_io_in_1_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready_1, %_io_in_1_ready_T_2 : !firrtl.uint<1>
      %12 = firrtl.not %io_in_0_valid : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_chosen_choice, %12 : !firrtl.uint<1>
    }
    firrtl.module private @SimpleBusCrossbarNto1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_0_req_ready: !firrtl.uint<1>, in %io_in_0_req_valid: !firrtl.uint<1>, in %io_in_0_req_bits_addr: !firrtl.uint<32>, in %io_in_0_req_bits_size: !firrtl.uint<3>, in %io_in_0_req_bits_cmd: !firrtl.uint<4>, in %io_in_0_req_bits_wmask: !firrtl.uint<8>, in %io_in_0_req_bits_wdata: !firrtl.uint<64>, out %io_in_0_resp_valid: !firrtl.uint<1>, out %io_in_0_resp_bits_cmd: !firrtl.uint<4>, out %io_in_0_resp_bits_rdata: !firrtl.uint<64>, out %io_in_1_req_ready: !firrtl.uint<1>, in %io_in_1_req_valid: !firrtl.uint<1>, in %io_in_1_req_bits_addr: !firrtl.uint<32>, in %io_in_1_req_bits_size: !firrtl.uint<3>, in %io_in_1_req_bits_cmd: !firrtl.uint<4>, in %io_in_1_req_bits_wmask: !firrtl.uint<8>, in %io_in_1_req_bits_wdata: !firrtl.uint<64>, out %io_in_1_resp_valid: !firrtl.uint<1>, out %io_in_1_resp_bits_cmd: !firrtl.uint<4>, out %io_in_1_resp_bits_rdata: !firrtl.uint<64>, in %io_out_req_ready: !firrtl.uint<1>, out %io_out_req_valid: !firrtl.uint<1>, out %io_out_req_bits_addr: !firrtl.uint<32>, out %io_out_req_bits_size: !firrtl.uint<3>, out %io_out_req_bits_cmd: !firrtl.uint<4>, out %io_out_req_bits_wmask: !firrtl.uint<8>, out %io_out_req_bits_wdata: !firrtl.uint<64>, in %io_out_resp_valid: !firrtl.uint<1>, in %io_out_resp_bits_cmd: !firrtl.uint<4>, in %io_out_resp_bits_rdata: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %io_in_0_req_ready_0 = firrtl.wire {name = "io_in_0_req_ready"} : !firrtl.uint<1>
      %io_in_0_resp_valid_1 = firrtl.wire {name = "io_in_0_resp_valid"} : !firrtl.uint<1>
      %io_in_1_req_ready_2 = firrtl.wire {name = "io_in_1_req_ready"} : !firrtl.uint<1>
      %io_in_1_resp_valid_3 = firrtl.wire {name = "io_in_1_resp_valid"} : !firrtl.uint<1>
      %io_out_req_valid_4 = firrtl.wire {name = "io_out_req_valid"} : !firrtl.uint<1>
      %io_out_req_bits_addr_5 = firrtl.wire {name = "io_out_req_bits_addr"} : !firrtl.uint<32>
      %io_out_req_bits_size_6 = firrtl.wire {name = "io_out_req_bits_size"} : !firrtl.uint<3>
      %io_out_req_bits_cmd_7 = firrtl.wire {name = "io_out_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_req_bits_wmask_8 = firrtl.wire {name = "io_out_req_bits_wmask"} : !firrtl.uint<8>
      %io_out_req_bits_wdata_9 = firrtl.wire {name = "io_out_req_bits_wdata"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_0_req_ready, %io_in_0_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_resp_valid, %io_in_0_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_resp_bits_cmd, %io_out_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_0_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_in_1_req_ready, %io_in_1_req_ready_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_resp_valid, %io_in_1_resp_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_resp_bits_cmd, %io_out_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_1_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_req_valid, %io_out_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_bits_addr, %io_out_req_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_size, %io_out_req_bits_size_6 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_cmd, %io_out_req_bits_cmd_7 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_wmask, %io_out_req_bits_wmask_8 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wdata, %io_out_req_bits_wdata_9 : !firrtl.uint<64>
      %state = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %inputArb_clock, %inputArb_reset, %inputArb_io_in_0_ready, %inputArb_io_in_0_valid, %inputArb_io_in_0_bits_addr, %inputArb_io_in_0_bits_size, %inputArb_io_in_0_bits_cmd, %inputArb_io_in_0_bits_wmask, %inputArb_io_in_0_bits_wdata, %inputArb_io_in_1_ready, %inputArb_io_in_1_valid, %inputArb_io_in_1_bits_addr, %inputArb_io_in_1_bits_size, %inputArb_io_in_1_bits_cmd, %inputArb_io_in_1_bits_wmask, %inputArb_io_in_1_bits_wdata, %inputArb_io_out_ready, %inputArb_io_out_valid, %inputArb_io_out_bits_addr, %inputArb_io_out_bits_size, %inputArb_io_out_bits_cmd, %inputArb_io_out_bits_wmask, %inputArb_io_out_bits_wdata, %inputArb_io_chosen = firrtl.instance inputArb @LockingArbiter(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_addr: !firrtl.uint<32>, in io_in_0_bits_size: !firrtl.uint<3>, in io_in_0_bits_cmd: !firrtl.uint<4>, in io_in_0_bits_wmask: !firrtl.uint<8>, in io_in_0_bits_wdata: !firrtl.uint<64>, out io_in_1_ready: !firrtl.uint<1>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_addr: !firrtl.uint<32>, in io_in_1_bits_size: !firrtl.uint<3>, in io_in_1_bits_cmd: !firrtl.uint<4>, in io_in_1_bits_wmask: !firrtl.uint<8>, in io_in_1_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_size: !firrtl.uint<3>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_wmask: !firrtl.uint<8>, out io_out_bits_wdata: !firrtl.uint<64>, out io_chosen: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<1>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<32>
      %5 = firrtl.wire : !firrtl.uint<3>
      %6 = firrtl.wire : !firrtl.uint<4>
      %7 = firrtl.wire : !firrtl.uint<8>
      %8 = firrtl.wire : !firrtl.uint<64>
      %9 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %inputArb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_0_valid, %io_in_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_0_bits_addr, %io_in_0_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %inputArb_io_in_0_bits_size, %io_in_0_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %inputArb_io_in_0_bits_cmd, %io_in_0_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %inputArb_io_in_0_bits_wmask, %io_in_0_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %inputArb_io_in_0_bits_wdata, %io_in_0_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %1, %inputArb_io_in_1_ready : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_1_valid, %io_in_1_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_1_bits_addr, %io_in_1_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %inputArb_io_in_1_bits_size, %io_in_1_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %inputArb_io_in_1_bits_cmd, %io_in_1_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %inputArb_io_in_1_bits_wmask, %io_in_1_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %inputArb_io_in_1_bits_wdata, %io_in_1_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %inputArb_io_out_ready, %2 : !firrtl.uint<1>
      firrtl.strictconnect %3, %inputArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %4, %inputArb_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %5, %inputArb_io_out_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %6, %inputArb_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %7, %inputArb_io_out_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %8, %inputArb_io_out_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %9, %inputArb_io_chosen : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_clock, %clock : !firrtl.clock
      firrtl.strictconnect %inputArb_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_req_ready_0, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_req_ready_2, %1 : !firrtl.uint<1>
      %10 = firrtl.bits %6 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %11 = firrtl.not %10 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.bits %6 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %13 = firrtl.not %12 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.and %11, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.not %14 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.and %3, %15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.not %10 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.and %16, %17 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.not %18 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %20, %19, "Assertion failed\0A    at Crossbar.scala:98 assert(!(thisReq.valid && !thisReq.bits.isRead() && !thisReq.bits.isWrite()))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %inflightSrc = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_bits_addr_5, %4 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_size_6, %5 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_cmd_7, %6 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_wmask_8, %7 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wdata_9, %8 : !firrtl.uint<64>
      %21 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_inputArb_io_out_ready_T = firrtl.not %21 {name = "_inputArb_io_out_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_req_valid_T_1 = firrtl.and %3, %_inputArb_io_out_ready_T {name = "_io_out_req_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_valid_4, %_io_out_req_valid_T_1 : !firrtl.uint<1>
      %_inputArb_io_out_ready_T_1 = firrtl.and %io_out_req_ready, %_inputArb_io_out_ready_T {name = "_inputArb_io_out_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %2, %_inputArb_io_out_ready_T_1 : !firrtl.uint<1>
      %22 = firrtl.not %inflightSrc : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.mux(%22, %io_out_resp_valid, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_resp_valid_1, %23 : !firrtl.uint<1>
      %24 = firrtl.mux(%inflightSrc, %io_out_resp_valid, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_resp_valid_3, %24 : !firrtl.uint<1>
      %25 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %26 = firrtl.not %25 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.and %2, %3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.and %26, %27 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.mux(%28, %9, %inflightSrc) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %inflightSrc, %29 : !firrtl.uint<1>
      %30 = firrtl.not %10 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.not %12 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %30, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.eq %6, %c7_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %34 = firrtl.eq %6, %c1_ui1 : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.or %33, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.mux(%35, %c2_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %37 = firrtl.mux(%32, %c1_ui2, %36) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %38 = firrtl.mux(%27, %37, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %39 = firrtl.eq %state, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %40 = firrtl.eq %io_out_resp_bits_cmd, %c6_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %41 = firrtl.and %io_out_resp_valid, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.mux(%41, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %43 = firrtl.eq %state, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %44 = firrtl.and %43, %io_out_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.mux(%44, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %46 = firrtl.mux(%39, %42, %45) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %47 = firrtl.mux(%26, %38, %46) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state, %47 : !firrtl.uint<2>
    }
    firrtl.module private @LockingArbiter_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_addr: !firrtl.uint<32>, in %io_in_0_bits_size: !firrtl.uint<3>, in %io_in_0_bits_cmd: !firrtl.uint<4>, in %io_in_0_bits_wmask: !firrtl.uint<8>, in %io_in_0_bits_wdata: !firrtl.uint<64>, out %io_in_1_ready: !firrtl.uint<1>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_addr: !firrtl.uint<32>, in %io_in_1_bits_cmd: !firrtl.uint<4>, in %io_in_1_bits_wdata: !firrtl.uint<64>, out %io_in_2_ready: !firrtl.uint<1>, in %io_in_2_valid: !firrtl.uint<1>, in %io_in_2_bits_addr: !firrtl.uint<32>, in %io_in_2_bits_cmd: !firrtl.uint<4>, in %io_in_2_bits_wdata: !firrtl.uint<64>, out %io_in_3_ready: !firrtl.uint<1>, in %io_in_3_valid: !firrtl.uint<1>, in %io_in_3_bits_addr: !firrtl.uint<32>, in %io_in_3_bits_size: !firrtl.uint<3>, in %io_in_3_bits_cmd: !firrtl.uint<4>, in %io_in_3_bits_wmask: !firrtl.uint<8>, in %io_in_3_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_size: !firrtl.uint<3>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_wmask: !firrtl.uint<8>, out %io_out_bits_wdata: !firrtl.uint<64>, out %io_chosen: !firrtl.uint<2>) {
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %io_in_0_ready_0 = firrtl.wire {name = "io_in_0_ready"} : !firrtl.uint<1>
      %io_in_1_ready_1 = firrtl.wire {name = "io_in_1_ready"} : !firrtl.uint<1>
      %io_in_2_ready_2 = firrtl.wire {name = "io_in_2_ready"} : !firrtl.uint<1>
      %io_in_3_ready_3 = firrtl.wire {name = "io_in_3_ready"} : !firrtl.uint<1>
      %io_out_valid_4 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_addr_5 = firrtl.wire {name = "io_out_bits_addr"} : !firrtl.uint<32>
      %io_out_bits_size_6 = firrtl.wire {name = "io_out_bits_size"} : !firrtl.uint<3>
      %io_out_bits_cmd_7 = firrtl.wire {name = "io_out_bits_cmd"} : !firrtl.uint<4>
      %io_out_bits_wmask_8 = firrtl.wire {name = "io_out_bits_wmask"} : !firrtl.uint<8>
      %io_out_bits_wdata_9 = firrtl.wire {name = "io_out_bits_wdata"} : !firrtl.uint<64>
      %io_chosen_10 = firrtl.wire {name = "io_chosen"} : !firrtl.uint<2>
      firrtl.strictconnect %io_in_0_ready, %io_in_0_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready, %io_in_1_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_2_ready, %io_in_2_ready_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_3_ready, %io_in_3_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_out_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size, %io_out_bits_size_6 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd, %io_out_bits_cmd_7 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask, %io_out_bits_wmask_8 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata, %io_out_bits_wdata_9 : !firrtl.uint<64>
      firrtl.strictconnect %io_chosen, %io_chosen_10 : !firrtl.uint<2>
      %io_chosen_choice = firrtl.wire : !firrtl.uint<2>
      %0 = firrtl.multibit_mux %io_chosen_10, %io_in_3_valid, %io_in_2_valid, %io_in_1_valid, %io_in_0_valid : !firrtl.uint<2>, !firrtl.uint<1>
      %1 = firrtl.multibit_mux %io_chosen_10, %io_in_3_bits_addr, %io_in_2_bits_addr, %io_in_1_bits_addr, %io_in_0_bits_addr : !firrtl.uint<2>, !firrtl.uint<32>
      %2 = firrtl.multibit_mux %io_chosen_10, %io_in_3_bits_size, %c3_ui3, %c3_ui3, %io_in_0_bits_size : !firrtl.uint<2>, !firrtl.uint<3>
      %3 = firrtl.multibit_mux %io_chosen_10, %io_in_3_bits_cmd, %io_in_2_bits_cmd, %io_in_1_bits_cmd, %io_in_0_bits_cmd : !firrtl.uint<2>, !firrtl.uint<4>
      %4 = firrtl.multibit_mux %io_chosen_10, %io_in_3_bits_wmask, %c255_ui8, %c255_ui8, %io_in_0_bits_wmask : !firrtl.uint<2>, !firrtl.uint<8>
      %5 = firrtl.multibit_mux %io_chosen_10, %io_in_3_bits_wdata, %io_in_2_bits_wdata, %io_in_1_bits_wdata, %io_in_0_bits_wdata : !firrtl.uint<2>, !firrtl.uint<64>
      firrtl.strictconnect %io_out_valid_4, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr_5, %1 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size_6, %2 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd_7, %3 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask_8, %4 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata_9, %5 : !firrtl.uint<64>
      %lockCount_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %lockIdx = firrtl.reg %clock {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<2>
      %locked = firrtl.orr %lockCount_value {name = "locked"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_wantsLock_T = firrtl.bits %io_out_bits_cmd_7 0 to 0 {name = "_wantsLock_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_wantsLock_T_1 = firrtl.bits %io_out_bits_cmd_7 1 to 1 {name = "_wantsLock_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %wantsLock = firrtl.and %_wantsLock_T, %_wantsLock_T_1 {name = "wantsLock"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.and %io_out_ready, %io_out_valid_4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.and %6, %wantsLock : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.mux(%7, %io_chosen_10, %lockIdx) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %lockIdx, %8 : !firrtl.uint<2>
      %_value_T = firrtl.add %lockCount_value, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_1 = firrtl.bits %_value_T 2 to 0 {name = "_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %9 = firrtl.mux(%7, %_value_T_1, %lockCount_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %lockCount_value, %9 : !firrtl.uint<3>
      %10 = firrtl.mux(%locked, %lockIdx, %io_chosen_choice) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %io_chosen_10, %10 : !firrtl.uint<2>
      %11 = firrtl.or %io_in_0_valid, %io_in_1_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.or %11, %io_in_2_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.not %io_in_0_valid : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.not %11 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.not %12 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.orr %lockIdx : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_in_0_ready_T = firrtl.not %16 {name = "_io_in_0_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_0_ready_T_1 = firrtl.mux(%locked, %_io_in_0_ready_T, %c1_ui1) {name = "_io_in_0_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_0_ready_T_2 = firrtl.and %_io_in_0_ready_T_1, %io_out_ready {name = "_io_in_0_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_ready_0, %_io_in_0_ready_T_2 : !firrtl.uint<1>
      %_io_in_1_ready_T = firrtl.eq %lockIdx, %c1_ui1 {name = "_io_in_1_ready_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_1_ready_T_1 = firrtl.mux(%locked, %_io_in_1_ready_T, %13) {name = "_io_in_1_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_1_ready_T_2 = firrtl.and %_io_in_1_ready_T_1, %io_out_ready {name = "_io_in_1_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready_1, %_io_in_1_ready_T_2 : !firrtl.uint<1>
      %_io_in_2_ready_T = firrtl.eq %lockIdx, %c2_ui2 {name = "_io_in_2_ready_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_in_2_ready_T_1 = firrtl.mux(%locked, %_io_in_2_ready_T, %14) {name = "_io_in_2_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_2_ready_T_2 = firrtl.and %_io_in_2_ready_T_1, %io_out_ready {name = "_io_in_2_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_2_ready_2, %_io_in_2_ready_T_2 : !firrtl.uint<1>
      %_io_in_3_ready_T = firrtl.andr %lockIdx {name = "_io_in_3_ready_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_in_3_ready_T_1 = firrtl.mux(%locked, %_io_in_3_ready_T, %15) {name = "_io_in_3_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_3_ready_T_2 = firrtl.and %_io_in_3_ready_T_1, %io_out_ready {name = "_io_in_3_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_3_ready_3, %_io_in_3_ready_T_2 : !firrtl.uint<1>
      %17 = firrtl.mux(%io_in_2_valid, %c2_ui2, %c3_ui2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %18 = firrtl.mux(%io_in_1_valid, %c1_ui2, %17) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %19 = firrtl.mux(%io_in_0_valid, %c0_ui2, %18) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %io_chosen_choice, %19 : !firrtl.uint<2>
    }
    firrtl.module private @SimpleBusCrossbarNto1_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_0_req_ready: !firrtl.uint<1>, in %io_in_0_req_valid: !firrtl.uint<1>, in %io_in_0_req_bits_addr: !firrtl.uint<32>, in %io_in_0_req_bits_size: !firrtl.uint<3>, in %io_in_0_req_bits_cmd: !firrtl.uint<4>, in %io_in_0_req_bits_wmask: !firrtl.uint<8>, in %io_in_0_req_bits_wdata: !firrtl.uint<64>, out %io_in_0_resp_valid: !firrtl.uint<1>, out %io_in_0_resp_bits_cmd: !firrtl.uint<4>, out %io_in_0_resp_bits_rdata: !firrtl.uint<64>, out %io_in_1_req_ready: !firrtl.uint<1>, in %io_in_1_req_valid: !firrtl.uint<1>, in %io_in_1_req_bits_addr: !firrtl.uint<32>, in %io_in_1_req_bits_cmd: !firrtl.uint<4>, in %io_in_1_req_bits_wdata: !firrtl.uint<64>, out %io_in_1_resp_valid: !firrtl.uint<1>, out %io_in_1_resp_bits_cmd: !firrtl.uint<4>, out %io_in_1_resp_bits_rdata: !firrtl.uint<64>, out %io_in_2_req_ready: !firrtl.uint<1>, in %io_in_2_req_valid: !firrtl.uint<1>, in %io_in_2_req_bits_addr: !firrtl.uint<32>, in %io_in_2_req_bits_cmd: !firrtl.uint<4>, in %io_in_2_req_bits_wdata: !firrtl.uint<64>, out %io_in_2_resp_valid: !firrtl.uint<1>, out %io_in_2_resp_bits_cmd: !firrtl.uint<4>, out %io_in_2_resp_bits_rdata: !firrtl.uint<64>, out %io_in_3_req_ready: !firrtl.uint<1>, in %io_in_3_req_valid: !firrtl.uint<1>, in %io_in_3_req_bits_addr: !firrtl.uint<32>, in %io_in_3_req_bits_size: !firrtl.uint<3>, in %io_in_3_req_bits_cmd: !firrtl.uint<4>, in %io_in_3_req_bits_wmask: !firrtl.uint<8>, in %io_in_3_req_bits_wdata: !firrtl.uint<64>, in %io_in_3_resp_ready: !firrtl.uint<1>, out %io_in_3_resp_valid: !firrtl.uint<1>, out %io_in_3_resp_bits_cmd: !firrtl.uint<4>, out %io_in_3_resp_bits_rdata: !firrtl.uint<64>, in %io_out_req_ready: !firrtl.uint<1>, out %io_out_req_valid: !firrtl.uint<1>, out %io_out_req_bits_addr: !firrtl.uint<32>, out %io_out_req_bits_size: !firrtl.uint<3>, out %io_out_req_bits_cmd: !firrtl.uint<4>, out %io_out_req_bits_wmask: !firrtl.uint<8>, out %io_out_req_bits_wdata: !firrtl.uint<64>, out %io_out_resp_ready: !firrtl.uint<1>, in %io_out_resp_valid: !firrtl.uint<1>, in %io_out_resp_bits_cmd: !firrtl.uint<4>, in %io_out_resp_bits_rdata: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %io_in_0_req_ready_0 = firrtl.wire {name = "io_in_0_req_ready"} : !firrtl.uint<1>
      %io_in_0_resp_valid_1 = firrtl.wire {name = "io_in_0_resp_valid"} : !firrtl.uint<1>
      %io_in_1_req_ready_2 = firrtl.wire {name = "io_in_1_req_ready"} : !firrtl.uint<1>
      %io_in_1_resp_valid_3 = firrtl.wire {name = "io_in_1_resp_valid"} : !firrtl.uint<1>
      %io_in_2_req_ready_4 = firrtl.wire {name = "io_in_2_req_ready"} : !firrtl.uint<1>
      %io_in_2_resp_valid_5 = firrtl.wire {name = "io_in_2_resp_valid"} : !firrtl.uint<1>
      %io_in_3_req_ready_6 = firrtl.wire {name = "io_in_3_req_ready"} : !firrtl.uint<1>
      %io_in_3_resp_valid_7 = firrtl.wire {name = "io_in_3_resp_valid"} : !firrtl.uint<1>
      %io_out_req_valid_8 = firrtl.wire {name = "io_out_req_valid"} : !firrtl.uint<1>
      %io_out_req_bits_addr_9 = firrtl.wire {name = "io_out_req_bits_addr"} : !firrtl.uint<32>
      %io_out_req_bits_size_10 = firrtl.wire {name = "io_out_req_bits_size"} : !firrtl.uint<3>
      %io_out_req_bits_cmd_11 = firrtl.wire {name = "io_out_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_req_bits_wmask_12 = firrtl.wire {name = "io_out_req_bits_wmask"} : !firrtl.uint<8>
      %io_out_req_bits_wdata_13 = firrtl.wire {name = "io_out_req_bits_wdata"} : !firrtl.uint<64>
      %io_out_resp_ready_14 = firrtl.wire {name = "io_out_resp_ready"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_req_ready, %io_in_0_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_resp_valid, %io_in_0_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_resp_bits_cmd, %io_out_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_0_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_in_1_req_ready, %io_in_1_req_ready_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_resp_valid, %io_in_1_resp_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_resp_bits_cmd, %io_out_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_1_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_in_2_req_ready, %io_in_2_req_ready_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_2_resp_valid, %io_in_2_resp_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_2_resp_bits_cmd, %io_out_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_2_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_in_3_req_ready, %io_in_3_req_ready_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_3_resp_valid, %io_in_3_resp_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_3_resp_bits_cmd, %io_out_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_3_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_req_valid, %io_out_req_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_bits_addr, %io_out_req_bits_addr_9 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_size, %io_out_req_bits_size_10 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_cmd, %io_out_req_bits_cmd_11 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_wmask, %io_out_req_bits_wmask_12 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wdata, %io_out_req_bits_wdata_13 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_resp_ready, %io_out_resp_ready_14 : !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %inputArb_clock, %inputArb_reset, %inputArb_io_in_0_ready, %inputArb_io_in_0_valid, %inputArb_io_in_0_bits_addr, %inputArb_io_in_0_bits_size, %inputArb_io_in_0_bits_cmd, %inputArb_io_in_0_bits_wmask, %inputArb_io_in_0_bits_wdata, %inputArb_io_in_1_ready, %inputArb_io_in_1_valid, %inputArb_io_in_1_bits_addr, %inputArb_io_in_1_bits_cmd, %inputArb_io_in_1_bits_wdata, %inputArb_io_in_2_ready, %inputArb_io_in_2_valid, %inputArb_io_in_2_bits_addr, %inputArb_io_in_2_bits_cmd, %inputArb_io_in_2_bits_wdata, %inputArb_io_in_3_ready, %inputArb_io_in_3_valid, %inputArb_io_in_3_bits_addr, %inputArb_io_in_3_bits_size, %inputArb_io_in_3_bits_cmd, %inputArb_io_in_3_bits_wmask, %inputArb_io_in_3_bits_wdata, %inputArb_io_out_ready, %inputArb_io_out_valid, %inputArb_io_out_bits_addr, %inputArb_io_out_bits_size, %inputArb_io_out_bits_cmd, %inputArb_io_out_bits_wmask, %inputArb_io_out_bits_wdata, %inputArb_io_chosen = firrtl.instance inputArb @LockingArbiter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_addr: !firrtl.uint<32>, in io_in_0_bits_size: !firrtl.uint<3>, in io_in_0_bits_cmd: !firrtl.uint<4>, in io_in_0_bits_wmask: !firrtl.uint<8>, in io_in_0_bits_wdata: !firrtl.uint<64>, out io_in_1_ready: !firrtl.uint<1>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_addr: !firrtl.uint<32>, in io_in_1_bits_cmd: !firrtl.uint<4>, in io_in_1_bits_wdata: !firrtl.uint<64>, out io_in_2_ready: !firrtl.uint<1>, in io_in_2_valid: !firrtl.uint<1>, in io_in_2_bits_addr: !firrtl.uint<32>, in io_in_2_bits_cmd: !firrtl.uint<4>, in io_in_2_bits_wdata: !firrtl.uint<64>, out io_in_3_ready: !firrtl.uint<1>, in io_in_3_valid: !firrtl.uint<1>, in io_in_3_bits_addr: !firrtl.uint<32>, in io_in_3_bits_size: !firrtl.uint<3>, in io_in_3_bits_cmd: !firrtl.uint<4>, in io_in_3_bits_wmask: !firrtl.uint<8>, in io_in_3_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_size: !firrtl.uint<3>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_wmask: !firrtl.uint<8>, out io_out_bits_wdata: !firrtl.uint<64>, out io_chosen: !firrtl.uint<2>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<1>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<32>
      %7 = firrtl.wire : !firrtl.uint<3>
      %8 = firrtl.wire : !firrtl.uint<4>
      %9 = firrtl.wire : !firrtl.uint<8>
      %10 = firrtl.wire : !firrtl.uint<64>
      %11 = firrtl.wire : !firrtl.uint<2>
      firrtl.strictconnect %0, %inputArb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_0_valid, %io_in_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_0_bits_addr, %io_in_0_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %inputArb_io_in_0_bits_size, %io_in_0_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %inputArb_io_in_0_bits_cmd, %io_in_0_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %inputArb_io_in_0_bits_wmask, %io_in_0_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %inputArb_io_in_0_bits_wdata, %io_in_0_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %1, %inputArb_io_in_1_ready : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_1_valid, %io_in_1_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_1_bits_addr, %io_in_1_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %inputArb_io_in_1_bits_cmd, %io_in_1_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %inputArb_io_in_1_bits_wdata, %io_in_1_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %2, %inputArb_io_in_2_ready : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_2_valid, %io_in_2_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_2_bits_addr, %io_in_2_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %inputArb_io_in_2_bits_cmd, %io_in_2_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %inputArb_io_in_2_bits_wdata, %io_in_2_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %3, %inputArb_io_in_3_ready : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_3_valid, %io_in_3_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %inputArb_io_in_3_bits_addr, %io_in_3_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %inputArb_io_in_3_bits_size, %io_in_3_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %inputArb_io_in_3_bits_cmd, %io_in_3_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %inputArb_io_in_3_bits_wmask, %io_in_3_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %inputArb_io_in_3_bits_wdata, %io_in_3_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %inputArb_io_out_ready, %4 : !firrtl.uint<1>
      firrtl.strictconnect %5, %inputArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %6, %inputArb_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %7, %inputArb_io_out_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %8, %inputArb_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %9, %inputArb_io_out_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %10, %inputArb_io_out_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %11, %inputArb_io_chosen : !firrtl.uint<2>
      firrtl.strictconnect %inputArb_clock, %clock : !firrtl.clock
      firrtl.strictconnect %inputArb_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_req_ready_0, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_req_ready_2, %1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_2_req_ready_4, %2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_3_req_ready_6, %3 : !firrtl.uint<1>
      %12 = firrtl.bits %8 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %13 = firrtl.not %12 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.bits %8 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %15 = firrtl.not %14 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.and %13, %15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.not %16 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.and %5, %17 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.not %12 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.and %18, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.not %20 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %22, %21, "Assertion failed\0A    at Crossbar.scala:98 assert(!(thisReq.valid && !thisReq.bits.isRead() && !thisReq.bits.isWrite()))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %inflightSrc = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      firrtl.strictconnect %io_out_req_bits_addr_9, %6 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_size_10, %7 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_cmd_11, %8 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_wmask_12, %9 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wdata_13, %10 : !firrtl.uint<64>
      %23 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_inputArb_io_out_ready_T = firrtl.not %23 {name = "_inputArb_io_out_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_req_valid_T_1 = firrtl.and %5, %_inputArb_io_out_ready_T {name = "_io_out_req_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_valid_8, %_io_out_req_valid_T_1 : !firrtl.uint<1>
      %_inputArb_io_out_ready_T_1 = firrtl.and %io_out_req_ready, %_inputArb_io_out_ready_T {name = "_inputArb_io_out_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %4, %_inputArb_io_out_ready_T_1 : !firrtl.uint<1>
      %24 = firrtl.multibit_mux %inflightSrc, %io_in_3_resp_ready, %c1_ui1, %c1_ui1, %c1_ui1 : !firrtl.uint<2>, !firrtl.uint<1>
      %25 = firrtl.orr %inflightSrc : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %26 = firrtl.not %25 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.mux(%26, %io_out_resp_valid, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_0_resp_valid_1, %27 : !firrtl.uint<1>
      %28 = firrtl.eq %inflightSrc, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %29 = firrtl.mux(%28, %io_out_resp_valid, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_resp_valid_3, %29 : !firrtl.uint<1>
      %30 = firrtl.eq %inflightSrc, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %31 = firrtl.mux(%30, %io_out_resp_valid, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_2_resp_valid_5, %31 : !firrtl.uint<1>
      %32 = firrtl.andr %inflightSrc : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %33 = firrtl.mux(%32, %io_out_resp_valid, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_3_resp_valid_7, %33 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_resp_ready_14, %24 : !firrtl.uint<1>
      %34 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %35 = firrtl.not %34 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.and %4, %5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.and %35, %36 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.mux(%37, %11, %inflightSrc) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %inflightSrc, %38 : !firrtl.uint<2>
      %39 = firrtl.not %12 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.not %14 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.and %39, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.eq %8, %c7_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %43 = firrtl.eq %8, %c1_ui1 : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.or %42, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.mux(%44, %c2_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %46 = firrtl.mux(%41, %c1_ui2, %45) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %47 = firrtl.mux(%36, %46, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %48 = firrtl.eq %state, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %49 = firrtl.and %io_out_resp_ready_14, %io_out_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.eq %io_out_resp_bits_cmd, %c6_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %51 = firrtl.and %49, %50 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.mux(%51, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %53 = firrtl.eq %state, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %54 = firrtl.and %io_out_resp_ready_14, %io_out_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %55 = firrtl.and %53, %54 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.mux(%55, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %57 = firrtl.mux(%48, %52, %56) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %58 = firrtl.mux(%35, %47, %57) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state, %58 : !firrtl.uint<2>
    }
    firrtl.module private @EmbeddedTLBExec(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<39>, in %io_in_bits_user: !firrtl.uint<87>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_user: !firrtl.uint<87>, in %io_md_0: !firrtl.uint<121>, in %io_md_1: !firrtl.uint<121>, in %io_md_2: !firrtl.uint<121>, in %io_md_3: !firrtl.uint<121>, out %io_mdWrite_wen: !firrtl.uint<1>, out %io_mdWrite_waymask: !firrtl.uint<4>, out %io_mdWrite_wdata: !firrtl.uint<121>, in %io_mdReady: !firrtl.uint<1>, in %io_mem_req_ready: !firrtl.uint<1>, out %io_mem_req_valid: !firrtl.uint<1>, out %io_mem_req_bits_addr: !firrtl.uint<32>, out %io_mem_req_bits_cmd: !firrtl.uint<4>, out %io_mem_req_bits_wdata: !firrtl.uint<64>, in %io_mem_resp_valid: !firrtl.uint<1>, in %io_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_flush: !firrtl.uint<1>, in %io_satp: !firrtl.uint<64>, in %io_pf_priviledgeMode: !firrtl.uint<2>, out %io_ipf: !firrtl.uint<1>, out %io_isFinish: !firrtl.uint<1>) {
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c64_ui8 = firrtl.constant 64 : !firrtl.uint<8>
      %c64_ui64 = firrtl.constant 64 : !firrtl.uint<64>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8> {name = "io_mem_req_bits_wmask"}
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c0_ui121 = firrtl.constant 0 : !firrtl.uint<121>
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64>
      %c0_ui12 = firrtl.constant 0 : !firrtl.uint<12>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c0_ui18 = firrtl.constant 0 : !firrtl.uint<18>
      %c261632_ui18 = firrtl.constant 261632 : !firrtl.uint<18>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3>
      %c262143_ui18 = firrtl.constant 262143 : !firrtl.uint<18>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c0_ui10 = firrtl.constant 0 : !firrtl.uint<10>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c1311768467139281697_ui64 = firrtl.constant 1311768467139281697 : !firrtl.uint<64>
      %c511_ui9 = firrtl.constant 511 : !firrtl.uint<9>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_addr_2 = firrtl.wire {name = "io_out_bits_addr"} : !firrtl.uint<32>
      %io_mdWrite_wen_3 = firrtl.wire {name = "io_mdWrite_wen"} : !firrtl.uint<1>
      %io_mdWrite_windex = firrtl.wire : !firrtl.uint<1>
      %io_mdWrite_waymask_4 = firrtl.wire {name = "io_mdWrite_waymask"} : !firrtl.uint<4>
      %io_mdWrite_wdata_5 = firrtl.wire {name = "io_mdWrite_wdata"} : !firrtl.uint<121>
      %io_mem_req_valid_6 = firrtl.wire {name = "io_mem_req_valid"} : !firrtl.uint<1>
      %io_mem_req_bits_addr_7 = firrtl.wire {name = "io_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_mem_req_bits_cmd_8 = firrtl.wire {name = "io_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_mem_req_bits_wdata_9 = firrtl.wire {name = "io_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_ipf_10 = firrtl.wire {name = "io_ipf"} : !firrtl.uint<1>
      %io_isFinish_11 = firrtl.wire {name = "io_isFinish"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_out_bits_addr_2 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_user, %io_in_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %io_mdWrite_wen, %io_mdWrite_wen_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_mdWrite_waymask, %io_mdWrite_waymask_4 : !firrtl.uint<4>
      firrtl.strictconnect %io_mdWrite_wdata, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      firrtl.strictconnect %io_mem_req_valid, %io_mem_req_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr, %io_mem_req_bits_addr_7 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd, %io_mem_req_bits_cmd_8 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata, %io_mem_req_bits_wdata_9 : !firrtl.uint<64>
      firrtl.strictconnect %io_ipf, %io_ipf_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_isFinish, %io_isFinish_11 : !firrtl.uint<1>
      %_vpn_WIRE_vpn = firrtl.wire : !firrtl.uint<27>
      %_vpn_T_1 = firrtl.bits %io_in_bits_addr 38 to 12 {name = "_vpn_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<27>
      firrtl.strictconnect %_vpn_WIRE_vpn, %_vpn_T_1 : !firrtl.uint<27>
      %vpn_vpn2 = firrtl.wire : !firrtl.uint<9>
      %vpn_vpn1 = firrtl.wire : !firrtl.uint<9>
      %vpn_vpn0 = firrtl.wire : !firrtl.uint<9>
      %_vpn_WIRE_2 = firrtl.wire : !firrtl.uint<27>
      firrtl.strictconnect %_vpn_WIRE_2, %_vpn_WIRE_vpn : !firrtl.uint<27>
      %_vpn_T_2 = firrtl.bits %_vpn_WIRE_2 8 to 0 {name = "_vpn_T_2"} : (!firrtl.uint<27>) -> !firrtl.uint<9>
      firrtl.strictconnect %vpn_vpn0, %_vpn_T_2 : !firrtl.uint<9>
      %_vpn_T_3 = firrtl.bits %_vpn_WIRE_2 17 to 9 {name = "_vpn_T_3"} : (!firrtl.uint<27>) -> !firrtl.uint<9>
      firrtl.strictconnect %vpn_vpn1, %_vpn_T_3 : !firrtl.uint<9>
      %_vpn_T_4 = firrtl.bits %_vpn_WIRE_2 26 to 18 {name = "_vpn_T_4"} : (!firrtl.uint<27>) -> !firrtl.uint<9>
      firrtl.strictconnect %vpn_vpn2, %_vpn_T_4 : !firrtl.uint<9>
      %satp_asid = firrtl.wire : !firrtl.uint<16>
      %satp_ppn = firrtl.wire : !firrtl.uint<20>
      %_satp_T = firrtl.bits %io_satp 19 to 0 {name = "_satp_T"} : (!firrtl.uint<64>) -> !firrtl.uint<20>
      firrtl.strictconnect %satp_ppn, %_satp_T : !firrtl.uint<20>
      %_satp_T_2 = firrtl.bits %io_satp 59 to 44 {name = "_satp_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      firrtl.strictconnect %satp_asid, %_satp_T_2 : !firrtl.uint<16>
      %_hitVec_WIRE_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_2 = firrtl.bits %io_md_0 59 to 52 {name = "_hitVec_T_2"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_flag, %_hitVec_T_2 : !firrtl.uint<8>
      %_hitVec_WIRE_2_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_3 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_3, %_hitVec_WIRE_flag : !firrtl.uint<8>
      %_hitVec_T_6 = firrtl.bits %_hitVec_WIRE_3 0 to 0 {name = "_hitVec_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_2_v, %_hitVec_T_6 : !firrtl.uint<1>
      %_hitVec_WIRE_4_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_18 = firrtl.bits %io_md_0 93 to 78 {name = "_hitVec_T_18"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_4_asid, %_hitVec_T_18 : !firrtl.uint<16>
      %_hitVec_T_20 = firrtl.eq %_hitVec_WIRE_4_asid, %satp_asid {name = "_hitVec_T_20"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_21 = firrtl.and %_hitVec_WIRE_2_v, %_hitVec_T_20 {name = "_hitVec_T_21"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_6_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_25 = firrtl.bits %io_md_0 77 to 60 {name = "_hitVec_T_25"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_6_mask, %_hitVec_T_25 : !firrtl.uint<18>
      %_hitVec_WIRE_8_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_33 = firrtl.bits %io_md_0 120 to 94 {name = "_hitVec_T_33"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_8_vpn, %_hitVec_T_33 : !firrtl.uint<27>
      %hi = firrtl.cat %vpn_vpn2, %vpn_vpn1 {name = "hi"} : (!firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<18>
      %_hitVec_T_34 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_34"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_37 = firrtl.cat %c511_ui9, %_hitVec_WIRE_6_mask {name = "_hitVec_T_37"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_36 = firrtl.and %_hitVec_T_37, %_hitVec_WIRE_8_vpn {name = "_hitVec_T_36"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_38 = firrtl.and %_hitVec_T_37, %_hitVec_T_34 {name = "_hitVec_T_38"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_39 = firrtl.eq %_hitVec_T_36, %_hitVec_T_38 {name = "_hitVec_T_39"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_40 = firrtl.and %_hitVec_T_21, %_hitVec_T_39 {name = "_hitVec_T_40"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_10_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_43 = firrtl.bits %io_md_1 59 to 52 {name = "_hitVec_T_43"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_10_flag, %_hitVec_T_43 : !firrtl.uint<8>
      %_hitVec_WIRE_12_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_13 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_13, %_hitVec_WIRE_10_flag : !firrtl.uint<8>
      %_hitVec_T_47 = firrtl.bits %_hitVec_WIRE_13 0 to 0 {name = "_hitVec_T_47"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_12_v, %_hitVec_T_47 : !firrtl.uint<1>
      %_hitVec_WIRE_14_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_59 = firrtl.bits %io_md_1 93 to 78 {name = "_hitVec_T_59"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_14_asid, %_hitVec_T_59 : !firrtl.uint<16>
      %_hitVec_T_61 = firrtl.eq %_hitVec_WIRE_14_asid, %satp_asid {name = "_hitVec_T_61"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_62 = firrtl.and %_hitVec_WIRE_12_v, %_hitVec_T_61 {name = "_hitVec_T_62"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_16_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_66 = firrtl.bits %io_md_1 77 to 60 {name = "_hitVec_T_66"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_16_mask, %_hitVec_T_66 : !firrtl.uint<18>
      %_hitVec_WIRE_18_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_74 = firrtl.bits %io_md_1 120 to 94 {name = "_hitVec_T_74"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_18_vpn, %_hitVec_T_74 : !firrtl.uint<27>
      %_hitVec_T_75 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_75"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_78 = firrtl.cat %c511_ui9, %_hitVec_WIRE_16_mask {name = "_hitVec_T_78"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_77 = firrtl.and %_hitVec_T_78, %_hitVec_WIRE_18_vpn {name = "_hitVec_T_77"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_79 = firrtl.and %_hitVec_T_78, %_hitVec_T_75 {name = "_hitVec_T_79"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_80 = firrtl.eq %_hitVec_T_77, %_hitVec_T_79 {name = "_hitVec_T_80"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_81 = firrtl.and %_hitVec_T_62, %_hitVec_T_80 {name = "_hitVec_T_81"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_20_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_84 = firrtl.bits %io_md_2 59 to 52 {name = "_hitVec_T_84"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_20_flag, %_hitVec_T_84 : !firrtl.uint<8>
      %_hitVec_WIRE_22_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_23 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_23, %_hitVec_WIRE_20_flag : !firrtl.uint<8>
      %_hitVec_T_88 = firrtl.bits %_hitVec_WIRE_23 0 to 0 {name = "_hitVec_T_88"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_22_v, %_hitVec_T_88 : !firrtl.uint<1>
      %_hitVec_WIRE_24_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_100 = firrtl.bits %io_md_2 93 to 78 {name = "_hitVec_T_100"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_24_asid, %_hitVec_T_100 : !firrtl.uint<16>
      %_hitVec_T_102 = firrtl.eq %_hitVec_WIRE_24_asid, %satp_asid {name = "_hitVec_T_102"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_103 = firrtl.and %_hitVec_WIRE_22_v, %_hitVec_T_102 {name = "_hitVec_T_103"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_26_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_107 = firrtl.bits %io_md_2 77 to 60 {name = "_hitVec_T_107"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_26_mask, %_hitVec_T_107 : !firrtl.uint<18>
      %_hitVec_WIRE_28_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_115 = firrtl.bits %io_md_2 120 to 94 {name = "_hitVec_T_115"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_28_vpn, %_hitVec_T_115 : !firrtl.uint<27>
      %_hitVec_T_116 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_116"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_119 = firrtl.cat %c511_ui9, %_hitVec_WIRE_26_mask {name = "_hitVec_T_119"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_118 = firrtl.and %_hitVec_T_119, %_hitVec_WIRE_28_vpn {name = "_hitVec_T_118"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_120 = firrtl.and %_hitVec_T_119, %_hitVec_T_116 {name = "_hitVec_T_120"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_121 = firrtl.eq %_hitVec_T_118, %_hitVec_T_120 {name = "_hitVec_T_121"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_122 = firrtl.and %_hitVec_T_103, %_hitVec_T_121 {name = "_hitVec_T_122"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_30_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_125 = firrtl.bits %io_md_3 59 to 52 {name = "_hitVec_T_125"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_30_flag, %_hitVec_T_125 : !firrtl.uint<8>
      %_hitVec_WIRE_32_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_33 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_33, %_hitVec_WIRE_30_flag : !firrtl.uint<8>
      %_hitVec_T_129 = firrtl.bits %_hitVec_WIRE_33 0 to 0 {name = "_hitVec_T_129"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_32_v, %_hitVec_T_129 : !firrtl.uint<1>
      %_hitVec_WIRE_34_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_141 = firrtl.bits %io_md_3 93 to 78 {name = "_hitVec_T_141"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_34_asid, %_hitVec_T_141 : !firrtl.uint<16>
      %_hitVec_T_143 = firrtl.eq %_hitVec_WIRE_34_asid, %satp_asid {name = "_hitVec_T_143"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_144 = firrtl.and %_hitVec_WIRE_32_v, %_hitVec_T_143 {name = "_hitVec_T_144"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_36_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_148 = firrtl.bits %io_md_3 77 to 60 {name = "_hitVec_T_148"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_36_mask, %_hitVec_T_148 : !firrtl.uint<18>
      %_hitVec_WIRE_38_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_156 = firrtl.bits %io_md_3 120 to 94 {name = "_hitVec_T_156"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_38_vpn, %_hitVec_T_156 : !firrtl.uint<27>
      %_hitVec_T_157 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_157"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_160 = firrtl.cat %c511_ui9, %_hitVec_WIRE_36_mask {name = "_hitVec_T_160"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_159 = firrtl.and %_hitVec_T_160, %_hitVec_WIRE_38_vpn {name = "_hitVec_T_159"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_161 = firrtl.and %_hitVec_T_160, %_hitVec_T_157 {name = "_hitVec_T_161"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_162 = firrtl.eq %_hitVec_T_159, %_hitVec_T_161 {name = "_hitVec_T_162"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_163 = firrtl.and %_hitVec_T_144, %_hitVec_T_162 {name = "_hitVec_T_163"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_40_0 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_40_1 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_40_2 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_40_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_0, %_hitVec_T_40 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_1, %_hitVec_T_81 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_2, %_hitVec_T_122 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_3, %_hitVec_T_163 : !firrtl.uint<1>
      %hitVec_lo = firrtl.cat %_hitVec_WIRE_40_1, %_hitVec_WIRE_40_0 {name = "hitVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec_hi_4 = firrtl.cat %_hitVec_WIRE_40_3, %_hitVec_WIRE_40_2 {name = "hitVec_hi_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec = firrtl.cat %hitVec_hi_4, %hitVec_lo {name = "hitVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_miss_T = firrtl.orr %hitVec {name = "_miss_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %hit = firrtl.and %io_in_valid, %_miss_T {name = "hit"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_miss_T_1 = firrtl.not %_miss_T {name = "_miss_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %miss = firrtl.and %io_in_valid, %_miss_T_1 {name = "miss"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %victimWaymask_lfsr = firrtl.regreset %clock, %reset, %c1311768467139281697_ui64 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_victimWaymask_xor_T = firrtl.bits %victimWaymask_lfsr 0 to 0 {name = "_victimWaymask_xor_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_1 = firrtl.bits %victimWaymask_lfsr 1 to 1 {name = "_victimWaymask_xor_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_2 = firrtl.xor %_victimWaymask_xor_T, %_victimWaymask_xor_T_1 {name = "_victimWaymask_xor_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_3 = firrtl.bits %victimWaymask_lfsr 3 to 3 {name = "_victimWaymask_xor_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_4 = firrtl.xor %_victimWaymask_xor_T_2, %_victimWaymask_xor_T_3 {name = "_victimWaymask_xor_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_5 = firrtl.bits %victimWaymask_lfsr 4 to 4 {name = "_victimWaymask_xor_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %victimWaymask_xor = firrtl.xor %_victimWaymask_xor_T_4, %_victimWaymask_xor_T_5 {name = "victimWaymask_xor"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.orr %victimWaymask_lfsr : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T = firrtl.not %0 {name = "_victimWaymask_lfsr_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T_1 = firrtl.bits %victimWaymask_lfsr 63 to 1 {name = "_victimWaymask_lfsr_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<63>
      %_victimWaymask_lfsr_T_2 = firrtl.cat %victimWaymask_xor, %_victimWaymask_lfsr_T_1 {name = "_victimWaymask_lfsr_T_2"} : (!firrtl.uint<1>, !firrtl.uint<63>) -> !firrtl.uint<64>
      %_victimWaymask_lfsr_T_3 = firrtl.mux(%_victimWaymask_lfsr_T, %c1_ui64, %_victimWaymask_lfsr_T_2) {name = "_victimWaymask_lfsr_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %victimWaymask_lfsr, %_victimWaymask_lfsr_T_3 : !firrtl.uint<64>
      %_victimWaymask_T = firrtl.bits %victimWaymask_lfsr 1 to 0 {name = "_victimWaymask_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %victimWaymask = firrtl.dshl %c1_ui1, %_victimWaymask_T {name = "victimWaymask"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %waymask = firrtl.mux(%hit, %hitVec, %victimWaymask) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_hitData_T = firrtl.bits %waymask 0 to 0 {name = "_hitData_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitData_T_1 = firrtl.bits %waymask 1 to 1 {name = "_hitData_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitData_T_2 = firrtl.bits %waymask 2 to 2 {name = "_hitData_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitData_T_3 = firrtl.bits %waymask 3 to 3 {name = "_hitData_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitMeta_T_4 = firrtl.mux(%_hitData_T, %io_md_0, %c0_ui121) {name = "_hitMeta_T_4"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_5 = firrtl.mux(%_hitData_T_1, %io_md_1, %c0_ui121) {name = "_hitMeta_T_5"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_6 = firrtl.mux(%_hitData_T_2, %io_md_2, %c0_ui121) {name = "_hitMeta_T_6"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_7 = firrtl.mux(%_hitData_T_3, %io_md_3, %c0_ui121) {name = "_hitMeta_T_7"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_8 = firrtl.or %_hitMeta_T_4, %_hitMeta_T_5 {name = "_hitMeta_T_8"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_9 = firrtl.or %_hitMeta_T_8, %_hitMeta_T_6 {name = "_hitMeta_T_9"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_10 = firrtl.or %_hitMeta_T_9, %_hitMeta_T_7 {name = "_hitMeta_T_10"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_WIRE = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitMeta_WIRE, %_hitMeta_T_10 : !firrtl.uint<121>
      %_hitMeta_WIRE_1_meta = firrtl.wire : !firrtl.uint<69>
      %_hitMeta_WIRE_2 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitMeta_WIRE_2, %_hitMeta_WIRE : !firrtl.uint<121>
      %_hitMeta_T_12 = firrtl.bits %_hitMeta_WIRE_2 120 to 52 {name = "_hitMeta_T_12"} : (!firrtl.uint<121>) -> !firrtl.uint<69>
      firrtl.strictconnect %_hitMeta_WIRE_1_meta, %_hitMeta_T_12 : !firrtl.uint<69>
      %hitMeta_vpn = firrtl.wire : !firrtl.uint<27>
      %hitMeta_asid = firrtl.wire : !firrtl.uint<16>
      %hitMeta_mask = firrtl.wire : !firrtl.uint<18>
      %hitMeta_flag = firrtl.wire : !firrtl.uint<8>
      %_hitMeta_WIRE_3 = firrtl.wire : !firrtl.uint<69>
      firrtl.strictconnect %_hitMeta_WIRE_3, %_hitMeta_WIRE_1_meta : !firrtl.uint<69>
      %_hitMeta_T_13 = firrtl.bits %_hitMeta_WIRE_3 7 to 0 {name = "_hitMeta_T_13"} : (!firrtl.uint<69>) -> !firrtl.uint<8>
      firrtl.strictconnect %hitMeta_flag, %_hitMeta_T_13 : !firrtl.uint<8>
      %_hitMeta_T_14 = firrtl.bits %_hitMeta_WIRE_3 25 to 8 {name = "_hitMeta_T_14"} : (!firrtl.uint<69>) -> !firrtl.uint<18>
      firrtl.strictconnect %hitMeta_mask, %_hitMeta_T_14 : !firrtl.uint<18>
      %_hitMeta_T_15 = firrtl.bits %_hitMeta_WIRE_3 41 to 26 {name = "_hitMeta_T_15"} : (!firrtl.uint<69>) -> !firrtl.uint<16>
      firrtl.strictconnect %hitMeta_asid, %_hitMeta_T_15 : !firrtl.uint<16>
      %_hitMeta_T_16 = firrtl.bits %_hitMeta_WIRE_3 68 to 42 {name = "_hitMeta_T_16"} : (!firrtl.uint<69>) -> !firrtl.uint<27>
      firrtl.strictconnect %hitMeta_vpn, %_hitMeta_T_16 : !firrtl.uint<27>
      %_hitData_T_4 = firrtl.mux(%_hitData_T, %io_md_0, %c0_ui121) {name = "_hitData_T_4"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_5 = firrtl.mux(%_hitData_T_1, %io_md_1, %c0_ui121) {name = "_hitData_T_5"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_6 = firrtl.mux(%_hitData_T_2, %io_md_2, %c0_ui121) {name = "_hitData_T_6"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_7 = firrtl.mux(%_hitData_T_3, %io_md_3, %c0_ui121) {name = "_hitData_T_7"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_8 = firrtl.or %_hitData_T_4, %_hitData_T_5 {name = "_hitData_T_8"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_9 = firrtl.or %_hitData_T_8, %_hitData_T_6 {name = "_hitData_T_9"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_10 = firrtl.or %_hitData_T_9, %_hitData_T_7 {name = "_hitData_T_10"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_WIRE = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitData_WIRE, %_hitData_T_10 : !firrtl.uint<121>
      %_hitData_WIRE_1_data = firrtl.wire : !firrtl.uint<52>
      %_hitData_WIRE_2 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitData_WIRE_2, %_hitData_WIRE : !firrtl.uint<121>
      %_hitData_T_11 = firrtl.bits %_hitData_WIRE_2 51 to 0 {name = "_hitData_T_11"} : (!firrtl.uint<121>) -> !firrtl.uint<52>
      firrtl.strictconnect %_hitData_WIRE_1_data, %_hitData_T_11 : !firrtl.uint<52>
      %hitData_ppn = firrtl.wire : !firrtl.uint<20>
      %hitData_pteaddr = firrtl.wire : !firrtl.uint<32>
      %_hitData_WIRE_3 = firrtl.wire : !firrtl.uint<52>
      firrtl.strictconnect %_hitData_WIRE_3, %_hitData_WIRE_1_data : !firrtl.uint<52>
      %_hitData_T_13 = firrtl.bits %_hitData_WIRE_3 31 to 0 {name = "_hitData_T_13"} : (!firrtl.uint<52>) -> !firrtl.uint<32>
      firrtl.strictconnect %hitData_pteaddr, %_hitData_T_13 : !firrtl.uint<32>
      %_hitData_T_14 = firrtl.bits %_hitData_WIRE_3 51 to 32 {name = "_hitData_T_14"} : (!firrtl.uint<52>) -> !firrtl.uint<20>
      firrtl.strictconnect %hitData_ppn, %_hitData_T_14 : !firrtl.uint<20>
      %hitFlag_d = firrtl.wire : !firrtl.uint<1>
      %hitFlag_a = firrtl.wire : !firrtl.uint<1>
      %hitFlag_g = firrtl.wire : !firrtl.uint<1>
      %hitFlag_u = firrtl.wire : !firrtl.uint<1>
      %hitFlag_x = firrtl.wire : !firrtl.uint<1>
      %hitFlag_w = firrtl.wire : !firrtl.uint<1>
      %hitFlag_r = firrtl.wire : !firrtl.uint<1>
      %hitFlag_v = firrtl.wire : !firrtl.uint<1>
      %_hitFlag_WIRE = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitFlag_WIRE, %hitMeta_flag : !firrtl.uint<8>
      %_hitFlag_T = firrtl.bits %_hitFlag_WIRE 0 to 0 {name = "_hitFlag_T"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_v, %_hitFlag_T : !firrtl.uint<1>
      %_hitFlag_T_1 = firrtl.bits %_hitFlag_WIRE 1 to 1 {name = "_hitFlag_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_r, %_hitFlag_T_1 : !firrtl.uint<1>
      %_hitFlag_T_2 = firrtl.bits %_hitFlag_WIRE 2 to 2 {name = "_hitFlag_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_w, %_hitFlag_T_2 : !firrtl.uint<1>
      %_hitFlag_T_3 = firrtl.bits %_hitFlag_WIRE 3 to 3 {name = "_hitFlag_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_x, %_hitFlag_T_3 : !firrtl.uint<1>
      %_hitFlag_T_4 = firrtl.bits %_hitFlag_WIRE 4 to 4 {name = "_hitFlag_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_u, %_hitFlag_T_4 : !firrtl.uint<1>
      %_hitFlag_T_5 = firrtl.bits %_hitFlag_WIRE 5 to 5 {name = "_hitFlag_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_g, %_hitFlag_T_5 : !firrtl.uint<1>
      %_hitFlag_T_6 = firrtl.bits %_hitFlag_WIRE 6 to 6 {name = "_hitFlag_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_a, %_hitFlag_T_6 : !firrtl.uint<1>
      %_hitFlag_T_7 = firrtl.bits %_hitFlag_WIRE 7 to 7 {name = "_hitFlag_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_d, %_hitFlag_T_7 : !firrtl.uint<1>
      %hitinstrPF = firrtl.wire : !firrtl.uint<1>
      %_hitADCheck_T = firrtl.not %hitFlag_a {name = "_hitADCheck_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_5 = firrtl.and %hit, %_hitADCheck_T {name = "_hitWB_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_6 = firrtl.not %hitinstrPF {name = "_hitWB_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_7 = firrtl.and %_hitWB_T_5, %_hitWB_T_6 {name = "_hitWB_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %lo_lo = firrtl.cat %hitFlag_r, %hitFlag_v {name = "lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_hi = firrtl.cat %hitFlag_x, %hitFlag_w {name = "lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitRefillFlag_lo = firrtl.cat %lo_hi, %lo_lo {name = "hitRefillFlag_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_lo = firrtl.cat %hitFlag_g, %hitFlag_u {name = "hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_hi = firrtl.cat %hitFlag_d, %hitFlag_a {name = "hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitRefillFlag_hi_1 = firrtl.cat %hi_hi, %hi_lo {name = "hitRefillFlag_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_hitRefillFlag_T_2 = firrtl.cat %hitRefillFlag_hi_1, %hitRefillFlag_lo {name = "_hitRefillFlag_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %hitRefillFlag = firrtl.or %_hitRefillFlag_T_2, %c64_ui8 {name = "hitRefillFlag"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %hitWBStore_lo = firrtl.cat %c0_ui2, %hitRefillFlag {name = "hitWBStore_lo"} : (!firrtl.uint<2>, !firrtl.uint<8>) -> !firrtl.uint<10>
      %hitWBStore_hi = firrtl.cat %c0_ui10, %hitData_ppn {name = "hitWBStore_hi"} : (!firrtl.uint<10>, !firrtl.uint<20>) -> !firrtl.uint<30>
      %_hitWBStore_T = firrtl.cat %hitWBStore_hi, %hitWBStore_lo {name = "_hitWBStore_T"} : (!firrtl.uint<30>, !firrtl.uint<10>) -> !firrtl.uint<40>
      %hitWBStore = firrtl.reg %clock {firrtl.random_init_start = 64 : ui64} : !firrtl.clock, !firrtl.uint<40>
      %1 = firrtl.mux(%_hitWB_T_7, %_hitWBStore_T, %hitWBStore) : (!firrtl.uint<1>, !firrtl.uint<40>, !firrtl.uint<40>) -> !firrtl.uint<40>
      firrtl.strictconnect %hitWBStore, %1 : !firrtl.uint<40>
      %2 = firrtl.orr %io_pf_priviledgeMode : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_permCheck_T = firrtl.not %2 {name = "_permCheck_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_1 = firrtl.not %hitFlag_u {name = "_hitCheck_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_2 = firrtl.and %_permCheck_T, %_hitCheck_T_1 {name = "_hitCheck_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_3 = firrtl.not %_hitCheck_T_2 {name = "_hitCheck_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_4 = firrtl.and %hit, %_hitCheck_T_3 {name = "_hitCheck_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_5 = firrtl.eq %io_pf_priviledgeMode, %c1_ui1 {name = "_permCheck_T_5"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_9 = firrtl.and %_permCheck_T_5, %hitFlag_u {name = "_hitCheck_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_10 = firrtl.not %_hitCheck_T_9 {name = "_hitCheck_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %hitCheck = firrtl.and %_hitCheck_T_4, %_hitCheck_T_10 {name = "hitCheck"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitStore_T = firrtl.not %_hitADCheck_T {name = "_hitStore_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitExec_T_1 = firrtl.and %hitCheck, %_hitStore_T {name = "_hitExec_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitExec = firrtl.and %_hitExec_T_1, %hitFlag_x {name = "hitExec"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitLoad_T_1 = firrtl.and %hitCheck, %_hitStore_T {name = "_hitLoad_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitLoad = firrtl.and %_hitLoad_T_1, %hitFlag_r {name = "hitLoad"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitStore_T_1 = firrtl.and %hitCheck, %_hitStore_T {name = "_hitStore_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitStore = firrtl.and %_hitStore_T_1, %hitFlag_w {name = "hitStore"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitinstrPF_T = firrtl.not %hitExec {name = "_hitinstrPF_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitinstrPF_T_1 = firrtl.and %_hitinstrPF_T, %hit {name = "_hitinstrPF_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitinstrPF, %_hitinstrPF_T_1 : !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 106 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %level = firrtl.regreset %clock, %reset, %c3_ui2 {firrtl.random_init_start = 109 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %memRespStore = firrtl.reg %clock {firrtl.random_init_start = 111 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %missMask = firrtl.wire : !firrtl.uint<18>
      %missMaskStore = firrtl.reg %clock {firrtl.random_init_start = 175 : ui64} : !firrtl.clock, !firrtl.uint<18>
      %missMetaRefill = firrtl.wire : !firrtl.uint<1>
      %missRefillFlag = firrtl.wire : !firrtl.uint<8>
      %memRdata_reserved = firrtl.wire : !firrtl.uint<34>
      %memRdata_ppn = firrtl.wire : !firrtl.uint<20>
      %memRdata_rsw = firrtl.wire : !firrtl.uint<2>
      %memRdata_flag_d = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_a = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_g = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_u = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_x = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_w = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_r = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_v = firrtl.wire : !firrtl.uint<1>
      %_memRdata_T = firrtl.bits %io_mem_resp_bits_rdata 0 to 0 {name = "_memRdata_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_v, %_memRdata_T : !firrtl.uint<1>
      %_memRdata_T_1 = firrtl.bits %io_mem_resp_bits_rdata 1 to 1 {name = "_memRdata_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_r, %_memRdata_T_1 : !firrtl.uint<1>
      %_memRdata_T_2 = firrtl.bits %io_mem_resp_bits_rdata 2 to 2 {name = "_memRdata_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_w, %_memRdata_T_2 : !firrtl.uint<1>
      %_memRdata_T_3 = firrtl.bits %io_mem_resp_bits_rdata 3 to 3 {name = "_memRdata_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_x, %_memRdata_T_3 : !firrtl.uint<1>
      %_memRdata_T_4 = firrtl.bits %io_mem_resp_bits_rdata 4 to 4 {name = "_memRdata_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_u, %_memRdata_T_4 : !firrtl.uint<1>
      %_memRdata_T_5 = firrtl.bits %io_mem_resp_bits_rdata 5 to 5 {name = "_memRdata_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_g, %_memRdata_T_5 : !firrtl.uint<1>
      %_memRdata_T_6 = firrtl.bits %io_mem_resp_bits_rdata 6 to 6 {name = "_memRdata_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_a, %_memRdata_T_6 : !firrtl.uint<1>
      %_memRdata_T_7 = firrtl.bits %io_mem_resp_bits_rdata 7 to 7 {name = "_memRdata_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_d, %_memRdata_T_7 : !firrtl.uint<1>
      %_memRdata_T_8 = firrtl.bits %io_mem_resp_bits_rdata 9 to 8 {name = "_memRdata_T_8"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %memRdata_rsw, %_memRdata_T_8 : !firrtl.uint<2>
      %_memRdata_T_9 = firrtl.bits %io_mem_resp_bits_rdata 29 to 10 {name = "_memRdata_T_9"} : (!firrtl.uint<64>) -> !firrtl.uint<20>
      firrtl.strictconnect %memRdata_ppn, %_memRdata_T_9 : !firrtl.uint<20>
      %_memRdata_T_10 = firrtl.bits %io_mem_resp_bits_rdata 63 to 30 {name = "_memRdata_T_10"} : (!firrtl.uint<64>) -> !firrtl.uint<34>
      firrtl.strictconnect %memRdata_reserved, %_memRdata_T_10 : !firrtl.uint<34>
      %raddr = firrtl.reg %clock {firrtl.random_init_start = 193 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %_io_isFinish_T = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_isFinish_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %alreadyOutFire = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 225 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %3 = firrtl.mux(%_io_isFinish_T, %c1_ui1, %alreadyOutFire) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %needFlush = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 226 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %isFlush = firrtl.or %needFlush, %io_flush {name = "isFlush"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %4 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %5 = firrtl.and %io_flush, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.mux(%5, %c1_ui1, %needFlush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.and %_io_isFinish_T, %needFlush : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.mux(%7, %c0_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %missIPF = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 227 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %9 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %10 = firrtl.not %9 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %11 = firrtl.not %io_flush : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.and %11, %_hitWB_T_7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.and %miss, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.mux(%13, %c1_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %15 = firrtl.mux(%12, %c3_ui3, %14) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_raddr_T = firrtl.cat %satp_ppn, %vpn_vpn2 {name = "_raddr_T"} : (!firrtl.uint<20>, !firrtl.uint<9>) -> !firrtl.uint<29>
      %_raddr_T_1 = firrtl.cat %_raddr_T, %c0_ui3 {name = "_raddr_T_1"} : (!firrtl.uint<29>, !firrtl.uint<3>) -> !firrtl.uint<32>
      %16 = firrtl.mux(%13, %_raddr_T_1, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %17 = firrtl.mux(%12, %raddr, %16) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %18 = firrtl.mux(%13, %c3_ui2, %level) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %19 = firrtl.mux(%12, %level, %18) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %20 = firrtl.or %13, %7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.or %12, %20 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.mux(%21, %c0_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.or %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.mux(%23, %c0_ui1, %3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.eq %state, %c1_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %26 = firrtl.or %isFlush, %7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.mux(%26, %c0_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.mux(%28, %c2_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %30 = firrtl.mux(%isFlush, %c0_ui3, %29) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %31 = firrtl.not %25 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %9, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.eq %state, %c2_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %34 = firrtl.and %32, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %missflag_d = firrtl.wire : !firrtl.uint<1>
      %missflag_a = firrtl.wire : !firrtl.uint<1>
      %missflag_g = firrtl.wire : !firrtl.uint<1>
      %missflag_u = firrtl.wire : !firrtl.uint<1>
      %missflag_x = firrtl.wire : !firrtl.uint<1>
      %missflag_w = firrtl.wire : !firrtl.uint<1>
      %missflag_r = firrtl.wire : !firrtl.uint<1>
      %missflag_v = firrtl.wire : !firrtl.uint<1>
      %missflag_lo_lo = firrtl.cat %memRdata_flag_r, %memRdata_flag_v {name = "missflag_lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_lo_hi = firrtl.cat %memRdata_flag_x, %memRdata_flag_w {name = "missflag_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_lo = firrtl.cat %missflag_lo_hi, %missflag_lo_lo {name = "missflag_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %missflag_hi_lo = firrtl.cat %memRdata_flag_g, %memRdata_flag_u {name = "missflag_hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_hi_hi = firrtl.cat %memRdata_flag_d, %memRdata_flag_a {name = "missflag_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_hi = firrtl.cat %missflag_hi_hi, %missflag_hi_lo {name = "missflag_hi"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_missflag_T = firrtl.cat %missflag_hi, %missflag_lo {name = "_missflag_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_missflag_WIRE = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_missflag_WIRE, %_missflag_T : !firrtl.uint<8>
      %_missflag_T_1 = firrtl.bits %_missflag_WIRE 0 to 0 {name = "_missflag_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_v, %_missflag_T_1 : !firrtl.uint<1>
      %_missflag_T_2 = firrtl.bits %_missflag_WIRE 1 to 1 {name = "_missflag_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_r, %_missflag_T_2 : !firrtl.uint<1>
      %_missflag_T_3 = firrtl.bits %_missflag_WIRE 2 to 2 {name = "_missflag_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_w, %_missflag_T_3 : !firrtl.uint<1>
      %_missflag_T_4 = firrtl.bits %_missflag_WIRE 3 to 3 {name = "_missflag_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_x, %_missflag_T_4 : !firrtl.uint<1>
      %_missflag_T_5 = firrtl.bits %_missflag_WIRE 4 to 4 {name = "_missflag_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_u, %_missflag_T_5 : !firrtl.uint<1>
      %_missflag_T_6 = firrtl.bits %_missflag_WIRE 5 to 5 {name = "_missflag_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_g, %_missflag_T_6 : !firrtl.uint<1>
      %_missflag_T_7 = firrtl.bits %_missflag_WIRE 6 to 6 {name = "_missflag_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_a, %_missflag_T_7 : !firrtl.uint<1>
      %_missflag_T_8 = firrtl.bits %_missflag_WIRE 7 to 7 {name = "_missflag_T_8"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_d, %_missflag_T_8 : !firrtl.uint<1>
      %35 = firrtl.and %34, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.or %isFlush, %7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.mux(%36, %c0_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.mux(%io_mem_resp_valid, %37, %8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.not %isFlush : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.and %35, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.or %missflag_r, %missflag_x : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.not %41 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_missMask_T = firrtl.andr %level {name = "_missMask_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_missMask_T_1 = firrtl.eq %level, %c2_ui2 {name = "_missMask_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %43 = firrtl.or %_missMask_T, %_missMask_T_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.and %42, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.and %40, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %46 = firrtl.not %missflag_v : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.not %missflag_r : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.and %47, %missflag_w : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.or %46, %48 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.and %45, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.mux(%49, %c1_ui1, %missIPF) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %52 = firrtl.and %50, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %53 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.and %52, %53 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %54, "[%d] EmbeddedTLBExec: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %55 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.and %52, %55 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %56, "tlbException!!! " {name = "printf_1"}  : !firrtl.clock, !firrtl.uint<1>
      %57 = firrtl.and %50, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %58 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.and %57, %58 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %59, " req:addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x  Memreq:DecoupledIO(ready -> %d, valid -> %d, bits -> addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x)  MemResp:DecoupledIO(ready -> %d, valid -> %d, bits -> rdata = %x, cmd = %d)" {name = "printf_2"} (%io_in_bits_addr, %c0_ui4, %c3_ui3, %c0_ui8, %c0_ui64, %io_mem_req_ready, %io_mem_req_valid_6, %io_mem_req_bits_addr_7, %io_mem_req_bits_cmd_8, %c3_ui3, %c255_ui8, %io_mem_req_bits_wdata_9, %c1_ui1, %io_mem_resp_valid, %io_mem_resp_bits_rdata, %io_mem_resp_bits_cmd) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>
      %60 = firrtl.and %50, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %61 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.and %60, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %62, " level:%d" {name = "printf_3"} (%level) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>
      %63 = firrtl.and %50, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.and %63, %64 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %65, "\0A" {name = "printf_4"}  : !firrtl.clock, !firrtl.uint<1>
      %66 = firrtl.mux(%49, %c4_ui3, %c1_ui3) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_raddr_T_3 = firrtl.mux(%_missMask_T, %vpn_vpn1, %vpn_vpn0) {name = "_raddr_T_3"} : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      %_raddr_T_4 = firrtl.cat %memRdata_ppn, %_raddr_T_3 {name = "_raddr_T_4"} : (!firrtl.uint<20>, !firrtl.uint<9>) -> !firrtl.uint<29>
      %_raddr_T_5 = firrtl.cat %_raddr_T_4, %c0_ui3 {name = "_raddr_T_5"} : (!firrtl.uint<29>, !firrtl.uint<3>) -> !firrtl.uint<32>
      %67 = firrtl.mux(%49, %raddr, %_raddr_T_5) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %68 = firrtl.mux(%44, %67, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %69 = firrtl.mux(%isFlush, %raddr, %68) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %70 = firrtl.and %33, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %71 = firrtl.mux(%70, %69, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %72 = firrtl.mux(%25, %raddr, %71) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %73 = firrtl.mux(%10, %17, %72) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %raddr, %73 : !firrtl.uint<32>
      %74 = firrtl.orr %level : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_permCheck_T_1 = firrtl.not %missflag_u {name = "_permCheck_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_2 = firrtl.and %_permCheck_T, %_permCheck_T_1 {name = "_permCheck_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_3 = firrtl.not %_permCheck_T_2 {name = "_permCheck_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_4 = firrtl.and %missflag_v, %_permCheck_T_3 {name = "_permCheck_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_9 = firrtl.and %_permCheck_T_5, %missflag_u {name = "_permCheck_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_10 = firrtl.not %_permCheck_T_9 {name = "_permCheck_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %permCheck = firrtl.and %_permCheck_T_4, %_permCheck_T_10 {name = "permCheck"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permAD_T = firrtl.not %missflag_a {name = "_permAD_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permStore_T = firrtl.not %_permAD_T {name = "_permStore_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permExec_T_1 = firrtl.and %permCheck, %_permStore_T {name = "_permExec_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %permExec = firrtl.and %_permExec_T_1, %missflag_x {name = "permExec"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %missRefillFlag_lo_lo = firrtl.cat %missflag_r, %missflag_v {name = "missRefillFlag_lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_lo_hi = firrtl.cat %missflag_x, %missflag_w {name = "missRefillFlag_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_lo = firrtl.cat %missRefillFlag_lo_hi, %missRefillFlag_lo_lo {name = "missRefillFlag_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %missRefillFlag_hi_lo = firrtl.cat %missflag_g, %missflag_u {name = "missRefillFlag_hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_hi_hi = firrtl.cat %missflag_d, %missflag_a {name = "missRefillFlag_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_hi_1 = firrtl.cat %missRefillFlag_hi_hi, %missRefillFlag_hi_lo {name = "missRefillFlag_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_missRefillFlag_T_2 = firrtl.cat %missRefillFlag_hi_1, %missRefillFlag_lo {name = "_missRefillFlag_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_missRefillFlag_T_3 = firrtl.or %_missRefillFlag_T_2, %c64_ui8 {name = "_missRefillFlag_T_3"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %75 = firrtl.mux(%74, %_missRefillFlag_T_3, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %76 = firrtl.or %isFlush, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %77 = firrtl.mux(%76, %c0_ui8, %75) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %78 = firrtl.and %33, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %79 = firrtl.mux(%78, %77, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %80 = firrtl.or %10, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.mux(%80, %c0_ui8, %79) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %missRefillFlag, %81 : !firrtl.uint<8>
      %_memRespStore_T = firrtl.or %io_mem_resp_bits_rdata, %c64_ui64 {name = "_memRespStore_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %82 = firrtl.mux(%74, %_memRespStore_T, %memRespStore) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %83 = firrtl.or %isFlush, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %84 = firrtl.mux(%83, %memRespStore, %82) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %85 = firrtl.and %33, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.mux(%85, %84, %memRespStore) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %87 = firrtl.or %10, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.mux(%87, %memRespStore, %86) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %memRespStore, %88 : !firrtl.uint<64>
      %89 = firrtl.not %permExec : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %90 = firrtl.and %74, %89 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.mux(%90, %c1_ui1, %missIPF) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.mux(%44, %51, %91) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.mux(%isFlush, %missIPF, %92) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.mux(%io_mem_resp_valid, %93, %missIPF) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.mux(%74, %c4_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %96 = firrtl.mux(%44, %66, %95) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %97 = firrtl.mux(%isFlush, %c0_ui3, %96) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %98 = firrtl.mux(%io_mem_resp_valid, %97, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %99 = firrtl.mux(%74, %permExec, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.or %isFlush, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %101 = firrtl.mux(%100, %c0_ui1, %99) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %102 = firrtl.and %33, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %103 = firrtl.mux(%102, %101, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.or %10, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %105 = firrtl.mux(%104, %c0_ui1, %103) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %missMetaRefill, %105 : !firrtl.uint<1>
      %_missMask_T_2 = firrtl.mux(%_missMask_T_1, %c261632_ui18, %c262143_ui18) {name = "_missMask_T_2"} : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %_missMask_T_3 = firrtl.mux(%_missMask_T, %c0_ui18, %_missMask_T_2) {name = "_missMask_T_3"} : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %106 = firrtl.mux(%74, %_missMask_T_3, %c262143_ui18) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %107 = firrtl.or %isFlush, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %108 = firrtl.mux(%107, %c262143_ui18, %106) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %109 = firrtl.and %33, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.mux(%109, %108, %c262143_ui18) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %111 = firrtl.or %10, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %112 = firrtl.mux(%111, %c262143_ui18, %110) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      firrtl.strictconnect %missMask, %112 : !firrtl.uint<18>
      %113 = firrtl.mux(%74, %missMask, %missMaskStore) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %114 = firrtl.or %isFlush, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %115 = firrtl.mux(%114, %missMaskStore, %113) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %116 = firrtl.and %33, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %117 = firrtl.mux(%116, %115, %missMaskStore) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %118 = firrtl.or %10, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.mux(%118, %missMaskStore, %117) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      firrtl.strictconnect %missMaskStore, %119 : !firrtl.uint<18>
      %_level_T = firrtl.sub %level, %c1_ui1 {name = "_level_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_level_T_1 = firrtl.bits %_level_T 1 to 0 {name = "_level_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %120 = firrtl.and %33, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %121 = firrtl.mux(%120, %_level_T_1, %level) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %122 = firrtl.mux(%25, %level, %121) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %123 = firrtl.mux(%10, %19, %122) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %level, %123 : !firrtl.uint<2>
      %124 = firrtl.eq %state, %c3_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %125 = firrtl.or %isFlush, %7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %126 = firrtl.mux(%125, %c0_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %127 = firrtl.mux(%124, %126, %8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %128 = firrtl.mux(%33, %38, %127) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %129 = firrtl.mux(%25, %27, %128) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %130 = firrtl.mux(%10, %22, %129) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %needFlush, %130 : !firrtl.uint<1>
      %131 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %132 = firrtl.mux(%131, %c4_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %133 = firrtl.mux(%isFlush, %c0_ui3, %132) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %134 = firrtl.eq %state, %c4_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %135 = firrtl.or %_io_isFinish_T, %io_flush : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %136 = firrtl.or %135, %alreadyOutFire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %137 = firrtl.mux(%136, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %138 = firrtl.and %134, %136 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %139 = firrtl.mux(%138, %c0_ui1, %missIPF) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %140 = firrtl.mux(%124, %missIPF, %139) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %141 = firrtl.mux(%33, %94, %140) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %142 = firrtl.or %10, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %143 = firrtl.mux(%142, %missIPF, %141) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %missIPF, %143 : !firrtl.uint<1>
      %144 = firrtl.and %134, %136 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %145 = firrtl.mux(%144, %c0_ui1, %3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %146 = firrtl.or %33, %124 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %147 = firrtl.or %25, %146 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %148 = firrtl.mux(%147, %3, %145) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %149 = firrtl.mux(%10, %24, %148) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %alreadyOutFire, %149 : !firrtl.uint<1>
      %150 = firrtl.eq %state, %c5_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %151 = firrtl.mux(%150, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %152 = firrtl.mux(%134, %137, %151) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %153 = firrtl.mux(%124, %133, %152) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %154 = firrtl.mux(%33, %98, %153) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %155 = firrtl.mux(%25, %30, %154) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %156 = firrtl.mux(%10, %15, %155) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %state, %156 : !firrtl.uint<3>
      %cmd = firrtl.eq %state, %c3_ui3 {name = "cmd"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %157 = firrtl.mux(%_hitWB_T_7, %hitData_pteaddr, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %158 = firrtl.pad %hitWBStore, 64 : (!firrtl.uint<40>) -> !firrtl.uint<64>
      %159 = firrtl.mux(%_hitWB_T_7, %158, %memRespStore) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_mem_req_bits_addr_7, %157 : !firrtl.uint<32>
      %160 = firrtl.pad %cmd, 4 : (!firrtl.uint<1>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_cmd_8, %160 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata_9, %159 : !firrtl.uint<64>
      %_io_mem_req_valid_T = firrtl.eq %state, %c1_ui3 {name = "_io_mem_req_valid_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_2 = firrtl.or %_io_mem_req_valid_T, %cmd {name = "_io_mem_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_3 = firrtl.not %isFlush {name = "_io_mem_req_valid_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_4 = firrtl.and %_io_mem_req_valid_T_2, %_io_mem_req_valid_T_3 {name = "_io_mem_req_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_valid_6, %_io_mem_req_valid_T_4 : !firrtl.uint<1>
      %161 = firrtl.and %missMetaRefill, %_io_mem_req_valid_T_3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %162 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %162 {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %163 = firrtl.and %_hitWB_T_7, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %164 = firrtl.and %163, %_io_mem_req_valid_T_3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %165 = firrtl.or %161, %164 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 228 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %REG, %165 : !firrtl.uint<1>
      %166 = firrtl.wire : !firrtl.uint<1>
      %167 = firrtl.bits %io_in_bits_addr 12 to 12 : (!firrtl.uint<39>) -> !firrtl.uint<1>
      firrtl.strictconnect %166, %167 : !firrtl.uint<1>
      %REG_1 = firrtl.reg %clock {firrtl.random_init_start = 229 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG_1, %166 : !firrtl.uint<1>
      %REG_2 = firrtl.reg %clock {firrtl.random_init_start = 230 : ui64} : !firrtl.clock, !firrtl.uint<4>
      firrtl.strictconnect %REG_2, %waymask : !firrtl.uint<4>
      %168 = firrtl.cat %hi, %vpn_vpn0 : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %REG_3 = firrtl.reg %clock {firrtl.random_init_start = 234 : ui64} : !firrtl.clock, !firrtl.uint<27>
      firrtl.strictconnect %REG_3, %168 : !firrtl.uint<27>
      %169 = firrtl.mux(%_hitWB_T_7, %hitMeta_asid, %satp_asid) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %REG_4 = firrtl.reg %clock {firrtl.random_init_start = 261 : ui64} : !firrtl.clock, !firrtl.uint<16>
      firrtl.strictconnect %REG_4, %169 : !firrtl.uint<16>
      %170 = firrtl.mux(%_hitWB_T_7, %hitMeta_mask, %missMask) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %REG_5 = firrtl.reg %clock {firrtl.random_init_start = 277 : ui64} : !firrtl.clock, !firrtl.uint<18>
      firrtl.strictconnect %REG_5, %170 : !firrtl.uint<18>
      %171 = firrtl.mux(%_hitWB_T_7, %hitRefillFlag, %missRefillFlag) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %REG_6 = firrtl.reg %clock {firrtl.random_init_start = 295 : ui64} : !firrtl.clock, !firrtl.uint<8>
      firrtl.strictconnect %REG_6, %171 : !firrtl.uint<8>
      %172 = firrtl.mux(%_hitWB_T_7, %hitData_ppn, %memRdata_ppn) : (!firrtl.uint<1>, !firrtl.uint<20>, !firrtl.uint<20>) -> !firrtl.uint<20>
      %REG_7 = firrtl.reg %clock {firrtl.random_init_start = 303 : ui64} : !firrtl.clock, !firrtl.uint<20>
      firrtl.strictconnect %REG_7, %172 : !firrtl.uint<20>
      %REG_8 = firrtl.reg %clock {firrtl.random_init_start = 323 : ui64} : !firrtl.clock, !firrtl.uint<32>
      firrtl.strictconnect %REG_8, %157 : !firrtl.uint<32>
      firrtl.strictconnect %io_mdWrite_wen_3, %REG : !firrtl.uint<1>
      firrtl.strictconnect %io_mdWrite_windex, %REG_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_mdWrite_waymask_4, %REG_2 : !firrtl.uint<4>
      %io_mdWrite_wdata_lo_hi = firrtl.cat %REG_6, %REG_7 {name = "io_mdWrite_wdata_lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<20>) -> !firrtl.uint<28>
      %io_mdWrite_wdata_lo = firrtl.cat %io_mdWrite_wdata_lo_hi, %REG_8 {name = "io_mdWrite_wdata_lo"} : (!firrtl.uint<28>, !firrtl.uint<32>) -> !firrtl.uint<60>
      %io_mdWrite_wdata_hi_hi = firrtl.cat %REG_3, %REG_4 {name = "io_mdWrite_wdata_hi_hi"} : (!firrtl.uint<27>, !firrtl.uint<16>) -> !firrtl.uint<43>
      %io_mdWrite_wdata_hi = firrtl.cat %io_mdWrite_wdata_hi_hi, %REG_5 {name = "io_mdWrite_wdata_hi"} : (!firrtl.uint<43>, !firrtl.uint<18>) -> !firrtl.uint<61>
      %_io_mdWrite_wdata_T = firrtl.cat %io_mdWrite_wdata_hi, %io_mdWrite_wdata_lo {name = "_io_mdWrite_wdata_T"} : (!firrtl.uint<61>, !firrtl.uint<60>) -> !firrtl.uint<121>
      firrtl.strictconnect %io_mdWrite_wdata_5, %_io_mdWrite_wdata_T : !firrtl.uint<121>
      %_io_out_bits_addr_T_19 = firrtl.bits %io_in_bits_addr 31 to 0 {name = "_io_out_bits_addr_T_19"} : (!firrtl.uint<39>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_1 = firrtl.cat %hitData_ppn, %c0_ui12 {name = "_io_out_bits_addr_T_1"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %io_out_bits_addr_hi = firrtl.cat %c3_ui2, %hitMeta_mask {name = "io_out_bits_addr_hi"} : (!firrtl.uint<2>, !firrtl.uint<18>) -> !firrtl.uint<20>
      %_io_out_bits_addr_T_3 = firrtl.cat %io_out_bits_addr_hi, %c0_ui12 {name = "_io_out_bits_addr_T_3"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_4 = firrtl.and %_io_out_bits_addr_T_1, %_io_out_bits_addr_T_3 {name = "_io_out_bits_addr_T_4"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_5 = firrtl.not %_io_out_bits_addr_T_3 {name = "_io_out_bits_addr_T_5"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_6 = firrtl.and %_io_out_bits_addr_T_19, %_io_out_bits_addr_T_5 {name = "_io_out_bits_addr_T_6"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_7 = firrtl.or %_io_out_bits_addr_T_4, %_io_out_bits_addr_T_6 {name = "_io_out_bits_addr_T_7"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_WIRE_ppn = firrtl.wire : !firrtl.uint<20>
      %_io_out_bits_addr_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_io_out_bits_addr_WIRE_1, %memRespStore : !firrtl.uint<64>
      %_io_out_bits_addr_T_17 = firrtl.bits %_io_out_bits_addr_WIRE_1 29 to 10 {name = "_io_out_bits_addr_T_17"} : (!firrtl.uint<64>) -> !firrtl.uint<20>
      firrtl.strictconnect %_io_out_bits_addr_WIRE_ppn, %_io_out_bits_addr_T_17 : !firrtl.uint<20>
      %_io_out_bits_addr_T_20 = firrtl.cat %_io_out_bits_addr_WIRE_ppn, %c0_ui12 {name = "_io_out_bits_addr_T_20"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %io_out_bits_addr_hi_1 = firrtl.cat %c3_ui2, %missMaskStore {name = "io_out_bits_addr_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<18>) -> !firrtl.uint<20>
      %_io_out_bits_addr_T_22 = firrtl.cat %io_out_bits_addr_hi_1, %c0_ui12 {name = "_io_out_bits_addr_T_22"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_23 = firrtl.and %_io_out_bits_addr_T_20, %_io_out_bits_addr_T_22 {name = "_io_out_bits_addr_T_23"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_24 = firrtl.not %_io_out_bits_addr_T_22 {name = "_io_out_bits_addr_T_24"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_25 = firrtl.and %_io_out_bits_addr_T_19, %_io_out_bits_addr_T_24 {name = "_io_out_bits_addr_T_25"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_26 = firrtl.or %_io_out_bits_addr_T_23, %_io_out_bits_addr_T_25 {name = "_io_out_bits_addr_T_26"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_27 = firrtl.mux(%hit, %_io_out_bits_addr_T_7, %_io_out_bits_addr_T_26) {name = "_io_out_bits_addr_T_27"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_addr_2, %_io_out_bits_addr_T_27 : !firrtl.uint<32>
      %_io_in_ready_T_4 = firrtl.not %_hitWB_T_7 {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.and %hit, %_io_in_ready_T_4 {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_6 = firrtl.eq %state, %c4_ui3 {name = "_io_out_valid_T_6"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_out_valid_T_7 = firrtl.mux(%_io_out_valid_T_1, %c1_ui1, %_io_out_valid_T_6) {name = "_io_out_valid_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_8 = firrtl.and %io_in_valid, %_io_out_valid_T_7 {name = "_io_out_valid_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_8 : !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %_io_in_ready_T {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.not %miss {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %_io_in_ready_T_1, %_io_in_ready_T_2 {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_5 = firrtl.and %_io_in_ready_T_3, %_io_in_ready_T_4 {name = "_io_in_ready_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_6 = firrtl.and %_io_in_ready_T_5, %io_mdReady {name = "_io_in_ready_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_6 : !firrtl.uint<1>
      %_io_ipf_T = firrtl.mux(%hit, %hitinstrPF, %missIPF) {name = "_io_ipf_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_ipf_10, %_io_ipf_T : !firrtl.uint<1>
      firrtl.strictconnect %io_isFinish_11, %_io_isFinish_T : !firrtl.uint<1>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_1_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_timer, %LogPerfHelper_1_timer : !firrtl.uint<64>
      %173 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %174 = firrtl.and %c_control_1_logEnable, %173 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %174, "[%d] EmbeddedTLBExec: " {name = "printf_5"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %175 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %176 = firrtl.and %c_control_1_logEnable, %175 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %176, "In(%d, %d) Out(%d, %d) InAddr:%x OutAddr:%x cmd:%d \0A" {name = "printf_6"} (%io_in_valid, %io_in_ready_0, %io_out_valid_1, %io_out_ready, %io_in_bits_addr, %io_out_bits_addr_2, %c0_ui4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<32>, !firrtl.uint<4>
      %177 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %178 = firrtl.and %c_control_1_logEnable, %177 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %178, "[%d] EmbeddedTLBExec: " {name = "printf_7"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %179 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %180 = firrtl.and %c_control_1_logEnable, %179 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %180, "isAMO:%d io.Flush:%d needFlush:%d alreadyOutFire:%d isFinish:%d\0A" {name = "printf_8"} (%c0_ui1, %io_flush, %needFlush, %alreadyOutFire, %io_isFinish_11) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %lo = firrtl.cat %lo_hi, %lo_lo {name = "lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_1 = firrtl.cat %hi_hi, %hi_lo {name = "hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %181 = firrtl.cat %hi_1, %lo : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %182 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %183 = firrtl.and %c_control_1_logEnable, %182 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %183, "[%d] EmbeddedTLBExec: " {name = "printf_9"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %184 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %185 = firrtl.and %c_control_1_logEnable, %184 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %185, "hit:%d hitWB:%d hitVPN:%x hitFlag:%x hitPPN:%x hitRefillFlag:%x hitWBStore:%x hitCheck:%d hitExec:%d hitLoad:%d hitStore:%d\0A" {name = "printf_10"} (%hit, %_hitWB_T_7, %hitMeta_vpn, %181, %hitData_ppn, %hitRefillFlag, %hitWBStore, %hitCheck, %hitExec, %hitLoad, %hitStore) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<8>, !firrtl.uint<40>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %lo_lo_1 = firrtl.cat %memRdata_flag_r, %memRdata_flag_v {name = "lo_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_hi_1 = firrtl.cat %memRdata_flag_x, %memRdata_flag_w {name = "lo_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_1 = firrtl.cat %lo_hi_1, %lo_lo_1 {name = "lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_lo_1 = firrtl.cat %memRdata_flag_g, %memRdata_flag_u {name = "hi_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_hi_1 = firrtl.cat %memRdata_flag_d, %memRdata_flag_a {name = "hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_2 = firrtl.cat %hi_hi_1, %hi_lo_1 {name = "hi_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %186 = firrtl.cat %hi_2, %lo_1 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %lo_2 = firrtl.cat %memRdata_rsw, %186 {name = "lo_2"} : (!firrtl.uint<2>, !firrtl.uint<8>) -> !firrtl.uint<10>
      %hi_3 = firrtl.cat %memRdata_reserved, %memRdata_ppn {name = "hi_3"} : (!firrtl.uint<34>, !firrtl.uint<20>) -> !firrtl.uint<54>
      %187 = firrtl.cat %hi_3, %lo_2 : (!firrtl.uint<54>, !firrtl.uint<10>) -> !firrtl.uint<64>
      %188 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %189 = firrtl.and %c_control_1_logEnable, %188 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %189, "[%d] EmbeddedTLBExec: " {name = "printf_11"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %190 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %191 = firrtl.and %c_control_1_logEnable, %190 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %191, "miss:%d state:%d level:%d raddr:%x memRdata:%x missMask:%x missRefillFlag:%x missMetaRefill:%d\0A" {name = "printf_12"} (%miss, %state, %level, %raddr, %187, %missMask, %missRefillFlag, %missMetaRefill) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<2>, !firrtl.uint<32>, !firrtl.uint<64>, !firrtl.uint<18>, !firrtl.uint<8>, !firrtl.uint<1>
      %192 = firrtl.wire : !firrtl.uint<27>
      %193 = firrtl.bits %io_md_0 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %192, %193 : !firrtl.uint<27>
      %194 = firrtl.wire : !firrtl.uint<8>
      %195 = firrtl.bits %io_md_0 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %194, %195 : !firrtl.uint<8>
      %196 = firrtl.wire : !firrtl.uint<20>
      %197 = firrtl.bits %io_md_0 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %196, %197 : !firrtl.uint<20>
      %198 = firrtl.wire : !firrtl.uint<27>
      %199 = firrtl.bits %io_md_1 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %198, %199 : !firrtl.uint<27>
      %200 = firrtl.wire : !firrtl.uint<8>
      %201 = firrtl.bits %io_md_1 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %200, %201 : !firrtl.uint<8>
      %202 = firrtl.wire : !firrtl.uint<20>
      %203 = firrtl.bits %io_md_1 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %202, %203 : !firrtl.uint<20>
      %204 = firrtl.wire : !firrtl.uint<27>
      %205 = firrtl.bits %io_md_2 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %204, %205 : !firrtl.uint<27>
      %206 = firrtl.wire : !firrtl.uint<8>
      %207 = firrtl.bits %io_md_2 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %206, %207 : !firrtl.uint<8>
      %208 = firrtl.wire : !firrtl.uint<20>
      %209 = firrtl.bits %io_md_2 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %208, %209 : !firrtl.uint<20>
      %210 = firrtl.wire : !firrtl.uint<27>
      %211 = firrtl.bits %io_md_3 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %210, %211 : !firrtl.uint<27>
      %212 = firrtl.wire : !firrtl.uint<8>
      %213 = firrtl.bits %io_md_3 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %212, %213 : !firrtl.uint<8>
      %214 = firrtl.wire : !firrtl.uint<20>
      %215 = firrtl.bits %io_md_3 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %214, %215 : !firrtl.uint<20>
      %216 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %217 = firrtl.and %c_control_1_logEnable, %216 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %217, "[%d] EmbeddedTLBExec: " {name = "printf_13"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %218 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %219 = firrtl.and %c_control_1_logEnable, %218 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %219, "meta/data: (0)%x|%b|%x (1)%x|%b|%x (2)%x|%b|%x (3)%x|%b|%x rread:%d\0A" {name = "printf_14"} (%192, %194, %196, %198, %200, %202, %204, %206, %208, %210, %212, %214, %io_mdReady) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<1>
      %220 = firrtl.wire : !firrtl.uint<27>
      %221 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %221, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      %222 = firrtl.bits %221 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %220, %222 : !firrtl.uint<27>
      %223 = firrtl.wire : !firrtl.uint<16>
      %224 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %224, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      %225 = firrtl.bits %224 93 to 78 : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %223, %225 : !firrtl.uint<16>
      %226 = firrtl.wire : !firrtl.uint<18>
      %227 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %227, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      %228 = firrtl.bits %227 77 to 60 : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %226, %228 : !firrtl.uint<18>
      %229 = firrtl.wire : !firrtl.uint<8>
      %230 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %230, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      %231 = firrtl.bits %230 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %229, %231 : !firrtl.uint<8>
      %232 = firrtl.wire : !firrtl.uint<16>
      %233 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %233, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      %234 = firrtl.bits %233 93 to 78 : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %232, %234 : !firrtl.uint<16>
      %235 = firrtl.wire : !firrtl.uint<20>
      %236 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %236, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      %237 = firrtl.bits %236 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %235, %237 : !firrtl.uint<20>
      %238 = firrtl.wire : !firrtl.uint<32>
      %239 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %239, %io_mdWrite_wdata_5 : !firrtl.uint<121>
      %240 = firrtl.bits %239 31 to 0 : (!firrtl.uint<121>) -> !firrtl.uint<32>
      firrtl.strictconnect %238, %240 : !firrtl.uint<32>
      %241 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %242 = firrtl.and %c_control_1_logEnable, %241 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %242, "[%d] EmbeddedTLBExec: " {name = "printf_15"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %243 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %244 = firrtl.and %c_control_1_logEnable, %243 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %244, "md: wen:%d windex:%x waymask:%x vpn:%x asid:%x mask:%x flag:%x asid:%x ppn:%x pteaddr:%x\0A" {name = "printf_16"} (%io_mdWrite_wen_3, %io_mdWrite_windex, %io_mdWrite_waymask_4, %220, %223, %226, %229, %232, %235, %238) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<27>, !firrtl.uint<16>, !firrtl.uint<18>, !firrtl.uint<8>, !firrtl.uint<16>, !firrtl.uint<20>, !firrtl.uint<32>
      %245 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %246 = firrtl.and %c_control_1_logEnable, %245 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %246, "[%d] EmbeddedTLBExec: " {name = "printf_17"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %247 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %248 = firrtl.and %c_control_1_logEnable, %247 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %248, "MemReq(%d, %d) MemResp(%d, %d) addr:%x cmd:%d rdata:%x cmd:%d\0A" {name = "printf_18"} (%io_mem_req_valid_6, %io_mem_req_ready, %io_mem_resp_valid, %c1_ui1, %io_mem_req_bits_addr_7, %io_mem_req_bits_cmd_8, %io_mem_resp_bits_rdata, %io_mem_resp_bits_cmd) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<4>
      %249 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %250 = firrtl.and %c_control_1_logEnable, %249 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %250, "[%d] EmbeddedTLBExec: " {name = "printf_19"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %251 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %252 = firrtl.and %c_control_1_logEnable, %251 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %252, "io.ipf:%d hitinstrPF:%d missIPF:%d pf.loadPF:%d pf.storePF:%d loadPF:%d storePF:%d\0A" {name = "printf_20"} (%io_ipf_10, %hitinstrPF, %missIPF, %c0_ui1, %c0_ui1, %c0_ui1, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
    }
    firrtl.module private @EmbeddedTLBMD(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_tlbmd_0: !firrtl.uint<121>, out %io_tlbmd_1: !firrtl.uint<121>, out %io_tlbmd_2: !firrtl.uint<121>, out %io_tlbmd_3: !firrtl.uint<121>, in %io_write_wen: !firrtl.uint<1>, in %io_write_waymask: !firrtl.uint<4>, in %io_write_wdata: !firrtl.uint<121>, out %io_ready: !firrtl.uint<1>) {
      %c0_ui121 = firrtl.constant 0 : !firrtl.uint<121>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "resetSet"}
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_tlbmd_0_0 = firrtl.wire {name = "io_tlbmd_0"} : !firrtl.uint<121>
      %io_tlbmd_1_1 = firrtl.wire {name = "io_tlbmd_1"} : !firrtl.uint<121>
      %io_tlbmd_2_2 = firrtl.wire {name = "io_tlbmd_2"} : !firrtl.uint<121>
      %io_tlbmd_3_3 = firrtl.wire {name = "io_tlbmd_3"} : !firrtl.uint<121>
      %io_ready_4 = firrtl.wire {name = "io_ready"} : !firrtl.uint<1>
      firrtl.strictconnect %io_tlbmd_0, %io_tlbmd_0_0 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_1, %io_tlbmd_1_1 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_2, %io_tlbmd_2_2 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_3, %io_tlbmd_3_3 : !firrtl.uint<121>
      firrtl.strictconnect %io_ready, %io_ready_4 : !firrtl.uint<1>
      %tlbmd_0_0 = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_0_1 = firrtl.reg %clock {firrtl.random_init_start = 121 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_0_2 = firrtl.reg %clock {firrtl.random_init_start = 242 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_0_3 = firrtl.reg %clock {firrtl.random_init_start = 363 : ui64} : !firrtl.clock, !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_0_0, %tlbmd_0_0 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_1_1, %tlbmd_0_1 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_2_2, %tlbmd_0_2 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_3_3, %tlbmd_0_3 : !firrtl.uint<121>
      %resetState = firrtl.regreset %clock, %reset, %c1_ui1 {firrtl.random_init_start = 484 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %resetFinish = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %resetFinish, %resetState : !firrtl.uint<1>
      %0 = firrtl.mux(%resetFinish, %c0_ui1, %resetState) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %resetState, %0 : !firrtl.uint<1>
      %wen = firrtl.mux(%resetState, %c1_ui1, %io_write_wen) {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %waymask = firrtl.mux(%resetState, %c15_ui4, %io_write_waymask) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %dataword = firrtl.mux(%resetState, %c0_ui121, %io_write_wdata) {name = "dataword"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %wdata_0 = firrtl.wire : !firrtl.uint<121>
      %wdata_1 = firrtl.wire : !firrtl.uint<121>
      %wdata_2 = firrtl.wire : !firrtl.uint<121>
      %wdata_3 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %wdata_0, %dataword : !firrtl.uint<121>
      firrtl.strictconnect %wdata_1, %dataword : !firrtl.uint<121>
      firrtl.strictconnect %wdata_2, %dataword : !firrtl.uint<121>
      firrtl.strictconnect %wdata_3, %dataword : !firrtl.uint<121>
      %1 = firrtl.bits %waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %2 = firrtl.bits %waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %3 = firrtl.bits %waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %4 = firrtl.bits %waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %5 = firrtl.and %wen, %1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.mux(%5, %wdata_0, %tlbmd_0_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_0, %6 : !firrtl.uint<121>
      %7 = firrtl.and %wen, %2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.mux(%7, %wdata_1, %tlbmd_0_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_1, %8 : !firrtl.uint<121>
      %9 = firrtl.and %wen, %3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.mux(%9, %wdata_2, %tlbmd_0_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_2, %10 : !firrtl.uint<121>
      %11 = firrtl.and %wen, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.mux(%11, %wdata_3, %tlbmd_0_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_3, %12 : !firrtl.uint<121>
      %_io_ready_T = firrtl.not %resetState {name = "_io_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_ready_4, %_io_ready_T : !firrtl.uint<1>
    }
    firrtl.module private @EmbeddedTLB(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<39>, in %io_in_req_bits_user: !firrtl.uint<87>, in %io_in_resp_ready: !firrtl.uint<1>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, out %io_in_resp_bits_user: !firrtl.uint<87>, in %io_out_req_ready: !firrtl.uint<1>, out %io_out_req_valid: !firrtl.uint<1>, out %io_out_req_bits_addr: !firrtl.uint<32>, out %io_out_req_bits_user: !firrtl.uint<87>, out %io_out_resp_ready: !firrtl.uint<1>, in %io_out_resp_valid: !firrtl.uint<1>, in %io_out_resp_bits_cmd: !firrtl.uint<4>, in %io_out_resp_bits_rdata: !firrtl.uint<64>, in %io_out_resp_bits_user: !firrtl.uint<87>, in %io_mem_req_ready: !firrtl.uint<1>, out %io_mem_req_valid: !firrtl.uint<1>, out %io_mem_req_bits_addr: !firrtl.uint<32>, out %io_mem_req_bits_cmd: !firrtl.uint<4>, out %io_mem_req_bits_wdata: !firrtl.uint<64>, in %io_mem_resp_valid: !firrtl.uint<1>, in %io_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_flush: !firrtl.uint<1>, in %io_csrMMU_priviledgeMode: !firrtl.uint<2>, in %io_cacheEmpty: !firrtl.uint<1>, out %io_ipf: !firrtl.uint<1>, in %satp__bore: !firrtl.uint<64>, in %flushTLB__bore: !firrtl.uint<1>) {
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd = firrtl.wire : !firrtl.uint<4>
      %io_in_resp_bits_rdata_2 = firrtl.wire {name = "io_in_resp_bits_rdata"} : !firrtl.uint<64>
      %io_in_resp_bits_user_3 = firrtl.wire {name = "io_in_resp_bits_user"} : !firrtl.uint<87>
      %io_out_req_valid_4 = firrtl.wire {name = "io_out_req_valid"} : !firrtl.uint<1>
      %io_out_req_bits_addr_5 = firrtl.wire {name = "io_out_req_bits_addr"} : !firrtl.uint<32>
      %io_out_req_bits_user_6 = firrtl.wire {name = "io_out_req_bits_user"} : !firrtl.uint<87>
      %io_mem_req_valid_7 = firrtl.wire {name = "io_mem_req_valid"} : !firrtl.uint<1>
      %io_mem_req_bits_addr_8 = firrtl.wire {name = "io_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_mem_req_bits_cmd_9 = firrtl.wire {name = "io_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_mem_req_bits_wdata_10 = firrtl.wire {name = "io_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_ipf_11 = firrtl.wire {name = "io_ipf"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_in_resp_bits_rdata_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_resp_bits_user, %io_in_resp_bits_user_3 : !firrtl.uint<87>
      firrtl.strictconnect %io_out_req_valid, %io_out_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_bits_addr, %io_out_req_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_user, %io_out_req_bits_user_6 : !firrtl.uint<87>
      firrtl.strictconnect %io_out_resp_ready, %io_in_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_valid, %io_mem_req_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr, %io_mem_req_bits_addr_8 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd, %io_mem_req_bits_cmd_9 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata, %io_mem_req_bits_wdata_10 : !firrtl.uint<64>
      firrtl.strictconnect %io_ipf, %io_ipf_11 : !firrtl.uint<1>
      %tlbExec_clock, %tlbExec_reset, %tlbExec_io_in_ready, %tlbExec_io_in_valid, %tlbExec_io_in_bits_addr, %tlbExec_io_in_bits_user, %tlbExec_io_out_ready, %tlbExec_io_out_valid, %tlbExec_io_out_bits_addr, %tlbExec_io_out_bits_user, %tlbExec_io_md_0, %tlbExec_io_md_1, %tlbExec_io_md_2, %tlbExec_io_md_3, %tlbExec_io_mdWrite_wen, %tlbExec_io_mdWrite_waymask, %tlbExec_io_mdWrite_wdata, %tlbExec_io_mdReady, %tlbExec_io_mem_req_ready, %tlbExec_io_mem_req_valid, %tlbExec_io_mem_req_bits_addr, %tlbExec_io_mem_req_bits_cmd, %tlbExec_io_mem_req_bits_wdata, %tlbExec_io_mem_resp_valid, %tlbExec_io_mem_resp_bits_cmd, %tlbExec_io_mem_resp_bits_rdata, %tlbExec_io_flush, %tlbExec_io_satp, %tlbExec_io_pf_priviledgeMode, %tlbExec_io_ipf, %tlbExec_io_isFinish = firrtl.instance tlbExec @EmbeddedTLBExec(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<39>, in io_in_bits_user: !firrtl.uint<87>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_user: !firrtl.uint<87>, in io_md_0: !firrtl.uint<121>, in io_md_1: !firrtl.uint<121>, in io_md_2: !firrtl.uint<121>, in io_md_3: !firrtl.uint<121>, out io_mdWrite_wen: !firrtl.uint<1>, out io_mdWrite_waymask: !firrtl.uint<4>, out io_mdWrite_wdata: !firrtl.uint<121>, in io_mdReady: !firrtl.uint<1>, in io_mem_req_ready: !firrtl.uint<1>, out io_mem_req_valid: !firrtl.uint<1>, out io_mem_req_bits_addr: !firrtl.uint<32>, out io_mem_req_bits_cmd: !firrtl.uint<4>, out io_mem_req_bits_wdata: !firrtl.uint<64>, in io_mem_resp_valid: !firrtl.uint<1>, in io_mem_resp_bits_cmd: !firrtl.uint<4>, in io_mem_resp_bits_rdata: !firrtl.uint<64>, in io_flush: !firrtl.uint<1>, in io_satp: !firrtl.uint<64>, in io_pf_priviledgeMode: !firrtl.uint<2>, out io_ipf: !firrtl.uint<1>, out io_isFinish: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<39>
      %3 = firrtl.wire : !firrtl.uint<87>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<32>
      %7 = firrtl.wire : !firrtl.uint<87>
      %8 = firrtl.wire : !firrtl.uint<121>
      %9 = firrtl.wire : !firrtl.uint<121>
      %10 = firrtl.wire : !firrtl.uint<121>
      %11 = firrtl.wire : !firrtl.uint<121>
      %12 = firrtl.wire : !firrtl.uint<1>
      %13 = firrtl.wire : !firrtl.uint<4>
      %14 = firrtl.wire : !firrtl.uint<121>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<32>
      %18 = firrtl.wire : !firrtl.uint<4>
      %19 = firrtl.wire : !firrtl.uint<64>
      %20 = firrtl.wire : !firrtl.uint<1>
      %21 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %tlbExec_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_in_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_in_bits_addr, %2 : !firrtl.uint<39>
      firrtl.strictconnect %tlbExec_io_in_bits_user, %3 : !firrtl.uint<87>
      firrtl.strictconnect %tlbExec_io_out_ready, %4 : !firrtl.uint<1>
      firrtl.strictconnect %5, %tlbExec_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %6, %tlbExec_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %7, %tlbExec_io_out_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %tlbExec_io_md_0, %8 : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_md_1, %9 : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_md_2, %10 : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_md_3, %11 : !firrtl.uint<121>
      firrtl.strictconnect %12, %tlbExec_io_mdWrite_wen : !firrtl.uint<1>
      firrtl.strictconnect %13, %tlbExec_io_mdWrite_waymask : !firrtl.uint<4>
      firrtl.strictconnect %14, %tlbExec_io_mdWrite_wdata : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_mdReady, %15 : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_mem_req_ready, %io_mem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %16, %tlbExec_io_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %17, %tlbExec_io_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %18, %tlbExec_io_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %19, %tlbExec_io_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_mem_resp_valid, %io_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_mem_resp_bits_cmd, %io_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %tlbExec_io_mem_resp_bits_rdata, %io_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_flush, %io_flush : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_satp, %satp__bore : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_pf_priviledgeMode, %io_csrMMU_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %20, %tlbExec_io_ipf : !firrtl.uint<1>
      firrtl.strictconnect %21, %tlbExec_io_isFinish : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_clock, %clock : !firrtl.clock
      firrtl.strictconnect %tlbExec_reset, %reset : !firrtl.uint<1>
      %mdTLB_clock, %mdTLB_reset, %mdTLB_io_tlbmd_0, %mdTLB_io_tlbmd_1, %mdTLB_io_tlbmd_2, %mdTLB_io_tlbmd_3, %mdTLB_io_write_wen, %mdTLB_io_write_waymask, %mdTLB_io_write_wdata, %mdTLB_io_ready = firrtl.instance mdTLB @EmbeddedTLBMD(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_tlbmd_0: !firrtl.uint<121>, out io_tlbmd_1: !firrtl.uint<121>, out io_tlbmd_2: !firrtl.uint<121>, out io_tlbmd_3: !firrtl.uint<121>, in io_write_wen: !firrtl.uint<1>, in io_write_waymask: !firrtl.uint<4>, in io_write_wdata: !firrtl.uint<121>, out io_ready: !firrtl.uint<1>)
      %22 = firrtl.wire : !firrtl.uint<121>
      %23 = firrtl.wire : !firrtl.uint<121>
      %24 = firrtl.wire : !firrtl.uint<121>
      %25 = firrtl.wire : !firrtl.uint<121>
      %26 = firrtl.wire : !firrtl.uint<1>
      %27 = firrtl.wire : !firrtl.uint<4>
      %28 = firrtl.wire : !firrtl.uint<121>
      %29 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %22, %mdTLB_io_tlbmd_0 : !firrtl.uint<121>
      firrtl.strictconnect %23, %mdTLB_io_tlbmd_1 : !firrtl.uint<121>
      firrtl.strictconnect %24, %mdTLB_io_tlbmd_2 : !firrtl.uint<121>
      firrtl.strictconnect %25, %mdTLB_io_tlbmd_3 : !firrtl.uint<121>
      firrtl.strictconnect %mdTLB_io_write_wen, %26 : !firrtl.uint<1>
      firrtl.strictconnect %mdTLB_io_write_waymask, %27 : !firrtl.uint<4>
      firrtl.strictconnect %mdTLB_io_write_wdata, %28 : !firrtl.uint<121>
      firrtl.strictconnect %29, %mdTLB_io_ready : !firrtl.uint<1>
      firrtl.strictconnect %mdTLB_clock, %clock : !firrtl.clock
      %mdUpdate = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr_8, %17 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd_9, %18 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata_10, %19 : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_req_valid_7, %16 : !firrtl.uint<1>
      %r_0 = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %r_1 = firrtl.reg %clock {firrtl.random_init_start = 121 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %r_2 = firrtl.reg %clock {firrtl.random_init_start = 242 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %r_3 = firrtl.reg %clock {firrtl.random_init_start = 363 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %30 = firrtl.mux(%mdUpdate, %22, %r_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_0, %30 : !firrtl.uint<121>
      %31 = firrtl.mux(%mdUpdate, %23, %r_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_1, %31 : !firrtl.uint<121>
      %32 = firrtl.mux(%mdUpdate, %24, %r_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_2, %32 : !firrtl.uint<121>
      %33 = firrtl.mux(%mdUpdate, %25, %r_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_3, %33 : !firrtl.uint<121>
      firrtl.strictconnect %8, %r_0 : !firrtl.uint<121>
      firrtl.strictconnect %9, %r_1 : !firrtl.uint<121>
      firrtl.strictconnect %10, %r_2 : !firrtl.uint<121>
      firrtl.strictconnect %11, %r_3 : !firrtl.uint<121>
      firrtl.strictconnect %15, %29 : !firrtl.uint<1>
      firrtl.strictconnect %26, %12 : !firrtl.uint<1>
      firrtl.strictconnect %27, %13 : !firrtl.uint<4>
      firrtl.strictconnect %28, %14 : !firrtl.uint<121>
      %_mdTLB_reset_T_1 = firrtl.or %reset, %flushTLB__bore {name = "_mdTLB_reset_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mdTLB_reset, %_mdTLB_reset_T_1 : !firrtl.uint<1>
      %_vmEnable_WIRE_mode = firrtl.wire : !firrtl.uint<4>
      %_vmEnable_T_3 = firrtl.bits %satp__bore 63 to 60 {name = "_vmEnable_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      firrtl.strictconnect %_vmEnable_WIRE_mode, %_vmEnable_T_3 : !firrtl.uint<4>
      %_vmEnable_T_4 = firrtl.eq %_vmEnable_WIRE_mode, %c8_ui4 {name = "_vmEnable_T_4"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_vmEnable_T_5 = firrtl.lt %io_csrMMU_priviledgeMode, %c3_ui2 {name = "_vmEnable_T_5"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %vmEnable = firrtl.and %_vmEnable_T_4, %_vmEnable_T_5 {name = "vmEnable"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 484 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %34 = firrtl.mux(%21, %c0_ui1, %valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mdUpdate_T = firrtl.and %io_in_req_valid, %0 {name = "_mdUpdate_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.and %_mdUpdate_T, %vmEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.mux(%35, %c1_ui1, %34) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.mux(%io_flush, %c0_ui1, %36) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid, %37 : !firrtl.uint<1>
      %tlbExec_io_in_bits_r_addr = firrtl.reg %clock {firrtl.random_init_start = 485 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %tlbExec_io_in_bits_r_user = firrtl.reg %clock {firrtl.random_init_start = 603 : ui64} : !firrtl.clock, !firrtl.uint<87>
      %38 = firrtl.mux(%_mdUpdate_T, %io_in_req_bits_addr, %tlbExec_io_in_bits_r_addr) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %tlbExec_io_in_bits_r_addr, %38 : !firrtl.uint<39>
      %39 = firrtl.mux(%_mdUpdate_T, %io_in_req_bits_user, %tlbExec_io_in_bits_r_user) : (!firrtl.uint<1>, !firrtl.uint<87>, !firrtl.uint<87>) -> !firrtl.uint<87>
      firrtl.strictconnect %tlbExec_io_in_bits_r_user, %39 : !firrtl.uint<87>
      firrtl.strictconnect %2, %tlbExec_io_in_bits_r_addr : !firrtl.uint<39>
      firrtl.strictconnect %3, %tlbExec_io_in_bits_r_user : !firrtl.uint<87>
      firrtl.strictconnect %1, %valid : !firrtl.uint<1>
      firrtl.strictconnect %mdUpdate, %_mdUpdate_T : !firrtl.uint<1>
      %40 = firrtl.not %vmEnable : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.mux(%40, %io_out_req_ready, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready_0, %41 : !firrtl.uint<1>
      %_io_out_req_bits_addr_T = firrtl.bits %io_in_req_bits_addr 31 to 0 {name = "_io_out_req_bits_addr_T"} : (!firrtl.uint<39>) -> !firrtl.uint<32>
      %42 = firrtl.mux(%40, %_io_out_req_bits_addr_T, %6) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_addr_5, %42 : !firrtl.uint<32>
      %43 = firrtl.mux(%40, %io_in_req_bits_user, %7) : (!firrtl.uint<1>, !firrtl.uint<87>, !firrtl.uint<87>) -> !firrtl.uint<87>
      firrtl.strictconnect %io_out_req_bits_user_6, %43 : !firrtl.uint<87>
      %44 = firrtl.mux(%40, %io_in_req_valid, %5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.mux(%40, %c1_ui1, %io_out_req_ready) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %46 = firrtl.and %20, %vmEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tlbExec_io_out_ready_T = firrtl.and %io_cacheEmpty, %io_in_resp_ready {name = "_tlbExec_io_out_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.mux(%46, %_tlbExec_io_out_ready_T, %45) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %4, %47 : !firrtl.uint<1>
      %48 = firrtl.mux(%46, %c0_ui1, %44) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_valid_4, %48 : !firrtl.uint<1>
      %49 = firrtl.and %46, %io_cacheEmpty : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.mux(%49, %c1_ui1, %io_out_resp_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %50 : !firrtl.uint<1>
      %51 = firrtl.mux(%49, %c0_ui64, %io_out_resp_bits_rdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_resp_bits_rdata_2, %51 : !firrtl.uint<64>
      %52 = firrtl.mux(%49, %c6_ui4, %io_out_resp_bits_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_cmd, %52 : !firrtl.uint<4>
      %53 = firrtl.mux(%49, %3, %io_out_resp_bits_user) : (!firrtl.uint<1>, !firrtl.uint<87>, !firrtl.uint<87>) -> !firrtl.uint<87>
      firrtl.strictconnect %io_in_resp_bits_user_3, %53 : !firrtl.uint<87>
      %54 = firrtl.mux(%49, %20, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_ipf_11, %54 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %55 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.and %c_control_logEnable, %55 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %56, "[%d] EmbeddedTLB: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %57 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %58 = firrtl.and %c_control_logEnable, %57 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %58, "InReq(%d, %d) InResp(%d, %d) OutReq(%d, %d) OutResp(%d, %d) vmEnable:%d mode:%d\0A" {name = "printf_1"} (%io_in_req_valid, %io_in_req_ready_0, %io_in_resp_valid_1, %io_in_resp_ready, %io_out_req_valid_4, %io_out_req_ready, %io_out_resp_valid, %io_in_resp_ready, %vmEnable, %io_csrMMU_priviledgeMode) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<2>
      %59 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.and %c_control_logEnable, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %60, "[%d] EmbeddedTLB: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %61 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.and %c_control_logEnable, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %62, "InReq: addr:%x cmd:%d wdata:%x OutReq: addr:%x cmd:%x wdata:%x\0A" {name = "printf_3"} (%io_in_req_bits_addr, %c0_ui4, %c0_ui64, %io_out_req_bits_addr_5, %c0_ui4, %c0_ui64) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<64>
      %63 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.and %c_control_logEnable, %63 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %64, "[%d] EmbeddedTLB: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %65 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %66 = firrtl.and %c_control_logEnable, %65 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %66, "OutResp: rdata:%x cmd:%x Inresp: rdata:%x cmd:%x\0A" {name = "printf_5"} (%io_out_resp_bits_rdata, %io_out_resp_bits_cmd, %io_in_resp_bits_rdata_2, %io_in_resp_bits_cmd) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<4>
      %67 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %68 = firrtl.and %c_control_logEnable, %67 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %68, "[%d] EmbeddedTLB: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %69 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %70 = firrtl.and %c_control_logEnable, %69 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %70, "satp:%x flush:%d cacheEmpty:%d instrPF:%d loadPF:%d storePF:%d \0A" {name = "printf_7"} (%satp__bore, %io_flush, %io_cacheEmpty, %io_ipf_11, %c0_ui1, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
    }
    firrtl.module private @CacheStage1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<32>, in %io_in_bits_user: !firrtl.uint<87>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_req_addr: !firrtl.uint<32>, out %io_out_bits_req_user: !firrtl.uint<87>, in %io_metaReadBus_req_ready: !firrtl.uint<1>, out %io_metaReadBus_req_valid: !firrtl.uint<1>, out %io_metaReadBus_req_bits_setIdx: !firrtl.uint<7>, in %io_dataReadBus_req_ready: !firrtl.uint<1>, out %io_dataReadBus_req_valid: !firrtl.uint<1>, out %io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>) {
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_metaReadBus_req_valid_2 = firrtl.wire {name = "io_metaReadBus_req_valid"} : !firrtl.uint<1>
      %io_metaReadBus_req_bits_setIdx_3 = firrtl.wire {name = "io_metaReadBus_req_bits_setIdx"} : !firrtl.uint<7>
      %io_dataReadBus_req_valid_4 = firrtl.wire {name = "io_dataReadBus_req_valid"} : !firrtl.uint<1>
      %io_dataReadBus_req_bits_setIdx_5 = firrtl.wire {name = "io_dataReadBus_req_bits_setIdx"} : !firrtl.uint<10>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_req_addr, %io_in_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_req_user, %io_in_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %io_metaReadBus_req_valid, %io_metaReadBus_req_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaReadBus_req_bits_setIdx, %io_metaReadBus_req_bits_setIdx_3 : !firrtl.uint<7>
      firrtl.strictconnect %io_dataReadBus_req_valid, %io_dataReadBus_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx, %io_dataReadBus_req_bits_setIdx_5 : !firrtl.uint<10>
      %0 = firrtl.and %io_in_ready_0, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.and %0, %1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %c1_ui1, %2, "Assertion failed\0A    at Cache.scala:135 if (ro) when (io.in.fire) { assert(!io.in.bits.isWrite()) }\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %3 = firrtl.and %0, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %4 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.and %3, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %5, "[%d] CacheStage1: " {name = "printf_1"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %6 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.and %3, %6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %7, "[L1$] cache stage1, addr in: %x, user: %x id: %x\0A" {name = "printf_2"} (%io_in_bits_addr, %io_in_bits_user, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<87>, !firrtl.uint<1>
      %readBusValid = firrtl.and %io_in_valid, %io_out_ready {name = "readBusValid"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<7>
      %9 = firrtl.bits %io_in_bits_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %8, %9 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaReadBus_req_bits_setIdx_3, %8 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaReadBus_req_valid_2, %readBusValid : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<7>
      %11 = firrtl.bits %io_in_bits_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %10, %11 : !firrtl.uint<7>
      %12 = firrtl.wire : !firrtl.uint<3>
      %13 = firrtl.bits %io_in_bits_addr 5 to 3 : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %12, %13 : !firrtl.uint<3>
      %14 = firrtl.cat %10, %12 : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx_5, %14 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_valid_4, %readBusValid : !firrtl.uint<1>
      %_io_out_valid_T = firrtl.and %io_in_valid, %io_metaReadBus_req_ready {name = "_io_out_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.and %_io_out_valid_T, %io_dataReadBus_req_ready {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_1 : !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %_io_in_ready_T_2, %io_metaReadBus_req_ready {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.and %_io_in_ready_T_3, %io_dataReadBus_req_ready {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_4 : !firrtl.uint<1>
      %15 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.and %c_control_logEnable, %15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %16, "[%d] CacheStage1: " {name = "printf_3"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %17 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.and %c_control_logEnable, %17 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %18, "in.ready = %d, in.valid = %d, out.valid = %d, out.ready = %d, addr = %x, cmd = %x, dataReadBus.req.valid = %d\0A" {name = "printf_4"} (%io_in_ready_0, %io_in_valid, %io_out_valid_1, %io_out_ready, %io_in_bits_addr, %c0_ui4, %io_dataReadBus_req_valid_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<1>
    }
    firrtl.module private @CacheStage2(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_req_addr: !firrtl.uint<32>, in %io_in_bits_req_size: !firrtl.uint<3>, in %io_in_bits_req_cmd: !firrtl.uint<4>, in %io_in_bits_req_wmask: !firrtl.uint<8>, in %io_in_bits_req_wdata: !firrtl.uint<64>, in %io_in_bits_req_user: !firrtl.uint<87>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_req_addr: !firrtl.uint<32>, out %io_out_bits_req_size: !firrtl.uint<3>, out %io_out_bits_req_cmd: !firrtl.uint<4>, out %io_out_bits_req_wmask: !firrtl.uint<8>, out %io_out_bits_req_wdata: !firrtl.uint<64>, out %io_out_bits_req_user: !firrtl.uint<87>, out %io_out_bits_metas_0_tag: !firrtl.uint<19>, out %io_out_bits_metas_0_valid: !firrtl.uint<1>, out %io_out_bits_metas_0_dirty: !firrtl.uint<1>, out %io_out_bits_metas_1_tag: !firrtl.uint<19>, out %io_out_bits_metas_1_valid: !firrtl.uint<1>, out %io_out_bits_metas_1_dirty: !firrtl.uint<1>, out %io_out_bits_metas_2_tag: !firrtl.uint<19>, out %io_out_bits_metas_2_valid: !firrtl.uint<1>, out %io_out_bits_metas_2_dirty: !firrtl.uint<1>, out %io_out_bits_metas_3_tag: !firrtl.uint<19>, out %io_out_bits_metas_3_valid: !firrtl.uint<1>, out %io_out_bits_metas_3_dirty: !firrtl.uint<1>, out %io_out_bits_datas_0_data: !firrtl.uint<64>, out %io_out_bits_datas_1_data: !firrtl.uint<64>, out %io_out_bits_datas_2_data: !firrtl.uint<64>, out %io_out_bits_datas_3_data: !firrtl.uint<64>, out %io_out_bits_hit: !firrtl.uint<1>, out %io_out_bits_waymask: !firrtl.uint<4>, out %io_out_bits_mmio: !firrtl.uint<1>, out %io_out_bits_isForwardData: !firrtl.uint<1>, out %io_out_bits_forwardData_data_data: !firrtl.uint<64>, out %io_out_bits_forwardData_waymask: !firrtl.uint<4>, in %io_metaReadResp_0_tag: !firrtl.uint<19>, in %io_metaReadResp_0_valid: !firrtl.uint<1>, in %io_metaReadResp_0_dirty: !firrtl.uint<1>, in %io_metaReadResp_1_tag: !firrtl.uint<19>, in %io_metaReadResp_1_valid: !firrtl.uint<1>, in %io_metaReadResp_1_dirty: !firrtl.uint<1>, in %io_metaReadResp_2_tag: !firrtl.uint<19>, in %io_metaReadResp_2_valid: !firrtl.uint<1>, in %io_metaReadResp_2_dirty: !firrtl.uint<1>, in %io_metaReadResp_3_tag: !firrtl.uint<19>, in %io_metaReadResp_3_valid: !firrtl.uint<1>, in %io_metaReadResp_3_dirty: !firrtl.uint<1>, in %io_dataReadResp_0_data: !firrtl.uint<64>, in %io_dataReadResp_1_data: !firrtl.uint<64>, in %io_dataReadResp_2_data: !firrtl.uint<64>, in %io_dataReadResp_3_data: !firrtl.uint<64>, in %io_metaWriteBus_req_valid: !firrtl.uint<1>, in %io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, in %io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, in %io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, in %io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in %io_dataWriteBus_req_valid: !firrtl.uint<1>, in %io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, in %io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, in %io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "forwardMetaReg_data_valid"}
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64>
      %c1073741824_ui31 = firrtl.constant 1073741824 : !firrtl.uint<31>
      %c805306368_ui30 = firrtl.constant 805306368 : !firrtl.uint<30>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c1311768467139281697_ui64 = firrtl.constant 1311768467139281697 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_bits_metas_0_tag_1 = firrtl.wire {name = "io_out_bits_metas_0_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_0_valid_2 = firrtl.wire {name = "io_out_bits_metas_0_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_0_dirty_3 = firrtl.wire {name = "io_out_bits_metas_0_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_1_tag_4 = firrtl.wire {name = "io_out_bits_metas_1_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_1_valid_5 = firrtl.wire {name = "io_out_bits_metas_1_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_1_dirty_6 = firrtl.wire {name = "io_out_bits_metas_1_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_2_tag_7 = firrtl.wire {name = "io_out_bits_metas_2_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_2_valid_8 = firrtl.wire {name = "io_out_bits_metas_2_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_2_dirty_9 = firrtl.wire {name = "io_out_bits_metas_2_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_3_tag_10 = firrtl.wire {name = "io_out_bits_metas_3_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_3_valid_11 = firrtl.wire {name = "io_out_bits_metas_3_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_3_dirty_12 = firrtl.wire {name = "io_out_bits_metas_3_dirty"} : !firrtl.uint<1>
      %io_out_bits_hit_13 = firrtl.wire {name = "io_out_bits_hit"} : !firrtl.uint<1>
      %io_out_bits_waymask_14 = firrtl.wire {name = "io_out_bits_waymask"} : !firrtl.uint<4>
      %io_out_bits_mmio_15 = firrtl.wire {name = "io_out_bits_mmio"} : !firrtl.uint<1>
      %io_out_bits_isForwardData_16 = firrtl.wire {name = "io_out_bits_isForwardData"} : !firrtl.uint<1>
      %io_out_bits_forwardData_data_data_17 = firrtl.wire {name = "io_out_bits_forwardData_data_data"} : !firrtl.uint<64>
      %io_out_bits_forwardData_waymask_18 = firrtl.wire {name = "io_out_bits_forwardData_waymask"} : !firrtl.uint<4>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_req_addr, %io_in_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_req_size, %io_in_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_req_cmd, %io_in_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_req_wmask, %io_in_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_req_wdata, %io_in_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_req_user, %io_in_bits_req_user : !firrtl.uint<87>
      firrtl.strictconnect %io_out_bits_metas_0_tag, %io_out_bits_metas_0_tag_1 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_0_valid, %io_out_bits_metas_0_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_0_dirty, %io_out_bits_metas_0_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_tag, %io_out_bits_metas_1_tag_4 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_1_valid, %io_out_bits_metas_1_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_dirty, %io_out_bits_metas_1_dirty_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_tag, %io_out_bits_metas_2_tag_7 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_2_valid, %io_out_bits_metas_2_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_dirty, %io_out_bits_metas_2_dirty_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_tag, %io_out_bits_metas_3_tag_10 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_3_valid, %io_out_bits_metas_3_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_dirty, %io_out_bits_metas_3_dirty_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_datas_0_data, %io_dataReadResp_0_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_1_data, %io_dataReadResp_1_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_2_data, %io_dataReadResp_2_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_3_data, %io_dataReadResp_3_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_hit, %io_out_bits_hit_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask, %io_out_bits_waymask_14 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_mmio, %io_out_bits_mmio_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_isForwardData, %io_out_bits_isForwardData_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_forwardData_data_data, %io_out_bits_forwardData_data_data_17 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_forwardData_waymask, %io_out_bits_forwardData_waymask_18 : !firrtl.uint<4>
      %addr_tag = firrtl.wire : !firrtl.uint<19>
      %_addr_T_3 = firrtl.bits %io_in_bits_req_addr 31 to 13 {name = "_addr_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<19>
      firrtl.strictconnect %addr_tag, %_addr_T_3 : !firrtl.uint<19>
      %_isForwardMeta_T = firrtl.and %io_in_valid, %io_metaWriteBus_req_valid {name = "_isForwardMeta_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isForwardMeta_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_isForwardMeta_T_3 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_isForwardMeta_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_isForwardMeta_WIRE_index, %_isForwardMeta_T_3 : !firrtl.uint<7>
      %_isForwardMeta_T_5 = firrtl.eq %io_metaWriteBus_req_bits_setIdx, %_isForwardMeta_WIRE_index {name = "_isForwardMeta_T_5"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %isForwardMeta = firrtl.and %_isForwardMeta_T, %_isForwardMeta_T_5 {name = "isForwardMeta"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardMetaReg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%isForwardMeta, %c1_ui1, %isForwardMetaReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.and %io_in_ready_0, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.or %1, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%2, %c0_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %isForwardMetaReg, %3 : !firrtl.uint<1>
      %forwardMetaReg_data_tag = firrtl.reg %clock {firrtl.random_init_start = 8 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %forwardMetaReg_data_dirty = firrtl.reg %clock {firrtl.random_init_start = 28 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %forwardMetaReg_waymask = firrtl.reg %clock {firrtl.random_init_start = 29 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %4 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_tag, %forwardMetaReg_data_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %forwardMetaReg_data_tag, %4 : !firrtl.uint<19>
      %5 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_dirty, %forwardMetaReg_data_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %forwardMetaReg_data_dirty, %5 : !firrtl.uint<1>
      %6 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_waymask, %forwardMetaReg_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %forwardMetaReg_waymask, %6 : !firrtl.uint<4>
      %metaWay_0_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_0_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_0_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_1_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_1_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_1_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_2_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_2_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_2_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_3_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_3_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_3_dirty = firrtl.wire : !firrtl.uint<1>
      %pickForwardMeta = firrtl.or %isForwardMetaReg, %isForwardMeta {name = "pickForwardMeta"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %forwardMeta_data_tag = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_tag, %forwardMetaReg_data_tag) {name = "forwardMeta_data_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %forwardMeta_data_dirty = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_dirty, %forwardMetaReg_data_dirty) {name = "forwardMeta_data_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %forwardMeta_waymask = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_waymask, %forwardMetaReg_waymask) {name = "forwardMeta_waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %forwardWaymask_0 = firrtl.bits %forwardMeta_waymask 0 to 0 {name = "forwardWaymask_0"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_1 = firrtl.bits %forwardMeta_waymask 1 to 1 {name = "forwardWaymask_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_2 = firrtl.bits %forwardMeta_waymask 2 to 2 {name = "forwardWaymask_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_3 = firrtl.bits %forwardMeta_waymask 3 to 3 {name = "forwardWaymask_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_metaWay_0_T = firrtl.and %pickForwardMeta, %forwardWaymask_0 {name = "_metaWay_0_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_0_T_1_tag = firrtl.mux(%_metaWay_0_T, %forwardMeta_data_tag, %io_metaReadResp_0_tag) {name = "_metaWay_0_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_0_T_1_valid = firrtl.mux(%_metaWay_0_T, %c1_ui1, %io_metaReadResp_0_valid) {name = "_metaWay_0_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_0_T_1_dirty = firrtl.mux(%_metaWay_0_T, %forwardMeta_data_dirty, %io_metaReadResp_0_dirty) {name = "_metaWay_0_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_0_tag, %_metaWay_0_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_0_valid, %_metaWay_0_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_0_dirty, %_metaWay_0_T_1_dirty : !firrtl.uint<1>
      %_metaWay_1_T = firrtl.and %pickForwardMeta, %forwardWaymask_1 {name = "_metaWay_1_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_1_T_1_tag = firrtl.mux(%_metaWay_1_T, %forwardMeta_data_tag, %io_metaReadResp_1_tag) {name = "_metaWay_1_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_1_T_1_valid = firrtl.mux(%_metaWay_1_T, %c1_ui1, %io_metaReadResp_1_valid) {name = "_metaWay_1_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_1_T_1_dirty = firrtl.mux(%_metaWay_1_T, %forwardMeta_data_dirty, %io_metaReadResp_1_dirty) {name = "_metaWay_1_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_1_tag, %_metaWay_1_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_1_valid, %_metaWay_1_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_1_dirty, %_metaWay_1_T_1_dirty : !firrtl.uint<1>
      %_metaWay_2_T = firrtl.and %pickForwardMeta, %forwardWaymask_2 {name = "_metaWay_2_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_2_T_1_tag = firrtl.mux(%_metaWay_2_T, %forwardMeta_data_tag, %io_metaReadResp_2_tag) {name = "_metaWay_2_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_2_T_1_valid = firrtl.mux(%_metaWay_2_T, %c1_ui1, %io_metaReadResp_2_valid) {name = "_metaWay_2_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_2_T_1_dirty = firrtl.mux(%_metaWay_2_T, %forwardMeta_data_dirty, %io_metaReadResp_2_dirty) {name = "_metaWay_2_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_2_tag, %_metaWay_2_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_2_valid, %_metaWay_2_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_2_dirty, %_metaWay_2_T_1_dirty : !firrtl.uint<1>
      %_metaWay_3_T = firrtl.and %pickForwardMeta, %forwardWaymask_3 {name = "_metaWay_3_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_3_T_1_tag = firrtl.mux(%_metaWay_3_T, %forwardMeta_data_tag, %io_metaReadResp_3_tag) {name = "_metaWay_3_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_3_T_1_valid = firrtl.mux(%_metaWay_3_T, %c1_ui1, %io_metaReadResp_3_valid) {name = "_metaWay_3_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_3_T_1_dirty = firrtl.mux(%_metaWay_3_T, %forwardMeta_data_dirty, %io_metaReadResp_3_dirty) {name = "_metaWay_3_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_3_tag, %_metaWay_3_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_3_valid, %_metaWay_3_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_3_dirty, %_metaWay_3_T_1_dirty : !firrtl.uint<1>
      %_hitVec_T = firrtl.eq %metaWay_0_tag, %addr_tag {name = "_hitVec_T"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_1 = firrtl.and %metaWay_0_valid, %_hitVec_T {name = "_hitVec_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_2 = firrtl.and %_hitVec_T_1, %io_in_valid {name = "_hitVec_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_3 = firrtl.eq %metaWay_1_tag, %addr_tag {name = "_hitVec_T_3"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_4 = firrtl.and %metaWay_1_valid, %_hitVec_T_3 {name = "_hitVec_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_5 = firrtl.and %_hitVec_T_4, %io_in_valid {name = "_hitVec_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_6 = firrtl.eq %metaWay_2_tag, %addr_tag {name = "_hitVec_T_6"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_7 = firrtl.and %metaWay_2_valid, %_hitVec_T_6 {name = "_hitVec_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_8 = firrtl.and %_hitVec_T_7, %io_in_valid {name = "_hitVec_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_9 = firrtl.eq %metaWay_3_tag, %addr_tag {name = "_hitVec_T_9"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_10 = firrtl.and %metaWay_3_valid, %_hitVec_T_9 {name = "_hitVec_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_11 = firrtl.and %_hitVec_T_10, %io_in_valid {name = "_hitVec_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_0 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_1 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_2 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_0, %_hitVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_1, %_hitVec_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_2, %_hitVec_T_8 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_3, %_hitVec_T_11 : !firrtl.uint<1>
      %hitVec_lo = firrtl.cat %_hitVec_WIRE_1, %_hitVec_WIRE_0 {name = "hitVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec_hi = firrtl.cat %_hitVec_WIRE_3, %_hitVec_WIRE_2 {name = "hitVec_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec = firrtl.cat %hitVec_hi, %hitVec_lo {name = "hitVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %victimWaymask_lfsr = firrtl.regreset %clock, %reset, %c1311768467139281697_ui64 {firrtl.random_init_start = 33 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_victimWaymask_xor_T = firrtl.bits %victimWaymask_lfsr 0 to 0 {name = "_victimWaymask_xor_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_1 = firrtl.bits %victimWaymask_lfsr 1 to 1 {name = "_victimWaymask_xor_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_2 = firrtl.xor %_victimWaymask_xor_T, %_victimWaymask_xor_T_1 {name = "_victimWaymask_xor_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_3 = firrtl.bits %victimWaymask_lfsr 3 to 3 {name = "_victimWaymask_xor_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_4 = firrtl.xor %_victimWaymask_xor_T_2, %_victimWaymask_xor_T_3 {name = "_victimWaymask_xor_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_5 = firrtl.bits %victimWaymask_lfsr 4 to 4 {name = "_victimWaymask_xor_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %victimWaymask_xor = firrtl.xor %_victimWaymask_xor_T_4, %_victimWaymask_xor_T_5 {name = "victimWaymask_xor"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.orr %victimWaymask_lfsr : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T = firrtl.not %7 {name = "_victimWaymask_lfsr_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T_1 = firrtl.bits %victimWaymask_lfsr 63 to 1 {name = "_victimWaymask_lfsr_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<63>
      %_victimWaymask_lfsr_T_2 = firrtl.cat %victimWaymask_xor, %_victimWaymask_lfsr_T_1 {name = "_victimWaymask_lfsr_T_2"} : (!firrtl.uint<1>, !firrtl.uint<63>) -> !firrtl.uint<64>
      %_victimWaymask_lfsr_T_3 = firrtl.mux(%_victimWaymask_lfsr_T, %c1_ui64, %_victimWaymask_lfsr_T_2) {name = "_victimWaymask_lfsr_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %victimWaymask_lfsr, %_victimWaymask_lfsr_T_3 : !firrtl.uint<64>
      %_victimWaymask_T = firrtl.bits %victimWaymask_lfsr 1 to 0 {name = "_victimWaymask_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %victimWaymask = firrtl.dshl %c1_ui1, %_victimWaymask_T {name = "victimWaymask"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_invalidVec_T = firrtl.not %metaWay_0_valid {name = "_invalidVec_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_1 = firrtl.not %metaWay_1_valid {name = "_invalidVec_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_2 = firrtl.not %metaWay_2_valid {name = "_invalidVec_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_3 = firrtl.not %metaWay_3_valid {name = "_invalidVec_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_WIRE_0 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_1 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_2 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_0, %_invalidVec_T : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_1, %_invalidVec_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_2, %_invalidVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_3, %_invalidVec_T_3 : !firrtl.uint<1>
      %invalidVec_lo = firrtl.cat %_invalidVec_WIRE_1, %_invalidVec_WIRE_0 {name = "invalidVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %invalidVec_hi = firrtl.cat %_invalidVec_WIRE_3, %_invalidVec_WIRE_2 {name = "invalidVec_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %invalidVec = firrtl.cat %invalidVec_hi, %invalidVec_lo {name = "invalidVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hasInvalidWay = firrtl.orr %invalidVec {name = "hasInvalidWay"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T = firrtl.geq %invalidVec, %c8_ui4 {name = "_refillInvalidWaymask_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_1 = firrtl.geq %invalidVec, %c4_ui3 {name = "_refillInvalidWaymask_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_2 = firrtl.geq %invalidVec, %c2_ui2 {name = "_refillInvalidWaymask_T_2"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_3 = firrtl.mux(%_refillInvalidWaymask_T_2, %c2_ui2, %c1_ui2) {name = "_refillInvalidWaymask_T_3"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %8 = firrtl.pad %_refillInvalidWaymask_T_3, 3 : (!firrtl.uint<2>) -> !firrtl.uint<3>
      %_refillInvalidWaymask_T_4 = firrtl.mux(%_refillInvalidWaymask_T_1, %c4_ui3, %8) {name = "_refillInvalidWaymask_T_4"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %9 = firrtl.pad %_refillInvalidWaymask_T_4, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %refillInvalidWaymask = firrtl.mux(%_refillInvalidWaymask_T, %c8_ui4, %9) {name = "refillInvalidWaymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_waymask_T = firrtl.mux(%hasInvalidWay, %refillInvalidWaymask, %victimWaymask) {name = "_waymask_T"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %waymask = firrtl.mux(%io_out_bits_hit_13, %hitVec, %_waymask_T) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %10 = firrtl.bits %waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %11 = firrtl.bits %waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %12 = firrtl.bits %waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %13 = firrtl.bits %waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %14 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %15 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %16 = firrtl.add %14, %15 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %17 = firrtl.gt %16, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %18 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.and %18, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %20, "[%d] CacheStage2: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %21 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %18, %21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %22, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_1"} (%metaWay_0_valid, %metaWay_0_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %23 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.and %23, %24 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %25, "[%d] CacheStage2: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %26 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.and %23, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %27, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_3"} (%metaWay_1_valid, %metaWay_1_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %28 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.and %28, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %30, "[%d] CacheStage2: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %31 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %28, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %32, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_5"} (%metaWay_2_valid, %metaWay_2_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %33 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.and %33, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %35, "[%d] CacheStage2: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %36 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.and %33, %36 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %37, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_7"} (%metaWay_3_valid, %metaWay_3_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %38 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.and %38, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %40, "[%d] CacheStage2: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %41 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.and %38, %41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %42, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_9"} (%io_metaReadResp_0_valid, %io_metaReadResp_0_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %43 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.and %43, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %45, "[%d] CacheStage2: " {name = "printf_10"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %46 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.and %43, %46 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %47, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_11"} (%io_metaReadResp_1_valid, %io_metaReadResp_1_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %48 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.and %48, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %50, "[%d] CacheStage2: " {name = "printf_12"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %51 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.and %48, %51 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %52, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_13"} (%io_metaReadResp_2_valid, %io_metaReadResp_2_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %53 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %55 = firrtl.and %53, %54 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %55, "[%d] CacheStage2: " {name = "printf_14"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %56 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.and %53, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %57, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_15"} (%io_metaReadResp_3_valid, %io_metaReadResp_3_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %58 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.and %58, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %60, "[%d] CacheStage2: " {name = "printf_16"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %61 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.and %58, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %62, "[ERROR] forwardMetaReg isForwardMetaReg %x %x metat %x wm %b\0A" {name = "printf_17"} (%isForwardMetaReg, %c1_ui1, %forwardMetaReg_data_tag, %forwardMetaReg_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<4>
      %63 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.and %63, %64 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %65, "[%d] CacheStage2: " {name = "printf_18"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %66 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.and %63, %66 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %67, "[ERROR] forwardMeta isForwardMeta %x %x metat %x wm %b\0A" {name = "printf_19"} (%isForwardMeta, %c1_ui1, %io_metaWriteBus_req_bits_data_tag, %io_metaWriteBus_req_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<4>
      %68 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %69 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %70 = firrtl.add %68, %69 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %71 = firrtl.gt %70, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_1_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_timer, %LogPerfHelper_1_timer : !firrtl.uint<64>
      %72 = firrtl.and %71, %c_control_1_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %73 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %74 = firrtl.and %72, %73 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %74, "[%d] CacheStage2: " {name = "printf_20"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %75 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.and %72, %75 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %76, "[ERROR] hit %b wmask %b hitvec %b\0A" {name = "printf_21"} (%io_out_bits_hit_13, %forwardMeta_waymask, %hitVec) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %77 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %78 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %79 = firrtl.add %77, %78 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %80 = firrtl.gt %79, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.and %io_in_valid, %80 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %82 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.not %81 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %83, %82, "Assertion failed\0A    at Cache.scala:208 assert(!(io.in.valid && PopCount(waymask) > 1.U))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      firrtl.strictconnect %io_out_bits_metas_0_tag_1, %metaWay_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_0_valid_2, %metaWay_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_0_dirty_3, %metaWay_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_tag_4, %metaWay_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_1_valid_5, %metaWay_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_dirty_6, %metaWay_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_tag_7, %metaWay_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_2_valid_8, %metaWay_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_dirty_9, %metaWay_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_tag_10, %metaWay_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_3_valid_11, %metaWay_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_dirty_12, %metaWay_3_dirty : !firrtl.uint<1>
      %_io_out_bits_hit_T = firrtl.orr %hitVec {name = "_io_out_bits_hit_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_hit_T_1 = firrtl.and %io_in_valid, %_io_out_bits_hit_T {name = "_io_out_bits_hit_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_hit_13, %_io_out_bits_hit_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask_14, %waymask : !firrtl.uint<4>
      %84 = firrtl.bits %io_in_bits_req_addr 31 to 30 : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %85 = firrtl.bits %io_in_bits_req_addr 29 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<30>
      %86 = firrtl.xor %85, %c805306368_ui30 : (!firrtl.uint<30>, !firrtl.uint<30>) -> !firrtl.uint<30>
      %_io_out_bits_mmio_T = firrtl.cat %84, %86 {name = "_io_out_bits_mmio_T"} : (!firrtl.uint<2>, !firrtl.uint<30>) -> !firrtl.uint<32>
      %_io_out_bits_mmio_T_1 = firrtl.bits %_io_out_bits_mmio_T 31 to 28 {name = "_io_out_bits_mmio_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %87 = firrtl.orr %_io_out_bits_mmio_T_1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_2 = firrtl.not %87 {name = "_io_out_bits_mmio_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.bits %io_in_bits_req_addr 31 to 31 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %89 = firrtl.bits %io_in_bits_req_addr 30 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<31>
      %90 = firrtl.xor %89, %c1073741824_ui31 : (!firrtl.uint<31>, !firrtl.uint<31>) -> !firrtl.uint<31>
      %_io_out_bits_mmio_T_3 = firrtl.cat %88, %90 {name = "_io_out_bits_mmio_T_3"} : (!firrtl.uint<1>, !firrtl.uint<31>) -> !firrtl.uint<32>
      %_io_out_bits_mmio_T_4 = firrtl.bits %_io_out_bits_mmio_T_3 31 to 30 {name = "_io_out_bits_mmio_T_4"} : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %91 = firrtl.orr %_io_out_bits_mmio_T_4 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_5 = firrtl.not %91 {name = "_io_out_bits_mmio_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_6 = firrtl.or %_io_out_bits_mmio_T_2, %_io_out_bits_mmio_T_5 {name = "_io_out_bits_mmio_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_mmio_15, %_io_out_bits_mmio_T_6 : !firrtl.uint<1>
      %_isForwardData_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_isForwardData_T_2 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_isForwardData_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_isForwardData_WIRE_index, %_isForwardData_T_2 : !firrtl.uint<7>
      %_isForwardData_WIRE_2_wordIndex = firrtl.wire : !firrtl.uint<3>
      %_isForwardData_T_5 = firrtl.bits %io_in_bits_req_addr 5 to 3 {name = "_isForwardData_T_5"} : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %_isForwardData_WIRE_2_wordIndex, %_isForwardData_T_5 : !firrtl.uint<3>
      %_isForwardData_T_8 = firrtl.cat %_isForwardData_WIRE_index, %_isForwardData_WIRE_2_wordIndex {name = "_isForwardData_T_8"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      %_isForwardData_T_9 = firrtl.eq %io_dataWriteBus_req_bits_setIdx, %_isForwardData_T_8 {name = "_isForwardData_T_9"} : (!firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isForwardData_T_10 = firrtl.and %io_dataWriteBus_req_valid, %_isForwardData_T_9 {name = "_isForwardData_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardData = firrtl.and %io_in_valid, %_isForwardData_T_10 {name = "isForwardData"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardDataReg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 97 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %92 = firrtl.mux(%isForwardData, %c1_ui1, %isForwardDataReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.or %1, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.mux(%93, %c0_ui1, %92) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %isForwardDataReg, %94 : !firrtl.uint<1>
      %forwardDataReg_data_data = firrtl.reg %clock {firrtl.random_init_start = 108 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %forwardDataReg_waymask = firrtl.reg %clock {firrtl.random_init_start = 172 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %95 = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_data_data, %forwardDataReg_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %forwardDataReg_data_data, %95 : !firrtl.uint<64>
      %96 = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_waymask, %forwardDataReg_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %forwardDataReg_waymask, %96 : !firrtl.uint<4>
      %_io_out_bits_isForwardData_T = firrtl.or %isForwardDataReg, %isForwardData {name = "_io_out_bits_isForwardData_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_isForwardData_16, %_io_out_bits_isForwardData_T : !firrtl.uint<1>
      %_io_out_bits_forwardData_T_data_data = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_data_data, %forwardDataReg_data_data) {name = "_io_out_bits_forwardData_T_data_data"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_forwardData_T_waymask = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_waymask, %forwardDataReg_waymask) {name = "_io_out_bits_forwardData_T_waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_forwardData_data_data_17, %_io_out_bits_forwardData_T_data_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_forwardData_waymask_18, %_io_out_bits_forwardData_T_waymask : !firrtl.uint<4>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_in_valid {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_2 : !firrtl.uint<1>
      %LogPerfHelper_2_timer, %LogPerfHelper_2_logEnable, %LogPerfHelper_2_clean, %LogPerfHelper_2_dump = firrtl.instance LogPerfHelper_2 sym @sym_1 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_2_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_2_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_logEnable, %LogPerfHelper_2_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_timer, %LogPerfHelper_2_timer : !firrtl.uint<64>
      %97 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.and %c_control_2_logEnable, %97 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %98, "[%d] CacheStage2: " {name = "printf_23"} (%c_control_2_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %99 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.and %c_control_2_logEnable, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %100, "[isFD:%d isFDreg:%d inFire:%d invalid:%d \0A" {name = "printf_24"} (%isForwardData, %isForwardDataReg, %1, %io_in_valid) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %101 = firrtl.wire : !firrtl.uint<7>
      %102 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %101, %102 : !firrtl.uint<7>
      %103 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.and %c_control_2_logEnable, %103 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %104, "[%d] CacheStage2: " {name = "printf_25"} (%c_control_2_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %105 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.and %c_control_2_logEnable, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %106, "[isFM:%d isFMreg:%d metawreq:%x widx:%x ridx:%x \0A" {name = "printf_26"} (%isForwardMeta, %isForwardMetaReg, %io_metaWriteBus_req_valid, %io_metaWriteBus_req_bits_setIdx, %101) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>
    }
    firrtl.module private @Arbiter2_SRAMBundleAW(in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<7>, in %io_in_0_bits_data_tag: !firrtl.uint<19>, in %io_in_0_bits_data_dirty: !firrtl.uint<1>, in %io_in_0_bits_waymask: !firrtl.uint<4>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_setIdx: !firrtl.uint<7>, in %io_in_1_bits_data_tag: !firrtl.uint<19>, in %io_in_1_bits_data_dirty: !firrtl.uint<1>, in %io_in_1_bits_waymask: !firrtl.uint<4>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<7>, out %io_out_bits_data_tag: !firrtl.uint<19>, out %io_out_bits_data_dirty: !firrtl.uint<1>, out %io_out_bits_waymask: !firrtl.uint<4>) {
      %io_out_valid_0 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_setIdx_1 = firrtl.wire {name = "io_out_bits_setIdx"} : !firrtl.uint<7>
      %io_out_bits_data_tag_2 = firrtl.wire {name = "io_out_bits_data_tag"} : !firrtl.uint<19>
      %io_out_bits_data_dirty_3 = firrtl.wire {name = "io_out_bits_data_dirty"} : !firrtl.uint<1>
      %io_out_bits_waymask_4 = firrtl.wire {name = "io_out_bits_waymask"} : !firrtl.uint<4>
      firrtl.strictconnect %io_out_valid, %io_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_out_bits_setIdx_1 : !firrtl.uint<7>
      firrtl.strictconnect %io_out_bits_data_tag, %io_out_bits_data_tag_2 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_data_dirty, %io_out_bits_data_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask, %io_out_bits_waymask_4 : !firrtl.uint<4>
      %0 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_setIdx, %io_in_1_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %io_out_bits_setIdx_1, %0 : !firrtl.uint<7>
      %1 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_data_tag, %io_in_1_bits_data_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_data_tag_2, %1 : !firrtl.uint<19>
      %2 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_data_dirty, %io_in_1_bits_data_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_data_dirty_3, %2 : !firrtl.uint<1>
      %3 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_waymask, %io_in_1_bits_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_waymask_4, %3 : !firrtl.uint<4>
      %_io_out_valid_T_1 = firrtl.or %io_in_0_valid, %io_in_1_valid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_0, %_io_out_valid_T_1 : !firrtl.uint<1>
    }
    firrtl.module private @Arbiter2_SRAMBundleAW_1(in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<10>, in %io_in_0_bits_data_data: !firrtl.uint<64>, in %io_in_0_bits_waymask: !firrtl.uint<4>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_setIdx: !firrtl.uint<10>, in %io_in_1_bits_data_data: !firrtl.uint<64>, in %io_in_1_bits_waymask: !firrtl.uint<4>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<10>, out %io_out_bits_data_data: !firrtl.uint<64>, out %io_out_bits_waymask: !firrtl.uint<4>) {
      %io_out_valid_0 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_setIdx_1 = firrtl.wire {name = "io_out_bits_setIdx"} : !firrtl.uint<10>
      %io_out_bits_data_data_2 = firrtl.wire {name = "io_out_bits_data_data"} : !firrtl.uint<64>
      %io_out_bits_waymask_3 = firrtl.wire {name = "io_out_bits_waymask"} : !firrtl.uint<4>
      firrtl.strictconnect %io_out_valid, %io_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_out_bits_setIdx_1 : !firrtl.uint<10>
      firrtl.strictconnect %io_out_bits_data_data, %io_out_bits_data_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_waymask, %io_out_bits_waymask_3 : !firrtl.uint<4>
      %0 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_setIdx, %io_in_1_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<10>
      firrtl.strictconnect %io_out_bits_setIdx_1, %0 : !firrtl.uint<10>
      %1 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_data_data, %io_in_1_bits_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_data_data_2, %1 : !firrtl.uint<64>
      %2 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_waymask, %io_in_1_bits_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_waymask_3, %2 : !firrtl.uint<4>
      %_io_out_valid_T_1 = firrtl.or %io_in_0_valid, %io_in_1_valid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_0, %_io_out_valid_T_1 : !firrtl.uint<1>
    }
    firrtl.module private @CacheStage3(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_req_addr: !firrtl.uint<32>, in %io_in_bits_req_size: !firrtl.uint<3>, in %io_in_bits_req_cmd: !firrtl.uint<4>, in %io_in_bits_req_wmask: !firrtl.uint<8>, in %io_in_bits_req_wdata: !firrtl.uint<64>, in %io_in_bits_req_user: !firrtl.uint<87>, in %io_in_bits_metas_0_tag: !firrtl.uint<19>, in %io_in_bits_metas_0_valid: !firrtl.uint<1>, in %io_in_bits_metas_0_dirty: !firrtl.uint<1>, in %io_in_bits_metas_1_tag: !firrtl.uint<19>, in %io_in_bits_metas_1_valid: !firrtl.uint<1>, in %io_in_bits_metas_1_dirty: !firrtl.uint<1>, in %io_in_bits_metas_2_tag: !firrtl.uint<19>, in %io_in_bits_metas_2_valid: !firrtl.uint<1>, in %io_in_bits_metas_2_dirty: !firrtl.uint<1>, in %io_in_bits_metas_3_tag: !firrtl.uint<19>, in %io_in_bits_metas_3_valid: !firrtl.uint<1>, in %io_in_bits_metas_3_dirty: !firrtl.uint<1>, in %io_in_bits_datas_0_data: !firrtl.uint<64>, in %io_in_bits_datas_1_data: !firrtl.uint<64>, in %io_in_bits_datas_2_data: !firrtl.uint<64>, in %io_in_bits_datas_3_data: !firrtl.uint<64>, in %io_in_bits_hit: !firrtl.uint<1>, in %io_in_bits_waymask: !firrtl.uint<4>, in %io_in_bits_mmio: !firrtl.uint<1>, in %io_in_bits_isForwardData: !firrtl.uint<1>, in %io_in_bits_forwardData_data_data: !firrtl.uint<64>, in %io_in_bits_forwardData_waymask: !firrtl.uint<4>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_rdata: !firrtl.uint<64>, out %io_out_bits_user: !firrtl.uint<87>, out %io_isFinish: !firrtl.uint<1>, in %io_flush: !firrtl.uint<1>, in %io_dataReadBus_req_ready: !firrtl.uint<1>, out %io_dataReadBus_req_valid: !firrtl.uint<1>, out %io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>, in %io_dataReadBus_resp_data_0_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_1_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_2_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_3_data: !firrtl.uint<64>, out %io_dataWriteBus_req_valid: !firrtl.uint<1>, out %io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, out %io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, out %io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>, out %io_metaWriteBus_req_valid: !firrtl.uint<1>, out %io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, out %io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, out %io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, out %io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in %io_mem_req_ready: !firrtl.uint<1>, out %io_mem_req_valid: !firrtl.uint<1>, out %io_mem_req_bits_addr: !firrtl.uint<32>, out %io_mem_req_bits_cmd: !firrtl.uint<4>, out %io_mem_req_bits_wdata: !firrtl.uint<64>, in %io_mem_resp_valid: !firrtl.uint<1>, in %io_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_mmio_req_ready: !firrtl.uint<1>, out %io_mmio_req_valid: !firrtl.uint<1>, out %io_mmio_req_bits_addr: !firrtl.uint<32>, out %io_mmio_req_bits_size: !firrtl.uint<3>, out %io_mmio_req_bits_cmd: !firrtl.uint<4>, out %io_mmio_req_bits_wmask: !firrtl.uint<8>, out %io_mmio_req_bits_wdata: !firrtl.uint<64>, in %io_mmio_resp_valid: !firrtl.uint<1>, in %io_mmio_resp_bits_rdata: !firrtl.uint<64>, out %io_dataReadRespToL1: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "metaHitWriteBus_x8_dirty"}
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3> {name = "_io_out_bits_cmd_WIRE"}
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c1_ui4 = firrtl.constant 1 : !firrtl.uint<4>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8> {name = "io_mem_req_bits_wmask"}
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3> {name = "io_mem_req_bits_size"}
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c0_ui19 = firrtl.constant 0 : !firrtl.uint<19>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c4_ui4 = firrtl.constant 4 : !firrtl.uint<4>
      %c7_ui4 = firrtl.constant 7 : !firrtl.uint<4>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c2_ui4 = firrtl.constant 2 : !firrtl.uint<4>
      %c5_ui4 = firrtl.constant 5 : !firrtl.uint<4>
      %c0_ui6 = firrtl.constant 0 : !firrtl.uint<6>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c3_ui4 = firrtl.constant 3 : !firrtl.uint<4>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_cmd_2 = firrtl.wire {name = "io_out_bits_cmd"} : !firrtl.uint<4>
      %io_out_bits_rdata_3 = firrtl.wire {name = "io_out_bits_rdata"} : !firrtl.uint<64>
      %io_isFinish_4 = firrtl.wire {name = "io_isFinish"} : !firrtl.uint<1>
      %io_dataReadBus_req_valid_5 = firrtl.wire {name = "io_dataReadBus_req_valid"} : !firrtl.uint<1>
      %io_dataReadBus_req_bits_setIdx_6 = firrtl.wire {name = "io_dataReadBus_req_bits_setIdx"} : !firrtl.uint<10>
      %io_dataWriteBus_req_valid_7 = firrtl.wire {name = "io_dataWriteBus_req_valid"} : !firrtl.uint<1>
      %io_dataWriteBus_req_bits_setIdx_8 = firrtl.wire {name = "io_dataWriteBus_req_bits_setIdx"} : !firrtl.uint<10>
      %io_dataWriteBus_req_bits_data_data_9 = firrtl.wire {name = "io_dataWriteBus_req_bits_data_data"} : !firrtl.uint<64>
      %io_dataWriteBus_req_bits_waymask_10 = firrtl.wire {name = "io_dataWriteBus_req_bits_waymask"} : !firrtl.uint<4>
      %io_metaWriteBus_req_valid_11 = firrtl.wire {name = "io_metaWriteBus_req_valid"} : !firrtl.uint<1>
      %io_metaWriteBus_req_bits_setIdx_12 = firrtl.wire {name = "io_metaWriteBus_req_bits_setIdx"} : !firrtl.uint<7>
      %io_metaWriteBus_req_bits_data_tag_13 = firrtl.wire {name = "io_metaWriteBus_req_bits_data_tag"} : !firrtl.uint<19>
      %io_metaWriteBus_req_bits_data_dirty_14 = firrtl.wire {name = "io_metaWriteBus_req_bits_data_dirty"} : !firrtl.uint<1>
      %io_metaWriteBus_req_bits_waymask_15 = firrtl.wire {name = "io_metaWriteBus_req_bits_waymask"} : !firrtl.uint<4>
      %io_mem_req_valid_16 = firrtl.wire {name = "io_mem_req_valid"} : !firrtl.uint<1>
      %io_mem_req_bits_addr_17 = firrtl.wire {name = "io_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_mem_req_bits_cmd_18 = firrtl.wire {name = "io_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_mem_req_bits_wdata_19 = firrtl.wire {name = "io_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_mmio_req_valid_20 = firrtl.wire {name = "io_mmio_req_valid"} : !firrtl.uint<1>
      %io_cohResp_valid = firrtl.wire : !firrtl.uint<1>
      %io_dataReadRespToL1_21 = firrtl.wire {name = "io_dataReadRespToL1"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cmd, %io_out_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_rdata, %io_out_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_user, %io_in_bits_req_user : !firrtl.uint<87>
      firrtl.strictconnect %io_isFinish, %io_isFinish_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_valid, %io_dataReadBus_req_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx, %io_dataReadBus_req_bits_setIdx_6 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataWriteBus_req_valid, %io_dataWriteBus_req_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataWriteBus_req_bits_setIdx, %io_dataWriteBus_req_bits_setIdx_8 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataWriteBus_req_bits_data_data, %io_dataWriteBus_req_bits_data_data_9 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_waymask, %io_dataWriteBus_req_bits_waymask_10 : !firrtl.uint<4>
      firrtl.strictconnect %io_metaWriteBus_req_valid, %io_metaWriteBus_req_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_setIdx, %io_metaWriteBus_req_bits_setIdx_12 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_tag, %io_metaWriteBus_req_bits_data_tag_13 : !firrtl.uint<19>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_dirty, %io_metaWriteBus_req_bits_data_dirty_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_waymask, %io_metaWriteBus_req_bits_waymask_15 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_valid, %io_mem_req_valid_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr, %io_mem_req_bits_addr_17 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd, %io_mem_req_bits_cmd_18 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata, %io_mem_req_bits_wdata_19 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid, %io_mmio_req_valid_20 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr, %io_in_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size, %io_in_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd, %io_in_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask, %io_in_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata, %io_in_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_dataReadRespToL1, %io_dataReadRespToL1_21 : !firrtl.uint<1>
      %metaWriteArb_io_in_0_valid, %metaWriteArb_io_in_0_bits_setIdx, %metaWriteArb_io_in_0_bits_data_tag, %metaWriteArb_io_in_0_bits_data_dirty, %metaWriteArb_io_in_0_bits_waymask, %metaWriteArb_io_in_1_valid, %metaWriteArb_io_in_1_bits_setIdx, %metaWriteArb_io_in_1_bits_data_tag, %metaWriteArb_io_in_1_bits_data_dirty, %metaWriteArb_io_in_1_bits_waymask, %metaWriteArb_io_out_valid, %metaWriteArb_io_out_bits_setIdx, %metaWriteArb_io_out_bits_data_tag, %metaWriteArb_io_out_bits_data_dirty, %metaWriteArb_io_out_bits_waymask = firrtl.instance metaWriteArb @Arbiter2_SRAMBundleAW(in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<7>, in io_in_0_bits_data_tag: !firrtl.uint<19>, in io_in_0_bits_data_dirty: !firrtl.uint<1>, in io_in_0_bits_waymask: !firrtl.uint<4>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<7>, in io_in_1_bits_data_tag: !firrtl.uint<19>, in io_in_1_bits_data_dirty: !firrtl.uint<1>, in io_in_1_bits_waymask: !firrtl.uint<4>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<7>, out io_out_bits_data_tag: !firrtl.uint<19>, out io_out_bits_data_dirty: !firrtl.uint<1>, out io_out_bits_waymask: !firrtl.uint<4>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<7>
      %2 = firrtl.wire : !firrtl.uint<19>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<7>
      %5 = firrtl.wire : !firrtl.uint<19>
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<7>
      %8 = firrtl.wire : !firrtl.uint<19>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %metaWriteArb_io_in_0_valid, %0 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_setIdx, %1 : !firrtl.uint<7>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_data_tag, %2 : !firrtl.uint<19>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_data_dirty, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %metaWriteArb_io_in_1_valid, %3 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_setIdx, %4 : !firrtl.uint<7>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_data_tag, %5 : !firrtl.uint<19>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_data_dirty, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %6, %metaWriteArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %7, %metaWriteArb_io_out_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %8, %metaWriteArb_io_out_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %9, %metaWriteArb_io_out_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %10, %metaWriteArb_io_out_bits_waymask : !firrtl.uint<4>
      %dataWriteArb_io_in_0_valid, %dataWriteArb_io_in_0_bits_setIdx, %dataWriteArb_io_in_0_bits_data_data, %dataWriteArb_io_in_0_bits_waymask, %dataWriteArb_io_in_1_valid, %dataWriteArb_io_in_1_bits_setIdx, %dataWriteArb_io_in_1_bits_data_data, %dataWriteArb_io_in_1_bits_waymask, %dataWriteArb_io_out_valid, %dataWriteArb_io_out_bits_setIdx, %dataWriteArb_io_out_bits_data_data, %dataWriteArb_io_out_bits_waymask = firrtl.instance dataWriteArb @Arbiter2_SRAMBundleAW_1(in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<10>, in io_in_0_bits_data_data: !firrtl.uint<64>, in io_in_0_bits_waymask: !firrtl.uint<4>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<10>, in io_in_1_bits_data_data: !firrtl.uint<64>, in io_in_1_bits_waymask: !firrtl.uint<4>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<10>, out io_out_bits_data_data: !firrtl.uint<64>, out io_out_bits_waymask: !firrtl.uint<4>)
      %11 = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<10>
      %13 = firrtl.wire : !firrtl.uint<64>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<10>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<10>
      %18 = firrtl.wire : !firrtl.uint<64>
      %19 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %dataWriteArb_io_in_0_valid, %11 : !firrtl.uint<1>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_setIdx, %12 : !firrtl.uint<10>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_data_data, %13 : !firrtl.uint<64>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %dataWriteArb_io_in_1_valid, %14 : !firrtl.uint<1>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_setIdx, %15 : !firrtl.uint<10>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_data_data, %io_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %16, %dataWriteArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %17, %dataWriteArb_io_out_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %18, %dataWriteArb_io_out_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %19, %dataWriteArb_io_out_bits_waymask : !firrtl.uint<4>
      %addr_tag = firrtl.wire : !firrtl.uint<19>
      %addr_index = firrtl.wire : !firrtl.uint<7>
      %addr_wordIndex = firrtl.wire : !firrtl.uint<3>
      %_addr_T_1 = firrtl.bits %io_in_bits_req_addr 5 to 3 {name = "_addr_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %addr_wordIndex, %_addr_T_1 : !firrtl.uint<3>
      %_addr_T_2 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_addr_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %addr_index, %_addr_T_2 : !firrtl.uint<7>
      %_addr_T_3 = firrtl.bits %io_in_bits_req_addr 31 to 13 {name = "_addr_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<19>
      firrtl.strictconnect %addr_tag, %_addr_T_3 : !firrtl.uint<19>
      %mmio = firrtl.and %io_in_valid, %io_in_bits_mmio {name = "mmio"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hit = firrtl.and %io_in_valid, %io_in_bits_hit {name = "hit"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_miss_T = firrtl.not %io_in_bits_hit {name = "_miss_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %miss = firrtl.and %io_in_valid, %_miss_T {name = "miss"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_11 = firrtl.eq %io_in_bits_req_cmd, %c2_ui2 {name = "_io_out_valid_T_11"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %hitReadBurst = firrtl.and %hit, %_io_out_valid_T_11 {name = "hitReadBurst"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWay_T = firrtl.bits %io_in_bits_waymask 0 to 0 {name = "_dataHitWay_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_1 = firrtl.bits %io_in_bits_waymask 1 to 1 {name = "_dataHitWay_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_2 = firrtl.bits %io_in_bits_waymask 2 to 2 {name = "_dataHitWay_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_3 = firrtl.bits %io_in_bits_waymask 3 to 3 {name = "_dataHitWay_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %meta_tag = firrtl.wire : !firrtl.uint<19>
      %meta_dirty = firrtl.wire : !firrtl.uint<1>
      %_meta_T_4 = firrtl.mux(%_dataHitWay_T, %io_in_bits_metas_0_dirty, %c0_ui1) {name = "_meta_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_5 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_metas_1_dirty, %c0_ui1) {name = "_meta_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_6 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_metas_2_dirty, %c0_ui1) {name = "_meta_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_7 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_metas_3_dirty, %c0_ui1) {name = "_meta_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_8 = firrtl.or %_meta_T_4, %_meta_T_5 {name = "_meta_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_9 = firrtl.or %_meta_T_8, %_meta_T_6 {name = "_meta_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_10 = firrtl.or %_meta_T_9, %_meta_T_7 {name = "_meta_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_meta_WIRE, %_meta_T_10 : !firrtl.uint<1>
      firrtl.strictconnect %meta_dirty, %_meta_WIRE : !firrtl.uint<1>
      %_meta_T_18 = firrtl.mux(%_dataHitWay_T, %io_in_bits_metas_0_tag, %c0_ui19) {name = "_meta_T_18"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_19 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_metas_1_tag, %c0_ui19) {name = "_meta_T_19"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_20 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_metas_2_tag, %c0_ui19) {name = "_meta_T_20"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_21 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_metas_3_tag, %c0_ui19) {name = "_meta_T_21"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_22 = firrtl.or %_meta_T_18, %_meta_T_19 {name = "_meta_T_22"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_23 = firrtl.or %_meta_T_22, %_meta_T_20 {name = "_meta_T_23"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_24 = firrtl.or %_meta_T_23, %_meta_T_21 {name = "_meta_T_24"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_WIRE_2 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %_meta_WIRE_2, %_meta_T_24 : !firrtl.uint<19>
      firrtl.strictconnect %meta_tag, %_meta_WIRE_2 : !firrtl.uint<19>
      %20 = firrtl.and %mmio, %hit : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.not %20 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %22, %21, "Assertion failed: MMIO request should not hit in cache\0A    at Cache.scala:265 assert(!(mmio && hit), \22MMIO request should not hit in cache\22)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %_useForwardData_T = firrtl.eq %io_in_bits_waymask, %io_in_bits_forwardData_waymask {name = "_useForwardData_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %useForwardData = firrtl.and %io_in_bits_isForwardData, %_useForwardData_T {name = "useForwardData"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataReadArray_WIRE_data = firrtl.wire : !firrtl.uint<64>
      %_dataReadArray_T_4 = firrtl.mux(%_dataHitWay_T, %io_in_bits_datas_0_data, %c0_ui64) {name = "_dataReadArray_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_5 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_datas_1_data, %c0_ui64) {name = "_dataReadArray_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_6 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_datas_2_data, %c0_ui64) {name = "_dataReadArray_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_7 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_datas_3_data, %c0_ui64) {name = "_dataReadArray_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_8 = firrtl.or %_dataReadArray_T_4, %_dataReadArray_T_5 {name = "_dataReadArray_T_8"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_9 = firrtl.or %_dataReadArray_T_8, %_dataReadArray_T_6 {name = "_dataReadArray_T_9"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_10 = firrtl.or %_dataReadArray_T_9, %_dataReadArray_T_7 {name = "_dataReadArray_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_dataReadArray_WIRE_1, %_dataReadArray_T_10 : !firrtl.uint<64>
      firrtl.strictconnect %_dataReadArray_WIRE_data, %_dataReadArray_WIRE_1 : !firrtl.uint<64>
      %dataRead = firrtl.mux(%useForwardData, %io_in_bits_forwardData_data_data, %_dataReadArray_WIRE_data) {name = "dataRead"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_isFinish_T_6 = firrtl.bits %io_in_bits_req_cmd 0 to 0 {name = "_io_isFinish_T_6"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %writeL2BeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %_io_isFinish_T_10 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_isFinish_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T = firrtl.eq %io_in_bits_req_cmd, %c3_ui2 {name = "_dataHitWriteBus_x3_T"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T_1 = firrtl.eq %io_in_bits_req_cmd, %c7_ui3 {name = "_dataHitWriteBus_x3_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %23 = firrtl.or %_dataHitWriteBus_x3_T, %_dataHitWriteBus_x3_T_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.and %_io_isFinish_T_10, %23 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T = firrtl.add %writeL2BeatCnt_value, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_1 = firrtl.bits %_value_T 2 to 0 {name = "_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %25 = firrtl.mux(%24, %_value_T_1, %writeL2BeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %hitWrite = firrtl.and %hit, %_io_isFinish_T_6 {name = "hitWrite"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %dataHitWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %dataHitWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<10>
      %dataHitWriteBus_req_bits_data_data = firrtl.wire : !firrtl.uint<64>
      %dataHitWriteBus_x1_data = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %dataHitWriteBus_x1_data, %dataRead : !firrtl.uint<64>
      %_dataHitWriteBus_x3_T_2 = firrtl.or %_dataHitWriteBus_x3_T, %_dataHitWriteBus_x3_T_1 {name = "_dataHitWriteBus_x3_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T_3 = firrtl.mux(%_dataHitWriteBus_x3_T_2, %writeL2BeatCnt_value, %addr_wordIndex) {name = "_dataHitWriteBus_x3_T_3"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %dataHitWriteBus_x3 = firrtl.cat %addr_index, %_dataHitWriteBus_x3_T_3 {name = "dataHitWriteBus_x3"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      firrtl.strictconnect %dataHitWriteBus_req_bits_setIdx, %dataHitWriteBus_x3 : !firrtl.uint<10>
      firrtl.strictconnect %dataHitWriteBus_req_bits_data_data, %dataHitWriteBus_x1_data : !firrtl.uint<64>
      firrtl.strictconnect %dataHitWriteBus_req_valid, %hitWrite : !firrtl.uint<1>
      %metaHitWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %metaHitWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<7>
      %metaHitWriteBus_req_bits_data_tag = firrtl.wire : !firrtl.uint<19>
      %_metaHitWriteBus_x5_T = firrtl.not %meta_dirty {name = "_metaHitWriteBus_x5_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %metaHitWriteBus_x5 = firrtl.and %hitWrite, %_metaHitWriteBus_x5_T {name = "metaHitWriteBus_x5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaHitWriteBus_x6_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_metaHitWriteBus_x6_T_2 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_metaHitWriteBus_x6_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_metaHitWriteBus_x6_WIRE_index, %_metaHitWriteBus_x6_T_2 : !firrtl.uint<7>
      %metaHitWriteBus_x8_tag = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %metaHitWriteBus_x8_tag, %meta_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaHitWriteBus_req_bits_setIdx, %_metaHitWriteBus_x6_WIRE_index : !firrtl.uint<7>
      firrtl.strictconnect %metaHitWriteBus_req_bits_data_tag, %metaHitWriteBus_x8_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaHitWriteBus_req_valid, %metaHitWriteBus_x5 : !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %needFlush = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 7 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %26 = firrtl.orr %state : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %27 = firrtl.and %io_flush, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.mux(%27, %c1_ui1, %needFlush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.and %_io_isFinish_T_10, %needFlush : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.mux(%29, %c0_ui1, %28) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %needFlush, %30 : !firrtl.uint<1>
      %readBeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 8 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %writeBeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 11 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %state2 = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 14 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %_io_mem_req_valid_T_1 = firrtl.eq %state, %c3_ui4 {name = "_io_mem_req_valid_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_2 = firrtl.eq %state, %c8_ui4 {name = "_io_dataReadRespToL1_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %31 = firrtl.or %_io_mem_req_valid_T_1, %_io_dataReadRespToL1_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.orr %state2 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %33 = firrtl.not %32 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.and %31, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.mux(%_io_dataReadRespToL1_T_2, %readBeatCnt_value, %writeBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %36 = firrtl.cat %addr_index, %35 : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx_6, %36 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_valid_5, %34 : !firrtl.uint<1>
      %_dataWay_T = firrtl.eq %state2, %c1_ui2 {name = "_dataWay_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %dataWay_0_data = firrtl.reg %clock {firrtl.random_init_start = 16 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_1_data = firrtl.reg %clock {firrtl.random_init_start = 80 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_2_data = firrtl.reg %clock {firrtl.random_init_start = 144 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_3_data = firrtl.reg %clock {firrtl.random_init_start = 208 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %37 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_0_data, %dataWay_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_0_data, %37 : !firrtl.uint<64>
      %38 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_1_data, %dataWay_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_1_data, %38 : !firrtl.uint<64>
      %39 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_2_data, %dataWay_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_2_data, %39 : !firrtl.uint<64>
      %40 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_3_data, %dataWay_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_3_data, %40 : !firrtl.uint<64>
      %_dataHitWay_WIRE_data = firrtl.wire : !firrtl.uint<64>
      %_dataHitWay_T_4 = firrtl.mux(%_dataHitWay_T, %dataWay_0_data, %c0_ui64) {name = "_dataHitWay_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_5 = firrtl.mux(%_dataHitWay_T_1, %dataWay_1_data, %c0_ui64) {name = "_dataHitWay_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_6 = firrtl.mux(%_dataHitWay_T_2, %dataWay_2_data, %c0_ui64) {name = "_dataHitWay_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_7 = firrtl.mux(%_dataHitWay_T_3, %dataWay_3_data, %c0_ui64) {name = "_dataHitWay_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_8 = firrtl.or %_dataHitWay_T_4, %_dataHitWay_T_5 {name = "_dataHitWay_T_8"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_9 = firrtl.or %_dataHitWay_T_8, %_dataHitWay_T_6 {name = "_dataHitWay_T_9"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_10 = firrtl.or %_dataHitWay_T_9, %_dataHitWay_T_7 {name = "_dataHitWay_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_dataHitWay_WIRE_1, %_dataHitWay_T_10 : !firrtl.uint<64>
      firrtl.strictconnect %_dataHitWay_WIRE_data, %_dataHitWay_WIRE_1 : !firrtl.uint<64>
      %41 = firrtl.orr %state2 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %42 = firrtl.not %41 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.and %io_dataReadBus_req_ready, %io_dataReadBus_req_valid_5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.mux(%43, %c1_ui2, %state2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %45 = firrtl.eq %state2, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %46 = firrtl.eq %state2, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %47 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.or %47, %io_cohResp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.and %hitReadBurst, %io_out_ready : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.or %48, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.and %46, %50 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.mux(%51, %c0_ui2, %state2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %53 = firrtl.mux(%45, %c2_ui2, %52) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %54 = firrtl.mux(%42, %44, %53) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state2, %54 : !firrtl.uint<2>
      %_raddr_T = firrtl.bits %io_in_bits_req_addr 31 to 3 {name = "_raddr_T"} : (!firrtl.uint<32>) -> !firrtl.uint<29>
      %raddr = firrtl.cat %_raddr_T, %c0_ui3 {name = "raddr"} : (!firrtl.uint<29>, !firrtl.uint<3>) -> !firrtl.uint<32>
      %waddr_hi = firrtl.cat %meta_tag, %addr_index {name = "waddr_hi"} : (!firrtl.uint<19>, !firrtl.uint<7>) -> !firrtl.uint<26>
      %waddr = firrtl.cat %waddr_hi, %c0_ui6 {name = "waddr"} : (!firrtl.uint<26>, !firrtl.uint<6>) -> !firrtl.uint<32>
      %_io_mem_req_valid_T = firrtl.eq %state, %c1_ui4 {name = "_io_mem_req_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %wrap_3 = firrtl.andr %writeBeatCnt_value {name = "wrap_3"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_cmd_T_2 = firrtl.mux(%wrap_3, %c7_ui3, %c3_ui3) {name = "_cmd_T_2"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %cmd = firrtl.mux(%_io_mem_req_valid_T, %c2_ui3, %_cmd_T_2) {name = "cmd"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %55 = firrtl.mux(%_io_mem_req_valid_T, %raddr, %waddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_addr_17, %55 : !firrtl.uint<32>
      %56 = firrtl.pad %cmd, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_cmd_18, %56 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata_19, %_dataHitWay_WIRE_data : !firrtl.uint<64>
      %_io_dataReadRespToL1_T_3 = firrtl.eq %state2, %c2_ui2 {name = "_io_dataReadRespToL1_T_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_3 = firrtl.and %_io_mem_req_valid_T_1, %_io_dataReadRespToL1_T_3 {name = "_io_mem_req_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_4 = firrtl.or %_io_mem_req_valid_T, %_io_mem_req_valid_T_3 {name = "_io_mem_req_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_valid_16, %_io_mem_req_valid_T_4 : !firrtl.uint<1>
      %_io_mmio_req_valid_T = firrtl.eq %state, %c5_ui4 {name = "_io_mmio_req_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_valid_20, %_io_mmio_req_valid_T : !firrtl.uint<1>
      %afterFirstRead = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 272 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %alreadyOutFire = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 273 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %57 = firrtl.mux(%_io_isFinish_T_10, %c1_ui1, %alreadyOutFire) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_readingFirst_T = firrtl.not %afterFirstRead {name = "_readingFirst_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_readingFirst_T_2 = firrtl.and %_readingFirst_T, %io_mem_resp_valid {name = "_readingFirst_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_8 = firrtl.eq %state, %c2_ui4 {name = "_io_out_valid_T_8"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %readingFirst = firrtl.and %_readingFirst_T_2, %_io_out_valid_T_8 {name = "readingFirst"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_inRdataRegDemand_T = firrtl.mux(%mmio, %io_mmio_resp_bits_rdata, %io_mem_resp_bits_rdata) {name = "_inRdataRegDemand_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_inRdataRegDemand_T_1 = firrtl.eq %state, %c6_ui4 {name = "_inRdataRegDemand_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_inRdataRegDemand_T_2 = firrtl.mux(%mmio, %_inRdataRegDemand_T_1, %readingFirst) {name = "_inRdataRegDemand_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %inRdataRegDemand = firrtl.reg %clock {firrtl.random_init_start = 274 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %58 = firrtl.mux(%_inRdataRegDemand_T_2, %_inRdataRegDemand_T, %inRdataRegDemand) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %inRdataRegDemand, %58 : !firrtl.uint<64>
      %59 = firrtl.orr %state : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T = firrtl.not %59 {name = "_io_dataReadRespToL1_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_cohResp_valid_T_5 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_io_cohResp_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_cohResp_valid, %_io_cohResp_valid_T_5 : !firrtl.uint<1>
      %_respToL1Fire_T = firrtl.and %hitReadBurst, %io_out_ready {name = "_respToL1Fire_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %respToL1Fire = firrtl.and %_respToL1Fire_T, %_io_dataReadRespToL1_T_3 {name = "respToL1Fire"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_3 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_respToL1Last_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_4 = firrtl.or %_io_dataReadRespToL1_T, %_respToL1Last_T_3 {name = "_respToL1Last_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_5 = firrtl.and %_respToL1Last_T_4, %hitReadBurst {name = "_respToL1Last_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_6 = firrtl.and %_respToL1Last_T_5, %io_out_ready {name = "_respToL1Last_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %respToL1Last_c_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 341 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %respToL1Last = firrtl.wire : !firrtl.uint<1>
      %respToL1Last_wrap_wrap = firrtl.andr %respToL1Last_c_value {name = "respToL1Last_wrap_wrap"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_respToL1Last_wrap_value_T = firrtl.add %respToL1Last_c_value, %c1_ui1 {name = "_respToL1Last_wrap_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_respToL1Last_wrap_value_T_1 = firrtl.bits %_respToL1Last_wrap_value_T 2 to 0 {name = "_respToL1Last_wrap_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %60 = firrtl.mux(%_respToL1Last_T_6, %_respToL1Last_wrap_value_T_1, %respToL1Last_c_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %respToL1Last_c_value, %60 : !firrtl.uint<3>
      %61 = firrtl.mux(%_respToL1Last_T_6, %respToL1Last_wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %respToL1Last, %61 : !firrtl.uint<1>
      %62 = firrtl.orr %state : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %63 = firrtl.not %62 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.mux(%63, %c0_ui1, %57) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %alreadyOutFire, %64 : !firrtl.uint<1>
      %_value_T_2 = firrtl.andr %addr_wordIndex {name = "_value_T_2"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_value_T_3 = firrtl.add %addr_wordIndex, %c1_ui1 {name = "_value_T_3"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_4 = firrtl.bits %_value_T_3 2 to 0 {name = "_value_T_4"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %_value_T_5 = firrtl.mux(%_value_T_2, %c0_ui3, %_value_T_4) {name = "_value_T_5"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %65 = firrtl.mux(%_respToL1Fire_T, %_value_T_5, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %66 = firrtl.or %miss, %mmio : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.not %io_flush : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %68 = firrtl.and %66, %67 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_state_T_4 = firrtl.mux(%mmio, %c5_ui4, %c1_ui4) {name = "_state_T_4"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %69 = firrtl.mux(%68, %_state_T_4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %70 = firrtl.mux(%_respToL1Fire_T, %c8_ui4, %69) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %71 = firrtl.eq %state, %c5_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %72 = firrtl.and %io_mmio_req_ready, %io_mmio_req_valid_20 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %73 = firrtl.mux(%72, %c6_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %74 = firrtl.eq %state, %c6_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %75 = firrtl.mux(%io_mmio_resp_valid, %c7_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %76 = firrtl.eq %state, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %77 = firrtl.or %io_cohResp_valid, %respToL1Fire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_6 = firrtl.add %readBeatCnt_value, %c1_ui1 {name = "_value_T_6"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_7 = firrtl.bits %_value_T_6 2 to 0 {name = "_value_T_7"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %78 = firrtl.mux(%77, %_value_T_7, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %79 = firrtl.and %respToL1Fire, %respToL1Last : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.mux(%79, %c0_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %81 = firrtl.eq %state, %c1_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %82 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.mux(%82, %c2_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %84 = firrtl.mux(%82, %addr_wordIndex, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %85 = firrtl.eq %state, %c2_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %86 = firrtl.and %85, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %87 = firrtl.mux(%86, %c1_ui1, %afterFirstRead) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.or %76, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.or %74, %88 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %90 = firrtl.or %71, %89 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.mux(%90, %afterFirstRead, %87) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.mux(%63, %c0_ui1, %91) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %afterFirstRead, %92 : !firrtl.uint<1>
      %_value_T_8 = firrtl.add %readBeatCnt_value, %c1_ui1 {name = "_value_T_8"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_9 = firrtl.bits %_value_T_8 2 to 0 {name = "_value_T_9"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %93 = firrtl.and %85, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.mux(%93, %_value_T_9, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %95 = firrtl.mux(%81, %84, %94) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %96 = firrtl.mux(%76, %78, %95) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %97 = firrtl.or %71, %74 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.mux(%97, %readBeatCnt_value, %96) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %99 = firrtl.mux(%63, %65, %98) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %readBeatCnt_value, %99 : !firrtl.uint<3>
      %100 = firrtl.and %io_mem_resp_valid, %_dataHitWriteBus_x3_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %101 = firrtl.and %85, %100 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %102 = firrtl.mux(%101, %c0_ui3, %25) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %103 = firrtl.or %76, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.or %74, %103 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %105 = firrtl.or %71, %104 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.or %63, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.mux(%106, %25, %102) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %writeL2BeatCnt_value, %107 : !firrtl.uint<3>
      %108 = firrtl.eq %io_mem_resp_bits_cmd, %c6_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %109 = firrtl.and %io_mem_resp_valid, %108 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.mux(%109, %c7_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %111 = firrtl.eq %state, %c3_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %112 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_10 = firrtl.add %writeBeatCnt_value, %c1_ui1 {name = "_value_T_10"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_11 = firrtl.bits %_value_T_10 2 to 0 {name = "_value_T_11"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %113 = firrtl.and %111, %112 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %114 = firrtl.mux(%113, %_value_T_11, %writeBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %115 = firrtl.or %81, %85 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.or %76, %115 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %117 = firrtl.or %74, %116 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.or %71, %117 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.or %63, %118 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.mux(%119, %writeBeatCnt_value, %114) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %writeBeatCnt_value, %120 : !firrtl.uint<3>
      %121 = firrtl.eq %io_mem_req_bits_cmd_18, %c7_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %122 = firrtl.and %121, %112 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.mux(%122, %c4_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %124 = firrtl.eq %state, %c4_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %125 = firrtl.mux(%io_mem_resp_valid, %c1_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %126 = firrtl.eq %state, %c7_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %127 = firrtl.or %_io_isFinish_T_10, %needFlush : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %128 = firrtl.or %127, %alreadyOutFire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %129 = firrtl.and %126, %128 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %130 = firrtl.mux(%129, %c0_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %131 = firrtl.mux(%124, %125, %130) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %132 = firrtl.mux(%111, %123, %131) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %133 = firrtl.mux(%85, %110, %132) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %134 = firrtl.mux(%81, %83, %133) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %135 = firrtl.mux(%76, %80, %134) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %136 = firrtl.mux(%74, %75, %135) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %137 = firrtl.mux(%71, %73, %136) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %138 = firrtl.mux(%63, %70, %137) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %state, %138 : !firrtl.uint<4>
      %dataRefillWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %dataRefillWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<10>
      %dataRefillWriteBus_x9 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid {name = "dataRefillWriteBus_x9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %dataRefillWriteBus_x10 = firrtl.cat %addr_index, %readBeatCnt_value {name = "dataRefillWriteBus_x10"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      firrtl.strictconnect %dataRefillWriteBus_req_bits_setIdx, %dataRefillWriteBus_x10 : !firrtl.uint<10>
      firrtl.strictconnect %dataRefillWriteBus_req_valid, %dataRefillWriteBus_x9 : !firrtl.uint<1>
      firrtl.strictconnect %11, %dataHitWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %12, %dataHitWriteBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %13, %dataHitWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %14, %dataRefillWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %15, %dataRefillWriteBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %io_dataWriteBus_req_bits_setIdx_8, %17 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataWriteBus_req_bits_data_data_9, %18 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_waymask_10, %19 : !firrtl.uint<4>
      firrtl.strictconnect %io_dataWriteBus_req_valid_7, %16 : !firrtl.uint<1>
      %metaRefillWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %metaRefillWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<7>
      %metaRefillWriteBus_req_bits_data_tag = firrtl.wire : !firrtl.uint<19>
      %_metaRefillWriteBus_T_2 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid {name = "_metaRefillWriteBus_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaRefillWriteBus_T_3 = firrtl.eq %io_mem_resp_bits_cmd, %c6_ui3 {name = "_metaRefillWriteBus_T_3"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_metaRefillWriteBus_T_4 = firrtl.and %_metaRefillWriteBus_T_2, %_metaRefillWriteBus_T_3 {name = "_metaRefillWriteBus_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %metaRefillWriteBus_qual4_tag = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %metaRefillWriteBus_qual4_tag, %addr_tag : !firrtl.uint<19>
      %_metaRefillWriteBus_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_metaRefillWriteBus_T_7 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_metaRefillWriteBus_T_7"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_metaRefillWriteBus_WIRE_index, %_metaRefillWriteBus_T_7 : !firrtl.uint<7>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_setIdx, %_metaRefillWriteBus_WIRE_index : !firrtl.uint<7>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_data_tag, %metaRefillWriteBus_qual4_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaRefillWriteBus_req_valid, %_metaRefillWriteBus_T_4 : !firrtl.uint<1>
      firrtl.strictconnect %0, %metaHitWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %1, %metaHitWriteBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %2, %metaHitWriteBus_req_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %3, %metaRefillWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %4, %metaRefillWriteBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %5, %metaRefillWriteBus_req_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_metaWriteBus_req_bits_setIdx_12, %7 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_tag_13, %8 : !firrtl.uint<19>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_dirty_14, %9 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_waymask_15, %10 : !firrtl.uint<4>
      firrtl.strictconnect %io_metaWriteBus_req_valid_11, %6 : !firrtl.uint<1>
      %_io_out_bits_rdata_T = firrtl.mux(%hit, %dataRead, %inRdataRegDemand) {name = "_io_out_bits_rdata_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_rdata_3, %_io_out_bits_rdata_T : !firrtl.uint<64>
      %_io_out_bits_cmd_T_1 = firrtl.not %_io_isFinish_T_6 {name = "_io_out_bits_cmd_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_2 = firrtl.bits %io_in_bits_req_cmd 3 to 3 {name = "_io_out_bits_cmd_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_3 = firrtl.not %_io_out_bits_cmd_T_2 {name = "_io_out_bits_cmd_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_4 = firrtl.and %_io_out_bits_cmd_T_1, %_io_out_bits_cmd_T_3 {name = "_io_out_bits_cmd_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_6 = firrtl.mux(%_io_isFinish_T_6, %c5_ui3, %c0_ui3) {name = "_io_out_bits_cmd_T_6"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_io_out_bits_cmd_T_7 = firrtl.mux(%_io_out_bits_cmd_T_4, %c6_ui3, %_io_out_bits_cmd_T_6) {name = "_io_out_bits_cmd_T_7"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %139 = firrtl.pad %_io_out_bits_cmd_T_7, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_cmd_2, %139 : !firrtl.uint<4>
      %_io_isFinish_T_9 = firrtl.eq %state, %c7_ui4 {name = "_io_isFinish_T_9"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_valid_T_19 = firrtl.or %_io_isFinish_T_6, %mmio {name = "_io_out_valid_T_19"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_21 = firrtl.not %alreadyOutFire {name = "_io_out_valid_T_21"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_22 = firrtl.and %afterFirstRead, %_io_out_valid_T_21 {name = "_io_out_valid_T_22"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_23 = firrtl.mux(%_io_out_valid_T_19, %_io_isFinish_T_9, %_io_out_valid_T_22) {name = "_io_out_valid_T_23"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_26 = firrtl.mux(%hit, %c1_ui1, %_io_out_valid_T_23) {name = "_io_out_valid_T_26"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_27 = firrtl.and %io_in_valid, %_io_out_valid_T_26 {name = "_io_out_valid_T_27"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_27 : !firrtl.uint<1>
      %_io_isFinish_T_7 = firrtl.or %hit, %_io_isFinish_T_6 {name = "_io_isFinish_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_11 = firrtl.or %_io_isFinish_T_10, %alreadyOutFire {name = "_io_isFinish_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_12 = firrtl.and %_io_isFinish_T_9, %_io_isFinish_T_11 {name = "_io_isFinish_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_14 = firrtl.mux(%_io_isFinish_T_7, %_io_isFinish_T_10, %_io_isFinish_T_12) {name = "_io_isFinish_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_isFinish_4, %_io_isFinish_T_14 : !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.not %hitReadBurst {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.and %_io_dataReadRespToL1_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %io_out_ready, %_io_in_ready_T_2 {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.not %miss {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_7 = firrtl.and %_io_in_ready_T_3, %_io_in_ready_T_4 {name = "_io_in_ready_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_7 : !firrtl.uint<1>
      %_io_dataReadRespToL1_T_1 = firrtl.and %_io_dataReadRespToL1_T, %io_out_ready {name = "_io_dataReadRespToL1_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_4 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_io_dataReadRespToL1_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_5 = firrtl.or %_io_dataReadRespToL1_T_1, %_io_dataReadRespToL1_T_4 {name = "_io_dataReadRespToL1_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_6 = firrtl.and %hitReadBurst, %_io_dataReadRespToL1_T_5 {name = "_io_dataReadRespToL1_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadRespToL1_21, %_io_dataReadRespToL1_T_6 : !firrtl.uint<1>
      %140 = firrtl.and %metaHitWriteBus_req_valid, %metaRefillWriteBus_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %141 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %142 = firrtl.not %140 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %142, %141, "Assertion failed\0A    at Cache.scala:461 assert(!(metaHitWriteBus.req.valid && metaRefillWriteBus.req.valid))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %143 = firrtl.and %dataHitWriteBus_req_valid, %dataRefillWriteBus_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %144 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %145 = firrtl.not %143 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %145, %144, "Assertion failed\0A    at Cache.scala:462 assert(!(dataHitWriteBus.req.valid && dataRefillWriteBus.req.valid))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %146 = firrtl.wire : !firrtl.uint<7>
      %147 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %146, %147 : !firrtl.uint<7>
      %lo = firrtl.cat %io_in_bits_datas_1_data, %io_in_bits_datas_0_data {name = "lo"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %hi = firrtl.cat %io_in_bits_datas_3_data, %io_in_bits_datas_2_data {name = "hi"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %148 = firrtl.cat %hi, %lo : (!firrtl.uint<128>, !firrtl.uint<128>) -> !firrtl.uint<256>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %149 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %150 = firrtl.and %c_control_logEnable, %149 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %150, "[%d] CacheStage3: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %151 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %152 = firrtl.and %c_control_logEnable, %151 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %152, " metaread idx %x waymask %b metas %x%x:%x %x%x:%x %x%x:%x %x%x:%x %x\0A" {name = "printf_5"} (%146, %io_in_bits_waymask, %io_in_bits_metas_0_valid, %io_in_bits_metas_0_dirty, %io_in_bits_metas_0_tag, %io_in_bits_metas_1_valid, %io_in_bits_metas_1_dirty, %io_in_bits_metas_1_tag, %io_in_bits_metas_2_valid, %io_in_bits_metas_2_dirty, %io_in_bits_metas_2_tag, %io_in_bits_metas_3_valid, %io_in_bits_metas_3_dirty, %io_in_bits_metas_3_tag, %148) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<256>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 344 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %153 = firrtl.and %io_metaWriteBus_req_valid_11, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %154 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %155 = firrtl.and %153, %154 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %155, "[%d] CacheStage3: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %156 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %157 = firrtl.and %153, %156 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %157, "%d: [icache S3]: metawrite idx %x wmask %b meta %x%x:%x\0A" {name = "printf_7"} (%c, %io_metaWriteBus_req_bits_setIdx_12, %io_metaWriteBus_req_bits_waymask_15, %c1_ui1, %io_metaWriteBus_req_bits_data_dirty_14, %io_metaWriteBus_req_bits_data_tag_13) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<7>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>
      %158 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %159 = firrtl.and %c_control_logEnable, %158 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %159, "[%d] CacheStage3: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %160 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %161 = firrtl.and %c_control_logEnable, %160 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %161, " in.ready = %d, in.valid = %d, hit = %x, state = %d, addr = %x cmd:%d probe:%d isFinish:%d\0A" {name = "printf_9"} (%io_in_ready_0, %io_in_valid, %hit, %state, %io_in_bits_req_addr, %io_in_bits_req_cmd, %c0_ui1, %io_isFinish_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>
      %162 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %163 = firrtl.and %c_control_logEnable, %162 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %163, "[%d] CacheStage3: " {name = "printf_10"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %164 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %165 = firrtl.and %c_control_logEnable, %164 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %165, " out.valid:%d rdata:%x cmd:%d user:%x id:%x \0A" {name = "printf_11"} (%io_out_valid_1, %io_out_bits_rdata_3, %io_out_bits_cmd_2, %io_in_bits_req_user, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<87>, !firrtl.uint<1>
      %166 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %167 = firrtl.and %c_control_logEnable, %166 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %167, "[%d] CacheStage3: " {name = "printf_12"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %168 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %169 = firrtl.and %c_control_logEnable, %168 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %169, " DHW: (%d, %d), data:%x setIdx:%x MHW:(%d, %d)\0A" {name = "printf_13"} (%dataHitWriteBus_req_valid, %c1_ui1, %dataHitWriteBus_req_bits_data_data, %dataHitWriteBus_req_bits_setIdx, %metaHitWriteBus_req_valid, %c1_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<10>, !firrtl.uint<1>, !firrtl.uint<1>
      %170 = firrtl.cat %hi, %lo : (!firrtl.uint<128>, !firrtl.uint<128>) -> !firrtl.uint<256>
      %171 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %172 = firrtl.and %c_control_logEnable, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %172, "[%d] CacheStage3: " {name = "printf_14"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %173 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %174 = firrtl.and %c_control_logEnable, %173 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %174, " DreadCache: %x \0A" {name = "printf_15"} (%170) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<256>
      %175 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %176 = firrtl.and %c_control_logEnable, %175 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %176, "[%d] CacheStage3: " {name = "printf_16"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %177 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %178 = firrtl.and %c_control_logEnable, %177 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %178, " useFD:%d isFD:%d FD:%x DreadArray:%x dataRead:%x inwaymask:%x FDwaymask:%x \0A" {name = "printf_17"} (%useForwardData, %io_in_bits_isForwardData, %io_in_bits_forwardData_data_data, %_dataReadArray_WIRE_data, %dataRead, %io_in_bits_waymask, %io_in_bits_forwardData_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<4>
      %179 = firrtl.and %io_dataWriteBus_req_valid_7, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %180 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %181 = firrtl.and %179, %180 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %181, "[%d] CacheStage3: " {name = "printf_18"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %182 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %183 = firrtl.and %179, %182 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %183, "[WB] waymask: %b data:%x setIdx:%x\0A" {name = "printf_19"} (%io_dataWriteBus_req_bits_waymask_10, %io_dataWriteBus_req_bits_data_data_9, %io_dataWriteBus_req_bits_setIdx_8) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<10>
      %184 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %185 = firrtl.and %_io_mem_req_valid_T_1, %184 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %186 = firrtl.wire : !firrtl.uint<7>
      %187 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %186, %187 : !firrtl.uint<7>
      %188 = firrtl.and %185, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %189 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %190 = firrtl.and %188, %189 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %190, "[%d] CacheStage3: " {name = "printf_20"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %191 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %192 = firrtl.and %188, %191 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %192, "[COUTW] cnt %x addr %x data %x cmd %x size %x wmask %x tag %x idx %x waymask %b \0A" {name = "printf_21"} (%writeBeatCnt_value, %io_mem_req_bits_addr_17, %io_mem_req_bits_wdata_19, %io_mem_req_bits_cmd_18, %c3_ui3, %c255_ui8, %addr_tag, %186, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<32>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<19>, !firrtl.uint<7>, !firrtl.uint<4>
      %193 = firrtl.and %_io_mem_req_valid_T, %184 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %194 = firrtl.wire : !firrtl.uint<7>
      %195 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %194, %195 : !firrtl.uint<7>
      %196 = firrtl.and %193, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %197 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %198 = firrtl.and %196, %197 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %198, "[%d] CacheStage3: " {name = "printf_22"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %199 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %200 = firrtl.and %196, %199 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %200, "[COUTR] addr %x tag %x idx %x waymask %b \0A" {name = "printf_23"} (%io_mem_req_bits_addr_17, %addr_tag, %194, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<19>, !firrtl.uint<7>, !firrtl.uint<4>
      %201 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %202 = firrtl.wire : !firrtl.uint<7>
      %203 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %202, %203 : !firrtl.uint<7>
      %204 = firrtl.and %201, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %205 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %206 = firrtl.and %204, %205 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %206, "[%d] CacheStage3: " {name = "printf_24"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %207 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %208 = firrtl.and %204, %207 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %208, "[COUTR] cnt %x data %x tag %x idx %x waymask %b \0A" {name = "printf_25"} (%readBeatCnt_value, %io_mem_resp_bits_rdata, %addr_tag, %202, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<64>, !firrtl.uint<19>, !firrtl.uint<7>, !firrtl.uint<4>
    }
    firrtl.module private @SRAMTemplate_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_r_req_ready: !firrtl.uint<1>, in %io_r_req_valid: !firrtl.uint<1>, in %io_r_req_bits_setIdx: !firrtl.uint<7>, out %io_r_resp_data_0_tag: !firrtl.uint<19>, out %io_r_resp_data_0_valid: !firrtl.uint<1>, out %io_r_resp_data_0_dirty: !firrtl.uint<1>, out %io_r_resp_data_1_tag: !firrtl.uint<19>, out %io_r_resp_data_1_valid: !firrtl.uint<1>, out %io_r_resp_data_1_dirty: !firrtl.uint<1>, out %io_r_resp_data_2_tag: !firrtl.uint<19>, out %io_r_resp_data_2_valid: !firrtl.uint<1>, out %io_r_resp_data_2_dirty: !firrtl.uint<1>, out %io_r_resp_data_3_tag: !firrtl.uint<19>, out %io_r_resp_data_3_valid: !firrtl.uint<1>, out %io_r_resp_data_3_dirty: !firrtl.uint<1>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<7>, in %io_w_req_bits_data_tag: !firrtl.uint<19>, in %io_w_req_bits_data_dirty: !firrtl.uint<1>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c0_ui21 = firrtl.constant 0 : !firrtl.uint<21> {name = "_wdataword_WIRE"}
      %c0_ui7 = firrtl.constant 0 : !firrtl.uint<7>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_r_req_ready_0 = firrtl.wire {name = "io_r_req_ready"} : !firrtl.uint<1>
      %io_r_resp_data_0_tag_1 = firrtl.wire {name = "io_r_resp_data_0_tag"} : !firrtl.uint<19>
      %io_r_resp_data_0_valid_2 = firrtl.wire {name = "io_r_resp_data_0_valid"} : !firrtl.uint<1>
      %io_r_resp_data_0_dirty_3 = firrtl.wire {name = "io_r_resp_data_0_dirty"} : !firrtl.uint<1>
      %io_r_resp_data_1_tag_4 = firrtl.wire {name = "io_r_resp_data_1_tag"} : !firrtl.uint<19>
      %io_r_resp_data_1_valid_5 = firrtl.wire {name = "io_r_resp_data_1_valid"} : !firrtl.uint<1>
      %io_r_resp_data_1_dirty_6 = firrtl.wire {name = "io_r_resp_data_1_dirty"} : !firrtl.uint<1>
      %io_r_resp_data_2_tag_7 = firrtl.wire {name = "io_r_resp_data_2_tag"} : !firrtl.uint<19>
      %io_r_resp_data_2_valid_8 = firrtl.wire {name = "io_r_resp_data_2_valid"} : !firrtl.uint<1>
      %io_r_resp_data_2_dirty_9 = firrtl.wire {name = "io_r_resp_data_2_dirty"} : !firrtl.uint<1>
      %io_r_resp_data_3_tag_10 = firrtl.wire {name = "io_r_resp_data_3_tag"} : !firrtl.uint<19>
      %io_r_resp_data_3_valid_11 = firrtl.wire {name = "io_r_resp_data_3_valid"} : !firrtl.uint<1>
      %io_r_resp_data_3_dirty_12 = firrtl.wire {name = "io_r_resp_data_3_dirty"} : !firrtl.uint<1>
      firrtl.strictconnect %io_r_req_ready, %io_r_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_tag, %io_r_resp_data_0_tag_1 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_0_valid, %io_r_resp_data_0_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_dirty, %io_r_resp_data_0_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_tag, %io_r_resp_data_1_tag_4 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_1_valid, %io_r_resp_data_1_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_dirty, %io_r_resp_data_1_dirty_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_tag, %io_r_resp_data_2_tag_7 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_2_valid, %io_r_resp_data_2_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_dirty, %io_r_resp_data_2_dirty_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_tag, %io_r_resp_data_3_tag_10 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_3_valid, %io_r_resp_data_3_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_dirty, %io_r_resp_data_3_dirty_12 : !firrtl.uint<1>
      %array_rw = firrtl.mem Undefined {depth = 128 : i64, name = "array", portNames = ["rw"], prefix = "", readLatency = 1 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %0 = firrtl.subfield %array_rw[addr] : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %1 = firrtl.subfield %array_rw[en] : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %2 = firrtl.subfield %array_rw[clk] : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %3 = firrtl.subfield %array_rw[rdata] : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %4 = firrtl.subfield %array_rw[wmode] : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %5 = firrtl.subfield %array_rw[wdata] : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %6 = firrtl.subfield %array_rw[wmask] : !firrtl.bundle<addr: uint<7>, en: uint<1>, clk: clock, rdata flip: uint<84>, wmode: uint<1>, wdata: uint<84>, wmask: uint<4>>
      %writeAddr = firrtl.wire : !firrtl.uint<7>
      %writeEnable = firrtl.wire : !firrtl.uint<1>
      %readEnable = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.mux(%writeEnable, %writeAddr, %io_r_req_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %0, %7 : !firrtl.uint<7>
      %8 = firrtl.or %readEnable, %writeEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %1, %8 : !firrtl.uint<1>
      %array_MPORT_addr = firrtl.wire : !firrtl.uint<7>
      %array_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_data_0 = firrtl.wire : !firrtl.uint<21>
      %array_MPORT_data_1 = firrtl.wire : !firrtl.uint<21>
      %array_MPORT_data_2 = firrtl.wire : !firrtl.uint<21>
      %array_MPORT_data_3 = firrtl.wire : !firrtl.uint<21>
      %array_MPORT_mask_0 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_1 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_2 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %writeAddr, %array_MPORT_addr : !firrtl.uint<7>
      firrtl.strictconnect %writeEnable, %array_MPORT_en : !firrtl.uint<1>
      %9 = firrtl.cat %array_MPORT_data_1, %array_MPORT_data_0 : (!firrtl.uint<21>, !firrtl.uint<21>) -> !firrtl.uint<42>
      %10 = firrtl.cat %array_MPORT_data_2, %9 : (!firrtl.uint<21>, !firrtl.uint<42>) -> !firrtl.uint<63>
      %11 = firrtl.cat %array_MPORT_data_3, %10 : (!firrtl.uint<21>, !firrtl.uint<63>) -> !firrtl.uint<84>
      firrtl.strictconnect %5, %11 : !firrtl.uint<84>
      %12 = firrtl.cat %array_MPORT_mask_1, %array_MPORT_mask_0 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %13 = firrtl.cat %array_MPORT_mask_2, %12 : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %14 = firrtl.cat %array_MPORT_mask_3, %13 : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %6, %14 : !firrtl.uint<4>
      %array_rdata_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_rdata_MPORT_data_0 = firrtl.wire : !firrtl.uint<21>
      %array_rdata_MPORT_data_1 = firrtl.wire : !firrtl.uint<21>
      %array_rdata_MPORT_data_2 = firrtl.wire : !firrtl.uint<21>
      %array_rdata_MPORT_data_3 = firrtl.wire : !firrtl.uint<21>
      firrtl.strictconnect %readEnable, %array_rdata_MPORT_en : !firrtl.uint<1>
      firrtl.strictconnect %2, %clock : !firrtl.clock
      %15 = firrtl.bits %3 20 to 0 : (!firrtl.uint<84>) -> !firrtl.uint<21>
      %16 = firrtl.bits %3 41 to 21 : (!firrtl.uint<84>) -> !firrtl.uint<21>
      %17 = firrtl.bits %3 62 to 42 : (!firrtl.uint<84>) -> !firrtl.uint<21>
      %18 = firrtl.bits %3 83 to 63 : (!firrtl.uint<84>) -> !firrtl.uint<21>
      firrtl.strictconnect %array_rdata_MPORT_data_0, %15 : !firrtl.uint<21>
      firrtl.strictconnect %array_rdata_MPORT_data_1, %16 : !firrtl.uint<21>
      firrtl.strictconnect %array_rdata_MPORT_data_2, %17 : !firrtl.uint<21>
      firrtl.strictconnect %array_rdata_MPORT_data_3, %18 : !firrtl.uint<21>
      %resetState = firrtl.wire : !firrtl.uint<1>
      %resetSet = firrtl.wire : !firrtl.uint<7>
      %_resetState = firrtl.regreset %clock, %reset, %c1_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %_resetSet = firrtl.regreset %clock, %reset, %c0_ui7 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>
      %resetFinish = firrtl.wire : !firrtl.uint<1>
      %wrap_wrap = firrtl.andr %_resetSet {name = "wrap_wrap"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_wrap_value_T = firrtl.add %_resetSet, %c1_ui1 {name = "_wrap_value_T"} : (!firrtl.uint<7>, !firrtl.uint<1>) -> !firrtl.uint<8>
      %_wrap_value_T_1 = firrtl.bits %_wrap_value_T 6 to 0 {name = "_wrap_value_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<7>
      %19 = firrtl.mux(%_resetState, %_wrap_value_T_1, %_resetSet) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %_resetSet, %19 : !firrtl.uint<7>
      %20 = firrtl.mux(%_resetState, %wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %resetFinish, %20 : !firrtl.uint<1>
      %21 = firrtl.mux(%resetFinish, %c0_ui1, %_resetState) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %_resetState, %21 : !firrtl.uint<1>
      firrtl.strictconnect %resetState, %_resetState : !firrtl.uint<1>
      firrtl.strictconnect %resetSet, %_resetSet : !firrtl.uint<7>
      %wen = firrtl.or %io_w_req_valid, %resetState {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_r_req_ready_T_1 = firrtl.not %wen {name = "_io_r_req_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %realRen = firrtl.and %io_r_req_valid, %_io_r_req_ready_T_1 {name = "realRen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %setIdx = firrtl.mux(%resetState, %resetSet, %io_w_req_bits_setIdx) {name = "setIdx"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %wdataword_hi = firrtl.cat %io_w_req_bits_data_tag, %c1_ui1 {name = "wdataword_hi"} : (!firrtl.uint<19>, !firrtl.uint<1>) -> !firrtl.uint<20>
      %_wdataword_T = firrtl.cat %wdataword_hi, %io_w_req_bits_data_dirty {name = "_wdataword_T"} : (!firrtl.uint<20>, !firrtl.uint<1>) -> !firrtl.uint<21>
      %wdataword = firrtl.mux(%resetState, %c0_ui21, %_wdataword_T) {name = "wdataword"} : (!firrtl.uint<1>, !firrtl.uint<21>, !firrtl.uint<21>) -> !firrtl.uint<21>
      %waymask = firrtl.mux(%resetState, %c15_ui4, %io_w_req_bits_waymask) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %wdata_0 = firrtl.wire : !firrtl.uint<21>
      %wdata_1 = firrtl.wire : !firrtl.uint<21>
      %wdata_2 = firrtl.wire : !firrtl.uint<21>
      %wdata_3 = firrtl.wire : !firrtl.uint<21>
      firrtl.strictconnect %wdata_0, %wdataword : !firrtl.uint<21>
      firrtl.strictconnect %wdata_1, %wdataword : !firrtl.uint<21>
      firrtl.strictconnect %wdata_2, %wdataword : !firrtl.uint<21>
      firrtl.strictconnect %wdata_3, %wdataword : !firrtl.uint<21>
      %22 = firrtl.bits %waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %23 = firrtl.bits %waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %24 = firrtl.bits %waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %25 = firrtl.bits %waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_addr, %setIdx : !firrtl.uint<7>
      firrtl.strictconnect %array_MPORT_en, %wen : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_0, %22 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_0, %wdata_0 : !firrtl.uint<21>
      firrtl.strictconnect %array_MPORT_mask_1, %23 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_1, %wdata_1 : !firrtl.uint<21>
      firrtl.strictconnect %array_MPORT_mask_2, %24 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_2, %wdata_2 : !firrtl.uint<21>
      firrtl.strictconnect %array_MPORT_mask_3, %25 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_3, %wdata_3 : !firrtl.uint<21>
      firrtl.strictconnect %array_rdata_MPORT_en, %realRen : !firrtl.uint<1>
      %rdata_0_tag = firrtl.wire : !firrtl.uint<19>
      %rdata_0_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_0_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_1 = firrtl.wire : !firrtl.uint<21>
      firrtl.strictconnect %_rdata_WIRE_1, %array_rdata_MPORT_data_0 : !firrtl.uint<21>
      %_rdata_T = firrtl.bits %_rdata_WIRE_1 0 to 0 {name = "_rdata_T"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_0_dirty, %_rdata_T : !firrtl.uint<1>
      %_rdata_T_1 = firrtl.bits %_rdata_WIRE_1 1 to 1 {name = "_rdata_T_1"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_0_valid, %_rdata_T_1 : !firrtl.uint<1>
      %_rdata_T_2 = firrtl.bits %_rdata_WIRE_1 20 to 2 {name = "_rdata_T_2"} : (!firrtl.uint<21>) -> !firrtl.uint<19>
      firrtl.strictconnect %rdata_0_tag, %_rdata_T_2 : !firrtl.uint<19>
      %rdata_1_tag = firrtl.wire : !firrtl.uint<19>
      %rdata_1_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_1_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_2 = firrtl.wire : !firrtl.uint<21>
      firrtl.strictconnect %_rdata_WIRE_2, %array_rdata_MPORT_data_1 : !firrtl.uint<21>
      %_rdata_T_3 = firrtl.bits %_rdata_WIRE_2 0 to 0 {name = "_rdata_T_3"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_1_dirty, %_rdata_T_3 : !firrtl.uint<1>
      %_rdata_T_4 = firrtl.bits %_rdata_WIRE_2 1 to 1 {name = "_rdata_T_4"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_1_valid, %_rdata_T_4 : !firrtl.uint<1>
      %_rdata_T_5 = firrtl.bits %_rdata_WIRE_2 20 to 2 {name = "_rdata_T_5"} : (!firrtl.uint<21>) -> !firrtl.uint<19>
      firrtl.strictconnect %rdata_1_tag, %_rdata_T_5 : !firrtl.uint<19>
      %rdata_2_tag = firrtl.wire : !firrtl.uint<19>
      %rdata_2_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_2_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_3 = firrtl.wire : !firrtl.uint<21>
      firrtl.strictconnect %_rdata_WIRE_3, %array_rdata_MPORT_data_2 : !firrtl.uint<21>
      %_rdata_T_6 = firrtl.bits %_rdata_WIRE_3 0 to 0 {name = "_rdata_T_6"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_2_dirty, %_rdata_T_6 : !firrtl.uint<1>
      %_rdata_T_7 = firrtl.bits %_rdata_WIRE_3 1 to 1 {name = "_rdata_T_7"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_2_valid, %_rdata_T_7 : !firrtl.uint<1>
      %_rdata_T_8 = firrtl.bits %_rdata_WIRE_3 20 to 2 {name = "_rdata_T_8"} : (!firrtl.uint<21>) -> !firrtl.uint<19>
      firrtl.strictconnect %rdata_2_tag, %_rdata_T_8 : !firrtl.uint<19>
      %rdata_3_tag = firrtl.wire : !firrtl.uint<19>
      %rdata_3_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_3_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_4 = firrtl.wire : !firrtl.uint<21>
      firrtl.strictconnect %_rdata_WIRE_4, %array_rdata_MPORT_data_3 : !firrtl.uint<21>
      %_rdata_T_9 = firrtl.bits %_rdata_WIRE_4 0 to 0 {name = "_rdata_T_9"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_3_dirty, %_rdata_T_9 : !firrtl.uint<1>
      %_rdata_T_10 = firrtl.bits %_rdata_WIRE_4 1 to 1 {name = "_rdata_T_10"} : (!firrtl.uint<21>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_3_valid, %_rdata_T_10 : !firrtl.uint<1>
      %_rdata_T_11 = firrtl.bits %_rdata_WIRE_4 20 to 2 {name = "_rdata_T_11"} : (!firrtl.uint<21>) -> !firrtl.uint<19>
      firrtl.strictconnect %rdata_3_tag, %_rdata_T_11 : !firrtl.uint<19>
      %26 = firrtl.wire : !firrtl.uint<19>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<19>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<19>
      %33 = firrtl.wire : !firrtl.uint<1>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<19>
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %26, %rdata_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %27, %rdata_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %28, %rdata_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %29, %rdata_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %30, %rdata_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %31, %rdata_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %32, %rdata_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %33, %rdata_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %34, %rdata_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %35, %rdata_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %36, %rdata_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %37, %rdata_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_tag_1, %26 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_0_valid_2, %27 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_dirty_3, %28 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_tag_4, %29 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_1_valid_5, %30 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_dirty_6, %31 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_tag_7, %32 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_2_valid_8, %33 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_dirty_9, %34 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_tag_10, %35 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_resp_data_3_valid_11, %36 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_dirty_12, %37 : !firrtl.uint<1>
      %_io_r_req_ready_T = firrtl.not %resetState {name = "_io_r_req_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_r_req_ready_T_2 = firrtl.and %_io_r_req_ready_T, %_io_r_req_ready_T_1 {name = "_io_r_req_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_r_req_ready_0, %_io_r_req_ready_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %4, %wen : !firrtl.uint<1>
    }
    firrtl.module private @Arbiter1_SRAMBundleA(out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<7>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<7>) {
      firrtl.strictconnect %io_in_0_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_in_0_bits_setIdx : !firrtl.uint<7>
    }
    firrtl.module private @SRAMTemplateWithArbiter(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_r_0_req_ready: !firrtl.uint<1>, in %io_r_0_req_valid: !firrtl.uint<1>, in %io_r_0_req_bits_setIdx: !firrtl.uint<7>, out %io_r_0_resp_data_0_tag: !firrtl.uint<19>, out %io_r_0_resp_data_0_valid: !firrtl.uint<1>, out %io_r_0_resp_data_0_dirty: !firrtl.uint<1>, out %io_r_0_resp_data_1_tag: !firrtl.uint<19>, out %io_r_0_resp_data_1_valid: !firrtl.uint<1>, out %io_r_0_resp_data_1_dirty: !firrtl.uint<1>, out %io_r_0_resp_data_2_tag: !firrtl.uint<19>, out %io_r_0_resp_data_2_valid: !firrtl.uint<1>, out %io_r_0_resp_data_2_dirty: !firrtl.uint<1>, out %io_r_0_resp_data_3_tag: !firrtl.uint<19>, out %io_r_0_resp_data_3_valid: !firrtl.uint<1>, out %io_r_0_resp_data_3_dirty: !firrtl.uint<1>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<7>, in %io_w_req_bits_data_tag: !firrtl.uint<19>, in %io_w_req_bits_data_dirty: !firrtl.uint<1>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %c0_ui19 = firrtl.constant 0 : !firrtl.uint<19>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_r_0_req_ready_0 = firrtl.wire {name = "io_r_0_req_ready"} : !firrtl.uint<1>
      %io_r_0_resp_data_0_tag_1 = firrtl.wire {name = "io_r_0_resp_data_0_tag"} : !firrtl.uint<19>
      %io_r_0_resp_data_0_valid_2 = firrtl.wire {name = "io_r_0_resp_data_0_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_0_dirty_3 = firrtl.wire {name = "io_r_0_resp_data_0_dirty"} : !firrtl.uint<1>
      %io_r_0_resp_data_1_tag_4 = firrtl.wire {name = "io_r_0_resp_data_1_tag"} : !firrtl.uint<19>
      %io_r_0_resp_data_1_valid_5 = firrtl.wire {name = "io_r_0_resp_data_1_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_1_dirty_6 = firrtl.wire {name = "io_r_0_resp_data_1_dirty"} : !firrtl.uint<1>
      %io_r_0_resp_data_2_tag_7 = firrtl.wire {name = "io_r_0_resp_data_2_tag"} : !firrtl.uint<19>
      %io_r_0_resp_data_2_valid_8 = firrtl.wire {name = "io_r_0_resp_data_2_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_2_dirty_9 = firrtl.wire {name = "io_r_0_resp_data_2_dirty"} : !firrtl.uint<1>
      %io_r_0_resp_data_3_tag_10 = firrtl.wire {name = "io_r_0_resp_data_3_tag"} : !firrtl.uint<19>
      %io_r_0_resp_data_3_valid_11 = firrtl.wire {name = "io_r_0_resp_data_3_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_3_dirty_12 = firrtl.wire {name = "io_r_0_resp_data_3_dirty"} : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_req_ready, %io_r_0_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_tag, %io_r_0_resp_data_0_tag_1 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_0_valid, %io_r_0_resp_data_0_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_dirty, %io_r_0_resp_data_0_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_tag, %io_r_0_resp_data_1_tag_4 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_1_valid, %io_r_0_resp_data_1_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_dirty, %io_r_0_resp_data_1_dirty_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_tag, %io_r_0_resp_data_2_tag_7 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_2_valid, %io_r_0_resp_data_2_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_dirty, %io_r_0_resp_data_2_dirty_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_tag, %io_r_0_resp_data_3_tag_10 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_3_valid, %io_r_0_resp_data_3_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_dirty, %io_r_0_resp_data_3_dirty_12 : !firrtl.uint<1>
      %ram_clock, %ram_reset, %ram_io_r_req_ready, %ram_io_r_req_valid, %ram_io_r_req_bits_setIdx, %ram_io_r_resp_data_0_tag, %ram_io_r_resp_data_0_valid, %ram_io_r_resp_data_0_dirty, %ram_io_r_resp_data_1_tag, %ram_io_r_resp_data_1_valid, %ram_io_r_resp_data_1_dirty, %ram_io_r_resp_data_2_tag, %ram_io_r_resp_data_2_valid, %ram_io_r_resp_data_2_dirty, %ram_io_r_resp_data_3_tag, %ram_io_r_resp_data_3_valid, %ram_io_r_resp_data_3_dirty, %ram_io_w_req_valid, %ram_io_w_req_bits_setIdx, %ram_io_w_req_bits_data_tag, %ram_io_w_req_bits_data_dirty, %ram_io_w_req_bits_waymask = firrtl.instance ram @SRAMTemplate_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_req_ready: !firrtl.uint<1>, in io_r_req_valid: !firrtl.uint<1>, in io_r_req_bits_setIdx: !firrtl.uint<7>, out io_r_resp_data_0_tag: !firrtl.uint<19>, out io_r_resp_data_0_valid: !firrtl.uint<1>, out io_r_resp_data_0_dirty: !firrtl.uint<1>, out io_r_resp_data_1_tag: !firrtl.uint<19>, out io_r_resp_data_1_valid: !firrtl.uint<1>, out io_r_resp_data_1_dirty: !firrtl.uint<1>, out io_r_resp_data_2_tag: !firrtl.uint<19>, out io_r_resp_data_2_valid: !firrtl.uint<1>, out io_r_resp_data_2_dirty: !firrtl.uint<1>, out io_r_resp_data_3_tag: !firrtl.uint<19>, out io_r_resp_data_3_valid: !firrtl.uint<1>, out io_r_resp_data_3_dirty: !firrtl.uint<1>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<7>, in io_w_req_bits_data_tag: !firrtl.uint<19>, in io_w_req_bits_data_dirty: !firrtl.uint<1>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<7>
      %3 = firrtl.wire : !firrtl.uint<19>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<19>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<19>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<19>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %ram_io_r_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_bits_setIdx, %2 : !firrtl.uint<7>
      firrtl.strictconnect %3, %ram_io_r_resp_data_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %4, %ram_io_r_resp_data_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %5, %ram_io_r_resp_data_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %6, %ram_io_r_resp_data_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %7, %ram_io_r_resp_data_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %8, %ram_io_r_resp_data_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %9, %ram_io_r_resp_data_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %10, %ram_io_r_resp_data_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %11, %ram_io_r_resp_data_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %12, %ram_io_r_resp_data_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %13, %ram_io_r_resp_data_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %14, %ram_io_r_resp_data_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_valid, %io_w_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_bits_setIdx, %io_w_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %ram_io_w_req_bits_data_tag, %io_w_req_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %ram_io_w_req_bits_data_dirty, %io_w_req_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_bits_waymask, %io_w_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %ram_clock, %clock : !firrtl.clock
      firrtl.strictconnect %ram_reset, %reset : !firrtl.uint<1>
      %readArb_io_in_0_ready, %readArb_io_in_0_valid, %readArb_io_in_0_bits_setIdx, %readArb_io_out_ready, %readArb_io_out_valid, %readArb_io_out_bits_setIdx = firrtl.instance readArb @Arbiter1_SRAMBundleA(out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<7>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<7>)
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<7>
      firrtl.strictconnect %15, %readArb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_valid, %io_r_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_bits_setIdx, %io_r_0_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %readArb_io_out_ready, %16 : !firrtl.uint<1>
      firrtl.strictconnect %17, %readArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %18, %readArb_io_out_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %io_r_0_req_ready_0, %15 : !firrtl.uint<1>
      firrtl.strictconnect %16, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %17 : !firrtl.uint<1>
      firrtl.strictconnect %2, %18 : !firrtl.uint<7>
      %19 = firrtl.and %io_r_0_req_ready_0, %io_r_0_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG, %19 : !firrtl.uint<1>
      %r_0_tag = firrtl.regreset %clock, %reset, %c0_ui19 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %r_0_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 20 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_0_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 21 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_1_tag = firrtl.regreset %clock, %reset, %c0_ui19 {firrtl.random_init_start = 22 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %r_1_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 41 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_1_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 42 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_2_tag = firrtl.regreset %clock, %reset, %c0_ui19 {firrtl.random_init_start = 43 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %r_2_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 62 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_2_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 63 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_3_tag = firrtl.regreset %clock, %reset, %c0_ui19 {firrtl.random_init_start = 64 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %r_3_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 83 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_3_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 84 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %20 = firrtl.mux(%REG, %3, %r_0_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %r_0_tag, %20 : !firrtl.uint<19>
      %21 = firrtl.mux(%REG, %4, %r_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_0_valid, %21 : !firrtl.uint<1>
      %22 = firrtl.mux(%REG, %5, %r_0_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_0_dirty, %22 : !firrtl.uint<1>
      %23 = firrtl.mux(%REG, %6, %r_1_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %r_1_tag, %23 : !firrtl.uint<19>
      %24 = firrtl.mux(%REG, %7, %r_1_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_1_valid, %24 : !firrtl.uint<1>
      %25 = firrtl.mux(%REG, %8, %r_1_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_1_dirty, %25 : !firrtl.uint<1>
      %26 = firrtl.mux(%REG, %9, %r_2_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %r_2_tag, %26 : !firrtl.uint<19>
      %27 = firrtl.mux(%REG, %10, %r_2_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_2_valid, %27 : !firrtl.uint<1>
      %28 = firrtl.mux(%REG, %11, %r_2_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_2_dirty, %28 : !firrtl.uint<1>
      %29 = firrtl.mux(%REG, %12, %r_3_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %r_3_tag, %29 : !firrtl.uint<19>
      %30 = firrtl.mux(%REG, %13, %r_3_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_3_valid, %30 : !firrtl.uint<1>
      %31 = firrtl.mux(%REG, %14, %r_3_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_3_dirty, %31 : !firrtl.uint<1>
      %32 = firrtl.mux(%REG, %3, %r_0_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %33 = firrtl.mux(%REG, %4, %r_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.mux(%REG, %5, %r_0_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.mux(%REG, %6, %r_1_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %36 = firrtl.mux(%REG, %7, %r_1_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.mux(%REG, %8, %r_1_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.mux(%REG, %9, %r_2_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %39 = firrtl.mux(%REG, %10, %r_2_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.mux(%REG, %11, %r_2_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.mux(%REG, %12, %r_3_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %42 = firrtl.mux(%REG, %13, %r_3_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.mux(%REG, %14, %r_3_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_tag_1, %32 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_0_valid_2, %33 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_dirty_3, %34 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_tag_4, %35 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_1_valid_5, %36 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_dirty_6, %37 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_tag_7, %38 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_2_valid_8, %39 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_dirty_9, %40 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_tag_10, %41 : !firrtl.uint<19>
      firrtl.strictconnect %io_r_0_resp_data_3_valid_11, %42 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_dirty_12, %43 : !firrtl.uint<1>
    }
    firrtl.module private @SRAMTemplate_2(in %clock: !firrtl.clock, out %io_r_req_ready: !firrtl.uint<1>, in %io_r_req_valid: !firrtl.uint<1>, in %io_r_req_bits_setIdx: !firrtl.uint<10>, out %io_r_resp_data_0_data: !firrtl.uint<64>, out %io_r_resp_data_1_data: !firrtl.uint<64>, out %io_r_resp_data_2_data: !firrtl.uint<64>, out %io_r_resp_data_3_data: !firrtl.uint<64>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<10>, in %io_w_req_bits_data_data: !firrtl.uint<64>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %io_r_req_ready_0 = firrtl.wire {name = "io_r_req_ready"} : !firrtl.uint<1>
      %io_r_resp_data_0_data_1 = firrtl.wire {name = "io_r_resp_data_0_data"} : !firrtl.uint<64>
      %io_r_resp_data_1_data_2 = firrtl.wire {name = "io_r_resp_data_1_data"} : !firrtl.uint<64>
      %io_r_resp_data_2_data_3 = firrtl.wire {name = "io_r_resp_data_2_data"} : !firrtl.uint<64>
      %io_r_resp_data_3_data_4 = firrtl.wire {name = "io_r_resp_data_3_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_r_req_ready, %io_r_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_data, %io_r_resp_data_0_data_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_1_data, %io_r_resp_data_1_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_2_data, %io_r_resp_data_2_data_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_3_data, %io_r_resp_data_3_data_4 : !firrtl.uint<64>
      %array_rw = firrtl.mem Undefined {depth = 1024 : i64, name = "array", portNames = ["rw"], prefix = "", readLatency = 1 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %0 = firrtl.subfield %array_rw[addr] : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %1 = firrtl.subfield %array_rw[en] : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %2 = firrtl.subfield %array_rw[clk] : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %3 = firrtl.subfield %array_rw[rdata] : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %4 = firrtl.subfield %array_rw[wmode] : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %5 = firrtl.subfield %array_rw[wdata] : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %6 = firrtl.subfield %array_rw[wmask] : !firrtl.bundle<addr: uint<10>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %readEnable = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.mux(%io_w_req_valid, %io_w_req_bits_setIdx, %io_r_req_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<10>
      firrtl.strictconnect %0, %7 : !firrtl.uint<10>
      %8 = firrtl.or %readEnable, %io_w_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %1, %8 : !firrtl.uint<1>
      %array_MPORT_mask_0 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_1 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_2 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_3 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.cat %io_w_req_bits_data_data, %io_w_req_bits_data_data : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %10 = firrtl.cat %io_w_req_bits_data_data, %9 : (!firrtl.uint<64>, !firrtl.uint<128>) -> !firrtl.uint<192>
      %11 = firrtl.cat %io_w_req_bits_data_data, %10 : (!firrtl.uint<64>, !firrtl.uint<192>) -> !firrtl.uint<256>
      firrtl.strictconnect %5, %11 : !firrtl.uint<256>
      %12 = firrtl.cat %array_MPORT_mask_1, %array_MPORT_mask_0 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %13 = firrtl.cat %array_MPORT_mask_2, %12 : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %14 = firrtl.cat %array_MPORT_mask_3, %13 : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %6, %14 : !firrtl.uint<4>
      %array_rdata_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_rdata_MPORT_data_0 = firrtl.wire : !firrtl.uint<64>
      %array_rdata_MPORT_data_1 = firrtl.wire : !firrtl.uint<64>
      %array_rdata_MPORT_data_2 = firrtl.wire : !firrtl.uint<64>
      %array_rdata_MPORT_data_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %readEnable, %array_rdata_MPORT_en : !firrtl.uint<1>
      firrtl.strictconnect %2, %clock : !firrtl.clock
      %15 = firrtl.bits %3 63 to 0 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      %16 = firrtl.bits %3 127 to 64 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      %17 = firrtl.bits %3 191 to 128 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      %18 = firrtl.bits %3 255 to 192 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_0, %15 : !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_1, %16 : !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_2, %17 : !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_3, %18 : !firrtl.uint<64>
      %_io_r_req_ready_T_2 = firrtl.not %io_w_req_valid {name = "_io_r_req_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %realRen = firrtl.and %io_r_req_valid, %_io_r_req_ready_T_2 {name = "realRen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.bits %io_w_req_bits_waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %20 = firrtl.bits %io_w_req_bits_waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %21 = firrtl.bits %io_w_req_bits_waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %22 = firrtl.bits %io_w_req_bits_waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_0, %19 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_1, %20 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_2, %21 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_3, %22 : !firrtl.uint<1>
      firrtl.strictconnect %array_rdata_MPORT_en, %realRen : !firrtl.uint<1>
      %rdata_0_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T, %array_rdata_MPORT_data_0 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_0_data, %_rdata_T : !firrtl.uint<64>
      %rdata_1_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T_1, %array_rdata_MPORT_data_1 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_1_data, %_rdata_T_1 : !firrtl.uint<64>
      %rdata_2_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T_2 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T_2, %array_rdata_MPORT_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_2_data, %_rdata_T_2 : !firrtl.uint<64>
      %rdata_3_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T_3, %array_rdata_MPORT_data_3 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_3_data, %_rdata_T_3 : !firrtl.uint<64>
      %23 = firrtl.wire : !firrtl.uint<64>
      %24 = firrtl.wire : !firrtl.uint<64>
      %25 = firrtl.wire : !firrtl.uint<64>
      %26 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %23, %rdata_0_data : !firrtl.uint<64>
      firrtl.strictconnect %24, %rdata_1_data : !firrtl.uint<64>
      firrtl.strictconnect %25, %rdata_2_data : !firrtl.uint<64>
      firrtl.strictconnect %26, %rdata_3_data : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_0_data_1, %23 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_1_data_2, %24 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_2_data_3, %25 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_3_data_4, %26 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_req_ready_0, %_io_r_req_ready_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %4, %io_w_req_valid : !firrtl.uint<1>
    }
    firrtl.module private @Arbiter2_SRAMBundleA(out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<10>, out %io_in_1_ready: !firrtl.uint<1>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_setIdx: !firrtl.uint<10>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<10>) {
      %io_in_1_ready_0 = firrtl.wire {name = "io_in_1_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_setIdx_2 = firrtl.wire {name = "io_out_bits_setIdx"} : !firrtl.uint<10>
      firrtl.strictconnect %io_in_0_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready, %io_in_1_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_out_bits_setIdx_2 : !firrtl.uint<10>
      %0 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_setIdx, %io_in_1_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<10>
      firrtl.strictconnect %io_out_bits_setIdx_2, %0 : !firrtl.uint<10>
      %grant_1 = firrtl.not %io_in_0_valid {name = "grant_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_1_ready_T = firrtl.and %grant_1, %io_out_ready {name = "_io_in_1_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready_0, %_io_in_1_ready_T : !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.or %io_in_0_valid, %io_in_1_valid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_1 : !firrtl.uint<1>
    }
    firrtl.module private @SRAMTemplateWithArbiter_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_r_0_req_ready: !firrtl.uint<1>, in %io_r_0_req_valid: !firrtl.uint<1>, in %io_r_0_req_bits_setIdx: !firrtl.uint<10>, out %io_r_0_resp_data_0_data: !firrtl.uint<64>, out %io_r_0_resp_data_1_data: !firrtl.uint<64>, out %io_r_0_resp_data_2_data: !firrtl.uint<64>, out %io_r_0_resp_data_3_data: !firrtl.uint<64>, out %io_r_1_req_ready: !firrtl.uint<1>, in %io_r_1_req_valid: !firrtl.uint<1>, in %io_r_1_req_bits_setIdx: !firrtl.uint<10>, out %io_r_1_resp_data_0_data: !firrtl.uint<64>, out %io_r_1_resp_data_1_data: !firrtl.uint<64>, out %io_r_1_resp_data_2_data: !firrtl.uint<64>, out %io_r_1_resp_data_3_data: !firrtl.uint<64>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<10>, in %io_w_req_bits_data_data: !firrtl.uint<64>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %io_r_0_req_ready_0 = firrtl.wire {name = "io_r_0_req_ready"} : !firrtl.uint<1>
      %io_r_0_resp_data_0_data_1 = firrtl.wire {name = "io_r_0_resp_data_0_data"} : !firrtl.uint<64>
      %io_r_0_resp_data_1_data_2 = firrtl.wire {name = "io_r_0_resp_data_1_data"} : !firrtl.uint<64>
      %io_r_0_resp_data_2_data_3 = firrtl.wire {name = "io_r_0_resp_data_2_data"} : !firrtl.uint<64>
      %io_r_0_resp_data_3_data_4 = firrtl.wire {name = "io_r_0_resp_data_3_data"} : !firrtl.uint<64>
      %io_r_1_req_ready_5 = firrtl.wire {name = "io_r_1_req_ready"} : !firrtl.uint<1>
      %io_r_1_resp_data_0_data_6 = firrtl.wire {name = "io_r_1_resp_data_0_data"} : !firrtl.uint<64>
      %io_r_1_resp_data_1_data_7 = firrtl.wire {name = "io_r_1_resp_data_1_data"} : !firrtl.uint<64>
      %io_r_1_resp_data_2_data_8 = firrtl.wire {name = "io_r_1_resp_data_2_data"} : !firrtl.uint<64>
      %io_r_1_resp_data_3_data_9 = firrtl.wire {name = "io_r_1_resp_data_3_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_req_ready, %io_r_0_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_data, %io_r_0_resp_data_0_data_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_1_data, %io_r_0_resp_data_1_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_2_data, %io_r_0_resp_data_2_data_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_3_data, %io_r_0_resp_data_3_data_4 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_req_ready, %io_r_1_req_ready_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_1_resp_data_0_data, %io_r_1_resp_data_0_data_6 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_1_data, %io_r_1_resp_data_1_data_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_2_data, %io_r_1_resp_data_2_data_8 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_3_data, %io_r_1_resp_data_3_data_9 : !firrtl.uint<64>
      %ram_clock, %ram_io_r_req_ready, %ram_io_r_req_valid, %ram_io_r_req_bits_setIdx, %ram_io_r_resp_data_0_data, %ram_io_r_resp_data_1_data, %ram_io_r_resp_data_2_data, %ram_io_r_resp_data_3_data, %ram_io_w_req_valid, %ram_io_w_req_bits_setIdx, %ram_io_w_req_bits_data_data, %ram_io_w_req_bits_waymask = firrtl.instance ram @SRAMTemplate_2(in clock: !firrtl.clock, out io_r_req_ready: !firrtl.uint<1>, in io_r_req_valid: !firrtl.uint<1>, in io_r_req_bits_setIdx: !firrtl.uint<10>, out io_r_resp_data_0_data: !firrtl.uint<64>, out io_r_resp_data_1_data: !firrtl.uint<64>, out io_r_resp_data_2_data: !firrtl.uint<64>, out io_r_resp_data_3_data: !firrtl.uint<64>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<10>, in io_w_req_bits_data_data: !firrtl.uint<64>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<10>
      %3 = firrtl.wire : !firrtl.uint<64>
      %4 = firrtl.wire : !firrtl.uint<64>
      %5 = firrtl.wire : !firrtl.uint<64>
      %6 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %0, %ram_io_r_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_bits_setIdx, %2 : !firrtl.uint<10>
      firrtl.strictconnect %3, %ram_io_r_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %4, %ram_io_r_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %5, %ram_io_r_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %6, %ram_io_r_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %ram_io_w_req_valid, %io_w_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_bits_setIdx, %io_w_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %ram_io_w_req_bits_data_data, %io_w_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %ram_io_w_req_bits_waymask, %io_w_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %ram_clock, %clock : !firrtl.clock
      %readArb_io_in_0_ready, %readArb_io_in_0_valid, %readArb_io_in_0_bits_setIdx, %readArb_io_in_1_ready, %readArb_io_in_1_valid, %readArb_io_in_1_bits_setIdx, %readArb_io_out_ready, %readArb_io_out_valid, %readArb_io_out_bits_setIdx = firrtl.instance readArb @Arbiter2_SRAMBundleA(out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<10>, out io_in_1_ready: !firrtl.uint<1>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<10>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<10>)
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<10>
      firrtl.strictconnect %7, %readArb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_valid, %io_r_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_bits_setIdx, %io_r_0_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %8, %readArb_io_in_1_ready : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_1_valid, %io_r_1_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_1_bits_setIdx, %io_r_1_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %readArb_io_out_ready, %9 : !firrtl.uint<1>
      firrtl.strictconnect %10, %readArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %11, %readArb_io_out_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %io_r_0_req_ready_0, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_1_req_ready_5, %8 : !firrtl.uint<1>
      firrtl.strictconnect %9, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %10 : !firrtl.uint<1>
      firrtl.strictconnect %2, %11 : !firrtl.uint<10>
      %12 = firrtl.and %io_r_0_req_ready_0, %io_r_0_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG, %12 : !firrtl.uint<1>
      %r_0_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 65 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_2_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 129 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_3_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 193 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %13 = firrtl.mux(%REG, %3, %r_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_0_data, %13 : !firrtl.uint<64>
      %14 = firrtl.mux(%REG, %4, %r_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_data, %14 : !firrtl.uint<64>
      %15 = firrtl.mux(%REG, %5, %r_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_2_data, %15 : !firrtl.uint<64>
      %16 = firrtl.mux(%REG, %6, %r_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_3_data, %16 : !firrtl.uint<64>
      %17 = firrtl.mux(%REG, %3, %r_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %18 = firrtl.mux(%REG, %4, %r_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %19 = firrtl.mux(%REG, %5, %r_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %20 = firrtl.mux(%REG, %6, %r_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_0_data_1, %17 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_1_data_2, %18 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_2_data_3, %19 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_3_data_4, %20 : !firrtl.uint<64>
      %21 = firrtl.and %io_r_1_req_ready_5, %io_r_1_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG_1 = firrtl.reg %clock {firrtl.random_init_start = 257 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG_1, %21 : !firrtl.uint<1>
      %r_1_0_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 258 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_1_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 322 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_2_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 386 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_3_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 450 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %22 = firrtl.mux(%REG_1, %3, %r_1_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_0_data, %22 : !firrtl.uint<64>
      %23 = firrtl.mux(%REG_1, %4, %r_1_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_1_data, %23 : !firrtl.uint<64>
      %24 = firrtl.mux(%REG_1, %5, %r_1_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_2_data, %24 : !firrtl.uint<64>
      %25 = firrtl.mux(%REG_1, %6, %r_1_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_3_data, %25 : !firrtl.uint<64>
      %26 = firrtl.mux(%REG_1, %3, %r_1_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %27 = firrtl.mux(%REG_1, %4, %r_1_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %28 = firrtl.mux(%REG_1, %5, %r_1_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %29 = firrtl.mux(%REG_1, %6, %r_1_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_0_data_6, %26 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_1_data_7, %27 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_2_data_8, %28 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_3_data_9, %29 : !firrtl.uint<64>
    }
    firrtl.module private @Arbiter1_SimpleBusReqBundle(out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_addr: !firrtl.uint<32>, in %io_in_0_bits_user: !firrtl.uint<87>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_user: !firrtl.uint<87>) {
      firrtl.strictconnect %io_in_0_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_in_0_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_user, %io_in_0_bits_user : !firrtl.uint<87>
    }
    firrtl.module private @Cache(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_user: !firrtl.uint<87>, in %io_in_resp_ready: !firrtl.uint<1>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, out %io_in_resp_bits_user: !firrtl.uint<87>, in %io_flush: !firrtl.uint<2>, in %io_out_mem_req_ready: !firrtl.uint<1>, out %io_out_mem_req_valid: !firrtl.uint<1>, out %io_out_mem_req_bits_addr: !firrtl.uint<32>, out %io_out_mem_req_bits_cmd: !firrtl.uint<4>, out %io_out_mem_req_bits_wdata: !firrtl.uint<64>, in %io_out_mem_resp_valid: !firrtl.uint<1>, in %io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_out_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_mmio_req_ready: !firrtl.uint<1>, out %io_mmio_req_valid: !firrtl.uint<1>, out %io_mmio_req_bits_addr: !firrtl.uint<32>, out %io_mmio_req_bits_size: !firrtl.uint<3>, out %io_mmio_req_bits_cmd: !firrtl.uint<4>, out %io_mmio_req_bits_wmask: !firrtl.uint<8>, out %io_mmio_req_bits_wdata: !firrtl.uint<64>, in %io_mmio_resp_valid: !firrtl.uint<1>, in %io_mmio_resp_bits_rdata: !firrtl.uint<64>, out %io_empty: !firrtl.uint<1>, in %flushICache__bore: !firrtl.uint<1>) {
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "io_out_coh_req_ready"}
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_out_coh_resp_valid"}
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd_2 = firrtl.wire {name = "io_in_resp_bits_cmd"} : !firrtl.uint<4>
      %io_in_resp_bits_rdata_3 = firrtl.wire {name = "io_in_resp_bits_rdata"} : !firrtl.uint<64>
      %io_in_resp_bits_user_4 = firrtl.wire {name = "io_in_resp_bits_user"} : !firrtl.uint<87>
      %io_out_mem_req_valid_5 = firrtl.wire {name = "io_out_mem_req_valid"} : !firrtl.uint<1>
      %io_out_mem_req_bits_addr_6 = firrtl.wire {name = "io_out_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_out_mem_req_bits_cmd_7 = firrtl.wire {name = "io_out_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_mem_req_bits_wdata_8 = firrtl.wire {name = "io_out_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_mmio_req_valid_9 = firrtl.wire {name = "io_mmio_req_valid"} : !firrtl.uint<1>
      %io_mmio_req_bits_addr_10 = firrtl.wire {name = "io_mmio_req_bits_addr"} : !firrtl.uint<32>
      %io_mmio_req_bits_size_11 = firrtl.wire {name = "io_mmio_req_bits_size"} : !firrtl.uint<3>
      %io_mmio_req_bits_cmd_12 = firrtl.wire {name = "io_mmio_req_bits_cmd"} : !firrtl.uint<4>
      %io_mmio_req_bits_wmask_13 = firrtl.wire {name = "io_mmio_req_bits_wmask"} : !firrtl.uint<8>
      %io_mmio_req_bits_wdata_14 = firrtl.wire {name = "io_mmio_req_bits_wdata"} : !firrtl.uint<64>
      %io_empty_15 = firrtl.wire {name = "io_empty"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_in_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_in_resp_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_resp_bits_user, %io_in_resp_bits_user_4 : !firrtl.uint<87>
      firrtl.strictconnect %io_out_mem_req_valid, %io_out_mem_req_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_mem_req_bits_addr, %io_out_mem_req_bits_addr_6 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_cmd, %io_out_mem_req_bits_cmd_7 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_wdata, %io_out_mem_req_bits_wdata_8 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid, %io_mmio_req_valid_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr, %io_mmio_req_bits_addr_10 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size, %io_mmio_req_bits_size_11 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd, %io_mmio_req_bits_cmd_12 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask, %io_mmio_req_bits_wmask_13 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata, %io_mmio_req_bits_wdata_14 : !firrtl.uint<64>
      firrtl.strictconnect %io_empty, %io_empty_15 : !firrtl.uint<1>
      %s1_clock, %s1_reset, %s1_io_in_ready, %s1_io_in_valid, %s1_io_in_bits_addr, %s1_io_in_bits_user, %s1_io_out_ready, %s1_io_out_valid, %s1_io_out_bits_req_addr, %s1_io_out_bits_req_user, %s1_io_metaReadBus_req_ready, %s1_io_metaReadBus_req_valid, %s1_io_metaReadBus_req_bits_setIdx, %s1_io_dataReadBus_req_ready, %s1_io_dataReadBus_req_valid, %s1_io_dataReadBus_req_bits_setIdx = firrtl.instance s1 @CacheStage1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<32>, in io_in_bits_user: !firrtl.uint<87>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_req_addr: !firrtl.uint<32>, out io_out_bits_req_user: !firrtl.uint<87>, in io_metaReadBus_req_ready: !firrtl.uint<1>, out io_metaReadBus_req_valid: !firrtl.uint<1>, out io_metaReadBus_req_bits_setIdx: !firrtl.uint<7>, in io_dataReadBus_req_ready: !firrtl.uint<1>, out io_dataReadBus_req_valid: !firrtl.uint<1>, out io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<32>
      %3 = firrtl.wire : !firrtl.uint<87>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<32>
      %7 = firrtl.wire : !firrtl.uint<87>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<7>
      %11 = firrtl.wire : !firrtl.uint<19>
      %12 = firrtl.wire : !firrtl.uint<1>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<19>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<19>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<19>
      %21 = firrtl.wire : !firrtl.uint<1>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<1>
      %24 = firrtl.wire : !firrtl.uint<1>
      %25 = firrtl.wire : !firrtl.uint<10>
      %26 = firrtl.wire : !firrtl.uint<64>
      %27 = firrtl.wire : !firrtl.uint<64>
      %28 = firrtl.wire : !firrtl.uint<64>
      %29 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %0, %s1_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s1_io_in_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %s1_io_in_bits_addr, %2 : !firrtl.uint<32>
      firrtl.strictconnect %s1_io_in_bits_user, %3 : !firrtl.uint<87>
      firrtl.strictconnect %s1_io_out_ready, %4 : !firrtl.uint<1>
      firrtl.strictconnect %5, %s1_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %6, %s1_io_out_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %7, %s1_io_out_bits_req_user : !firrtl.uint<87>
      firrtl.strictconnect %s1_io_metaReadBus_req_ready, %8 : !firrtl.uint<1>
      firrtl.strictconnect %9, %s1_io_metaReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %10, %s1_io_metaReadBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %s1_io_dataReadBus_req_ready, %23 : !firrtl.uint<1>
      firrtl.strictconnect %24, %s1_io_dataReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %25, %s1_io_dataReadBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %s1_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s1_reset, %reset : !firrtl.uint<1>
      %s2_clock, %s2_reset, %s2_io_in_ready, %s2_io_in_valid, %s2_io_in_bits_req_addr, %s2_io_in_bits_req_size, %s2_io_in_bits_req_cmd, %s2_io_in_bits_req_wmask, %s2_io_in_bits_req_wdata, %s2_io_in_bits_req_user, %s2_io_out_ready, %s2_io_out_valid, %s2_io_out_bits_req_addr, %s2_io_out_bits_req_size, %s2_io_out_bits_req_cmd, %s2_io_out_bits_req_wmask, %s2_io_out_bits_req_wdata, %s2_io_out_bits_req_user, %s2_io_out_bits_metas_0_tag, %s2_io_out_bits_metas_0_valid, %s2_io_out_bits_metas_0_dirty, %s2_io_out_bits_metas_1_tag, %s2_io_out_bits_metas_1_valid, %s2_io_out_bits_metas_1_dirty, %s2_io_out_bits_metas_2_tag, %s2_io_out_bits_metas_2_valid, %s2_io_out_bits_metas_2_dirty, %s2_io_out_bits_metas_3_tag, %s2_io_out_bits_metas_3_valid, %s2_io_out_bits_metas_3_dirty, %s2_io_out_bits_datas_0_data, %s2_io_out_bits_datas_1_data, %s2_io_out_bits_datas_2_data, %s2_io_out_bits_datas_3_data, %s2_io_out_bits_hit, %s2_io_out_bits_waymask, %s2_io_out_bits_mmio, %s2_io_out_bits_isForwardData, %s2_io_out_bits_forwardData_data_data, %s2_io_out_bits_forwardData_waymask, %s2_io_metaReadResp_0_tag, %s2_io_metaReadResp_0_valid, %s2_io_metaReadResp_0_dirty, %s2_io_metaReadResp_1_tag, %s2_io_metaReadResp_1_valid, %s2_io_metaReadResp_1_dirty, %s2_io_metaReadResp_2_tag, %s2_io_metaReadResp_2_valid, %s2_io_metaReadResp_2_dirty, %s2_io_metaReadResp_3_tag, %s2_io_metaReadResp_3_valid, %s2_io_metaReadResp_3_dirty, %s2_io_dataReadResp_0_data, %s2_io_dataReadResp_1_data, %s2_io_dataReadResp_2_data, %s2_io_dataReadResp_3_data, %s2_io_metaWriteBus_req_valid, %s2_io_metaWriteBus_req_bits_setIdx, %s2_io_metaWriteBus_req_bits_data_tag, %s2_io_metaWriteBus_req_bits_data_dirty, %s2_io_metaWriteBus_req_bits_waymask, %s2_io_dataWriteBus_req_valid, %s2_io_dataWriteBus_req_bits_setIdx, %s2_io_dataWriteBus_req_bits_data_data, %s2_io_dataWriteBus_req_bits_waymask = firrtl.instance s2 @CacheStage2(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_req_addr: !firrtl.uint<32>, in io_in_bits_req_size: !firrtl.uint<3>, in io_in_bits_req_cmd: !firrtl.uint<4>, in io_in_bits_req_wmask: !firrtl.uint<8>, in io_in_bits_req_wdata: !firrtl.uint<64>, in io_in_bits_req_user: !firrtl.uint<87>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_req_addr: !firrtl.uint<32>, out io_out_bits_req_size: !firrtl.uint<3>, out io_out_bits_req_cmd: !firrtl.uint<4>, out io_out_bits_req_wmask: !firrtl.uint<8>, out io_out_bits_req_wdata: !firrtl.uint<64>, out io_out_bits_req_user: !firrtl.uint<87>, out io_out_bits_metas_0_tag: !firrtl.uint<19>, out io_out_bits_metas_0_valid: !firrtl.uint<1>, out io_out_bits_metas_0_dirty: !firrtl.uint<1>, out io_out_bits_metas_1_tag: !firrtl.uint<19>, out io_out_bits_metas_1_valid: !firrtl.uint<1>, out io_out_bits_metas_1_dirty: !firrtl.uint<1>, out io_out_bits_metas_2_tag: !firrtl.uint<19>, out io_out_bits_metas_2_valid: !firrtl.uint<1>, out io_out_bits_metas_2_dirty: !firrtl.uint<1>, out io_out_bits_metas_3_tag: !firrtl.uint<19>, out io_out_bits_metas_3_valid: !firrtl.uint<1>, out io_out_bits_metas_3_dirty: !firrtl.uint<1>, out io_out_bits_datas_0_data: !firrtl.uint<64>, out io_out_bits_datas_1_data: !firrtl.uint<64>, out io_out_bits_datas_2_data: !firrtl.uint<64>, out io_out_bits_datas_3_data: !firrtl.uint<64>, out io_out_bits_hit: !firrtl.uint<1>, out io_out_bits_waymask: !firrtl.uint<4>, out io_out_bits_mmio: !firrtl.uint<1>, out io_out_bits_isForwardData: !firrtl.uint<1>, out io_out_bits_forwardData_data_data: !firrtl.uint<64>, out io_out_bits_forwardData_waymask: !firrtl.uint<4>, in io_metaReadResp_0_tag: !firrtl.uint<19>, in io_metaReadResp_0_valid: !firrtl.uint<1>, in io_metaReadResp_0_dirty: !firrtl.uint<1>, in io_metaReadResp_1_tag: !firrtl.uint<19>, in io_metaReadResp_1_valid: !firrtl.uint<1>, in io_metaReadResp_1_dirty: !firrtl.uint<1>, in io_metaReadResp_2_tag: !firrtl.uint<19>, in io_metaReadResp_2_valid: !firrtl.uint<1>, in io_metaReadResp_2_dirty: !firrtl.uint<1>, in io_metaReadResp_3_tag: !firrtl.uint<19>, in io_metaReadResp_3_valid: !firrtl.uint<1>, in io_metaReadResp_3_dirty: !firrtl.uint<1>, in io_dataReadResp_0_data: !firrtl.uint<64>, in io_dataReadResp_1_data: !firrtl.uint<64>, in io_dataReadResp_2_data: !firrtl.uint<64>, in io_dataReadResp_3_data: !firrtl.uint<64>, in io_metaWriteBus_req_valid: !firrtl.uint<1>, in io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, in io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, in io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, in io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in io_dataWriteBus_req_valid: !firrtl.uint<1>, in io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, in io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, in io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>)
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<32>
      %33 = firrtl.wire : !firrtl.uint<3>
      %34 = firrtl.wire : !firrtl.uint<4>
      %35 = firrtl.wire : !firrtl.uint<8>
      %36 = firrtl.wire : !firrtl.uint<64>
      %37 = firrtl.wire : !firrtl.uint<87>
      %38 = firrtl.wire : !firrtl.uint<1>
      %39 = firrtl.wire : !firrtl.uint<1>
      %40 = firrtl.wire : !firrtl.uint<32>
      %41 = firrtl.wire : !firrtl.uint<3>
      %42 = firrtl.wire : !firrtl.uint<4>
      %43 = firrtl.wire : !firrtl.uint<8>
      %44 = firrtl.wire : !firrtl.uint<64>
      %45 = firrtl.wire : !firrtl.uint<87>
      %46 = firrtl.wire : !firrtl.uint<19>
      %47 = firrtl.wire : !firrtl.uint<1>
      %48 = firrtl.wire : !firrtl.uint<1>
      %49 = firrtl.wire : !firrtl.uint<19>
      %50 = firrtl.wire : !firrtl.uint<1>
      %51 = firrtl.wire : !firrtl.uint<1>
      %52 = firrtl.wire : !firrtl.uint<19>
      %53 = firrtl.wire : !firrtl.uint<1>
      %54 = firrtl.wire : !firrtl.uint<1>
      %55 = firrtl.wire : !firrtl.uint<19>
      %56 = firrtl.wire : !firrtl.uint<1>
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<64>
      %59 = firrtl.wire : !firrtl.uint<64>
      %60 = firrtl.wire : !firrtl.uint<64>
      %61 = firrtl.wire : !firrtl.uint<64>
      %62 = firrtl.wire : !firrtl.uint<1>
      %63 = firrtl.wire : !firrtl.uint<4>
      %64 = firrtl.wire : !firrtl.uint<1>
      %65 = firrtl.wire : !firrtl.uint<1>
      %66 = firrtl.wire : !firrtl.uint<64>
      %67 = firrtl.wire : !firrtl.uint<4>
      %68 = firrtl.wire : !firrtl.uint<19>
      %69 = firrtl.wire : !firrtl.uint<1>
      %70 = firrtl.wire : !firrtl.uint<1>
      %71 = firrtl.wire : !firrtl.uint<19>
      %72 = firrtl.wire : !firrtl.uint<1>
      %73 = firrtl.wire : !firrtl.uint<1>
      %74 = firrtl.wire : !firrtl.uint<19>
      %75 = firrtl.wire : !firrtl.uint<1>
      %76 = firrtl.wire : !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<19>
      %78 = firrtl.wire : !firrtl.uint<1>
      %79 = firrtl.wire : !firrtl.uint<1>
      %80 = firrtl.wire : !firrtl.uint<64>
      %81 = firrtl.wire : !firrtl.uint<64>
      %82 = firrtl.wire : !firrtl.uint<64>
      %83 = firrtl.wire : !firrtl.uint<64>
      %84 = firrtl.wire : !firrtl.uint<1>
      %85 = firrtl.wire : !firrtl.uint<7>
      %86 = firrtl.wire : !firrtl.uint<19>
      %87 = firrtl.wire : !firrtl.uint<1>
      %88 = firrtl.wire : !firrtl.uint<4>
      %89 = firrtl.wire : !firrtl.uint<1>
      %90 = firrtl.wire : !firrtl.uint<10>
      %91 = firrtl.wire : !firrtl.uint<64>
      %92 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %30, %s2_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_in_valid, %31 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_in_bits_req_addr, %32 : !firrtl.uint<32>
      firrtl.strictconnect %s2_io_in_bits_req_size, %33 : !firrtl.uint<3>
      firrtl.strictconnect %s2_io_in_bits_req_cmd, %34 : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_in_bits_req_wmask, %35 : !firrtl.uint<8>
      firrtl.strictconnect %s2_io_in_bits_req_wdata, %36 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_in_bits_req_user, %37 : !firrtl.uint<87>
      firrtl.strictconnect %s2_io_out_ready, %38 : !firrtl.uint<1>
      firrtl.strictconnect %39, %s2_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %40, %s2_io_out_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %41, %s2_io_out_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %42, %s2_io_out_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %43, %s2_io_out_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %44, %s2_io_out_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %45, %s2_io_out_bits_req_user : !firrtl.uint<87>
      firrtl.strictconnect %46, %s2_io_out_bits_metas_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %47, %s2_io_out_bits_metas_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %48, %s2_io_out_bits_metas_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %49, %s2_io_out_bits_metas_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %50, %s2_io_out_bits_metas_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %51, %s2_io_out_bits_metas_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %52, %s2_io_out_bits_metas_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %53, %s2_io_out_bits_metas_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %54, %s2_io_out_bits_metas_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %55, %s2_io_out_bits_metas_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %56, %s2_io_out_bits_metas_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %57, %s2_io_out_bits_metas_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %58, %s2_io_out_bits_datas_0_data : !firrtl.uint<64>
      firrtl.strictconnect %59, %s2_io_out_bits_datas_1_data : !firrtl.uint<64>
      firrtl.strictconnect %60, %s2_io_out_bits_datas_2_data : !firrtl.uint<64>
      firrtl.strictconnect %61, %s2_io_out_bits_datas_3_data : !firrtl.uint<64>
      firrtl.strictconnect %62, %s2_io_out_bits_hit : !firrtl.uint<1>
      firrtl.strictconnect %63, %s2_io_out_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %64, %s2_io_out_bits_mmio : !firrtl.uint<1>
      firrtl.strictconnect %65, %s2_io_out_bits_isForwardData : !firrtl.uint<1>
      firrtl.strictconnect %66, %s2_io_out_bits_forwardData_data_data : !firrtl.uint<64>
      firrtl.strictconnect %67, %s2_io_out_bits_forwardData_waymask : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_metaReadResp_0_tag, %68 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_0_valid, %69 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_0_dirty, %70 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_1_tag, %71 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_1_valid, %72 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_1_dirty, %73 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_2_tag, %74 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_2_valid, %75 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_2_dirty, %76 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_3_tag, %77 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_3_valid, %78 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_3_dirty, %79 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_dataReadResp_0_data, %80 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_1_data, %81 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_2_data, %82 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_3_data, %83 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_metaWriteBus_req_valid, %84 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_setIdx, %85 : !firrtl.uint<7>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_data_tag, %86 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_data_dirty, %87 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_waymask, %88 : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_dataWriteBus_req_valid, %89 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_setIdx, %90 : !firrtl.uint<10>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_data_data, %91 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_waymask, %92 : !firrtl.uint<4>
      firrtl.strictconnect %s2_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s2_reset, %reset : !firrtl.uint<1>
      %s3_clock, %s3_reset, %s3_io_in_ready, %s3_io_in_valid, %s3_io_in_bits_req_addr, %s3_io_in_bits_req_size, %s3_io_in_bits_req_cmd, %s3_io_in_bits_req_wmask, %s3_io_in_bits_req_wdata, %s3_io_in_bits_req_user, %s3_io_in_bits_metas_0_tag, %s3_io_in_bits_metas_0_valid, %s3_io_in_bits_metas_0_dirty, %s3_io_in_bits_metas_1_tag, %s3_io_in_bits_metas_1_valid, %s3_io_in_bits_metas_1_dirty, %s3_io_in_bits_metas_2_tag, %s3_io_in_bits_metas_2_valid, %s3_io_in_bits_metas_2_dirty, %s3_io_in_bits_metas_3_tag, %s3_io_in_bits_metas_3_valid, %s3_io_in_bits_metas_3_dirty, %s3_io_in_bits_datas_0_data, %s3_io_in_bits_datas_1_data, %s3_io_in_bits_datas_2_data, %s3_io_in_bits_datas_3_data, %s3_io_in_bits_hit, %s3_io_in_bits_waymask, %s3_io_in_bits_mmio, %s3_io_in_bits_isForwardData, %s3_io_in_bits_forwardData_data_data, %s3_io_in_bits_forwardData_waymask, %s3_io_out_ready, %s3_io_out_valid, %s3_io_out_bits_cmd, %s3_io_out_bits_rdata, %s3_io_out_bits_user, %s3_io_isFinish, %s3_io_flush, %s3_io_dataReadBus_req_ready, %s3_io_dataReadBus_req_valid, %s3_io_dataReadBus_req_bits_setIdx, %s3_io_dataReadBus_resp_data_0_data, %s3_io_dataReadBus_resp_data_1_data, %s3_io_dataReadBus_resp_data_2_data, %s3_io_dataReadBus_resp_data_3_data, %s3_io_dataWriteBus_req_valid, %s3_io_dataWriteBus_req_bits_setIdx, %s3_io_dataWriteBus_req_bits_data_data, %s3_io_dataWriteBus_req_bits_waymask, %s3_io_metaWriteBus_req_valid, %s3_io_metaWriteBus_req_bits_setIdx, %s3_io_metaWriteBus_req_bits_data_tag, %s3_io_metaWriteBus_req_bits_data_dirty, %s3_io_metaWriteBus_req_bits_waymask, %s3_io_mem_req_ready, %s3_io_mem_req_valid, %s3_io_mem_req_bits_addr, %s3_io_mem_req_bits_cmd, %s3_io_mem_req_bits_wdata, %s3_io_mem_resp_valid, %s3_io_mem_resp_bits_cmd, %s3_io_mem_resp_bits_rdata, %s3_io_mmio_req_ready, %s3_io_mmio_req_valid, %s3_io_mmio_req_bits_addr, %s3_io_mmio_req_bits_size, %s3_io_mmio_req_bits_cmd, %s3_io_mmio_req_bits_wmask, %s3_io_mmio_req_bits_wdata, %s3_io_mmio_resp_valid, %s3_io_mmio_resp_bits_rdata, %s3_io_dataReadRespToL1 = firrtl.instance s3 @CacheStage3(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_req_addr: !firrtl.uint<32>, in io_in_bits_req_size: !firrtl.uint<3>, in io_in_bits_req_cmd: !firrtl.uint<4>, in io_in_bits_req_wmask: !firrtl.uint<8>, in io_in_bits_req_wdata: !firrtl.uint<64>, in io_in_bits_req_user: !firrtl.uint<87>, in io_in_bits_metas_0_tag: !firrtl.uint<19>, in io_in_bits_metas_0_valid: !firrtl.uint<1>, in io_in_bits_metas_0_dirty: !firrtl.uint<1>, in io_in_bits_metas_1_tag: !firrtl.uint<19>, in io_in_bits_metas_1_valid: !firrtl.uint<1>, in io_in_bits_metas_1_dirty: !firrtl.uint<1>, in io_in_bits_metas_2_tag: !firrtl.uint<19>, in io_in_bits_metas_2_valid: !firrtl.uint<1>, in io_in_bits_metas_2_dirty: !firrtl.uint<1>, in io_in_bits_metas_3_tag: !firrtl.uint<19>, in io_in_bits_metas_3_valid: !firrtl.uint<1>, in io_in_bits_metas_3_dirty: !firrtl.uint<1>, in io_in_bits_datas_0_data: !firrtl.uint<64>, in io_in_bits_datas_1_data: !firrtl.uint<64>, in io_in_bits_datas_2_data: !firrtl.uint<64>, in io_in_bits_datas_3_data: !firrtl.uint<64>, in io_in_bits_hit: !firrtl.uint<1>, in io_in_bits_waymask: !firrtl.uint<4>, in io_in_bits_mmio: !firrtl.uint<1>, in io_in_bits_isForwardData: !firrtl.uint<1>, in io_in_bits_forwardData_data_data: !firrtl.uint<64>, in io_in_bits_forwardData_waymask: !firrtl.uint<4>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_rdata: !firrtl.uint<64>, out io_out_bits_user: !firrtl.uint<87>, out io_isFinish: !firrtl.uint<1>, in io_flush: !firrtl.uint<1>, in io_dataReadBus_req_ready: !firrtl.uint<1>, out io_dataReadBus_req_valid: !firrtl.uint<1>, out io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>, in io_dataReadBus_resp_data_0_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_1_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_2_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_3_data: !firrtl.uint<64>, out io_dataWriteBus_req_valid: !firrtl.uint<1>, out io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, out io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, out io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>, out io_metaWriteBus_req_valid: !firrtl.uint<1>, out io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, out io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, out io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, out io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in io_mem_req_ready: !firrtl.uint<1>, out io_mem_req_valid: !firrtl.uint<1>, out io_mem_req_bits_addr: !firrtl.uint<32>, out io_mem_req_bits_cmd: !firrtl.uint<4>, out io_mem_req_bits_wdata: !firrtl.uint<64>, in io_mem_resp_valid: !firrtl.uint<1>, in io_mem_resp_bits_cmd: !firrtl.uint<4>, in io_mem_resp_bits_rdata: !firrtl.uint<64>, in io_mmio_req_ready: !firrtl.uint<1>, out io_mmio_req_valid: !firrtl.uint<1>, out io_mmio_req_bits_addr: !firrtl.uint<32>, out io_mmio_req_bits_size: !firrtl.uint<3>, out io_mmio_req_bits_cmd: !firrtl.uint<4>, out io_mmio_req_bits_wmask: !firrtl.uint<8>, out io_mmio_req_bits_wdata: !firrtl.uint<64>, in io_mmio_resp_valid: !firrtl.uint<1>, in io_mmio_resp_bits_rdata: !firrtl.uint<64>, out io_dataReadRespToL1: !firrtl.uint<1>)
      %93 = firrtl.wire : !firrtl.uint<1>
      %94 = firrtl.wire : !firrtl.uint<1>
      %95 = firrtl.wire : !firrtl.uint<32>
      %96 = firrtl.wire : !firrtl.uint<3>
      %97 = firrtl.wire : !firrtl.uint<4>
      %98 = firrtl.wire : !firrtl.uint<8>
      %99 = firrtl.wire : !firrtl.uint<64>
      %100 = firrtl.wire : !firrtl.uint<87>
      %101 = firrtl.wire : !firrtl.uint<19>
      %102 = firrtl.wire : !firrtl.uint<1>
      %103 = firrtl.wire : !firrtl.uint<1>
      %104 = firrtl.wire : !firrtl.uint<19>
      %105 = firrtl.wire : !firrtl.uint<1>
      %106 = firrtl.wire : !firrtl.uint<1>
      %107 = firrtl.wire : !firrtl.uint<19>
      %108 = firrtl.wire : !firrtl.uint<1>
      %109 = firrtl.wire : !firrtl.uint<1>
      %110 = firrtl.wire : !firrtl.uint<19>
      %111 = firrtl.wire : !firrtl.uint<1>
      %112 = firrtl.wire : !firrtl.uint<1>
      %113 = firrtl.wire : !firrtl.uint<64>
      %114 = firrtl.wire : !firrtl.uint<64>
      %115 = firrtl.wire : !firrtl.uint<64>
      %116 = firrtl.wire : !firrtl.uint<64>
      %117 = firrtl.wire : !firrtl.uint<1>
      %118 = firrtl.wire : !firrtl.uint<4>
      %119 = firrtl.wire : !firrtl.uint<1>
      %120 = firrtl.wire : !firrtl.uint<1>
      %121 = firrtl.wire : !firrtl.uint<64>
      %122 = firrtl.wire : !firrtl.uint<4>
      %123 = firrtl.wire : !firrtl.uint<1>
      %124 = firrtl.wire : !firrtl.uint<4>
      %125 = firrtl.wire : !firrtl.uint<64>
      %126 = firrtl.wire : !firrtl.uint<87>
      %127 = firrtl.wire : !firrtl.uint<1>
      %128 = firrtl.wire : !firrtl.uint<1>
      %129 = firrtl.wire : !firrtl.uint<1>
      %130 = firrtl.wire : !firrtl.uint<1>
      %131 = firrtl.wire : !firrtl.uint<10>
      %132 = firrtl.wire : !firrtl.uint<64>
      %133 = firrtl.wire : !firrtl.uint<64>
      %134 = firrtl.wire : !firrtl.uint<64>
      %135 = firrtl.wire : !firrtl.uint<64>
      %136 = firrtl.wire : !firrtl.uint<1>
      %137 = firrtl.wire : !firrtl.uint<10>
      %138 = firrtl.wire : !firrtl.uint<64>
      %139 = firrtl.wire : !firrtl.uint<4>
      %140 = firrtl.wire : !firrtl.uint<1>
      %141 = firrtl.wire : !firrtl.uint<7>
      %142 = firrtl.wire : !firrtl.uint<19>
      %143 = firrtl.wire : !firrtl.uint<1>
      %144 = firrtl.wire : !firrtl.uint<4>
      %145 = firrtl.wire : !firrtl.uint<1>
      %146 = firrtl.wire : !firrtl.uint<32>
      %147 = firrtl.wire : !firrtl.uint<4>
      %148 = firrtl.wire : !firrtl.uint<64>
      %149 = firrtl.wire : !firrtl.uint<1>
      %150 = firrtl.wire : !firrtl.uint<32>
      %151 = firrtl.wire : !firrtl.uint<3>
      %152 = firrtl.wire : !firrtl.uint<4>
      %153 = firrtl.wire : !firrtl.uint<8>
      %154 = firrtl.wire : !firrtl.uint<64>
      %155 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %93, %s3_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_valid, %94 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_req_addr, %95 : !firrtl.uint<32>
      firrtl.strictconnect %s3_io_in_bits_req_size, %96 : !firrtl.uint<3>
      firrtl.strictconnect %s3_io_in_bits_req_cmd, %97 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_req_wmask, %98 : !firrtl.uint<8>
      firrtl.strictconnect %s3_io_in_bits_req_wdata, %99 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_req_user, %100 : !firrtl.uint<87>
      firrtl.strictconnect %s3_io_in_bits_metas_0_tag, %101 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_0_valid, %102 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_0_dirty, %103 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_1_tag, %104 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_1_valid, %105 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_1_dirty, %106 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_2_tag, %107 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_2_valid, %108 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_2_dirty, %109 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_3_tag, %110 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_3_valid, %111 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_3_dirty, %112 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_datas_0_data, %113 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_1_data, %114 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_2_data, %115 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_3_data, %116 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_hit, %117 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_waymask, %118 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_mmio, %119 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_isForwardData, %120 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_forwardData_data_data, %121 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_forwardData_waymask, %122 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_out_ready, %io_in_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %123, %s3_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %124, %s3_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %125, %s3_io_out_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %126, %s3_io_out_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %127, %s3_io_isFinish : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_flush, %128 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_dataReadBus_req_ready, %129 : !firrtl.uint<1>
      firrtl.strictconnect %130, %s3_io_dataReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %131, %s3_io_dataReadBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_0_data, %132 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_1_data, %133 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_2_data, %134 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_3_data, %135 : !firrtl.uint<64>
      firrtl.strictconnect %136, %s3_io_dataWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %137, %s3_io_dataWriteBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %138, %s3_io_dataWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %139, %s3_io_dataWriteBus_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %140, %s3_io_metaWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %141, %s3_io_metaWriteBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %142, %s3_io_metaWriteBus_req_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %143, %s3_io_metaWriteBus_req_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %144, %s3_io_metaWriteBus_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_mem_req_ready, %io_out_mem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %145, %s3_io_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %146, %s3_io_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %147, %s3_io_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %148, %s3_io_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_mem_resp_valid, %io_out_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_mem_resp_bits_cmd, %io_out_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_mem_resp_bits_rdata, %io_out_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_mmio_req_ready, %io_mmio_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %149, %s3_io_mmio_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %150, %s3_io_mmio_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %151, %s3_io_mmio_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %152, %s3_io_mmio_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %153, %s3_io_mmio_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %154, %s3_io_mmio_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_mmio_resp_valid, %io_mmio_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_mmio_resp_bits_rdata, %io_mmio_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %155, %s3_io_dataReadRespToL1 : !firrtl.uint<1>
      firrtl.strictconnect %s3_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s3_reset, %reset : !firrtl.uint<1>
      %metaArray_clock, %metaArray_reset, %metaArray_io_r_0_req_ready, %metaArray_io_r_0_req_valid, %metaArray_io_r_0_req_bits_setIdx, %metaArray_io_r_0_resp_data_0_tag, %metaArray_io_r_0_resp_data_0_valid, %metaArray_io_r_0_resp_data_0_dirty, %metaArray_io_r_0_resp_data_1_tag, %metaArray_io_r_0_resp_data_1_valid, %metaArray_io_r_0_resp_data_1_dirty, %metaArray_io_r_0_resp_data_2_tag, %metaArray_io_r_0_resp_data_2_valid, %metaArray_io_r_0_resp_data_2_dirty, %metaArray_io_r_0_resp_data_3_tag, %metaArray_io_r_0_resp_data_3_valid, %metaArray_io_r_0_resp_data_3_dirty, %metaArray_io_w_req_valid, %metaArray_io_w_req_bits_setIdx, %metaArray_io_w_req_bits_data_tag, %metaArray_io_w_req_bits_data_dirty, %metaArray_io_w_req_bits_waymask = firrtl.instance metaArray @SRAMTemplateWithArbiter(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_0_req_ready: !firrtl.uint<1>, in io_r_0_req_valid: !firrtl.uint<1>, in io_r_0_req_bits_setIdx: !firrtl.uint<7>, out io_r_0_resp_data_0_tag: !firrtl.uint<19>, out io_r_0_resp_data_0_valid: !firrtl.uint<1>, out io_r_0_resp_data_0_dirty: !firrtl.uint<1>, out io_r_0_resp_data_1_tag: !firrtl.uint<19>, out io_r_0_resp_data_1_valid: !firrtl.uint<1>, out io_r_0_resp_data_1_dirty: !firrtl.uint<1>, out io_r_0_resp_data_2_tag: !firrtl.uint<19>, out io_r_0_resp_data_2_valid: !firrtl.uint<1>, out io_r_0_resp_data_2_dirty: !firrtl.uint<1>, out io_r_0_resp_data_3_tag: !firrtl.uint<19>, out io_r_0_resp_data_3_valid: !firrtl.uint<1>, out io_r_0_resp_data_3_dirty: !firrtl.uint<1>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<7>, in io_w_req_bits_data_tag: !firrtl.uint<19>, in io_w_req_bits_data_dirty: !firrtl.uint<1>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %156 = firrtl.wire : !firrtl.uint<1>
      %157 = firrtl.wire : !firrtl.uint<1>
      %158 = firrtl.wire : !firrtl.uint<7>
      %159 = firrtl.wire : !firrtl.uint<19>
      %160 = firrtl.wire : !firrtl.uint<1>
      %161 = firrtl.wire : !firrtl.uint<1>
      %162 = firrtl.wire : !firrtl.uint<19>
      %163 = firrtl.wire : !firrtl.uint<1>
      %164 = firrtl.wire : !firrtl.uint<1>
      %165 = firrtl.wire : !firrtl.uint<19>
      %166 = firrtl.wire : !firrtl.uint<1>
      %167 = firrtl.wire : !firrtl.uint<1>
      %168 = firrtl.wire : !firrtl.uint<19>
      %169 = firrtl.wire : !firrtl.uint<1>
      %170 = firrtl.wire : !firrtl.uint<1>
      %171 = firrtl.wire : !firrtl.uint<1>
      %172 = firrtl.wire : !firrtl.uint<7>
      %173 = firrtl.wire : !firrtl.uint<19>
      %174 = firrtl.wire : !firrtl.uint<1>
      %175 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %156, %metaArray_io_r_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_r_0_req_valid, %157 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_r_0_req_bits_setIdx, %158 : !firrtl.uint<7>
      firrtl.strictconnect %159, %metaArray_io_r_0_resp_data_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %160, %metaArray_io_r_0_resp_data_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %161, %metaArray_io_r_0_resp_data_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %162, %metaArray_io_r_0_resp_data_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %163, %metaArray_io_r_0_resp_data_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %164, %metaArray_io_r_0_resp_data_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %165, %metaArray_io_r_0_resp_data_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %166, %metaArray_io_r_0_resp_data_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %167, %metaArray_io_r_0_resp_data_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %168, %metaArray_io_r_0_resp_data_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %169, %metaArray_io_r_0_resp_data_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %170, %metaArray_io_r_0_resp_data_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_valid, %171 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_bits_setIdx, %172 : !firrtl.uint<7>
      firrtl.strictconnect %metaArray_io_w_req_bits_data_tag, %173 : !firrtl.uint<19>
      firrtl.strictconnect %metaArray_io_w_req_bits_data_dirty, %174 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_bits_waymask, %175 : !firrtl.uint<4>
      firrtl.strictconnect %metaArray_clock, %clock : !firrtl.clock
      %dataArray_clock, %dataArray_reset, %dataArray_io_r_0_req_ready, %dataArray_io_r_0_req_valid, %dataArray_io_r_0_req_bits_setIdx, %dataArray_io_r_0_resp_data_0_data, %dataArray_io_r_0_resp_data_1_data, %dataArray_io_r_0_resp_data_2_data, %dataArray_io_r_0_resp_data_3_data, %dataArray_io_r_1_req_ready, %dataArray_io_r_1_req_valid, %dataArray_io_r_1_req_bits_setIdx, %dataArray_io_r_1_resp_data_0_data, %dataArray_io_r_1_resp_data_1_data, %dataArray_io_r_1_resp_data_2_data, %dataArray_io_r_1_resp_data_3_data, %dataArray_io_w_req_valid, %dataArray_io_w_req_bits_setIdx, %dataArray_io_w_req_bits_data_data, %dataArray_io_w_req_bits_waymask = firrtl.instance dataArray @SRAMTemplateWithArbiter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_0_req_ready: !firrtl.uint<1>, in io_r_0_req_valid: !firrtl.uint<1>, in io_r_0_req_bits_setIdx: !firrtl.uint<10>, out io_r_0_resp_data_0_data: !firrtl.uint<64>, out io_r_0_resp_data_1_data: !firrtl.uint<64>, out io_r_0_resp_data_2_data: !firrtl.uint<64>, out io_r_0_resp_data_3_data: !firrtl.uint<64>, out io_r_1_req_ready: !firrtl.uint<1>, in io_r_1_req_valid: !firrtl.uint<1>, in io_r_1_req_bits_setIdx: !firrtl.uint<10>, out io_r_1_resp_data_0_data: !firrtl.uint<64>, out io_r_1_resp_data_1_data: !firrtl.uint<64>, out io_r_1_resp_data_2_data: !firrtl.uint<64>, out io_r_1_resp_data_3_data: !firrtl.uint<64>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<10>, in io_w_req_bits_data_data: !firrtl.uint<64>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %176 = firrtl.wire : !firrtl.uint<1>
      %177 = firrtl.wire : !firrtl.uint<1>
      %178 = firrtl.wire : !firrtl.uint<10>
      %179 = firrtl.wire : !firrtl.uint<64>
      %180 = firrtl.wire : !firrtl.uint<64>
      %181 = firrtl.wire : !firrtl.uint<64>
      %182 = firrtl.wire : !firrtl.uint<64>
      %183 = firrtl.wire : !firrtl.uint<1>
      %184 = firrtl.wire : !firrtl.uint<1>
      %185 = firrtl.wire : !firrtl.uint<10>
      %186 = firrtl.wire : !firrtl.uint<64>
      %187 = firrtl.wire : !firrtl.uint<64>
      %188 = firrtl.wire : !firrtl.uint<64>
      %189 = firrtl.wire : !firrtl.uint<64>
      %190 = firrtl.wire : !firrtl.uint<1>
      %191 = firrtl.wire : !firrtl.uint<10>
      %192 = firrtl.wire : !firrtl.uint<64>
      %193 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %176, %dataArray_io_r_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_0_req_valid, %177 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_0_req_bits_setIdx, %178 : !firrtl.uint<10>
      firrtl.strictconnect %179, %dataArray_io_r_0_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %180, %dataArray_io_r_0_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %181, %dataArray_io_r_0_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %182, %dataArray_io_r_0_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %183, %dataArray_io_r_1_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_1_req_valid, %184 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_1_req_bits_setIdx, %185 : !firrtl.uint<10>
      firrtl.strictconnect %186, %dataArray_io_r_1_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %187, %dataArray_io_r_1_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %188, %dataArray_io_r_1_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %189, %dataArray_io_r_1_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %dataArray_io_w_req_valid, %190 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_w_req_bits_setIdx, %191 : !firrtl.uint<10>
      firrtl.strictconnect %dataArray_io_w_req_bits_data_data, %192 : !firrtl.uint<64>
      firrtl.strictconnect %dataArray_io_w_req_bits_waymask, %193 : !firrtl.uint<4>
      firrtl.strictconnect %dataArray_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dataArray_reset, %reset : !firrtl.uint<1>
      %_metaArray_reset_T_1 = firrtl.or %reset, %flushICache__bore {name = "_metaArray_reset_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaArray_reset, %_metaArray_reset_T_1 : !firrtl.uint<1>
      %arb_io_in_0_ready, %arb_io_in_0_valid, %arb_io_in_0_bits_addr, %arb_io_in_0_bits_user, %arb_io_out_ready, %arb_io_out_valid, %arb_io_out_bits_addr, %arb_io_out_bits_user = firrtl.instance arb @Arbiter1_SimpleBusReqBundle(out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_addr: !firrtl.uint<32>, in io_in_0_bits_user: !firrtl.uint<87>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_user: !firrtl.uint<87>)
      %194 = firrtl.wire : !firrtl.uint<1>
      %195 = firrtl.wire : !firrtl.uint<1>
      %196 = firrtl.wire : !firrtl.uint<1>
      %197 = firrtl.wire : !firrtl.uint<32>
      %198 = firrtl.wire : !firrtl.uint<87>
      firrtl.strictconnect %194, %arb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_0_valid, %io_in_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_0_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %arb_io_in_0_bits_user, %io_in_req_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %arb_io_out_ready, %195 : !firrtl.uint<1>
      firrtl.strictconnect %196, %arb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %197, %arb_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %198, %arb_io_out_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %io_in_req_ready_0, %194 : !firrtl.uint<1>
      firrtl.strictconnect %195, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %196 : !firrtl.uint<1>
      firrtl.strictconnect %2, %197 : !firrtl.uint<32>
      firrtl.strictconnect %3, %198 : !firrtl.uint<87>
      %199 = firrtl.and %38, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %200 = firrtl.bits %io_flush 0 to 0 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %201 = firrtl.mux(%199, %c0_ui1, %valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_s2_io_in_bits_T = firrtl.and %5, %30 {name = "_s2_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %202 = firrtl.mux(%_s2_io_in_bits_T, %c1_ui1, %201) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %203 = firrtl.mux(%200, %c0_ui1, %202) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid, %203 : !firrtl.uint<1>
      firrtl.strictconnect %4, %30 : !firrtl.uint<1>
      %s2_io_in_bits_r_req_addr = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %s2_io_in_bits_r_req_size = firrtl.reg %clock {firrtl.random_init_start = 33 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %s2_io_in_bits_r_req_cmd = firrtl.reg %clock {firrtl.random_init_start = 36 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s2_io_in_bits_r_req_wmask = firrtl.reg %clock {firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %s2_io_in_bits_r_req_wdata = firrtl.reg %clock {firrtl.random_init_start = 48 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s2_io_in_bits_r_req_user = firrtl.reg %clock {firrtl.random_init_start = 112 : ui64} : !firrtl.clock, !firrtl.uint<87>
      %204 = firrtl.mux(%_s2_io_in_bits_T, %6, %s2_io_in_bits_r_req_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %s2_io_in_bits_r_req_addr, %204 : !firrtl.uint<32>
      %205 = firrtl.mux(%_s2_io_in_bits_T, %c3_ui3, %s2_io_in_bits_r_req_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %s2_io_in_bits_r_req_size, %205 : !firrtl.uint<3>
      %206 = firrtl.mux(%_s2_io_in_bits_T, %c0_ui4, %s2_io_in_bits_r_req_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s2_io_in_bits_r_req_cmd, %206 : !firrtl.uint<4>
      %207 = firrtl.mux(%_s2_io_in_bits_T, %c0_ui8, %s2_io_in_bits_r_req_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %s2_io_in_bits_r_req_wmask, %207 : !firrtl.uint<8>
      %208 = firrtl.mux(%_s2_io_in_bits_T, %c0_ui64, %s2_io_in_bits_r_req_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s2_io_in_bits_r_req_wdata, %208 : !firrtl.uint<64>
      %209 = firrtl.mux(%_s2_io_in_bits_T, %7, %s2_io_in_bits_r_req_user) : (!firrtl.uint<1>, !firrtl.uint<87>, !firrtl.uint<87>) -> !firrtl.uint<87>
      firrtl.strictconnect %s2_io_in_bits_r_req_user, %209 : !firrtl.uint<87>
      firrtl.strictconnect %37, %s2_io_in_bits_r_req_user : !firrtl.uint<87>
      firrtl.strictconnect %36, %s2_io_in_bits_r_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %35, %s2_io_in_bits_r_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %34, %s2_io_in_bits_r_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %33, %s2_io_in_bits_r_req_size : !firrtl.uint<3>
      firrtl.strictconnect %32, %s2_io_in_bits_r_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %31, %valid : !firrtl.uint<1>
      %_s3_io_flush_T = firrtl.bits %io_flush 1 to 1 {name = "_s3_io_flush_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %valid_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 199 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %210 = firrtl.mux(%127, %c0_ui1, %valid_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_s3_io_in_bits_T = firrtl.and %39, %93 {name = "_s3_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %211 = firrtl.mux(%_s3_io_in_bits_T, %c1_ui1, %210) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %212 = firrtl.mux(%_s3_io_flush_T, %c0_ui1, %211) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid_1, %212 : !firrtl.uint<1>
      firrtl.strictconnect %38, %93 : !firrtl.uint<1>
      %s3_io_in_bits_r_req_addr = firrtl.reg %clock {firrtl.random_init_start = 200 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %s3_io_in_bits_r_req_size = firrtl.reg %clock {firrtl.random_init_start = 232 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %s3_io_in_bits_r_req_cmd = firrtl.reg %clock {firrtl.random_init_start = 235 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s3_io_in_bits_r_req_wmask = firrtl.reg %clock {firrtl.random_init_start = 239 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %s3_io_in_bits_r_req_wdata = firrtl.reg %clock {firrtl.random_init_start = 247 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_req_user = firrtl.reg %clock {firrtl.random_init_start = 311 : ui64} : !firrtl.clock, !firrtl.uint<87>
      %s3_io_in_bits_r_metas_0_tag = firrtl.reg %clock {firrtl.random_init_start = 398 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_0_valid = firrtl.reg %clock {firrtl.random_init_start = 417 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_0_dirty = firrtl.reg %clock {firrtl.random_init_start = 418 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_1_tag = firrtl.reg %clock {firrtl.random_init_start = 419 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_1_valid = firrtl.reg %clock {firrtl.random_init_start = 438 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_1_dirty = firrtl.reg %clock {firrtl.random_init_start = 439 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_2_tag = firrtl.reg %clock {firrtl.random_init_start = 440 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_2_valid = firrtl.reg %clock {firrtl.random_init_start = 459 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_2_dirty = firrtl.reg %clock {firrtl.random_init_start = 460 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_3_tag = firrtl.reg %clock {firrtl.random_init_start = 461 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_3_valid = firrtl.reg %clock {firrtl.random_init_start = 480 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_3_dirty = firrtl.reg %clock {firrtl.random_init_start = 481 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_datas_0_data = firrtl.reg %clock {firrtl.random_init_start = 482 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_1_data = firrtl.reg %clock {firrtl.random_init_start = 546 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_2_data = firrtl.reg %clock {firrtl.random_init_start = 610 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_3_data = firrtl.reg %clock {firrtl.random_init_start = 674 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_hit = firrtl.reg %clock {firrtl.random_init_start = 738 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_waymask = firrtl.reg %clock {firrtl.random_init_start = 739 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s3_io_in_bits_r_mmio = firrtl.reg %clock {firrtl.random_init_start = 743 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_isForwardData = firrtl.reg %clock {firrtl.random_init_start = 744 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_forwardData_data_data = firrtl.reg %clock {firrtl.random_init_start = 755 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_forwardData_waymask = firrtl.reg %clock {firrtl.random_init_start = 819 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %213 = firrtl.mux(%_s3_io_in_bits_T, %40, %s3_io_in_bits_r_req_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %s3_io_in_bits_r_req_addr, %213 : !firrtl.uint<32>
      %214 = firrtl.mux(%_s3_io_in_bits_T, %41, %s3_io_in_bits_r_req_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %s3_io_in_bits_r_req_size, %214 : !firrtl.uint<3>
      %215 = firrtl.mux(%_s3_io_in_bits_T, %42, %s3_io_in_bits_r_req_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_req_cmd, %215 : !firrtl.uint<4>
      %216 = firrtl.mux(%_s3_io_in_bits_T, %43, %s3_io_in_bits_r_req_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %s3_io_in_bits_r_req_wmask, %216 : !firrtl.uint<8>
      %217 = firrtl.mux(%_s3_io_in_bits_T, %44, %s3_io_in_bits_r_req_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_req_wdata, %217 : !firrtl.uint<64>
      %218 = firrtl.mux(%_s3_io_in_bits_T, %45, %s3_io_in_bits_r_req_user) : (!firrtl.uint<1>, !firrtl.uint<87>, !firrtl.uint<87>) -> !firrtl.uint<87>
      firrtl.strictconnect %s3_io_in_bits_r_req_user, %218 : !firrtl.uint<87>
      %219 = firrtl.mux(%_s3_io_in_bits_T, %46, %s3_io_in_bits_r_metas_0_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_tag, %219 : !firrtl.uint<19>
      %220 = firrtl.mux(%_s3_io_in_bits_T, %47, %s3_io_in_bits_r_metas_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_valid, %220 : !firrtl.uint<1>
      %221 = firrtl.mux(%_s3_io_in_bits_T, %48, %s3_io_in_bits_r_metas_0_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_dirty, %221 : !firrtl.uint<1>
      %222 = firrtl.mux(%_s3_io_in_bits_T, %49, %s3_io_in_bits_r_metas_1_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_tag, %222 : !firrtl.uint<19>
      %223 = firrtl.mux(%_s3_io_in_bits_T, %50, %s3_io_in_bits_r_metas_1_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_valid, %223 : !firrtl.uint<1>
      %224 = firrtl.mux(%_s3_io_in_bits_T, %51, %s3_io_in_bits_r_metas_1_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_dirty, %224 : !firrtl.uint<1>
      %225 = firrtl.mux(%_s3_io_in_bits_T, %52, %s3_io_in_bits_r_metas_2_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_tag, %225 : !firrtl.uint<19>
      %226 = firrtl.mux(%_s3_io_in_bits_T, %53, %s3_io_in_bits_r_metas_2_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_valid, %226 : !firrtl.uint<1>
      %227 = firrtl.mux(%_s3_io_in_bits_T, %54, %s3_io_in_bits_r_metas_2_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_dirty, %227 : !firrtl.uint<1>
      %228 = firrtl.mux(%_s3_io_in_bits_T, %55, %s3_io_in_bits_r_metas_3_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_tag, %228 : !firrtl.uint<19>
      %229 = firrtl.mux(%_s3_io_in_bits_T, %56, %s3_io_in_bits_r_metas_3_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_valid, %229 : !firrtl.uint<1>
      %230 = firrtl.mux(%_s3_io_in_bits_T, %57, %s3_io_in_bits_r_metas_3_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_dirty, %230 : !firrtl.uint<1>
      %231 = firrtl.mux(%_s3_io_in_bits_T, %58, %s3_io_in_bits_r_datas_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_0_data, %231 : !firrtl.uint<64>
      %232 = firrtl.mux(%_s3_io_in_bits_T, %59, %s3_io_in_bits_r_datas_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_1_data, %232 : !firrtl.uint<64>
      %233 = firrtl.mux(%_s3_io_in_bits_T, %60, %s3_io_in_bits_r_datas_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_2_data, %233 : !firrtl.uint<64>
      %234 = firrtl.mux(%_s3_io_in_bits_T, %61, %s3_io_in_bits_r_datas_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_3_data, %234 : !firrtl.uint<64>
      %235 = firrtl.mux(%_s3_io_in_bits_T, %62, %s3_io_in_bits_r_hit) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_hit, %235 : !firrtl.uint<1>
      %236 = firrtl.mux(%_s3_io_in_bits_T, %63, %s3_io_in_bits_r_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_waymask, %236 : !firrtl.uint<4>
      %237 = firrtl.mux(%_s3_io_in_bits_T, %64, %s3_io_in_bits_r_mmio) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_mmio, %237 : !firrtl.uint<1>
      %238 = firrtl.mux(%_s3_io_in_bits_T, %65, %s3_io_in_bits_r_isForwardData) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_isForwardData, %238 : !firrtl.uint<1>
      %239 = firrtl.mux(%_s3_io_in_bits_T, %66, %s3_io_in_bits_r_forwardData_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_forwardData_data_data, %239 : !firrtl.uint<64>
      %240 = firrtl.mux(%_s3_io_in_bits_T, %67, %s3_io_in_bits_r_forwardData_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_forwardData_waymask, %240 : !firrtl.uint<4>
      firrtl.strictconnect %122, %s3_io_in_bits_r_forwardData_waymask : !firrtl.uint<4>
      firrtl.strictconnect %121, %s3_io_in_bits_r_forwardData_data_data : !firrtl.uint<64>
      firrtl.strictconnect %120, %s3_io_in_bits_r_isForwardData : !firrtl.uint<1>
      firrtl.strictconnect %119, %s3_io_in_bits_r_mmio : !firrtl.uint<1>
      firrtl.strictconnect %118, %s3_io_in_bits_r_waymask : !firrtl.uint<4>
      firrtl.strictconnect %117, %s3_io_in_bits_r_hit : !firrtl.uint<1>
      firrtl.strictconnect %113, %s3_io_in_bits_r_datas_0_data : !firrtl.uint<64>
      firrtl.strictconnect %114, %s3_io_in_bits_r_datas_1_data : !firrtl.uint<64>
      firrtl.strictconnect %115, %s3_io_in_bits_r_datas_2_data : !firrtl.uint<64>
      firrtl.strictconnect %116, %s3_io_in_bits_r_datas_3_data : !firrtl.uint<64>
      firrtl.strictconnect %103, %s3_io_in_bits_r_metas_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %102, %s3_io_in_bits_r_metas_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %101, %s3_io_in_bits_r_metas_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %106, %s3_io_in_bits_r_metas_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %105, %s3_io_in_bits_r_metas_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %104, %s3_io_in_bits_r_metas_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %109, %s3_io_in_bits_r_metas_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %108, %s3_io_in_bits_r_metas_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %107, %s3_io_in_bits_r_metas_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %112, %s3_io_in_bits_r_metas_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %111, %s3_io_in_bits_r_metas_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %110, %s3_io_in_bits_r_metas_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %100, %s3_io_in_bits_r_req_user : !firrtl.uint<87>
      firrtl.strictconnect %99, %s3_io_in_bits_r_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %98, %s3_io_in_bits_r_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %97, %s3_io_in_bits_r_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %96, %s3_io_in_bits_r_req_size : !firrtl.uint<3>
      firrtl.strictconnect %95, %s3_io_in_bits_r_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %94, %valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd_2, %124 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata_3, %125 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_resp_bits_user_4, %126 : !firrtl.uint<87>
      firrtl.strictconnect %128, %_s3_io_flush_T : !firrtl.uint<1>
      firrtl.strictconnect %io_out_mem_req_bits_addr_6, %146 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_cmd_7, %147 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_wdata_8, %148 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_valid_5, %145 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr_10, %150 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size_11, %151 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd_12, %152 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask_13, %153 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata_14, %154 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid_9, %149 : !firrtl.uint<1>
      %_io_empty_T = firrtl.not %31 {name = "_io_empty_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_empty_T_1 = firrtl.not %94 {name = "_io_empty_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_empty_T_2 = firrtl.and %_io_empty_T, %_io_empty_T_1 {name = "_io_empty_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_empty_15, %_io_empty_T_2 : !firrtl.uint<1>
      %_io_in_resp_valid_T = firrtl.eq %124, %c4_ui3 {name = "_io_in_resp_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_1 = firrtl.and %123, %_io_in_resp_valid_T {name = "_io_in_resp_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_2 = firrtl.or %123, %155 {name = "_io_in_resp_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_3 = firrtl.mux(%_io_in_resp_valid_T_1, %c0_ui1, %_io_in_resp_valid_T_2) {name = "_io_in_resp_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %_io_in_resp_valid_T_3 : !firrtl.uint<1>
      firrtl.strictconnect %8, %156 : !firrtl.uint<1>
      firrtl.strictconnect %157, %9 : !firrtl.uint<1>
      firrtl.strictconnect %158, %10 : !firrtl.uint<7>
      firrtl.strictconnect %11, %159 : !firrtl.uint<19>
      firrtl.strictconnect %12, %160 : !firrtl.uint<1>
      firrtl.strictconnect %13, %161 : !firrtl.uint<1>
      firrtl.strictconnect %14, %162 : !firrtl.uint<19>
      firrtl.strictconnect %15, %163 : !firrtl.uint<1>
      firrtl.strictconnect %16, %164 : !firrtl.uint<1>
      firrtl.strictconnect %17, %165 : !firrtl.uint<19>
      firrtl.strictconnect %18, %166 : !firrtl.uint<1>
      firrtl.strictconnect %19, %167 : !firrtl.uint<1>
      firrtl.strictconnect %20, %168 : !firrtl.uint<19>
      firrtl.strictconnect %21, %169 : !firrtl.uint<1>
      firrtl.strictconnect %22, %170 : !firrtl.uint<1>
      firrtl.strictconnect %23, %176 : !firrtl.uint<1>
      firrtl.strictconnect %177, %24 : !firrtl.uint<1>
      firrtl.strictconnect %178, %25 : !firrtl.uint<10>
      firrtl.strictconnect %26, %179 : !firrtl.uint<64>
      firrtl.strictconnect %27, %180 : !firrtl.uint<64>
      firrtl.strictconnect %28, %181 : !firrtl.uint<64>
      firrtl.strictconnect %29, %182 : !firrtl.uint<64>
      firrtl.strictconnect %129, %183 : !firrtl.uint<1>
      firrtl.strictconnect %184, %130 : !firrtl.uint<1>
      firrtl.strictconnect %185, %131 : !firrtl.uint<10>
      firrtl.strictconnect %132, %186 : !firrtl.uint<64>
      firrtl.strictconnect %133, %187 : !firrtl.uint<64>
      firrtl.strictconnect %134, %188 : !firrtl.uint<64>
      firrtl.strictconnect %135, %189 : !firrtl.uint<64>
      firrtl.strictconnect %171, %140 : !firrtl.uint<1>
      firrtl.strictconnect %172, %141 : !firrtl.uint<7>
      firrtl.strictconnect %173, %142 : !firrtl.uint<19>
      firrtl.strictconnect %174, %143 : !firrtl.uint<1>
      firrtl.strictconnect %175, %144 : !firrtl.uint<4>
      firrtl.strictconnect %190, %136 : !firrtl.uint<1>
      firrtl.strictconnect %191, %137 : !firrtl.uint<10>
      firrtl.strictconnect %192, %138 : !firrtl.uint<64>
      firrtl.strictconnect %193, %139 : !firrtl.uint<4>
      firrtl.strictconnect %70, %13 : !firrtl.uint<1>
      firrtl.strictconnect %69, %12 : !firrtl.uint<1>
      firrtl.strictconnect %68, %11 : !firrtl.uint<19>
      firrtl.strictconnect %73, %16 : !firrtl.uint<1>
      firrtl.strictconnect %72, %15 : !firrtl.uint<1>
      firrtl.strictconnect %71, %14 : !firrtl.uint<19>
      firrtl.strictconnect %76, %19 : !firrtl.uint<1>
      firrtl.strictconnect %75, %18 : !firrtl.uint<1>
      firrtl.strictconnect %74, %17 : !firrtl.uint<19>
      firrtl.strictconnect %79, %22 : !firrtl.uint<1>
      firrtl.strictconnect %78, %21 : !firrtl.uint<1>
      firrtl.strictconnect %77, %20 : !firrtl.uint<19>
      firrtl.strictconnect %80, %26 : !firrtl.uint<64>
      firrtl.strictconnect %81, %27 : !firrtl.uint<64>
      firrtl.strictconnect %82, %28 : !firrtl.uint<64>
      firrtl.strictconnect %83, %29 : !firrtl.uint<64>
      firrtl.strictconnect %92, %139 : !firrtl.uint<4>
      firrtl.strictconnect %91, %138 : !firrtl.uint<64>
      firrtl.strictconnect %90, %137 : !firrtl.uint<10>
      firrtl.strictconnect %89, %136 : !firrtl.uint<1>
      firrtl.strictconnect %88, %144 : !firrtl.uint<4>
      firrtl.strictconnect %87, %143 : !firrtl.uint<1>
      firrtl.strictconnect %86, %142 : !firrtl.uint<19>
      firrtl.strictconnect %85, %141 : !firrtl.uint<7>
      firrtl.strictconnect %84, %140 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %241 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %242 = firrtl.and %c_control_logEnable, %241 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %242, "[%d] Cache: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %243 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %244 = firrtl.and %c_control_logEnable, %243 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %244, "InReq(%d, %d) InResp(%d, %d) \0A" {name = "printf_1"} (%io_in_req_valid, %io_in_req_ready_0, %io_in_resp_valid_1, %io_in_resp_ready) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %245 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %246 = firrtl.and %c_control_logEnable, %245 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %246, "[%d] Cache: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %247 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %248 = firrtl.and %c_control_logEnable, %247 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %248, "{IN s1:(%d,%d), s2:(%d,%d), s3:(%d,%d)} {OUT s1:(%d,%d), s2:(%d,%d), s3:(%d,%d)}\0A" {name = "printf_3"} (%1, %0, %31, %30, %94, %93, %5, %4, %39, %38, %123, %io_in_resp_ready) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %249 = firrtl.and %1, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %250 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %251 = firrtl.and %249, %250 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %251, "[%d] Cache: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %252 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %253 = firrtl.and %249, %252 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %253, "[icache.S1]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_5"} (%2, %c0_ui4, %c3_ui3, %c0_ui8, %c0_ui64) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %254 = firrtl.and %31, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %255 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %256 = firrtl.and %254, %255 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %256, "[%d] Cache: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %257 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %258 = firrtl.and %254, %257 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %258, "[icache.S2]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_7"} (%32, %34, %33, %35, %36) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %259 = firrtl.and %94, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %260 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %261 = firrtl.and %259, %260 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %261, "[%d] Cache: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %262 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %263 = firrtl.and %259, %262 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %263, "[icache.S3]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_9"} (%95, %97, %96, %98, %99) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
    }
    firrtl.module private @EmbeddedTLBExec_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<39>, in %io_in_bits_size: !firrtl.uint<3>, in %io_in_bits_cmd: !firrtl.uint<4>, in %io_in_bits_wmask: !firrtl.uint<8>, in %io_in_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_size: !firrtl.uint<3>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_wmask: !firrtl.uint<8>, out %io_out_bits_wdata: !firrtl.uint<64>, in %io_md_0: !firrtl.uint<121>, in %io_md_1: !firrtl.uint<121>, in %io_md_2: !firrtl.uint<121>, in %io_md_3: !firrtl.uint<121>, out %io_mdWrite_wen: !firrtl.uint<1>, out %io_mdWrite_windex: !firrtl.uint<4>, out %io_mdWrite_waymask: !firrtl.uint<4>, out %io_mdWrite_wdata: !firrtl.uint<121>, in %io_mdReady: !firrtl.uint<1>, in %io_mem_req_ready: !firrtl.uint<1>, out %io_mem_req_valid: !firrtl.uint<1>, out %io_mem_req_bits_addr: !firrtl.uint<32>, out %io_mem_req_bits_cmd: !firrtl.uint<4>, out %io_mem_req_bits_wdata: !firrtl.uint<64>, in %io_mem_resp_valid: !firrtl.uint<1>, in %io_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_satp: !firrtl.uint<64>, in %io_pf_priviledgeMode: !firrtl.uint<2>, in %io_pf_status_sum: !firrtl.uint<1>, in %io_pf_status_mxr: !firrtl.uint<1>, out %io_pf_loadPF: !firrtl.uint<1>, out %io_pf_storePF: !firrtl.uint<1>, out %io_pf_addr: !firrtl.uint<39>, out %io_isFinish: !firrtl.uint<1>, in %isAMO__bore: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8> {name = "io_mem_req_bits_wmask"}
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3> {name = "io_mem_req_bits_size"}
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c64_ui7 = firrtl.constant 64 : !firrtl.uint<7>
      %c0_ui121 = firrtl.constant 0 : !firrtl.uint<121>
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64>
      %c0_ui12 = firrtl.constant 0 : !firrtl.uint<12>
      %c0_ui18 = firrtl.constant 0 : !firrtl.uint<18>
      %c261632_ui18 = firrtl.constant 261632 : !firrtl.uint<18>
      %c0_ui56 = firrtl.constant 0 : !firrtl.uint<56>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c262143_ui18 = firrtl.constant 262143 : !firrtl.uint<18>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c0_ui10 = firrtl.constant 0 : !firrtl.uint<10>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui6 = firrtl.constant 0 : !firrtl.uint<6>
      %c1311768467139281697_ui64 = firrtl.constant 1311768467139281697 : !firrtl.uint<64>
      %c511_ui9 = firrtl.constant 511 : !firrtl.uint<9>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_addr_2 = firrtl.wire {name = "io_out_bits_addr"} : !firrtl.uint<32>
      %io_mdWrite_wen_3 = firrtl.wire {name = "io_mdWrite_wen"} : !firrtl.uint<1>
      %io_mdWrite_windex_4 = firrtl.wire {name = "io_mdWrite_windex"} : !firrtl.uint<4>
      %io_mdWrite_waymask_5 = firrtl.wire {name = "io_mdWrite_waymask"} : !firrtl.uint<4>
      %io_mdWrite_wdata_6 = firrtl.wire {name = "io_mdWrite_wdata"} : !firrtl.uint<121>
      %io_mem_req_valid_7 = firrtl.wire {name = "io_mem_req_valid"} : !firrtl.uint<1>
      %io_mem_req_bits_addr_8 = firrtl.wire {name = "io_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_mem_req_bits_cmd_9 = firrtl.wire {name = "io_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_mem_req_bits_wdata_10 = firrtl.wire {name = "io_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_pf_loadPF_11 = firrtl.wire {name = "io_pf_loadPF"} : !firrtl.uint<1>
      %io_pf_storePF_12 = firrtl.wire {name = "io_pf_storePF"} : !firrtl.uint<1>
      %io_ipf = firrtl.wire : !firrtl.uint<1>
      %io_isFinish_13 = firrtl.wire {name = "io_isFinish"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_out_bits_addr_2 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size, %io_in_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd, %io_in_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask, %io_in_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata, %io_in_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_mdWrite_wen, %io_mdWrite_wen_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_mdWrite_windex, %io_mdWrite_windex_4 : !firrtl.uint<4>
      firrtl.strictconnect %io_mdWrite_waymask, %io_mdWrite_waymask_5 : !firrtl.uint<4>
      firrtl.strictconnect %io_mdWrite_wdata, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      firrtl.strictconnect %io_mem_req_valid, %io_mem_req_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr, %io_mem_req_bits_addr_8 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd, %io_mem_req_bits_cmd_9 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata, %io_mem_req_bits_wdata_10 : !firrtl.uint<64>
      firrtl.strictconnect %io_pf_loadPF, %io_pf_loadPF_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_pf_storePF, %io_pf_storePF_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_pf_addr, %io_in_bits_addr : !firrtl.uint<39>
      firrtl.strictconnect %io_isFinish, %io_isFinish_13 : !firrtl.uint<1>
      %_vpn_WIRE_vpn = firrtl.wire : !firrtl.uint<27>
      %_vpn_T_1 = firrtl.bits %io_in_bits_addr 38 to 12 {name = "_vpn_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<27>
      firrtl.strictconnect %_vpn_WIRE_vpn, %_vpn_T_1 : !firrtl.uint<27>
      %vpn_vpn2 = firrtl.wire : !firrtl.uint<9>
      %vpn_vpn1 = firrtl.wire : !firrtl.uint<9>
      %vpn_vpn0 = firrtl.wire : !firrtl.uint<9>
      %_vpn_WIRE_2 = firrtl.wire : !firrtl.uint<27>
      firrtl.strictconnect %_vpn_WIRE_2, %_vpn_WIRE_vpn : !firrtl.uint<27>
      %_vpn_T_2 = firrtl.bits %_vpn_WIRE_2 8 to 0 {name = "_vpn_T_2"} : (!firrtl.uint<27>) -> !firrtl.uint<9>
      firrtl.strictconnect %vpn_vpn0, %_vpn_T_2 : !firrtl.uint<9>
      %_vpn_T_3 = firrtl.bits %_vpn_WIRE_2 17 to 9 {name = "_vpn_T_3"} : (!firrtl.uint<27>) -> !firrtl.uint<9>
      firrtl.strictconnect %vpn_vpn1, %_vpn_T_3 : !firrtl.uint<9>
      %_vpn_T_4 = firrtl.bits %_vpn_WIRE_2 26 to 18 {name = "_vpn_T_4"} : (!firrtl.uint<27>) -> !firrtl.uint<9>
      firrtl.strictconnect %vpn_vpn2, %_vpn_T_4 : !firrtl.uint<9>
      %satp_asid = firrtl.wire : !firrtl.uint<16>
      %satp_ppn = firrtl.wire : !firrtl.uint<20>
      %_satp_T = firrtl.bits %io_satp 19 to 0 {name = "_satp_T"} : (!firrtl.uint<64>) -> !firrtl.uint<20>
      firrtl.strictconnect %satp_ppn, %_satp_T : !firrtl.uint<20>
      %_satp_T_2 = firrtl.bits %io_satp 59 to 44 {name = "_satp_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      firrtl.strictconnect %satp_asid, %_satp_T_2 : !firrtl.uint<16>
      %_hitVec_WIRE_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_2 = firrtl.bits %io_md_0 59 to 52 {name = "_hitVec_T_2"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_flag, %_hitVec_T_2 : !firrtl.uint<8>
      %_hitVec_WIRE_2_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_3 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_3, %_hitVec_WIRE_flag : !firrtl.uint<8>
      %_hitVec_T_6 = firrtl.bits %_hitVec_WIRE_3 0 to 0 {name = "_hitVec_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_2_v, %_hitVec_T_6 : !firrtl.uint<1>
      %_hitVec_WIRE_4_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_18 = firrtl.bits %io_md_0 93 to 78 {name = "_hitVec_T_18"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_4_asid, %_hitVec_T_18 : !firrtl.uint<16>
      %_hitVec_T_20 = firrtl.eq %_hitVec_WIRE_4_asid, %satp_asid {name = "_hitVec_T_20"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_21 = firrtl.and %_hitVec_WIRE_2_v, %_hitVec_T_20 {name = "_hitVec_T_21"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_6_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_25 = firrtl.bits %io_md_0 77 to 60 {name = "_hitVec_T_25"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_6_mask, %_hitVec_T_25 : !firrtl.uint<18>
      %_hitVec_WIRE_8_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_33 = firrtl.bits %io_md_0 120 to 94 {name = "_hitVec_T_33"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_8_vpn, %_hitVec_T_33 : !firrtl.uint<27>
      %hi = firrtl.cat %vpn_vpn2, %vpn_vpn1 {name = "hi"} : (!firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<18>
      %_hitVec_T_34 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_34"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_37 = firrtl.cat %c511_ui9, %_hitVec_WIRE_6_mask {name = "_hitVec_T_37"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_36 = firrtl.and %_hitVec_T_37, %_hitVec_WIRE_8_vpn {name = "_hitVec_T_36"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_38 = firrtl.and %_hitVec_T_37, %_hitVec_T_34 {name = "_hitVec_T_38"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_39 = firrtl.eq %_hitVec_T_36, %_hitVec_T_38 {name = "_hitVec_T_39"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_40 = firrtl.and %_hitVec_T_21, %_hitVec_T_39 {name = "_hitVec_T_40"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_10_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_43 = firrtl.bits %io_md_1 59 to 52 {name = "_hitVec_T_43"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_10_flag, %_hitVec_T_43 : !firrtl.uint<8>
      %_hitVec_WIRE_12_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_13 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_13, %_hitVec_WIRE_10_flag : !firrtl.uint<8>
      %_hitVec_T_47 = firrtl.bits %_hitVec_WIRE_13 0 to 0 {name = "_hitVec_T_47"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_12_v, %_hitVec_T_47 : !firrtl.uint<1>
      %_hitVec_WIRE_14_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_59 = firrtl.bits %io_md_1 93 to 78 {name = "_hitVec_T_59"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_14_asid, %_hitVec_T_59 : !firrtl.uint<16>
      %_hitVec_T_61 = firrtl.eq %_hitVec_WIRE_14_asid, %satp_asid {name = "_hitVec_T_61"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_62 = firrtl.and %_hitVec_WIRE_12_v, %_hitVec_T_61 {name = "_hitVec_T_62"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_16_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_66 = firrtl.bits %io_md_1 77 to 60 {name = "_hitVec_T_66"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_16_mask, %_hitVec_T_66 : !firrtl.uint<18>
      %_hitVec_WIRE_18_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_74 = firrtl.bits %io_md_1 120 to 94 {name = "_hitVec_T_74"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_18_vpn, %_hitVec_T_74 : !firrtl.uint<27>
      %_hitVec_T_75 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_75"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_78 = firrtl.cat %c511_ui9, %_hitVec_WIRE_16_mask {name = "_hitVec_T_78"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_77 = firrtl.and %_hitVec_T_78, %_hitVec_WIRE_18_vpn {name = "_hitVec_T_77"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_79 = firrtl.and %_hitVec_T_78, %_hitVec_T_75 {name = "_hitVec_T_79"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_80 = firrtl.eq %_hitVec_T_77, %_hitVec_T_79 {name = "_hitVec_T_80"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_81 = firrtl.and %_hitVec_T_62, %_hitVec_T_80 {name = "_hitVec_T_81"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_20_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_84 = firrtl.bits %io_md_2 59 to 52 {name = "_hitVec_T_84"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_20_flag, %_hitVec_T_84 : !firrtl.uint<8>
      %_hitVec_WIRE_22_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_23 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_23, %_hitVec_WIRE_20_flag : !firrtl.uint<8>
      %_hitVec_T_88 = firrtl.bits %_hitVec_WIRE_23 0 to 0 {name = "_hitVec_T_88"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_22_v, %_hitVec_T_88 : !firrtl.uint<1>
      %_hitVec_WIRE_24_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_100 = firrtl.bits %io_md_2 93 to 78 {name = "_hitVec_T_100"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_24_asid, %_hitVec_T_100 : !firrtl.uint<16>
      %_hitVec_T_102 = firrtl.eq %_hitVec_WIRE_24_asid, %satp_asid {name = "_hitVec_T_102"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_103 = firrtl.and %_hitVec_WIRE_22_v, %_hitVec_T_102 {name = "_hitVec_T_103"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_26_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_107 = firrtl.bits %io_md_2 77 to 60 {name = "_hitVec_T_107"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_26_mask, %_hitVec_T_107 : !firrtl.uint<18>
      %_hitVec_WIRE_28_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_115 = firrtl.bits %io_md_2 120 to 94 {name = "_hitVec_T_115"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_28_vpn, %_hitVec_T_115 : !firrtl.uint<27>
      %_hitVec_T_116 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_116"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_119 = firrtl.cat %c511_ui9, %_hitVec_WIRE_26_mask {name = "_hitVec_T_119"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_118 = firrtl.and %_hitVec_T_119, %_hitVec_WIRE_28_vpn {name = "_hitVec_T_118"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_120 = firrtl.and %_hitVec_T_119, %_hitVec_T_116 {name = "_hitVec_T_120"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_121 = firrtl.eq %_hitVec_T_118, %_hitVec_T_120 {name = "_hitVec_T_121"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_122 = firrtl.and %_hitVec_T_103, %_hitVec_T_121 {name = "_hitVec_T_122"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_30_flag = firrtl.wire : !firrtl.uint<8>
      %_hitVec_T_125 = firrtl.bits %io_md_3 59 to 52 {name = "_hitVec_T_125"} : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_30_flag, %_hitVec_T_125 : !firrtl.uint<8>
      %_hitVec_WIRE_32_v = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_33 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitVec_WIRE_33, %_hitVec_WIRE_30_flag : !firrtl.uint<8>
      %_hitVec_T_129 = firrtl.bits %_hitVec_WIRE_33 0 to 0 {name = "_hitVec_T_129"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_32_v, %_hitVec_T_129 : !firrtl.uint<1>
      %_hitVec_WIRE_34_asid = firrtl.wire : !firrtl.uint<16>
      %_hitVec_T_141 = firrtl.bits %io_md_3 93 to 78 {name = "_hitVec_T_141"} : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %_hitVec_WIRE_34_asid, %_hitVec_T_141 : !firrtl.uint<16>
      %_hitVec_T_143 = firrtl.eq %_hitVec_WIRE_34_asid, %satp_asid {name = "_hitVec_T_143"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_hitVec_T_144 = firrtl.and %_hitVec_WIRE_32_v, %_hitVec_T_143 {name = "_hitVec_T_144"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_36_mask = firrtl.wire : !firrtl.uint<18>
      %_hitVec_T_148 = firrtl.bits %io_md_3 77 to 60 {name = "_hitVec_T_148"} : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %_hitVec_WIRE_36_mask, %_hitVec_T_148 : !firrtl.uint<18>
      %_hitVec_WIRE_38_vpn = firrtl.wire : !firrtl.uint<27>
      %_hitVec_T_156 = firrtl.bits %io_md_3 120 to 94 {name = "_hitVec_T_156"} : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %_hitVec_WIRE_38_vpn, %_hitVec_T_156 : !firrtl.uint<27>
      %_hitVec_T_157 = firrtl.cat %hi, %vpn_vpn0 {name = "_hitVec_T_157"} : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %_hitVec_T_160 = firrtl.cat %c511_ui9, %_hitVec_WIRE_36_mask {name = "_hitVec_T_160"} : (!firrtl.uint<9>, !firrtl.uint<18>) -> !firrtl.uint<27>
      %_hitVec_T_159 = firrtl.and %_hitVec_T_160, %_hitVec_WIRE_38_vpn {name = "_hitVec_T_159"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_161 = firrtl.and %_hitVec_T_160, %_hitVec_T_157 {name = "_hitVec_T_161"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<27>
      %_hitVec_T_162 = firrtl.eq %_hitVec_T_159, %_hitVec_T_161 {name = "_hitVec_T_162"} : (!firrtl.uint<27>, !firrtl.uint<27>) -> !firrtl.uint<1>
      %_hitVec_T_163 = firrtl.and %_hitVec_T_144, %_hitVec_T_162 {name = "_hitVec_T_163"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_40_0 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_40_1 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_40_2 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_40_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_0, %_hitVec_T_40 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_1, %_hitVec_T_81 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_2, %_hitVec_T_122 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_40_3, %_hitVec_T_163 : !firrtl.uint<1>
      %hitVec_lo = firrtl.cat %_hitVec_WIRE_40_1, %_hitVec_WIRE_40_0 {name = "hitVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec_hi_4 = firrtl.cat %_hitVec_WIRE_40_3, %_hitVec_WIRE_40_2 {name = "hitVec_hi_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec = firrtl.cat %hitVec_hi_4, %hitVec_lo {name = "hitVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_miss_T = firrtl.orr %hitVec {name = "_miss_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %hit = firrtl.and %io_in_valid, %_miss_T {name = "hit"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_miss_T_1 = firrtl.not %_miss_T {name = "_miss_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %miss = firrtl.and %io_in_valid, %_miss_T_1 {name = "miss"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %victimWaymask_lfsr = firrtl.regreset %clock, %reset, %c1311768467139281697_ui64 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_victimWaymask_xor_T = firrtl.bits %victimWaymask_lfsr 0 to 0 {name = "_victimWaymask_xor_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_1 = firrtl.bits %victimWaymask_lfsr 1 to 1 {name = "_victimWaymask_xor_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_2 = firrtl.xor %_victimWaymask_xor_T, %_victimWaymask_xor_T_1 {name = "_victimWaymask_xor_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_3 = firrtl.bits %victimWaymask_lfsr 3 to 3 {name = "_victimWaymask_xor_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_4 = firrtl.xor %_victimWaymask_xor_T_2, %_victimWaymask_xor_T_3 {name = "_victimWaymask_xor_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_5 = firrtl.bits %victimWaymask_lfsr 4 to 4 {name = "_victimWaymask_xor_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %victimWaymask_xor = firrtl.xor %_victimWaymask_xor_T_4, %_victimWaymask_xor_T_5 {name = "victimWaymask_xor"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.orr %victimWaymask_lfsr : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T = firrtl.not %0 {name = "_victimWaymask_lfsr_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T_1 = firrtl.bits %victimWaymask_lfsr 63 to 1 {name = "_victimWaymask_lfsr_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<63>
      %_victimWaymask_lfsr_T_2 = firrtl.cat %victimWaymask_xor, %_victimWaymask_lfsr_T_1 {name = "_victimWaymask_lfsr_T_2"} : (!firrtl.uint<1>, !firrtl.uint<63>) -> !firrtl.uint<64>
      %_victimWaymask_lfsr_T_3 = firrtl.mux(%_victimWaymask_lfsr_T, %c1_ui64, %_victimWaymask_lfsr_T_2) {name = "_victimWaymask_lfsr_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %victimWaymask_lfsr, %_victimWaymask_lfsr_T_3 : !firrtl.uint<64>
      %_victimWaymask_T = firrtl.bits %victimWaymask_lfsr 1 to 0 {name = "_victimWaymask_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %victimWaymask = firrtl.dshl %c1_ui1, %_victimWaymask_T {name = "victimWaymask"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %waymask = firrtl.mux(%hit, %hitVec, %victimWaymask) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %loadPF = firrtl.wire : !firrtl.uint<1>
      %storePF = firrtl.wire : !firrtl.uint<1>
      %_hitData_T = firrtl.bits %waymask 0 to 0 {name = "_hitData_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitData_T_1 = firrtl.bits %waymask 1 to 1 {name = "_hitData_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitData_T_2 = firrtl.bits %waymask 2 to 2 {name = "_hitData_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitData_T_3 = firrtl.bits %waymask 3 to 3 {name = "_hitData_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitMeta_T_4 = firrtl.mux(%_hitData_T, %io_md_0, %c0_ui121) {name = "_hitMeta_T_4"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_5 = firrtl.mux(%_hitData_T_1, %io_md_1, %c0_ui121) {name = "_hitMeta_T_5"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_6 = firrtl.mux(%_hitData_T_2, %io_md_2, %c0_ui121) {name = "_hitMeta_T_6"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_7 = firrtl.mux(%_hitData_T_3, %io_md_3, %c0_ui121) {name = "_hitMeta_T_7"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_8 = firrtl.or %_hitMeta_T_4, %_hitMeta_T_5 {name = "_hitMeta_T_8"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_9 = firrtl.or %_hitMeta_T_8, %_hitMeta_T_6 {name = "_hitMeta_T_9"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_T_10 = firrtl.or %_hitMeta_T_9, %_hitMeta_T_7 {name = "_hitMeta_T_10"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitMeta_WIRE = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitMeta_WIRE, %_hitMeta_T_10 : !firrtl.uint<121>
      %_hitMeta_WIRE_1_meta = firrtl.wire : !firrtl.uint<69>
      %_hitMeta_WIRE_2 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitMeta_WIRE_2, %_hitMeta_WIRE : !firrtl.uint<121>
      %_hitMeta_T_12 = firrtl.bits %_hitMeta_WIRE_2 120 to 52 {name = "_hitMeta_T_12"} : (!firrtl.uint<121>) -> !firrtl.uint<69>
      firrtl.strictconnect %_hitMeta_WIRE_1_meta, %_hitMeta_T_12 : !firrtl.uint<69>
      %hitMeta_vpn = firrtl.wire : !firrtl.uint<27>
      %hitMeta_asid = firrtl.wire : !firrtl.uint<16>
      %hitMeta_mask = firrtl.wire : !firrtl.uint<18>
      %hitMeta_flag = firrtl.wire : !firrtl.uint<8>
      %_hitMeta_WIRE_3 = firrtl.wire : !firrtl.uint<69>
      firrtl.strictconnect %_hitMeta_WIRE_3, %_hitMeta_WIRE_1_meta : !firrtl.uint<69>
      %_hitMeta_T_13 = firrtl.bits %_hitMeta_WIRE_3 7 to 0 {name = "_hitMeta_T_13"} : (!firrtl.uint<69>) -> !firrtl.uint<8>
      firrtl.strictconnect %hitMeta_flag, %_hitMeta_T_13 : !firrtl.uint<8>
      %_hitMeta_T_14 = firrtl.bits %_hitMeta_WIRE_3 25 to 8 {name = "_hitMeta_T_14"} : (!firrtl.uint<69>) -> !firrtl.uint<18>
      firrtl.strictconnect %hitMeta_mask, %_hitMeta_T_14 : !firrtl.uint<18>
      %_hitMeta_T_15 = firrtl.bits %_hitMeta_WIRE_3 41 to 26 {name = "_hitMeta_T_15"} : (!firrtl.uint<69>) -> !firrtl.uint<16>
      firrtl.strictconnect %hitMeta_asid, %_hitMeta_T_15 : !firrtl.uint<16>
      %_hitMeta_T_16 = firrtl.bits %_hitMeta_WIRE_3 68 to 42 {name = "_hitMeta_T_16"} : (!firrtl.uint<69>) -> !firrtl.uint<27>
      firrtl.strictconnect %hitMeta_vpn, %_hitMeta_T_16 : !firrtl.uint<27>
      %_hitData_T_4 = firrtl.mux(%_hitData_T, %io_md_0, %c0_ui121) {name = "_hitData_T_4"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_5 = firrtl.mux(%_hitData_T_1, %io_md_1, %c0_ui121) {name = "_hitData_T_5"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_6 = firrtl.mux(%_hitData_T_2, %io_md_2, %c0_ui121) {name = "_hitData_T_6"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_7 = firrtl.mux(%_hitData_T_3, %io_md_3, %c0_ui121) {name = "_hitData_T_7"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_8 = firrtl.or %_hitData_T_4, %_hitData_T_5 {name = "_hitData_T_8"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_9 = firrtl.or %_hitData_T_8, %_hitData_T_6 {name = "_hitData_T_9"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_T_10 = firrtl.or %_hitData_T_9, %_hitData_T_7 {name = "_hitData_T_10"} : (!firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %_hitData_WIRE = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitData_WIRE, %_hitData_T_10 : !firrtl.uint<121>
      %_hitData_WIRE_1_data = firrtl.wire : !firrtl.uint<52>
      %_hitData_WIRE_2 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %_hitData_WIRE_2, %_hitData_WIRE : !firrtl.uint<121>
      %_hitData_T_11 = firrtl.bits %_hitData_WIRE_2 51 to 0 {name = "_hitData_T_11"} : (!firrtl.uint<121>) -> !firrtl.uint<52>
      firrtl.strictconnect %_hitData_WIRE_1_data, %_hitData_T_11 : !firrtl.uint<52>
      %hitData_ppn = firrtl.wire : !firrtl.uint<20>
      %hitData_pteaddr = firrtl.wire : !firrtl.uint<32>
      %_hitData_WIRE_3 = firrtl.wire : !firrtl.uint<52>
      firrtl.strictconnect %_hitData_WIRE_3, %_hitData_WIRE_1_data : !firrtl.uint<52>
      %_hitData_T_13 = firrtl.bits %_hitData_WIRE_3 31 to 0 {name = "_hitData_T_13"} : (!firrtl.uint<52>) -> !firrtl.uint<32>
      firrtl.strictconnect %hitData_pteaddr, %_hitData_T_13 : !firrtl.uint<32>
      %_hitData_T_14 = firrtl.bits %_hitData_WIRE_3 51 to 32 {name = "_hitData_T_14"} : (!firrtl.uint<52>) -> !firrtl.uint<20>
      firrtl.strictconnect %hitData_ppn, %_hitData_T_14 : !firrtl.uint<20>
      %hitFlag_d = firrtl.wire : !firrtl.uint<1>
      %hitFlag_a = firrtl.wire : !firrtl.uint<1>
      %hitFlag_g = firrtl.wire : !firrtl.uint<1>
      %hitFlag_u = firrtl.wire : !firrtl.uint<1>
      %hitFlag_x = firrtl.wire : !firrtl.uint<1>
      %hitFlag_w = firrtl.wire : !firrtl.uint<1>
      %hitFlag_r = firrtl.wire : !firrtl.uint<1>
      %hitFlag_v = firrtl.wire : !firrtl.uint<1>
      %_hitFlag_WIRE = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_hitFlag_WIRE, %hitMeta_flag : !firrtl.uint<8>
      %_hitFlag_T = firrtl.bits %_hitFlag_WIRE 0 to 0 {name = "_hitFlag_T"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_v, %_hitFlag_T : !firrtl.uint<1>
      %_hitFlag_T_1 = firrtl.bits %_hitFlag_WIRE 1 to 1 {name = "_hitFlag_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_r, %_hitFlag_T_1 : !firrtl.uint<1>
      %_hitFlag_T_2 = firrtl.bits %_hitFlag_WIRE 2 to 2 {name = "_hitFlag_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_w, %_hitFlag_T_2 : !firrtl.uint<1>
      %_hitFlag_T_3 = firrtl.bits %_hitFlag_WIRE 3 to 3 {name = "_hitFlag_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_x, %_hitFlag_T_3 : !firrtl.uint<1>
      %_hitFlag_T_4 = firrtl.bits %_hitFlag_WIRE 4 to 4 {name = "_hitFlag_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_u, %_hitFlag_T_4 : !firrtl.uint<1>
      %_hitFlag_T_5 = firrtl.bits %_hitFlag_WIRE 5 to 5 {name = "_hitFlag_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_g, %_hitFlag_T_5 : !firrtl.uint<1>
      %_hitFlag_T_6 = firrtl.bits %_hitFlag_WIRE 6 to 6 {name = "_hitFlag_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_a, %_hitFlag_T_6 : !firrtl.uint<1>
      %_hitFlag_T_7 = firrtl.bits %_hitFlag_WIRE 7 to 7 {name = "_hitFlag_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %hitFlag_d, %_hitFlag_T_7 : !firrtl.uint<1>
      %_hitADCheck_T = firrtl.not %hitFlag_a {name = "_hitADCheck_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitADCheck_T_1 = firrtl.not %hitFlag_d {name = "_hitADCheck_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_16 = firrtl.bits %io_in_bits_cmd 0 to 0 {name = "_storePF_T_16"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_hitWB_T_3 = firrtl.and %_hitADCheck_T_1, %_storePF_T_16 {name = "_hitWB_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_4 = firrtl.or %_hitADCheck_T, %_hitWB_T_3 {name = "_hitWB_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_7 = firrtl.and %hit, %_hitWB_T_4 {name = "_hitWB_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_8 = firrtl.or %loadPF, %storePF {name = "_hitWB_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_1 = firrtl.or %io_pf_loadPF_11, %io_pf_storePF_12 {name = "_io_isFinish_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_10 = firrtl.or %_hitWB_T_8, %_io_isFinish_T_1 {name = "_hitWB_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitWB_T_11 = firrtl.not %_hitWB_T_10 {name = "_hitWB_T_11"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %hitWB = firrtl.and %_hitWB_T_7, %_hitWB_T_11 {name = "hitWB"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitRefillFlag_hi = firrtl.cat %_storePF_T_16, %c1_ui1 {name = "hitRefillFlag_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_hitRefillFlag_T_1 = firrtl.cat %hitRefillFlag_hi, %c0_ui6 {name = "_hitRefillFlag_T_1"} : (!firrtl.uint<2>, !firrtl.uint<6>) -> !firrtl.uint<8>
      %lo_lo = firrtl.cat %hitFlag_r, %hitFlag_v {name = "lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_hi = firrtl.cat %hitFlag_x, %hitFlag_w {name = "lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitRefillFlag_lo = firrtl.cat %lo_hi, %lo_lo {name = "hitRefillFlag_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_lo = firrtl.cat %hitFlag_g, %hitFlag_u {name = "hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_hi = firrtl.cat %hitFlag_d, %hitFlag_a {name = "hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitRefillFlag_hi_1 = firrtl.cat %hi_hi, %hi_lo {name = "hitRefillFlag_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_hitRefillFlag_T_2 = firrtl.cat %hitRefillFlag_hi_1, %hitRefillFlag_lo {name = "_hitRefillFlag_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %hitRefillFlag = firrtl.or %_hitRefillFlag_T_1, %_hitRefillFlag_T_2 {name = "hitRefillFlag"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %hitWBStore_lo = firrtl.cat %c0_ui2, %hitRefillFlag {name = "hitWBStore_lo"} : (!firrtl.uint<2>, !firrtl.uint<8>) -> !firrtl.uint<10>
      %hitWBStore_hi = firrtl.cat %c0_ui10, %hitData_ppn {name = "hitWBStore_hi"} : (!firrtl.uint<10>, !firrtl.uint<20>) -> !firrtl.uint<30>
      %_hitWBStore_T = firrtl.cat %hitWBStore_hi, %hitWBStore_lo {name = "_hitWBStore_T"} : (!firrtl.uint<30>, !firrtl.uint<10>) -> !firrtl.uint<40>
      %hitWBStore = firrtl.reg %clock {firrtl.random_init_start = 64 : ui64} : !firrtl.clock, !firrtl.uint<40>
      %1 = firrtl.mux(%hitWB, %_hitWBStore_T, %hitWBStore) : (!firrtl.uint<1>, !firrtl.uint<40>, !firrtl.uint<40>) -> !firrtl.uint<40>
      firrtl.strictconnect %hitWBStore, %1 : !firrtl.uint<40>
      %2 = firrtl.orr %io_pf_priviledgeMode : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_permCheck_T = firrtl.not %2 {name = "_permCheck_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_1 = firrtl.not %hitFlag_u {name = "_hitCheck_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_2 = firrtl.and %_permCheck_T, %_hitCheck_T_1 {name = "_hitCheck_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_3 = firrtl.not %_hitCheck_T_2 {name = "_hitCheck_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_4 = firrtl.and %hit, %_hitCheck_T_3 {name = "_hitCheck_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_5 = firrtl.eq %io_pf_priviledgeMode, %c1_ui1 {name = "_permCheck_T_5"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_6 = firrtl.and %_permCheck_T_5, %hitFlag_u {name = "_hitCheck_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_8 = firrtl.not %io_pf_status_sum {name = "_permCheck_T_8"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_9 = firrtl.and %_hitCheck_T_6, %_permCheck_T_8 {name = "_hitCheck_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitCheck_T_10 = firrtl.not %_hitCheck_T_9 {name = "_hitCheck_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %hitCheck = firrtl.and %_hitCheck_T_4, %_hitCheck_T_10 {name = "hitCheck"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitADCheck_T_3 = firrtl.and %_hitADCheck_T_1, %_storePF_T_16 {name = "_hitADCheck_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitADCheck = firrtl.or %_hitADCheck_T, %_hitADCheck_T_3 {name = "hitADCheck"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitStore_T = firrtl.not %hitADCheck {name = "_hitStore_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitExec_T_1 = firrtl.and %hitCheck, %_hitStore_T {name = "_hitExec_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitExec = firrtl.and %_hitExec_T_1, %hitFlag_x {name = "hitExec"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitLoad_T_1 = firrtl.and %hitCheck, %_hitStore_T {name = "_hitLoad_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitLoad_T_2 = firrtl.and %io_pf_status_mxr, %hitFlag_x {name = "_hitLoad_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitLoad_T_3 = firrtl.or %hitFlag_r, %_hitLoad_T_2 {name = "_hitLoad_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitLoad = firrtl.and %_hitLoad_T_1, %_hitLoad_T_3 {name = "hitLoad"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitStore_T_1 = firrtl.and %hitCheck, %_hitStore_T {name = "_hitStore_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hitStore = firrtl.and %_hitStore_T_1, %hitFlag_w {name = "hitStore"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_pf_loadPF_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 104 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %io_pf_loadPF_REG, %loadPF : !firrtl.uint<1>
      firrtl.strictconnect %io_pf_loadPF_11, %io_pf_loadPF_REG : !firrtl.uint<1>
      %io_pf_storePF_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 105 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %io_pf_storePF_REG, %storePF : !firrtl.uint<1>
      firrtl.strictconnect %io_pf_storePF_12, %io_pf_storePF_REG : !firrtl.uint<1>
      %_storePF_T_4 = firrtl.not %hitLoad {name = "_storePF_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_2 = firrtl.not %_storePF_T_16 {name = "_loadPF_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_19 = firrtl.bits %io_in_bits_cmd 3 to 3 {name = "_loadPF_T_19"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_loadPF_T_4 = firrtl.not %_loadPF_T_19 {name = "_loadPF_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_5 = firrtl.and %_loadPF_T_2, %_loadPF_T_4 {name = "_loadPF_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_6 = firrtl.and %_storePF_T_4, %_loadPF_T_5 {name = "_loadPF_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_7 = firrtl.and %_loadPF_T_6, %hit {name = "_loadPF_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_22 = firrtl.not %isAMO__bore {name = "_loadPF_T_22"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_9 = firrtl.and %_loadPF_T_7, %_loadPF_T_22 {name = "_loadPF_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T = firrtl.not %hitStore {name = "_storePF_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_2 = firrtl.and %_storePF_T, %_storePF_T_16 {name = "_storePF_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_3 = firrtl.and %_storePF_T_2, %hit {name = "_storePF_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_6 = firrtl.not %_storePF_T_16 {name = "_storePF_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_8 = firrtl.not %_loadPF_T_19 {name = "_storePF_T_8"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_9 = firrtl.and %_storePF_T_6, %_storePF_T_8 {name = "_storePF_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_10 = firrtl.and %_storePF_T_4, %_storePF_T_9 {name = "_storePF_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_11 = firrtl.and %_storePF_T_10, %hit {name = "_storePF_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_12 = firrtl.and %_storePF_T_11, %isAMO__bore {name = "_storePF_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_13 = firrtl.or %_storePF_T_3, %_storePF_T_12 {name = "_storePF_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 106 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %level = firrtl.regreset %clock, %reset, %c3_ui2 {firrtl.random_init_start = 109 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %memRespStore = firrtl.reg %clock {firrtl.random_init_start = 111 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %missMask = firrtl.wire : !firrtl.uint<18>
      %missMaskStore = firrtl.reg %clock {firrtl.random_init_start = 175 : ui64} : !firrtl.clock, !firrtl.uint<18>
      %missMetaRefill = firrtl.wire : !firrtl.uint<1>
      %missRefillFlag = firrtl.wire : !firrtl.uint<8>
      %memRdata_reserved = firrtl.wire : !firrtl.uint<34>
      %memRdata_ppn = firrtl.wire : !firrtl.uint<20>
      %memRdata_rsw = firrtl.wire : !firrtl.uint<2>
      %memRdata_flag_d = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_a = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_g = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_u = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_x = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_w = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_r = firrtl.wire : !firrtl.uint<1>
      %memRdata_flag_v = firrtl.wire : !firrtl.uint<1>
      %_memRdata_T = firrtl.bits %io_mem_resp_bits_rdata 0 to 0 {name = "_memRdata_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_v, %_memRdata_T : !firrtl.uint<1>
      %_memRdata_T_1 = firrtl.bits %io_mem_resp_bits_rdata 1 to 1 {name = "_memRdata_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_r, %_memRdata_T_1 : !firrtl.uint<1>
      %_memRdata_T_2 = firrtl.bits %io_mem_resp_bits_rdata 2 to 2 {name = "_memRdata_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_w, %_memRdata_T_2 : !firrtl.uint<1>
      %_memRdata_T_3 = firrtl.bits %io_mem_resp_bits_rdata 3 to 3 {name = "_memRdata_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_x, %_memRdata_T_3 : !firrtl.uint<1>
      %_memRdata_T_4 = firrtl.bits %io_mem_resp_bits_rdata 4 to 4 {name = "_memRdata_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_u, %_memRdata_T_4 : !firrtl.uint<1>
      %_memRdata_T_5 = firrtl.bits %io_mem_resp_bits_rdata 5 to 5 {name = "_memRdata_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_g, %_memRdata_T_5 : !firrtl.uint<1>
      %_memRdata_T_6 = firrtl.bits %io_mem_resp_bits_rdata 6 to 6 {name = "_memRdata_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_a, %_memRdata_T_6 : !firrtl.uint<1>
      %_memRdata_T_7 = firrtl.bits %io_mem_resp_bits_rdata 7 to 7 {name = "_memRdata_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      firrtl.strictconnect %memRdata_flag_d, %_memRdata_T_7 : !firrtl.uint<1>
      %_memRdata_T_8 = firrtl.bits %io_mem_resp_bits_rdata 9 to 8 {name = "_memRdata_T_8"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      firrtl.strictconnect %memRdata_rsw, %_memRdata_T_8 : !firrtl.uint<2>
      %_memRdata_T_9 = firrtl.bits %io_mem_resp_bits_rdata 29 to 10 {name = "_memRdata_T_9"} : (!firrtl.uint<64>) -> !firrtl.uint<20>
      firrtl.strictconnect %memRdata_ppn, %_memRdata_T_9 : !firrtl.uint<20>
      %_memRdata_T_10 = firrtl.bits %io_mem_resp_bits_rdata 63 to 30 {name = "_memRdata_T_10"} : (!firrtl.uint<64>) -> !firrtl.uint<34>
      firrtl.strictconnect %memRdata_reserved, %_memRdata_T_10 : !firrtl.uint<34>
      %raddr = firrtl.reg %clock {firrtl.random_init_start = 193 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %_io_isFinish_T = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_isFinish_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %alreadyOutFire = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 225 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %3 = firrtl.mux(%_io_isFinish_T, %c1_ui1, %alreadyOutFire) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %needFlush = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 226 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.and %_io_isFinish_T, %needFlush : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%4, %c0_ui1, %needFlush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %missIPF = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 227 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %7 = firrtl.not %6 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.mux(%miss, %c1_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %9 = firrtl.mux(%hitWB, %c3_ui3, %8) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_raddr_T = firrtl.cat %satp_ppn, %vpn_vpn2 {name = "_raddr_T"} : (!firrtl.uint<20>, !firrtl.uint<9>) -> !firrtl.uint<29>
      %_raddr_T_1 = firrtl.cat %_raddr_T, %c0_ui3 {name = "_raddr_T_1"} : (!firrtl.uint<29>, !firrtl.uint<3>) -> !firrtl.uint<32>
      %10 = firrtl.mux(%miss, %_raddr_T_1, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %11 = firrtl.mux(%hitWB, %raddr, %10) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %12 = firrtl.mux(%miss, %c3_ui2, %level) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %13 = firrtl.mux(%hitWB, %level, %12) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %14 = firrtl.or %miss, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.or %hitWB, %14 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.mux(%15, %c0_ui1, %needFlush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.or %hitWB, %miss : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.mux(%17, %c0_ui1, %3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.eq %state, %c1_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %20 = firrtl.or %needFlush, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.mux(%20, %c0_ui1, %needFlush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.mux(%22, %c2_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %24 = firrtl.mux(%needFlush, %c0_ui3, %23) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %25 = firrtl.not %19 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.and %6, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.eq %state, %c2_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %28 = firrtl.and %26, %27 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %missflag_d = firrtl.wire : !firrtl.uint<1>
      %missflag_a = firrtl.wire : !firrtl.uint<1>
      %missflag_g = firrtl.wire : !firrtl.uint<1>
      %missflag_u = firrtl.wire : !firrtl.uint<1>
      %missflag_x = firrtl.wire : !firrtl.uint<1>
      %missflag_w = firrtl.wire : !firrtl.uint<1>
      %missflag_r = firrtl.wire : !firrtl.uint<1>
      %missflag_v = firrtl.wire : !firrtl.uint<1>
      %missflag_lo_lo = firrtl.cat %memRdata_flag_r, %memRdata_flag_v {name = "missflag_lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_lo_hi = firrtl.cat %memRdata_flag_x, %memRdata_flag_w {name = "missflag_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_lo = firrtl.cat %missflag_lo_hi, %missflag_lo_lo {name = "missflag_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %missflag_hi_lo = firrtl.cat %memRdata_flag_g, %memRdata_flag_u {name = "missflag_hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_hi_hi = firrtl.cat %memRdata_flag_d, %memRdata_flag_a {name = "missflag_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missflag_hi = firrtl.cat %missflag_hi_hi, %missflag_hi_lo {name = "missflag_hi"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_missflag_T = firrtl.cat %missflag_hi, %missflag_lo {name = "_missflag_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_missflag_WIRE = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_missflag_WIRE, %_missflag_T : !firrtl.uint<8>
      %_missflag_T_1 = firrtl.bits %_missflag_WIRE 0 to 0 {name = "_missflag_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_v, %_missflag_T_1 : !firrtl.uint<1>
      %_missflag_T_2 = firrtl.bits %_missflag_WIRE 1 to 1 {name = "_missflag_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_r, %_missflag_T_2 : !firrtl.uint<1>
      %_missflag_T_3 = firrtl.bits %_missflag_WIRE 2 to 2 {name = "_missflag_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_w, %_missflag_T_3 : !firrtl.uint<1>
      %_missflag_T_4 = firrtl.bits %_missflag_WIRE 3 to 3 {name = "_missflag_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_x, %_missflag_T_4 : !firrtl.uint<1>
      %_missflag_T_5 = firrtl.bits %_missflag_WIRE 4 to 4 {name = "_missflag_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_u, %_missflag_T_5 : !firrtl.uint<1>
      %_missflag_T_6 = firrtl.bits %_missflag_WIRE 5 to 5 {name = "_missflag_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_g, %_missflag_T_6 : !firrtl.uint<1>
      %_missflag_T_7 = firrtl.bits %_missflag_WIRE 6 to 6 {name = "_missflag_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_a, %_missflag_T_7 : !firrtl.uint<1>
      %_missflag_T_8 = firrtl.bits %_missflag_WIRE 7 to 7 {name = "_missflag_T_8"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %missflag_d, %_missflag_T_8 : !firrtl.uint<1>
      %29 = firrtl.and %28, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.or %needFlush, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.mux(%30, %c0_ui1, %needFlush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.mux(%io_mem_resp_valid, %31, %5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.not %needFlush : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.and %29, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.or %missflag_r, %missflag_x : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.not %35 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_missMask_T = firrtl.andr %level {name = "_missMask_T"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_missMask_T_1 = firrtl.eq %level, %c2_ui2 {name = "_missMask_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %37 = firrtl.or %_missMask_T, %_missMask_T_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.and %36, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.and %34, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.not %missflag_v : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.not %missflag_r : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.and %41, %missflag_w : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.or %40, %42 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.and %39, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_11 = firrtl.not %_storePF_T_16 {name = "_loadPF_T_11"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_13 = firrtl.not %_loadPF_T_19 {name = "_loadPF_T_13"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_14 = firrtl.and %_loadPF_T_11, %_loadPF_T_13 {name = "_loadPF_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_16 = firrtl.and %_loadPF_T_14, %_loadPF_T_22 {name = "_loadPF_T_16"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.mux(%43, %_loadPF_T_16, %_loadPF_T_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_storePF_T_15 = firrtl.or %_storePF_T_16, %isAMO__bore {name = "_storePF_T_15"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %46 = firrtl.mux(%43, %_storePF_T_15, %_storePF_T_13) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %47 = firrtl.and %44, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.and %47, %48 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %49, "[%d] EmbeddedTLBExec_1: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %50 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.and %47, %50 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %51, "tlbException!!! " {name = "printf_1"}  : !firrtl.clock, !firrtl.uint<1>
      %52 = firrtl.and %44, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %53 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.and %52, %53 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %54, " req:addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x  Memreq:DecoupledIO(ready -> %d, valid -> %d, bits -> addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x)  MemResp:DecoupledIO(ready -> %d, valid -> %d, bits -> rdata = %x, cmd = %d)" {name = "printf_2"} (%io_in_bits_addr, %io_in_bits_cmd, %io_in_bits_size, %io_in_bits_wmask, %io_in_bits_wdata, %io_mem_req_ready, %io_mem_req_valid_7, %io_mem_req_bits_addr_8, %io_mem_req_bits_cmd_9, %c3_ui3, %c255_ui8, %io_mem_req_bits_wdata_10, %c1_ui1, %io_mem_resp_valid, %io_mem_resp_bits_rdata, %io_mem_resp_bits_cmd) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>
      %55 = firrtl.and %44, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.and %55, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %57, " level:%d" {name = "printf_3"} (%level) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>
      %58 = firrtl.and %44, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.and %58, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %60, "\0A" {name = "printf_4"}  : !firrtl.clock, !firrtl.uint<1>
      %61 = firrtl.mux(%43, %c5_ui3, %c1_ui3) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_raddr_T_3 = firrtl.mux(%_missMask_T, %vpn_vpn1, %vpn_vpn0) {name = "_raddr_T_3"} : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      %_raddr_T_4 = firrtl.cat %memRdata_ppn, %_raddr_T_3 {name = "_raddr_T_4"} : (!firrtl.uint<20>, !firrtl.uint<9>) -> !firrtl.uint<29>
      %_raddr_T_5 = firrtl.cat %_raddr_T_4, %c0_ui3 {name = "_raddr_T_5"} : (!firrtl.uint<29>, !firrtl.uint<3>) -> !firrtl.uint<32>
      %62 = firrtl.mux(%43, %raddr, %_raddr_T_5) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %63 = firrtl.mux(%38, %62, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %64 = firrtl.mux(%needFlush, %raddr, %63) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %65 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %66 = firrtl.mux(%65, %64, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %67 = firrtl.mux(%19, %raddr, %66) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %68 = firrtl.mux(%7, %11, %67) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %raddr, %68 : !firrtl.uint<32>
      %69 = firrtl.orr %level : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_permCheck_T_1 = firrtl.not %missflag_u {name = "_permCheck_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_2 = firrtl.and %_permCheck_T, %_permCheck_T_1 {name = "_permCheck_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_3 = firrtl.not %_permCheck_T_2 {name = "_permCheck_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_4 = firrtl.and %missflag_v, %_permCheck_T_3 {name = "_permCheck_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_6 = firrtl.and %_permCheck_T_5, %missflag_u {name = "_permCheck_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_9 = firrtl.and %_permCheck_T_6, %_permCheck_T_8 {name = "_permCheck_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permCheck_T_10 = firrtl.not %_permCheck_T_9 {name = "_permCheck_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %permCheck = firrtl.and %_permCheck_T_4, %_permCheck_T_10 {name = "permCheck"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permAD_T = firrtl.not %missflag_a {name = "_permAD_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permAD_T_1 = firrtl.not %missflag_d {name = "_permAD_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permAD_T_3 = firrtl.and %_permAD_T_1, %_storePF_T_16 {name = "_permAD_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %permAD = firrtl.or %_permAD_T, %_permAD_T_3 {name = "permAD"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permStore_T = firrtl.not %permAD {name = "_permStore_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_permLoad_T_1 = firrtl.and %permCheck, %_permStore_T {name = "_permLoad_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permLoad_T_2 = firrtl.and %io_pf_status_mxr, %missflag_x {name = "_permLoad_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permLoad_T_3 = firrtl.or %missflag_r, %_permLoad_T_2 {name = "_permLoad_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %permLoad = firrtl.and %_permLoad_T_1, %_permLoad_T_3 {name = "permLoad"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_permStore_T_1 = firrtl.and %permCheck, %_permStore_T {name = "_permStore_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %permStore = firrtl.and %_permStore_T_1, %missflag_w {name = "permStore"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %updateData_hi = firrtl.cat %c0_ui56, %_storePF_T_16 {name = "updateData_hi"} : (!firrtl.uint<56>, !firrtl.uint<1>) -> !firrtl.uint<57>
      %updateData = firrtl.cat %updateData_hi, %c64_ui7 {name = "updateData"} : (!firrtl.uint<57>, !firrtl.uint<7>) -> !firrtl.uint<64>
      %missRefillFlag_hi = firrtl.cat %_storePF_T_16, %c1_ui1 {name = "missRefillFlag_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_missRefillFlag_T_1 = firrtl.cat %missRefillFlag_hi, %c0_ui6 {name = "_missRefillFlag_T_1"} : (!firrtl.uint<2>, !firrtl.uint<6>) -> !firrtl.uint<8>
      %missRefillFlag_lo_lo = firrtl.cat %missflag_r, %missflag_v {name = "missRefillFlag_lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_lo_hi = firrtl.cat %missflag_x, %missflag_w {name = "missRefillFlag_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_lo = firrtl.cat %missRefillFlag_lo_hi, %missRefillFlag_lo_lo {name = "missRefillFlag_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %missRefillFlag_hi_lo = firrtl.cat %missflag_g, %missflag_u {name = "missRefillFlag_hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_hi_hi = firrtl.cat %missflag_d, %missflag_a {name = "missRefillFlag_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %missRefillFlag_hi_1 = firrtl.cat %missRefillFlag_hi_hi, %missRefillFlag_hi_lo {name = "missRefillFlag_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_missRefillFlag_T_2 = firrtl.cat %missRefillFlag_hi_1, %missRefillFlag_lo {name = "_missRefillFlag_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %_missRefillFlag_T_3 = firrtl.or %_missRefillFlag_T_1, %_missRefillFlag_T_2 {name = "_missRefillFlag_T_3"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %70 = firrtl.mux(%69, %_missRefillFlag_T_3, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %71 = firrtl.or %needFlush, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %72 = firrtl.mux(%71, %c0_ui8, %70) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %73 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %74 = firrtl.mux(%73, %72, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %75 = firrtl.or %7, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.mux(%75, %c0_ui8, %74) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %missRefillFlag, %76 : !firrtl.uint<8>
      %_memRespStore_T = firrtl.or %io_mem_resp_bits_rdata, %updateData {name = "_memRespStore_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %77 = firrtl.mux(%69, %_memRespStore_T, %memRespStore) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %78 = firrtl.or %needFlush, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %79 = firrtl.mux(%78, %memRespStore, %77) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %80 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.mux(%80, %79, %memRespStore) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %82 = firrtl.or %7, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.mux(%82, %memRespStore, %81) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %memRespStore, %83 : !firrtl.uint<64>
      %84 = firrtl.not %permLoad : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %85 = firrtl.not %_storePF_T_16 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.not %_loadPF_T_19 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %87 = firrtl.and %85, %86 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.and %84, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.not %permStore : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %90 = firrtl.and %89, %_storePF_T_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.or %88, %90 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_18 = firrtl.not %_storePF_T_16 {name = "_loadPF_T_18"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_20 = firrtl.not %_loadPF_T_19 {name = "_loadPF_T_20"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_21 = firrtl.and %_loadPF_T_18, %_loadPF_T_20 {name = "_loadPF_T_21"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_loadPF_T_23 = firrtl.and %_loadPF_T_21, %_loadPF_T_22 {name = "_loadPF_T_23"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.and %69, %91 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.mux(%92, %_loadPF_T_23, %_loadPF_T_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.mux(%38, %45, %93) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.mux(%needFlush, %_loadPF_T_9, %94) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %96 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %97 = firrtl.mux(%96, %95, %_loadPF_T_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.or %7, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %99 = firrtl.mux(%98, %_loadPF_T_9, %97) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %loadPF, %99 : !firrtl.uint<1>
      %_storePF_T_17 = firrtl.or %_storePF_T_16, %isAMO__bore {name = "_storePF_T_17"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.and %69, %91 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %101 = firrtl.mux(%100, %_storePF_T_17, %_storePF_T_13) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %102 = firrtl.mux(%38, %46, %101) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %103 = firrtl.mux(%needFlush, %_storePF_T_13, %102) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %105 = firrtl.mux(%104, %103, %_storePF_T_13) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.or %7, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.mux(%106, %_storePF_T_13, %105) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %storePF, %107 : !firrtl.uint<1>
      %108 = firrtl.mux(%91, %c5_ui3, %c4_ui3) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %109 = firrtl.mux(%69, %108, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %110 = firrtl.mux(%38, %61, %109) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %111 = firrtl.mux(%needFlush, %c0_ui3, %110) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %112 = firrtl.mux(%io_mem_resp_valid, %111, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %113 = firrtl.not %91 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %114 = firrtl.mux(%69, %113, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %115 = firrtl.or %needFlush, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.mux(%115, %c0_ui1, %114) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %117 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.mux(%117, %116, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.or %7, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.mux(%119, %c0_ui1, %118) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %missMetaRefill, %120 : !firrtl.uint<1>
      %_missMask_T_2 = firrtl.mux(%_missMask_T_1, %c261632_ui18, %c262143_ui18) {name = "_missMask_T_2"} : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %_missMask_T_3 = firrtl.mux(%_missMask_T, %c0_ui18, %_missMask_T_2) {name = "_missMask_T_3"} : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %121 = firrtl.mux(%69, %_missMask_T_3, %c262143_ui18) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %122 = firrtl.or %needFlush, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.mux(%122, %c262143_ui18, %121) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %124 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %125 = firrtl.mux(%124, %123, %c262143_ui18) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %126 = firrtl.or %7, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %127 = firrtl.mux(%126, %c262143_ui18, %125) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      firrtl.strictconnect %missMask, %127 : !firrtl.uint<18>
      %128 = firrtl.mux(%69, %missMask, %missMaskStore) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %129 = firrtl.or %needFlush, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %130 = firrtl.mux(%129, %missMaskStore, %128) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %131 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %132 = firrtl.mux(%131, %130, %missMaskStore) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %133 = firrtl.or %7, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %134 = firrtl.mux(%133, %missMaskStore, %132) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      firrtl.strictconnect %missMaskStore, %134 : !firrtl.uint<18>
      %_level_T = firrtl.sub %level, %c1_ui1 {name = "_level_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_level_T_1 = firrtl.bits %_level_T 1 to 0 {name = "_level_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %135 = firrtl.and %27, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %136 = firrtl.mux(%135, %_level_T_1, %level) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %137 = firrtl.mux(%19, %level, %136) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %138 = firrtl.mux(%7, %13, %137) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %level, %138 : !firrtl.uint<2>
      %139 = firrtl.eq %state, %c3_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %140 = firrtl.or %needFlush, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %141 = firrtl.mux(%140, %c0_ui1, %needFlush) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %142 = firrtl.mux(%139, %141, %5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %143 = firrtl.mux(%27, %32, %142) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %144 = firrtl.mux(%19, %21, %143) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %145 = firrtl.mux(%7, %16, %144) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %needFlush, %145 : !firrtl.uint<1>
      %146 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %147 = firrtl.mux(%146, %c4_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %148 = firrtl.mux(%needFlush, %c0_ui3, %147) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %149 = firrtl.eq %state, %c4_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %150 = firrtl.or %_io_isFinish_T, %alreadyOutFire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %151 = firrtl.mux(%150, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %152 = firrtl.and %149, %150 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %153 = firrtl.mux(%152, %c0_ui1, %missIPF) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %154 = firrtl.or %27, %139 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %155 = firrtl.or %19, %154 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %156 = firrtl.or %7, %155 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %157 = firrtl.mux(%156, %missIPF, %153) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %missIPF, %157 : !firrtl.uint<1>
      %158 = firrtl.and %149, %150 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %159 = firrtl.mux(%158, %c0_ui1, %3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %160 = firrtl.or %27, %139 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %161 = firrtl.or %19, %160 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %162 = firrtl.mux(%161, %3, %159) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %163 = firrtl.mux(%7, %18, %162) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %alreadyOutFire, %163 : !firrtl.uint<1>
      %164 = firrtl.eq %state, %c5_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %165 = firrtl.mux(%164, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %166 = firrtl.mux(%149, %151, %165) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %167 = firrtl.mux(%139, %148, %166) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %168 = firrtl.mux(%27, %112, %167) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %169 = firrtl.mux(%19, %24, %168) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %170 = firrtl.mux(%7, %9, %169) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %state, %170 : !firrtl.uint<3>
      %cmd = firrtl.eq %state, %c3_ui3 {name = "cmd"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %171 = firrtl.mux(%hitWB, %hitData_pteaddr, %raddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %172 = firrtl.pad %hitWBStore, 64 : (!firrtl.uint<40>) -> !firrtl.uint<64>
      %173 = firrtl.mux(%hitWB, %172, %memRespStore) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_mem_req_bits_addr_8, %171 : !firrtl.uint<32>
      %174 = firrtl.pad %cmd, 4 : (!firrtl.uint<1>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_cmd_9, %174 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata_10, %173 : !firrtl.uint<64>
      %_io_mem_req_valid_T = firrtl.eq %state, %c1_ui3 {name = "_io_mem_req_valid_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_2 = firrtl.or %_io_mem_req_valid_T, %cmd {name = "_io_mem_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_3 = firrtl.not %needFlush {name = "_io_mem_req_valid_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_4 = firrtl.and %_io_mem_req_valid_T_2, %_io_mem_req_valid_T_3 {name = "_io_mem_req_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_valid_7, %_io_mem_req_valid_T_4 : !firrtl.uint<1>
      %175 = firrtl.and %missMetaRefill, %_io_mem_req_valid_T_3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %176 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %176 {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %177 = firrtl.and %hitWB, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %178 = firrtl.and %177, %_io_mem_req_valid_T_3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %179 = firrtl.or %175, %178 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 228 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %REG, %179 : !firrtl.uint<1>
      %180 = firrtl.wire : !firrtl.uint<4>
      %181 = firrtl.bits %io_in_bits_addr 15 to 12 : (!firrtl.uint<39>) -> !firrtl.uint<4>
      firrtl.strictconnect %180, %181 : !firrtl.uint<4>
      %REG_1 = firrtl.reg %clock {firrtl.random_init_start = 229 : ui64} : !firrtl.clock, !firrtl.uint<4>
      firrtl.strictconnect %REG_1, %180 : !firrtl.uint<4>
      %REG_2 = firrtl.reg %clock {firrtl.random_init_start = 233 : ui64} : !firrtl.clock, !firrtl.uint<4>
      firrtl.strictconnect %REG_2, %waymask : !firrtl.uint<4>
      %182 = firrtl.cat %hi, %vpn_vpn0 : (!firrtl.uint<18>, !firrtl.uint<9>) -> !firrtl.uint<27>
      %REG_3 = firrtl.reg %clock {firrtl.random_init_start = 237 : ui64} : !firrtl.clock, !firrtl.uint<27>
      firrtl.strictconnect %REG_3, %182 : !firrtl.uint<27>
      %183 = firrtl.mux(%hitWB, %hitMeta_asid, %satp_asid) : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      %REG_4 = firrtl.reg %clock {firrtl.random_init_start = 264 : ui64} : !firrtl.clock, !firrtl.uint<16>
      firrtl.strictconnect %REG_4, %183 : !firrtl.uint<16>
      %184 = firrtl.mux(%hitWB, %hitMeta_mask, %missMask) : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %REG_5 = firrtl.reg %clock {firrtl.random_init_start = 280 : ui64} : !firrtl.clock, !firrtl.uint<18>
      firrtl.strictconnect %REG_5, %184 : !firrtl.uint<18>
      %185 = firrtl.mux(%hitWB, %hitRefillFlag, %missRefillFlag) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %REG_6 = firrtl.reg %clock {firrtl.random_init_start = 298 : ui64} : !firrtl.clock, !firrtl.uint<8>
      firrtl.strictconnect %REG_6, %185 : !firrtl.uint<8>
      %186 = firrtl.mux(%hitWB, %hitData_ppn, %memRdata_ppn) : (!firrtl.uint<1>, !firrtl.uint<20>, !firrtl.uint<20>) -> !firrtl.uint<20>
      %REG_7 = firrtl.reg %clock {firrtl.random_init_start = 306 : ui64} : !firrtl.clock, !firrtl.uint<20>
      firrtl.strictconnect %REG_7, %186 : !firrtl.uint<20>
      %REG_8 = firrtl.reg %clock {firrtl.random_init_start = 326 : ui64} : !firrtl.clock, !firrtl.uint<32>
      firrtl.strictconnect %REG_8, %171 : !firrtl.uint<32>
      firrtl.strictconnect %io_mdWrite_wen_3, %REG : !firrtl.uint<1>
      firrtl.strictconnect %io_mdWrite_windex_4, %REG_1 : !firrtl.uint<4>
      firrtl.strictconnect %io_mdWrite_waymask_5, %REG_2 : !firrtl.uint<4>
      %io_mdWrite_wdata_lo_hi = firrtl.cat %REG_6, %REG_7 {name = "io_mdWrite_wdata_lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<20>) -> !firrtl.uint<28>
      %io_mdWrite_wdata_lo = firrtl.cat %io_mdWrite_wdata_lo_hi, %REG_8 {name = "io_mdWrite_wdata_lo"} : (!firrtl.uint<28>, !firrtl.uint<32>) -> !firrtl.uint<60>
      %io_mdWrite_wdata_hi_hi = firrtl.cat %REG_3, %REG_4 {name = "io_mdWrite_wdata_hi_hi"} : (!firrtl.uint<27>, !firrtl.uint<16>) -> !firrtl.uint<43>
      %io_mdWrite_wdata_hi = firrtl.cat %io_mdWrite_wdata_hi_hi, %REG_5 {name = "io_mdWrite_wdata_hi"} : (!firrtl.uint<43>, !firrtl.uint<18>) -> !firrtl.uint<61>
      %_io_mdWrite_wdata_T = firrtl.cat %io_mdWrite_wdata_hi, %io_mdWrite_wdata_lo {name = "_io_mdWrite_wdata_T"} : (!firrtl.uint<61>, !firrtl.uint<60>) -> !firrtl.uint<121>
      firrtl.strictconnect %io_mdWrite_wdata_6, %_io_mdWrite_wdata_T : !firrtl.uint<121>
      %_io_out_bits_addr_T_19 = firrtl.bits %io_in_bits_addr 31 to 0 {name = "_io_out_bits_addr_T_19"} : (!firrtl.uint<39>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_1 = firrtl.cat %hitData_ppn, %c0_ui12 {name = "_io_out_bits_addr_T_1"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %io_out_bits_addr_hi = firrtl.cat %c3_ui2, %hitMeta_mask {name = "io_out_bits_addr_hi"} : (!firrtl.uint<2>, !firrtl.uint<18>) -> !firrtl.uint<20>
      %_io_out_bits_addr_T_3 = firrtl.cat %io_out_bits_addr_hi, %c0_ui12 {name = "_io_out_bits_addr_T_3"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_4 = firrtl.and %_io_out_bits_addr_T_1, %_io_out_bits_addr_T_3 {name = "_io_out_bits_addr_T_4"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_5 = firrtl.not %_io_out_bits_addr_T_3 {name = "_io_out_bits_addr_T_5"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_6 = firrtl.and %_io_out_bits_addr_T_19, %_io_out_bits_addr_T_5 {name = "_io_out_bits_addr_T_6"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_7 = firrtl.or %_io_out_bits_addr_T_4, %_io_out_bits_addr_T_6 {name = "_io_out_bits_addr_T_7"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_WIRE_ppn = firrtl.wire : !firrtl.uint<20>
      %_io_out_bits_addr_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_io_out_bits_addr_WIRE_1, %memRespStore : !firrtl.uint<64>
      %_io_out_bits_addr_T_17 = firrtl.bits %_io_out_bits_addr_WIRE_1 29 to 10 {name = "_io_out_bits_addr_T_17"} : (!firrtl.uint<64>) -> !firrtl.uint<20>
      firrtl.strictconnect %_io_out_bits_addr_WIRE_ppn, %_io_out_bits_addr_T_17 : !firrtl.uint<20>
      %_io_out_bits_addr_T_20 = firrtl.cat %_io_out_bits_addr_WIRE_ppn, %c0_ui12 {name = "_io_out_bits_addr_T_20"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %io_out_bits_addr_hi_1 = firrtl.cat %c3_ui2, %missMaskStore {name = "io_out_bits_addr_hi_1"} : (!firrtl.uint<2>, !firrtl.uint<18>) -> !firrtl.uint<20>
      %_io_out_bits_addr_T_22 = firrtl.cat %io_out_bits_addr_hi_1, %c0_ui12 {name = "_io_out_bits_addr_T_22"} : (!firrtl.uint<20>, !firrtl.uint<12>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_23 = firrtl.and %_io_out_bits_addr_T_20, %_io_out_bits_addr_T_22 {name = "_io_out_bits_addr_T_23"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_24 = firrtl.not %_io_out_bits_addr_T_22 {name = "_io_out_bits_addr_T_24"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_25 = firrtl.and %_io_out_bits_addr_T_19, %_io_out_bits_addr_T_24 {name = "_io_out_bits_addr_T_25"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_26 = firrtl.or %_io_out_bits_addr_T_23, %_io_out_bits_addr_T_25 {name = "_io_out_bits_addr_T_26"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_out_bits_addr_T_27 = firrtl.mux(%hit, %_io_out_bits_addr_T_7, %_io_out_bits_addr_T_26) {name = "_io_out_bits_addr_T_27"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_addr_2, %_io_out_bits_addr_T_27 : !firrtl.uint<32>
      %_io_in_ready_T_4 = firrtl.not %hitWB {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.and %hit, %_io_in_ready_T_4 {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_3 = firrtl.or %_io_isFinish_T_1, %loadPF {name = "_io_out_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_4 = firrtl.or %_io_out_valid_T_3, %storePF {name = "_io_out_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_5 = firrtl.not %_io_out_valid_T_4 {name = "_io_out_valid_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_6 = firrtl.eq %state, %c4_ui3 {name = "_io_out_valid_T_6"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_out_valid_T_7 = firrtl.mux(%_io_out_valid_T_1, %_io_out_valid_T_5, %_io_out_valid_T_6) {name = "_io_out_valid_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_8 = firrtl.and %io_in_valid, %_io_out_valid_T_7 {name = "_io_out_valid_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_8 : !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %_io_in_ready_T {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.not %miss {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %_io_in_ready_T_1, %_io_in_ready_T_2 {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_5 = firrtl.and %_io_in_ready_T_3, %_io_in_ready_T_4 {name = "_io_in_ready_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_6 = firrtl.and %_io_in_ready_T_5, %io_mdReady {name = "_io_in_ready_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_8 = firrtl.not %_io_isFinish_T_1 {name = "_io_in_ready_T_8"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_9 = firrtl.not %loadPF {name = "_io_in_ready_T_9"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_10 = firrtl.and %_io_in_ready_T_8, %_io_in_ready_T_9 {name = "_io_in_ready_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_11 = firrtl.not %storePF {name = "_io_in_ready_T_11"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_12 = firrtl.and %_io_in_ready_T_10, %_io_in_ready_T_11 {name = "_io_in_ready_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_13 = firrtl.and %_io_in_ready_T_6, %_io_in_ready_T_12 {name = "_io_in_ready_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_13 : !firrtl.uint<1>
      %_io_ipf_T = firrtl.mux(%hit, %c0_ui1, %missIPF) {name = "_io_ipf_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_ipf, %_io_ipf_T : !firrtl.uint<1>
      %_io_isFinish_T_2 = firrtl.or %_io_isFinish_T, %_io_isFinish_T_1 {name = "_io_isFinish_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_isFinish_13, %_io_isFinish_T_2 : !firrtl.uint<1>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_1_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_timer, %LogPerfHelper_1_timer : !firrtl.uint<64>
      %187 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %188 = firrtl.and %c_control_1_logEnable, %187 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %188, "[%d] EmbeddedTLBExec_1: " {name = "printf_5"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %189 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %190 = firrtl.and %c_control_1_logEnable, %189 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %190, "In(%d, %d) Out(%d, %d) InAddr:%x OutAddr:%x cmd:%d \0A" {name = "printf_6"} (%io_in_valid, %io_in_ready_0, %io_out_valid_1, %io_out_ready, %io_in_bits_addr, %io_out_bits_addr_2, %io_in_bits_cmd) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<32>, !firrtl.uint<4>
      %191 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %192 = firrtl.and %c_control_1_logEnable, %191 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %192, "[%d] EmbeddedTLBExec_1: " {name = "printf_7"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %193 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %194 = firrtl.and %c_control_1_logEnable, %193 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %194, "isAMO:%d io.Flush:%d needFlush:%d alreadyOutFire:%d isFinish:%d\0A" {name = "printf_8"} (%isAMO__bore, %c0_ui1, %needFlush, %alreadyOutFire, %io_isFinish_13) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %lo = firrtl.cat %lo_hi, %lo_lo {name = "lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_1 = firrtl.cat %hi_hi, %hi_lo {name = "hi_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %195 = firrtl.cat %hi_1, %lo : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %196 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %197 = firrtl.and %c_control_1_logEnable, %196 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %197, "[%d] EmbeddedTLBExec_1: " {name = "printf_9"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %198 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %199 = firrtl.and %c_control_1_logEnable, %198 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %199, "hit:%d hitWB:%d hitVPN:%x hitFlag:%x hitPPN:%x hitRefillFlag:%x hitWBStore:%x hitCheck:%d hitExec:%d hitLoad:%d hitStore:%d\0A" {name = "printf_10"} (%hit, %hitWB, %hitMeta_vpn, %195, %hitData_ppn, %hitRefillFlag, %hitWBStore, %hitCheck, %hitExec, %hitLoad, %hitStore) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<8>, !firrtl.uint<40>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %lo_lo_1 = firrtl.cat %memRdata_flag_r, %memRdata_flag_v {name = "lo_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_hi_1 = firrtl.cat %memRdata_flag_x, %memRdata_flag_w {name = "lo_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %lo_1 = firrtl.cat %lo_hi_1, %lo_lo_1 {name = "lo_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hi_lo_1 = firrtl.cat %memRdata_flag_g, %memRdata_flag_u {name = "hi_lo_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_hi_1 = firrtl.cat %memRdata_flag_d, %memRdata_flag_a {name = "hi_hi_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hi_2 = firrtl.cat %hi_hi_1, %hi_lo_1 {name = "hi_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %200 = firrtl.cat %hi_2, %lo_1 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %lo_2 = firrtl.cat %memRdata_rsw, %200 {name = "lo_2"} : (!firrtl.uint<2>, !firrtl.uint<8>) -> !firrtl.uint<10>
      %hi_3 = firrtl.cat %memRdata_reserved, %memRdata_ppn {name = "hi_3"} : (!firrtl.uint<34>, !firrtl.uint<20>) -> !firrtl.uint<54>
      %201 = firrtl.cat %hi_3, %lo_2 : (!firrtl.uint<54>, !firrtl.uint<10>) -> !firrtl.uint<64>
      %202 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %203 = firrtl.and %c_control_1_logEnable, %202 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %203, "[%d] EmbeddedTLBExec_1: " {name = "printf_11"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %204 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %205 = firrtl.and %c_control_1_logEnable, %204 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %205, "miss:%d state:%d level:%d raddr:%x memRdata:%x missMask:%x missRefillFlag:%x missMetaRefill:%d\0A" {name = "printf_12"} (%miss, %state, %level, %raddr, %201, %missMask, %missRefillFlag, %missMetaRefill) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<2>, !firrtl.uint<32>, !firrtl.uint<64>, !firrtl.uint<18>, !firrtl.uint<8>, !firrtl.uint<1>
      %206 = firrtl.wire : !firrtl.uint<27>
      %207 = firrtl.bits %io_md_0 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %206, %207 : !firrtl.uint<27>
      %208 = firrtl.wire : !firrtl.uint<8>
      %209 = firrtl.bits %io_md_0 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %208, %209 : !firrtl.uint<8>
      %210 = firrtl.wire : !firrtl.uint<20>
      %211 = firrtl.bits %io_md_0 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %210, %211 : !firrtl.uint<20>
      %212 = firrtl.wire : !firrtl.uint<27>
      %213 = firrtl.bits %io_md_1 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %212, %213 : !firrtl.uint<27>
      %214 = firrtl.wire : !firrtl.uint<8>
      %215 = firrtl.bits %io_md_1 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %214, %215 : !firrtl.uint<8>
      %216 = firrtl.wire : !firrtl.uint<20>
      %217 = firrtl.bits %io_md_1 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %216, %217 : !firrtl.uint<20>
      %218 = firrtl.wire : !firrtl.uint<27>
      %219 = firrtl.bits %io_md_2 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %218, %219 : !firrtl.uint<27>
      %220 = firrtl.wire : !firrtl.uint<8>
      %221 = firrtl.bits %io_md_2 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %220, %221 : !firrtl.uint<8>
      %222 = firrtl.wire : !firrtl.uint<20>
      %223 = firrtl.bits %io_md_2 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %222, %223 : !firrtl.uint<20>
      %224 = firrtl.wire : !firrtl.uint<27>
      %225 = firrtl.bits %io_md_3 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %224, %225 : !firrtl.uint<27>
      %226 = firrtl.wire : !firrtl.uint<8>
      %227 = firrtl.bits %io_md_3 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %226, %227 : !firrtl.uint<8>
      %228 = firrtl.wire : !firrtl.uint<20>
      %229 = firrtl.bits %io_md_3 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %228, %229 : !firrtl.uint<20>
      %230 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %231 = firrtl.and %c_control_1_logEnable, %230 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %231, "[%d] EmbeddedTLBExec_1: " {name = "printf_13"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %232 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %233 = firrtl.and %c_control_1_logEnable, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %233, "meta/data: (0)%x|%b|%x (1)%x|%b|%x (2)%x|%b|%x (3)%x|%b|%x rread:%d\0A" {name = "printf_14"} (%206, %208, %210, %212, %214, %216, %218, %220, %222, %224, %226, %228, %io_mdReady) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<27>, !firrtl.uint<8>, !firrtl.uint<20>, !firrtl.uint<1>
      %234 = firrtl.wire : !firrtl.uint<27>
      %235 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %235, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      %236 = firrtl.bits %235 120 to 94 : (!firrtl.uint<121>) -> !firrtl.uint<27>
      firrtl.strictconnect %234, %236 : !firrtl.uint<27>
      %237 = firrtl.wire : !firrtl.uint<16>
      %238 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %238, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      %239 = firrtl.bits %238 93 to 78 : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %237, %239 : !firrtl.uint<16>
      %240 = firrtl.wire : !firrtl.uint<18>
      %241 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %241, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      %242 = firrtl.bits %241 77 to 60 : (!firrtl.uint<121>) -> !firrtl.uint<18>
      firrtl.strictconnect %240, %242 : !firrtl.uint<18>
      %243 = firrtl.wire : !firrtl.uint<8>
      %244 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %244, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      %245 = firrtl.bits %244 59 to 52 : (!firrtl.uint<121>) -> !firrtl.uint<8>
      firrtl.strictconnect %243, %245 : !firrtl.uint<8>
      %246 = firrtl.wire : !firrtl.uint<16>
      %247 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %247, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      %248 = firrtl.bits %247 93 to 78 : (!firrtl.uint<121>) -> !firrtl.uint<16>
      firrtl.strictconnect %246, %248 : !firrtl.uint<16>
      %249 = firrtl.wire : !firrtl.uint<20>
      %250 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %250, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      %251 = firrtl.bits %250 51 to 32 : (!firrtl.uint<121>) -> !firrtl.uint<20>
      firrtl.strictconnect %249, %251 : !firrtl.uint<20>
      %252 = firrtl.wire : !firrtl.uint<32>
      %253 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %253, %io_mdWrite_wdata_6 : !firrtl.uint<121>
      %254 = firrtl.bits %253 31 to 0 : (!firrtl.uint<121>) -> !firrtl.uint<32>
      firrtl.strictconnect %252, %254 : !firrtl.uint<32>
      %255 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %256 = firrtl.and %c_control_1_logEnable, %255 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %256, "[%d] EmbeddedTLBExec_1: " {name = "printf_15"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %257 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %258 = firrtl.and %c_control_1_logEnable, %257 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %258, "md: wen:%d windex:%x waymask:%x vpn:%x asid:%x mask:%x flag:%x asid:%x ppn:%x pteaddr:%x\0A" {name = "printf_16"} (%io_mdWrite_wen_3, %io_mdWrite_windex_4, %io_mdWrite_waymask_5, %234, %237, %240, %243, %246, %249, %252) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>, !firrtl.uint<27>, !firrtl.uint<16>, !firrtl.uint<18>, !firrtl.uint<8>, !firrtl.uint<16>, !firrtl.uint<20>, !firrtl.uint<32>
      %259 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %260 = firrtl.and %c_control_1_logEnable, %259 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %260, "[%d] EmbeddedTLBExec_1: " {name = "printf_17"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %261 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %262 = firrtl.and %c_control_1_logEnable, %261 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %262, "MemReq(%d, %d) MemResp(%d, %d) addr:%x cmd:%d rdata:%x cmd:%d\0A" {name = "printf_18"} (%io_mem_req_valid_7, %io_mem_req_ready, %io_mem_resp_valid, %c1_ui1, %io_mem_req_bits_addr_8, %io_mem_req_bits_cmd_9, %io_mem_resp_bits_rdata, %io_mem_resp_bits_cmd) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<4>
      %263 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %264 = firrtl.and %c_control_1_logEnable, %263 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %264, "[%d] EmbeddedTLBExec_1: " {name = "printf_19"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %265 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %266 = firrtl.and %c_control_1_logEnable, %265 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %266, "io.ipf:%d hitinstrPF:%d missIPF:%d pf.loadPF:%d pf.storePF:%d loadPF:%d storePF:%d\0A" {name = "printf_20"} (%io_ipf, %c0_ui1, %missIPF, %io_pf_loadPF_11, %io_pf_storePF_12, %loadPF, %storePF) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
    }
    firrtl.module private @EmbeddedTLBEmpty_1(out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<32>, in %io_in_bits_size: !firrtl.uint<3>, in %io_in_bits_cmd: !firrtl.uint<4>, in %io_in_bits_wmask: !firrtl.uint<8>, in %io_in_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_size: !firrtl.uint<3>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_wmask: !firrtl.uint<8>, out %io_out_bits_wdata: !firrtl.uint<64>) {
      firrtl.strictconnect %io_in_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_in_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size, %io_in_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd, %io_in_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask, %io_in_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata, %io_in_bits_wdata : !firrtl.uint<64>
    }
    firrtl.module private @EmbeddedTLBMD_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_tlbmd_0: !firrtl.uint<121>, out %io_tlbmd_1: !firrtl.uint<121>, out %io_tlbmd_2: !firrtl.uint<121>, out %io_tlbmd_3: !firrtl.uint<121>, in %io_write_wen: !firrtl.uint<1>, in %io_write_windex: !firrtl.uint<4>, in %io_write_waymask: !firrtl.uint<4>, in %io_write_wdata: !firrtl.uint<121>, in %io_rindex: !firrtl.uint<4>, out %io_ready: !firrtl.uint<1>) {
      %c0_ui121 = firrtl.constant 0 : !firrtl.uint<121>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c14_ui4 = firrtl.constant 14 : !firrtl.uint<4>
      %c13_ui4 = firrtl.constant 13 : !firrtl.uint<4>
      %c12_ui4 = firrtl.constant 12 : !firrtl.uint<4>
      %c11_ui4 = firrtl.constant 11 : !firrtl.uint<4>
      %c10_ui4 = firrtl.constant 10 : !firrtl.uint<4>
      %c9_ui4 = firrtl.constant 9 : !firrtl.uint<4>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c7_ui4 = firrtl.constant 7 : !firrtl.uint<4>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c5_ui4 = firrtl.constant 5 : !firrtl.uint<4>
      %c4_ui4 = firrtl.constant 4 : !firrtl.uint<4>
      %c3_ui4 = firrtl.constant 3 : !firrtl.uint<4>
      %c2_ui4 = firrtl.constant 2 : !firrtl.uint<4>
      %c1_ui4 = firrtl.constant 1 : !firrtl.uint<4>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_tlbmd_0_0 = firrtl.wire {name = "io_tlbmd_0"} : !firrtl.uint<121>
      %io_tlbmd_1_1 = firrtl.wire {name = "io_tlbmd_1"} : !firrtl.uint<121>
      %io_tlbmd_2_2 = firrtl.wire {name = "io_tlbmd_2"} : !firrtl.uint<121>
      %io_tlbmd_3_3 = firrtl.wire {name = "io_tlbmd_3"} : !firrtl.uint<121>
      %io_ready_4 = firrtl.wire {name = "io_ready"} : !firrtl.uint<1>
      firrtl.strictconnect %io_tlbmd_0, %io_tlbmd_0_0 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_1, %io_tlbmd_1_1 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_2, %io_tlbmd_2_2 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_3, %io_tlbmd_3_3 : !firrtl.uint<121>
      firrtl.strictconnect %io_ready, %io_ready_4 : !firrtl.uint<1>
      %tlbmd_0_0 = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_0_1 = firrtl.reg %clock {firrtl.random_init_start = 121 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_0_2 = firrtl.reg %clock {firrtl.random_init_start = 242 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_0_3 = firrtl.reg %clock {firrtl.random_init_start = 363 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_1_0 = firrtl.reg %clock {firrtl.random_init_start = 484 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_1_1 = firrtl.reg %clock {firrtl.random_init_start = 605 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_1_2 = firrtl.reg %clock {firrtl.random_init_start = 726 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_1_3 = firrtl.reg %clock {firrtl.random_init_start = 847 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_2_0 = firrtl.reg %clock {firrtl.random_init_start = 968 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_2_1 = firrtl.reg %clock {firrtl.random_init_start = 1089 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_2_2 = firrtl.reg %clock {firrtl.random_init_start = 1210 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_2_3 = firrtl.reg %clock {firrtl.random_init_start = 1331 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_3_0 = firrtl.reg %clock {firrtl.random_init_start = 1452 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_3_1 = firrtl.reg %clock {firrtl.random_init_start = 1573 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_3_2 = firrtl.reg %clock {firrtl.random_init_start = 1694 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_3_3 = firrtl.reg %clock {firrtl.random_init_start = 1815 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_4_0 = firrtl.reg %clock {firrtl.random_init_start = 1936 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_4_1 = firrtl.reg %clock {firrtl.random_init_start = 2057 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_4_2 = firrtl.reg %clock {firrtl.random_init_start = 2178 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_4_3 = firrtl.reg %clock {firrtl.random_init_start = 2299 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_5_0 = firrtl.reg %clock {firrtl.random_init_start = 2420 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_5_1 = firrtl.reg %clock {firrtl.random_init_start = 2541 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_5_2 = firrtl.reg %clock {firrtl.random_init_start = 2662 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_5_3 = firrtl.reg %clock {firrtl.random_init_start = 2783 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_6_0 = firrtl.reg %clock {firrtl.random_init_start = 2904 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_6_1 = firrtl.reg %clock {firrtl.random_init_start = 3025 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_6_2 = firrtl.reg %clock {firrtl.random_init_start = 3146 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_6_3 = firrtl.reg %clock {firrtl.random_init_start = 3267 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_7_0 = firrtl.reg %clock {firrtl.random_init_start = 3388 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_7_1 = firrtl.reg %clock {firrtl.random_init_start = 3509 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_7_2 = firrtl.reg %clock {firrtl.random_init_start = 3630 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_7_3 = firrtl.reg %clock {firrtl.random_init_start = 3751 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_8_0 = firrtl.reg %clock {firrtl.random_init_start = 3872 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_8_1 = firrtl.reg %clock {firrtl.random_init_start = 3993 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_8_2 = firrtl.reg %clock {firrtl.random_init_start = 4114 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_8_3 = firrtl.reg %clock {firrtl.random_init_start = 4235 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_9_0 = firrtl.reg %clock {firrtl.random_init_start = 4356 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_9_1 = firrtl.reg %clock {firrtl.random_init_start = 4477 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_9_2 = firrtl.reg %clock {firrtl.random_init_start = 4598 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_9_3 = firrtl.reg %clock {firrtl.random_init_start = 4719 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_10_0 = firrtl.reg %clock {firrtl.random_init_start = 4840 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_10_1 = firrtl.reg %clock {firrtl.random_init_start = 4961 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_10_2 = firrtl.reg %clock {firrtl.random_init_start = 5082 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_10_3 = firrtl.reg %clock {firrtl.random_init_start = 5203 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_11_0 = firrtl.reg %clock {firrtl.random_init_start = 5324 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_11_1 = firrtl.reg %clock {firrtl.random_init_start = 5445 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_11_2 = firrtl.reg %clock {firrtl.random_init_start = 5566 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_11_3 = firrtl.reg %clock {firrtl.random_init_start = 5687 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_12_0 = firrtl.reg %clock {firrtl.random_init_start = 5808 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_12_1 = firrtl.reg %clock {firrtl.random_init_start = 5929 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_12_2 = firrtl.reg %clock {firrtl.random_init_start = 6050 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_12_3 = firrtl.reg %clock {firrtl.random_init_start = 6171 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_13_0 = firrtl.reg %clock {firrtl.random_init_start = 6292 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_13_1 = firrtl.reg %clock {firrtl.random_init_start = 6413 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_13_2 = firrtl.reg %clock {firrtl.random_init_start = 6534 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_13_3 = firrtl.reg %clock {firrtl.random_init_start = 6655 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_14_0 = firrtl.reg %clock {firrtl.random_init_start = 6776 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_14_1 = firrtl.reg %clock {firrtl.random_init_start = 6897 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_14_2 = firrtl.reg %clock {firrtl.random_init_start = 7018 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_14_3 = firrtl.reg %clock {firrtl.random_init_start = 7139 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_15_0 = firrtl.reg %clock {firrtl.random_init_start = 7260 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_15_1 = firrtl.reg %clock {firrtl.random_init_start = 7381 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_15_2 = firrtl.reg %clock {firrtl.random_init_start = 7502 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %tlbmd_15_3 = firrtl.reg %clock {firrtl.random_init_start = 7623 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %0 = firrtl.multibit_mux %io_rindex, %tlbmd_15_0, %tlbmd_14_0, %tlbmd_13_0, %tlbmd_12_0, %tlbmd_11_0, %tlbmd_10_0, %tlbmd_9_0, %tlbmd_8_0, %tlbmd_7_0, %tlbmd_6_0, %tlbmd_5_0, %tlbmd_4_0, %tlbmd_3_0, %tlbmd_2_0, %tlbmd_1_0, %tlbmd_0_0 : !firrtl.uint<4>, !firrtl.uint<121>
      %1 = firrtl.multibit_mux %io_rindex, %tlbmd_15_1, %tlbmd_14_1, %tlbmd_13_1, %tlbmd_12_1, %tlbmd_11_1, %tlbmd_10_1, %tlbmd_9_1, %tlbmd_8_1, %tlbmd_7_1, %tlbmd_6_1, %tlbmd_5_1, %tlbmd_4_1, %tlbmd_3_1, %tlbmd_2_1, %tlbmd_1_1, %tlbmd_0_1 : !firrtl.uint<4>, !firrtl.uint<121>
      %2 = firrtl.multibit_mux %io_rindex, %tlbmd_15_2, %tlbmd_14_2, %tlbmd_13_2, %tlbmd_12_2, %tlbmd_11_2, %tlbmd_10_2, %tlbmd_9_2, %tlbmd_8_2, %tlbmd_7_2, %tlbmd_6_2, %tlbmd_5_2, %tlbmd_4_2, %tlbmd_3_2, %tlbmd_2_2, %tlbmd_1_2, %tlbmd_0_2 : !firrtl.uint<4>, !firrtl.uint<121>
      %3 = firrtl.multibit_mux %io_rindex, %tlbmd_15_3, %tlbmd_14_3, %tlbmd_13_3, %tlbmd_12_3, %tlbmd_11_3, %tlbmd_10_3, %tlbmd_9_3, %tlbmd_8_3, %tlbmd_7_3, %tlbmd_6_3, %tlbmd_5_3, %tlbmd_4_3, %tlbmd_3_3, %tlbmd_2_3, %tlbmd_1_3, %tlbmd_0_3 : !firrtl.uint<4>, !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_0_0, %0 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_1_1, %1 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_2_2, %2 : !firrtl.uint<121>
      firrtl.strictconnect %io_tlbmd_3_3, %3 : !firrtl.uint<121>
      %resetState = firrtl.regreset %clock, %reset, %c1_ui1 {firrtl.random_init_start = 7744 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %resetSet = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 7745 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %resetFinish = firrtl.wire : !firrtl.uint<1>
      %wrap_wrap = firrtl.andr %resetSet {name = "wrap_wrap"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_wrap_value_T = firrtl.add %resetSet, %c1_ui1 {name = "_wrap_value_T"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<5>
      %_wrap_value_T_1 = firrtl.bits %_wrap_value_T 3 to 0 {name = "_wrap_value_T_1"} : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %4 = firrtl.mux(%resetState, %_wrap_value_T_1, %resetSet) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %resetSet, %4 : !firrtl.uint<4>
      %5 = firrtl.mux(%resetState, %wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %resetFinish, %5 : !firrtl.uint<1>
      %6 = firrtl.mux(%resetFinish, %c0_ui1, %resetState) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %resetState, %6 : !firrtl.uint<1>
      %wen = firrtl.mux(%resetState, %c1_ui1, %io_write_wen) {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %setIdx = firrtl.mux(%resetState, %resetSet, %io_write_windex) {name = "setIdx"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %waymask = firrtl.mux(%resetState, %c15_ui4, %io_write_waymask) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %dataword = firrtl.mux(%resetState, %c0_ui121, %io_write_wdata) {name = "dataword"} : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      %wdata_0 = firrtl.wire : !firrtl.uint<121>
      %wdata_1 = firrtl.wire : !firrtl.uint<121>
      %wdata_2 = firrtl.wire : !firrtl.uint<121>
      %wdata_3 = firrtl.wire : !firrtl.uint<121>
      firrtl.strictconnect %wdata_0, %dataword : !firrtl.uint<121>
      firrtl.strictconnect %wdata_1, %dataword : !firrtl.uint<121>
      firrtl.strictconnect %wdata_2, %dataword : !firrtl.uint<121>
      firrtl.strictconnect %wdata_3, %dataword : !firrtl.uint<121>
      %7 = firrtl.bits %waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %8 = firrtl.bits %waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %9 = firrtl.bits %waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %10 = firrtl.bits %waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %11 = firrtl.and %wen, %7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.orr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %13 = firrtl.not %12 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.and %11, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.mux(%14, %wdata_0, %tlbmd_0_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_0, %15 : !firrtl.uint<121>
      %16 = firrtl.eq %setIdx, %c1_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %17 = firrtl.and %11, %16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.mux(%17, %wdata_0, %tlbmd_1_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_1_0, %18 : !firrtl.uint<121>
      %19 = firrtl.eq %setIdx, %c2_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %20 = firrtl.and %11, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.mux(%20, %wdata_0, %tlbmd_2_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_2_0, %21 : !firrtl.uint<121>
      %22 = firrtl.eq %setIdx, %c3_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %23 = firrtl.and %11, %22 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.mux(%23, %wdata_0, %tlbmd_3_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_3_0, %24 : !firrtl.uint<121>
      %25 = firrtl.eq %setIdx, %c4_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %26 = firrtl.and %11, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.mux(%26, %wdata_0, %tlbmd_4_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_4_0, %27 : !firrtl.uint<121>
      %28 = firrtl.eq %setIdx, %c5_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %29 = firrtl.and %11, %28 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.mux(%29, %wdata_0, %tlbmd_5_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_5_0, %30 : !firrtl.uint<121>
      %31 = firrtl.eq %setIdx, %c6_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %32 = firrtl.and %11, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.mux(%32, %wdata_0, %tlbmd_6_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_6_0, %33 : !firrtl.uint<121>
      %34 = firrtl.eq %setIdx, %c7_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %35 = firrtl.and %11, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.mux(%35, %wdata_0, %tlbmd_7_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_7_0, %36 : !firrtl.uint<121>
      %37 = firrtl.eq %setIdx, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %38 = firrtl.and %11, %37 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.mux(%38, %wdata_0, %tlbmd_8_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_8_0, %39 : !firrtl.uint<121>
      %40 = firrtl.eq %setIdx, %c9_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %41 = firrtl.and %11, %40 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.mux(%41, %wdata_0, %tlbmd_9_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_9_0, %42 : !firrtl.uint<121>
      %43 = firrtl.eq %setIdx, %c10_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %44 = firrtl.and %11, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.mux(%44, %wdata_0, %tlbmd_10_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_10_0, %45 : !firrtl.uint<121>
      %46 = firrtl.eq %setIdx, %c11_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %47 = firrtl.and %11, %46 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.mux(%47, %wdata_0, %tlbmd_11_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_11_0, %48 : !firrtl.uint<121>
      %49 = firrtl.eq %setIdx, %c12_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %50 = firrtl.and %11, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.mux(%50, %wdata_0, %tlbmd_12_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_12_0, %51 : !firrtl.uint<121>
      %52 = firrtl.eq %setIdx, %c13_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %53 = firrtl.and %11, %52 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.mux(%53, %wdata_0, %tlbmd_13_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_13_0, %54 : !firrtl.uint<121>
      %55 = firrtl.eq %setIdx, %c14_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %56 = firrtl.and %11, %55 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.mux(%56, %wdata_0, %tlbmd_14_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_14_0, %57 : !firrtl.uint<121>
      %58 = firrtl.andr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %59 = firrtl.and %11, %58 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.mux(%59, %wdata_0, %tlbmd_15_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_15_0, %60 : !firrtl.uint<121>
      %61 = firrtl.and %wen, %8 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.orr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %63 = firrtl.not %62 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.and %61, %63 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.mux(%64, %wdata_1, %tlbmd_0_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_1, %65 : !firrtl.uint<121>
      %66 = firrtl.eq %setIdx, %c1_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %67 = firrtl.and %61, %66 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %68 = firrtl.mux(%67, %wdata_1, %tlbmd_1_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_1_1, %68 : !firrtl.uint<121>
      %69 = firrtl.eq %setIdx, %c2_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %70 = firrtl.and %61, %69 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %71 = firrtl.mux(%70, %wdata_1, %tlbmd_2_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_2_1, %71 : !firrtl.uint<121>
      %72 = firrtl.eq %setIdx, %c3_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %73 = firrtl.and %61, %72 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %74 = firrtl.mux(%73, %wdata_1, %tlbmd_3_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_3_1, %74 : !firrtl.uint<121>
      %75 = firrtl.eq %setIdx, %c4_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %76 = firrtl.and %61, %75 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %77 = firrtl.mux(%76, %wdata_1, %tlbmd_4_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_4_1, %77 : !firrtl.uint<121>
      %78 = firrtl.eq %setIdx, %c5_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %79 = firrtl.and %61, %78 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.mux(%79, %wdata_1, %tlbmd_5_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_5_1, %80 : !firrtl.uint<121>
      %81 = firrtl.eq %setIdx, %c6_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %82 = firrtl.and %61, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.mux(%82, %wdata_1, %tlbmd_6_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_6_1, %83 : !firrtl.uint<121>
      %84 = firrtl.eq %setIdx, %c7_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %85 = firrtl.and %61, %84 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.mux(%85, %wdata_1, %tlbmd_7_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_7_1, %86 : !firrtl.uint<121>
      %87 = firrtl.eq %setIdx, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %88 = firrtl.and %61, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.mux(%88, %wdata_1, %tlbmd_8_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_8_1, %89 : !firrtl.uint<121>
      %90 = firrtl.eq %setIdx, %c9_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %91 = firrtl.and %61, %90 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.mux(%91, %wdata_1, %tlbmd_9_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_9_1, %92 : !firrtl.uint<121>
      %93 = firrtl.eq %setIdx, %c10_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %94 = firrtl.and %61, %93 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.mux(%94, %wdata_1, %tlbmd_10_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_10_1, %95 : !firrtl.uint<121>
      %96 = firrtl.eq %setIdx, %c11_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %97 = firrtl.and %61, %96 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.mux(%97, %wdata_1, %tlbmd_11_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_11_1, %98 : !firrtl.uint<121>
      %99 = firrtl.eq %setIdx, %c12_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %100 = firrtl.and %61, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %101 = firrtl.mux(%100, %wdata_1, %tlbmd_12_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_12_1, %101 : !firrtl.uint<121>
      %102 = firrtl.eq %setIdx, %c13_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %103 = firrtl.and %61, %102 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.mux(%103, %wdata_1, %tlbmd_13_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_13_1, %104 : !firrtl.uint<121>
      %105 = firrtl.eq %setIdx, %c14_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %106 = firrtl.and %61, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.mux(%106, %wdata_1, %tlbmd_14_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_14_1, %107 : !firrtl.uint<121>
      %108 = firrtl.andr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %109 = firrtl.and %61, %108 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.mux(%109, %wdata_1, %tlbmd_15_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_15_1, %110 : !firrtl.uint<121>
      %111 = firrtl.and %wen, %9 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %112 = firrtl.orr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %113 = firrtl.not %112 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %114 = firrtl.and %111, %113 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %115 = firrtl.mux(%114, %wdata_2, %tlbmd_0_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_2, %115 : !firrtl.uint<121>
      %116 = firrtl.eq %setIdx, %c1_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %117 = firrtl.and %111, %116 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.mux(%117, %wdata_2, %tlbmd_1_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_1_2, %118 : !firrtl.uint<121>
      %119 = firrtl.eq %setIdx, %c2_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %120 = firrtl.and %111, %119 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %121 = firrtl.mux(%120, %wdata_2, %tlbmd_2_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_2_2, %121 : !firrtl.uint<121>
      %122 = firrtl.eq %setIdx, %c3_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %123 = firrtl.and %111, %122 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %124 = firrtl.mux(%123, %wdata_2, %tlbmd_3_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_3_2, %124 : !firrtl.uint<121>
      %125 = firrtl.eq %setIdx, %c4_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %126 = firrtl.and %111, %125 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %127 = firrtl.mux(%126, %wdata_2, %tlbmd_4_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_4_2, %127 : !firrtl.uint<121>
      %128 = firrtl.eq %setIdx, %c5_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %129 = firrtl.and %111, %128 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %130 = firrtl.mux(%129, %wdata_2, %tlbmd_5_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_5_2, %130 : !firrtl.uint<121>
      %131 = firrtl.eq %setIdx, %c6_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %132 = firrtl.and %111, %131 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %133 = firrtl.mux(%132, %wdata_2, %tlbmd_6_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_6_2, %133 : !firrtl.uint<121>
      %134 = firrtl.eq %setIdx, %c7_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %135 = firrtl.and %111, %134 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %136 = firrtl.mux(%135, %wdata_2, %tlbmd_7_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_7_2, %136 : !firrtl.uint<121>
      %137 = firrtl.eq %setIdx, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %138 = firrtl.and %111, %137 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %139 = firrtl.mux(%138, %wdata_2, %tlbmd_8_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_8_2, %139 : !firrtl.uint<121>
      %140 = firrtl.eq %setIdx, %c9_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %141 = firrtl.and %111, %140 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %142 = firrtl.mux(%141, %wdata_2, %tlbmd_9_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_9_2, %142 : !firrtl.uint<121>
      %143 = firrtl.eq %setIdx, %c10_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %144 = firrtl.and %111, %143 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %145 = firrtl.mux(%144, %wdata_2, %tlbmd_10_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_10_2, %145 : !firrtl.uint<121>
      %146 = firrtl.eq %setIdx, %c11_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %147 = firrtl.and %111, %146 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %148 = firrtl.mux(%147, %wdata_2, %tlbmd_11_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_11_2, %148 : !firrtl.uint<121>
      %149 = firrtl.eq %setIdx, %c12_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %150 = firrtl.and %111, %149 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %151 = firrtl.mux(%150, %wdata_2, %tlbmd_12_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_12_2, %151 : !firrtl.uint<121>
      %152 = firrtl.eq %setIdx, %c13_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %153 = firrtl.and %111, %152 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %154 = firrtl.mux(%153, %wdata_2, %tlbmd_13_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_13_2, %154 : !firrtl.uint<121>
      %155 = firrtl.eq %setIdx, %c14_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %156 = firrtl.and %111, %155 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %157 = firrtl.mux(%156, %wdata_2, %tlbmd_14_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_14_2, %157 : !firrtl.uint<121>
      %158 = firrtl.andr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %159 = firrtl.and %111, %158 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %160 = firrtl.mux(%159, %wdata_2, %tlbmd_15_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_15_2, %160 : !firrtl.uint<121>
      %161 = firrtl.and %wen, %10 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %162 = firrtl.orr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %163 = firrtl.not %162 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %164 = firrtl.and %161, %163 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %165 = firrtl.mux(%164, %wdata_3, %tlbmd_0_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_0_3, %165 : !firrtl.uint<121>
      %166 = firrtl.eq %setIdx, %c1_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %167 = firrtl.and %161, %166 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %168 = firrtl.mux(%167, %wdata_3, %tlbmd_1_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_1_3, %168 : !firrtl.uint<121>
      %169 = firrtl.eq %setIdx, %c2_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %170 = firrtl.and %161, %169 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %171 = firrtl.mux(%170, %wdata_3, %tlbmd_2_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_2_3, %171 : !firrtl.uint<121>
      %172 = firrtl.eq %setIdx, %c3_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %173 = firrtl.and %161, %172 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %174 = firrtl.mux(%173, %wdata_3, %tlbmd_3_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_3_3, %174 : !firrtl.uint<121>
      %175 = firrtl.eq %setIdx, %c4_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %176 = firrtl.and %161, %175 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %177 = firrtl.mux(%176, %wdata_3, %tlbmd_4_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_4_3, %177 : !firrtl.uint<121>
      %178 = firrtl.eq %setIdx, %c5_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %179 = firrtl.and %161, %178 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %180 = firrtl.mux(%179, %wdata_3, %tlbmd_5_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_5_3, %180 : !firrtl.uint<121>
      %181 = firrtl.eq %setIdx, %c6_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %182 = firrtl.and %161, %181 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %183 = firrtl.mux(%182, %wdata_3, %tlbmd_6_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_6_3, %183 : !firrtl.uint<121>
      %184 = firrtl.eq %setIdx, %c7_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %185 = firrtl.and %161, %184 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %186 = firrtl.mux(%185, %wdata_3, %tlbmd_7_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_7_3, %186 : !firrtl.uint<121>
      %187 = firrtl.eq %setIdx, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %188 = firrtl.and %161, %187 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %189 = firrtl.mux(%188, %wdata_3, %tlbmd_8_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_8_3, %189 : !firrtl.uint<121>
      %190 = firrtl.eq %setIdx, %c9_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %191 = firrtl.and %161, %190 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %192 = firrtl.mux(%191, %wdata_3, %tlbmd_9_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_9_3, %192 : !firrtl.uint<121>
      %193 = firrtl.eq %setIdx, %c10_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %194 = firrtl.and %161, %193 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %195 = firrtl.mux(%194, %wdata_3, %tlbmd_10_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_10_3, %195 : !firrtl.uint<121>
      %196 = firrtl.eq %setIdx, %c11_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %197 = firrtl.and %161, %196 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %198 = firrtl.mux(%197, %wdata_3, %tlbmd_11_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_11_3, %198 : !firrtl.uint<121>
      %199 = firrtl.eq %setIdx, %c12_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %200 = firrtl.and %161, %199 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %201 = firrtl.mux(%200, %wdata_3, %tlbmd_12_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_12_3, %201 : !firrtl.uint<121>
      %202 = firrtl.eq %setIdx, %c13_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %203 = firrtl.and %161, %202 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %204 = firrtl.mux(%203, %wdata_3, %tlbmd_13_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_13_3, %204 : !firrtl.uint<121>
      %205 = firrtl.eq %setIdx, %c14_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %206 = firrtl.and %161, %205 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %207 = firrtl.mux(%206, %wdata_3, %tlbmd_14_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_14_3, %207 : !firrtl.uint<121>
      %208 = firrtl.andr %setIdx : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %209 = firrtl.and %161, %208 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %210 = firrtl.mux(%209, %wdata_3, %tlbmd_15_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %tlbmd_15_3, %210 : !firrtl.uint<121>
      %_io_ready_T = firrtl.not %resetState {name = "_io_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_ready_4, %_io_ready_T : !firrtl.uint<1>
    }
    firrtl.module private @EmbeddedTLB_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<39>, in %io_in_req_bits_size: !firrtl.uint<3>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wmask: !firrtl.uint<8>, in %io_in_req_bits_wdata: !firrtl.uint<64>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_req_ready: !firrtl.uint<1>, out %io_out_req_valid: !firrtl.uint<1>, out %io_out_req_bits_addr: !firrtl.uint<32>, out %io_out_req_bits_size: !firrtl.uint<3>, out %io_out_req_bits_cmd: !firrtl.uint<4>, out %io_out_req_bits_wmask: !firrtl.uint<8>, out %io_out_req_bits_wdata: !firrtl.uint<64>, in %io_out_resp_valid: !firrtl.uint<1>, in %io_out_resp_bits_cmd: !firrtl.uint<4>, in %io_out_resp_bits_rdata: !firrtl.uint<64>, in %io_mem_req_ready: !firrtl.uint<1>, out %io_mem_req_valid: !firrtl.uint<1>, out %io_mem_req_bits_addr: !firrtl.uint<32>, out %io_mem_req_bits_cmd: !firrtl.uint<4>, out %io_mem_req_bits_wdata: !firrtl.uint<64>, in %io_mem_resp_valid: !firrtl.uint<1>, in %io_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_csrMMU_priviledgeMode: !firrtl.uint<2>, in %io_csrMMU_status_sum: !firrtl.uint<1>, in %io_csrMMU_status_mxr: !firrtl.uint<1>, out %io_csrMMU_loadPF: !firrtl.uint<1>, out %io_csrMMU_storePF: !firrtl.uint<1>, out %io_csrMMU_addr: !firrtl.uint<39>, in %io_cacheEmpty: !firrtl.uint<1>, out %_WIRE_1__bore: !firrtl.uint<1>, out %_WIRE_1__bore_0: !firrtl.uint<1>, out %_WIRE_2__bore: !firrtl.uint<1>, out %_WIRE_2__bore_1: !firrtl.uint<1>, in %satp__bore: !firrtl.uint<64>, in %flushTLB__bore: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>, in %tlbExec_isAMO__bore: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_out_req_valid_1 = firrtl.wire {name = "io_out_req_valid"} : !firrtl.uint<1>
      %io_out_req_bits_addr_2 = firrtl.wire {name = "io_out_req_bits_addr"} : !firrtl.uint<32>
      %io_out_req_bits_size_3 = firrtl.wire {name = "io_out_req_bits_size"} : !firrtl.uint<3>
      %io_out_req_bits_cmd_4 = firrtl.wire {name = "io_out_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_req_bits_wmask_5 = firrtl.wire {name = "io_out_req_bits_wmask"} : !firrtl.uint<8>
      %io_out_req_bits_wdata_6 = firrtl.wire {name = "io_out_req_bits_wdata"} : !firrtl.uint<64>
      %io_mem_req_valid_7 = firrtl.wire {name = "io_mem_req_valid"} : !firrtl.uint<1>
      %io_mem_req_bits_addr_8 = firrtl.wire {name = "io_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_mem_req_bits_cmd_9 = firrtl.wire {name = "io_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_mem_req_bits_wdata_10 = firrtl.wire {name = "io_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_csrMMU_loadPF_11 = firrtl.wire {name = "io_csrMMU_loadPF"} : !firrtl.uint<1>
      %io_csrMMU_storePF_12 = firrtl.wire {name = "io_csrMMU_storePF"} : !firrtl.uint<1>
      %io_csrMMU_addr_13 = firrtl.wire {name = "io_csrMMU_addr"} : !firrtl.uint<39>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_out_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_req_valid, %io_out_req_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_bits_addr, %io_out_req_bits_addr_2 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_size, %io_out_req_bits_size_3 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_cmd, %io_out_req_bits_cmd_4 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_wmask, %io_out_req_bits_wmask_5 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wdata, %io_out_req_bits_wdata_6 : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_req_valid, %io_mem_req_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr, %io_mem_req_bits_addr_8 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd, %io_mem_req_bits_cmd_9 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata, %io_mem_req_bits_wdata_10 : !firrtl.uint<64>
      firrtl.strictconnect %io_csrMMU_loadPF, %io_csrMMU_loadPF_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_csrMMU_storePF, %io_csrMMU_storePF_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_csrMMU_addr, %io_csrMMU_addr_13 : !firrtl.uint<39>
      %tlbExec_clock, %tlbExec_reset, %tlbExec_io_in_ready, %tlbExec_io_in_valid, %tlbExec_io_in_bits_addr, %tlbExec_io_in_bits_size, %tlbExec_io_in_bits_cmd, %tlbExec_io_in_bits_wmask, %tlbExec_io_in_bits_wdata, %tlbExec_io_out_ready, %tlbExec_io_out_valid, %tlbExec_io_out_bits_addr, %tlbExec_io_out_bits_size, %tlbExec_io_out_bits_cmd, %tlbExec_io_out_bits_wmask, %tlbExec_io_out_bits_wdata, %tlbExec_io_md_0, %tlbExec_io_md_1, %tlbExec_io_md_2, %tlbExec_io_md_3, %tlbExec_io_mdWrite_wen, %tlbExec_io_mdWrite_windex, %tlbExec_io_mdWrite_waymask, %tlbExec_io_mdWrite_wdata, %tlbExec_io_mdReady, %tlbExec_io_mem_req_ready, %tlbExec_io_mem_req_valid, %tlbExec_io_mem_req_bits_addr, %tlbExec_io_mem_req_bits_cmd, %tlbExec_io_mem_req_bits_wdata, %tlbExec_io_mem_resp_valid, %tlbExec_io_mem_resp_bits_cmd, %tlbExec_io_mem_resp_bits_rdata, %tlbExec_io_satp, %tlbExec_io_pf_priviledgeMode, %tlbExec_io_pf_status_sum, %tlbExec_io_pf_status_mxr, %tlbExec_io_pf_loadPF, %tlbExec_io_pf_storePF, %tlbExec_io_pf_addr, %tlbExec_io_isFinish, %tlbExec_isAMO__bore_14 = firrtl.instance tlbExec @EmbeddedTLBExec_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<39>, in io_in_bits_size: !firrtl.uint<3>, in io_in_bits_cmd: !firrtl.uint<4>, in io_in_bits_wmask: !firrtl.uint<8>, in io_in_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_size: !firrtl.uint<3>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_wmask: !firrtl.uint<8>, out io_out_bits_wdata: !firrtl.uint<64>, in io_md_0: !firrtl.uint<121>, in io_md_1: !firrtl.uint<121>, in io_md_2: !firrtl.uint<121>, in io_md_3: !firrtl.uint<121>, out io_mdWrite_wen: !firrtl.uint<1>, out io_mdWrite_windex: !firrtl.uint<4>, out io_mdWrite_waymask: !firrtl.uint<4>, out io_mdWrite_wdata: !firrtl.uint<121>, in io_mdReady: !firrtl.uint<1>, in io_mem_req_ready: !firrtl.uint<1>, out io_mem_req_valid: !firrtl.uint<1>, out io_mem_req_bits_addr: !firrtl.uint<32>, out io_mem_req_bits_cmd: !firrtl.uint<4>, out io_mem_req_bits_wdata: !firrtl.uint<64>, in io_mem_resp_valid: !firrtl.uint<1>, in io_mem_resp_bits_cmd: !firrtl.uint<4>, in io_mem_resp_bits_rdata: !firrtl.uint<64>, in io_satp: !firrtl.uint<64>, in io_pf_priviledgeMode: !firrtl.uint<2>, in io_pf_status_sum: !firrtl.uint<1>, in io_pf_status_mxr: !firrtl.uint<1>, out io_pf_loadPF: !firrtl.uint<1>, out io_pf_storePF: !firrtl.uint<1>, out io_pf_addr: !firrtl.uint<39>, out io_isFinish: !firrtl.uint<1>, in isAMO__bore: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<39>
      %3 = firrtl.wire : !firrtl.uint<3>
      %4 = firrtl.wire : !firrtl.uint<4>
      %5 = firrtl.wire : !firrtl.uint<8>
      %6 = firrtl.wire : !firrtl.uint<64>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<32>
      %10 = firrtl.wire : !firrtl.uint<3>
      %11 = firrtl.wire : !firrtl.uint<4>
      %12 = firrtl.wire : !firrtl.uint<8>
      %13 = firrtl.wire : !firrtl.uint<64>
      %14 = firrtl.wire : !firrtl.uint<121>
      %15 = firrtl.wire : !firrtl.uint<121>
      %16 = firrtl.wire : !firrtl.uint<121>
      %17 = firrtl.wire : !firrtl.uint<121>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<4>
      %20 = firrtl.wire : !firrtl.uint<4>
      %21 = firrtl.wire : !firrtl.uint<121>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<1>
      %24 = firrtl.wire : !firrtl.uint<32>
      %25 = firrtl.wire : !firrtl.uint<4>
      %26 = firrtl.wire : !firrtl.uint<64>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<39>
      %30 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %tlbExec_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_in_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_in_bits_addr, %2 : !firrtl.uint<39>
      firrtl.strictconnect %tlbExec_io_in_bits_size, %3 : !firrtl.uint<3>
      firrtl.strictconnect %tlbExec_io_in_bits_cmd, %4 : !firrtl.uint<4>
      firrtl.strictconnect %tlbExec_io_in_bits_wmask, %5 : !firrtl.uint<8>
      firrtl.strictconnect %tlbExec_io_in_bits_wdata, %6 : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_out_ready, %7 : !firrtl.uint<1>
      firrtl.strictconnect %8, %tlbExec_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %9, %tlbExec_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %10, %tlbExec_io_out_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %11, %tlbExec_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %12, %tlbExec_io_out_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %13, %tlbExec_io_out_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_md_0, %14 : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_md_1, %15 : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_md_2, %16 : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_md_3, %17 : !firrtl.uint<121>
      firrtl.strictconnect %18, %tlbExec_io_mdWrite_wen : !firrtl.uint<1>
      firrtl.strictconnect %19, %tlbExec_io_mdWrite_windex : !firrtl.uint<4>
      firrtl.strictconnect %20, %tlbExec_io_mdWrite_waymask : !firrtl.uint<4>
      firrtl.strictconnect %21, %tlbExec_io_mdWrite_wdata : !firrtl.uint<121>
      firrtl.strictconnect %tlbExec_io_mdReady, %22 : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_mem_req_ready, %io_mem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %23, %tlbExec_io_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %24, %tlbExec_io_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %25, %tlbExec_io_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %26, %tlbExec_io_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_mem_resp_valid, %io_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_mem_resp_bits_cmd, %io_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %tlbExec_io_mem_resp_bits_rdata, %io_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_satp, %satp__bore : !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_pf_priviledgeMode, %io_csrMMU_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %tlbExec_io_pf_status_sum, %io_csrMMU_status_sum : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_io_pf_status_mxr, %io_csrMMU_status_mxr : !firrtl.uint<1>
      firrtl.strictconnect %27, %tlbExec_io_pf_loadPF : !firrtl.uint<1>
      firrtl.strictconnect %28, %tlbExec_io_pf_storePF : !firrtl.uint<1>
      firrtl.strictconnect %29, %tlbExec_io_pf_addr : !firrtl.uint<39>
      firrtl.strictconnect %30, %tlbExec_io_isFinish : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_clock, %clock : !firrtl.clock
      firrtl.strictconnect %tlbExec_reset, %reset : !firrtl.uint<1>
      %tlbEmpty_io_in_ready, %tlbEmpty_io_in_valid, %tlbEmpty_io_in_bits_addr, %tlbEmpty_io_in_bits_size, %tlbEmpty_io_in_bits_cmd, %tlbEmpty_io_in_bits_wmask, %tlbEmpty_io_in_bits_wdata, %tlbEmpty_io_out_ready, %tlbEmpty_io_out_valid, %tlbEmpty_io_out_bits_addr, %tlbEmpty_io_out_bits_size, %tlbEmpty_io_out_bits_cmd, %tlbEmpty_io_out_bits_wmask, %tlbEmpty_io_out_bits_wdata = firrtl.instance tlbEmpty @EmbeddedTLBEmpty_1(out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<32>, in io_in_bits_size: !firrtl.uint<3>, in io_in_bits_cmd: !firrtl.uint<4>, in io_in_bits_wmask: !firrtl.uint<8>, in io_in_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_size: !firrtl.uint<3>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_wmask: !firrtl.uint<8>, out io_out_bits_wdata: !firrtl.uint<64>)
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<1>
      %33 = firrtl.wire : !firrtl.uint<32>
      %34 = firrtl.wire : !firrtl.uint<3>
      %35 = firrtl.wire : !firrtl.uint<4>
      %36 = firrtl.wire : !firrtl.uint<8>
      %37 = firrtl.wire : !firrtl.uint<64>
      %38 = firrtl.wire : !firrtl.uint<1>
      %39 = firrtl.wire : !firrtl.uint<1>
      %40 = firrtl.wire : !firrtl.uint<32>
      %41 = firrtl.wire : !firrtl.uint<3>
      %42 = firrtl.wire : !firrtl.uint<4>
      %43 = firrtl.wire : !firrtl.uint<8>
      %44 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %31, %tlbEmpty_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %tlbEmpty_io_in_valid, %32 : !firrtl.uint<1>
      firrtl.strictconnect %tlbEmpty_io_in_bits_addr, %33 : !firrtl.uint<32>
      firrtl.strictconnect %tlbEmpty_io_in_bits_size, %34 : !firrtl.uint<3>
      firrtl.strictconnect %tlbEmpty_io_in_bits_cmd, %35 : !firrtl.uint<4>
      firrtl.strictconnect %tlbEmpty_io_in_bits_wmask, %36 : !firrtl.uint<8>
      firrtl.strictconnect %tlbEmpty_io_in_bits_wdata, %37 : !firrtl.uint<64>
      firrtl.strictconnect %tlbEmpty_io_out_ready, %38 : !firrtl.uint<1>
      firrtl.strictconnect %39, %tlbEmpty_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %40, %tlbEmpty_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %41, %tlbEmpty_io_out_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %42, %tlbEmpty_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %43, %tlbEmpty_io_out_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %44, %tlbEmpty_io_out_bits_wdata : !firrtl.uint<64>
      %mdTLB_clock, %mdTLB_reset, %mdTLB_io_tlbmd_0, %mdTLB_io_tlbmd_1, %mdTLB_io_tlbmd_2, %mdTLB_io_tlbmd_3, %mdTLB_io_write_wen, %mdTLB_io_write_windex, %mdTLB_io_write_waymask, %mdTLB_io_write_wdata, %mdTLB_io_rindex, %mdTLB_io_ready = firrtl.instance mdTLB @EmbeddedTLBMD_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_tlbmd_0: !firrtl.uint<121>, out io_tlbmd_1: !firrtl.uint<121>, out io_tlbmd_2: !firrtl.uint<121>, out io_tlbmd_3: !firrtl.uint<121>, in io_write_wen: !firrtl.uint<1>, in io_write_windex: !firrtl.uint<4>, in io_write_waymask: !firrtl.uint<4>, in io_write_wdata: !firrtl.uint<121>, in io_rindex: !firrtl.uint<4>, out io_ready: !firrtl.uint<1>)
      %45 = firrtl.wire : !firrtl.uint<121>
      %46 = firrtl.wire : !firrtl.uint<121>
      %47 = firrtl.wire : !firrtl.uint<121>
      %48 = firrtl.wire : !firrtl.uint<121>
      %49 = firrtl.wire : !firrtl.uint<1>
      %50 = firrtl.wire : !firrtl.uint<4>
      %51 = firrtl.wire : !firrtl.uint<4>
      %52 = firrtl.wire : !firrtl.uint<121>
      %53 = firrtl.wire : !firrtl.uint<4>
      %54 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %45, %mdTLB_io_tlbmd_0 : !firrtl.uint<121>
      firrtl.strictconnect %46, %mdTLB_io_tlbmd_1 : !firrtl.uint<121>
      firrtl.strictconnect %47, %mdTLB_io_tlbmd_2 : !firrtl.uint<121>
      firrtl.strictconnect %48, %mdTLB_io_tlbmd_3 : !firrtl.uint<121>
      firrtl.strictconnect %mdTLB_io_write_wen, %49 : !firrtl.uint<1>
      firrtl.strictconnect %mdTLB_io_write_windex, %50 : !firrtl.uint<4>
      firrtl.strictconnect %mdTLB_io_write_waymask, %51 : !firrtl.uint<4>
      firrtl.strictconnect %mdTLB_io_write_wdata, %52 : !firrtl.uint<121>
      firrtl.strictconnect %mdTLB_io_rindex, %53 : !firrtl.uint<4>
      firrtl.strictconnect %54, %mdTLB_io_ready : !firrtl.uint<1>
      firrtl.strictconnect %mdTLB_clock, %clock : !firrtl.clock
      %mdUpdate = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr_8, %24 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd_9, %25 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata_10, %26 : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_req_valid_7, %23 : !firrtl.uint<1>
      firrtl.strictconnect %io_csrMMU_addr_13, %29 : !firrtl.uint<39>
      firrtl.strictconnect %io_csrMMU_storePF_12, %28 : !firrtl.uint<1>
      firrtl.strictconnect %io_csrMMU_loadPF_11, %27 : !firrtl.uint<1>
      %r_0 = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %r_1 = firrtl.reg %clock {firrtl.random_init_start = 121 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %r_2 = firrtl.reg %clock {firrtl.random_init_start = 242 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %r_3 = firrtl.reg %clock {firrtl.random_init_start = 363 : ui64} : !firrtl.clock, !firrtl.uint<121>
      %55 = firrtl.mux(%mdUpdate, %45, %r_0) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_0, %55 : !firrtl.uint<121>
      %56 = firrtl.mux(%mdUpdate, %46, %r_1) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_1, %56 : !firrtl.uint<121>
      %57 = firrtl.mux(%mdUpdate, %47, %r_2) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_2, %57 : !firrtl.uint<121>
      %58 = firrtl.mux(%mdUpdate, %48, %r_3) : (!firrtl.uint<1>, !firrtl.uint<121>, !firrtl.uint<121>) -> !firrtl.uint<121>
      firrtl.strictconnect %r_3, %58 : !firrtl.uint<121>
      firrtl.strictconnect %14, %r_0 : !firrtl.uint<121>
      firrtl.strictconnect %15, %r_1 : !firrtl.uint<121>
      firrtl.strictconnect %16, %r_2 : !firrtl.uint<121>
      firrtl.strictconnect %17, %r_3 : !firrtl.uint<121>
      firrtl.strictconnect %22, %54 : !firrtl.uint<1>
      %_mdTLB_io_rindex_WIRE_index = firrtl.wire : !firrtl.uint<4>
      %_mdTLB_io_rindex_T_1 = firrtl.bits %io_in_req_bits_addr 15 to 12 {name = "_mdTLB_io_rindex_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<4>
      firrtl.strictconnect %_mdTLB_io_rindex_WIRE_index, %_mdTLB_io_rindex_T_1 : !firrtl.uint<4>
      firrtl.strictconnect %53, %_mdTLB_io_rindex_WIRE_index : !firrtl.uint<4>
      firrtl.strictconnect %49, %18 : !firrtl.uint<1>
      firrtl.strictconnect %50, %19 : !firrtl.uint<4>
      firrtl.strictconnect %51, %20 : !firrtl.uint<4>
      firrtl.strictconnect %52, %21 : !firrtl.uint<121>
      %_mdTLB_reset_T_1 = firrtl.or %reset, %flushTLB__bore {name = "_mdTLB_reset_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %mdTLB_reset, %_mdTLB_reset_T_1 : !firrtl.uint<1>
      %_vmEnable_WIRE_mode = firrtl.wire : !firrtl.uint<4>
      %_vmEnable_T_3 = firrtl.bits %satp__bore 63 to 60 {name = "_vmEnable_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<4>
      firrtl.strictconnect %_vmEnable_WIRE_mode, %_vmEnable_T_3 : !firrtl.uint<4>
      %_vmEnable_T_4 = firrtl.eq %_vmEnable_WIRE_mode, %c8_ui4 {name = "_vmEnable_T_4"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_vmEnable_T_5 = firrtl.lt %io_csrMMU_priviledgeMode, %c3_ui2 {name = "_vmEnable_T_5"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %vmEnable = firrtl.and %_vmEnable_T_4, %_vmEnable_T_5 {name = "vmEnable"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 484 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %59 = firrtl.mux(%30, %c0_ui1, %valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mdUpdate_T = firrtl.and %io_in_req_valid, %0 {name = "_mdUpdate_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.and %_mdUpdate_T, %vmEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %61 = firrtl.mux(%60, %c1_ui1, %59) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid, %61 : !firrtl.uint<1>
      %tlbExec_io_in_bits_r_addr = firrtl.reg %clock {firrtl.random_init_start = 485 : ui64} : !firrtl.clock, !firrtl.uint<39>
      %tlbExec_io_in_bits_r_size = firrtl.reg %clock {firrtl.random_init_start = 524 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %tlbExec_io_in_bits_r_cmd = firrtl.reg %clock {firrtl.random_init_start = 527 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %tlbExec_io_in_bits_r_wmask = firrtl.reg %clock {firrtl.random_init_start = 531 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %tlbExec_io_in_bits_r_wdata = firrtl.reg %clock {firrtl.random_init_start = 539 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %62 = firrtl.mux(%_mdUpdate_T, %io_in_req_bits_addr, %tlbExec_io_in_bits_r_addr) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %tlbExec_io_in_bits_r_addr, %62 : !firrtl.uint<39>
      %63 = firrtl.mux(%_mdUpdate_T, %io_in_req_bits_size, %tlbExec_io_in_bits_r_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %tlbExec_io_in_bits_r_size, %63 : !firrtl.uint<3>
      %64 = firrtl.mux(%_mdUpdate_T, %io_in_req_bits_cmd, %tlbExec_io_in_bits_r_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %tlbExec_io_in_bits_r_cmd, %64 : !firrtl.uint<4>
      %65 = firrtl.mux(%_mdUpdate_T, %io_in_req_bits_wmask, %tlbExec_io_in_bits_r_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %tlbExec_io_in_bits_r_wmask, %65 : !firrtl.uint<8>
      %66 = firrtl.mux(%_mdUpdate_T, %io_in_req_bits_wdata, %tlbExec_io_in_bits_r_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %tlbExec_io_in_bits_r_wdata, %66 : !firrtl.uint<64>
      firrtl.strictconnect %2, %tlbExec_io_in_bits_r_addr : !firrtl.uint<39>
      firrtl.strictconnect %3, %tlbExec_io_in_bits_r_size : !firrtl.uint<3>
      firrtl.strictconnect %4, %tlbExec_io_in_bits_r_cmd : !firrtl.uint<4>
      firrtl.strictconnect %5, %tlbExec_io_in_bits_r_wmask : !firrtl.uint<8>
      firrtl.strictconnect %6, %tlbExec_io_in_bits_r_wdata : !firrtl.uint<64>
      firrtl.strictconnect %1, %valid : !firrtl.uint<1>
      firrtl.strictconnect %mdUpdate, %_mdUpdate_T : !firrtl.uint<1>
      %67 = firrtl.and %38, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %valid_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 603 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %68 = firrtl.mux(%67, %c0_ui1, %valid_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tlbEmpty_io_in_bits_T = firrtl.and %8, %31 {name = "_tlbEmpty_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %69 = firrtl.mux(%_tlbEmpty_io_in_bits_T, %c1_ui1, %68) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid_1, %69 : !firrtl.uint<1>
      %tlbEmpty_io_in_bits_r_addr = firrtl.reg %clock {firrtl.random_init_start = 604 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %tlbEmpty_io_in_bits_r_size = firrtl.reg %clock {firrtl.random_init_start = 636 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %tlbEmpty_io_in_bits_r_cmd = firrtl.reg %clock {firrtl.random_init_start = 639 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %tlbEmpty_io_in_bits_r_wmask = firrtl.reg %clock {firrtl.random_init_start = 643 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %tlbEmpty_io_in_bits_r_wdata = firrtl.reg %clock {firrtl.random_init_start = 651 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %70 = firrtl.mux(%_tlbEmpty_io_in_bits_T, %9, %tlbEmpty_io_in_bits_r_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %tlbEmpty_io_in_bits_r_addr, %70 : !firrtl.uint<32>
      %71 = firrtl.mux(%_tlbEmpty_io_in_bits_T, %10, %tlbEmpty_io_in_bits_r_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %tlbEmpty_io_in_bits_r_size, %71 : !firrtl.uint<3>
      %72 = firrtl.mux(%_tlbEmpty_io_in_bits_T, %11, %tlbEmpty_io_in_bits_r_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %tlbEmpty_io_in_bits_r_cmd, %72 : !firrtl.uint<4>
      %73 = firrtl.mux(%_tlbEmpty_io_in_bits_T, %12, %tlbEmpty_io_in_bits_r_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %tlbEmpty_io_in_bits_r_wmask, %73 : !firrtl.uint<8>
      %74 = firrtl.mux(%_tlbEmpty_io_in_bits_T, %13, %tlbEmpty_io_in_bits_r_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %tlbEmpty_io_in_bits_r_wdata, %74 : !firrtl.uint<64>
      firrtl.strictconnect %37, %tlbEmpty_io_in_bits_r_wdata : !firrtl.uint<64>
      firrtl.strictconnect %36, %tlbEmpty_io_in_bits_r_wmask : !firrtl.uint<8>
      firrtl.strictconnect %35, %tlbEmpty_io_in_bits_r_cmd : !firrtl.uint<4>
      firrtl.strictconnect %34, %tlbEmpty_io_in_bits_r_size : !firrtl.uint<3>
      firrtl.strictconnect %33, %tlbEmpty_io_in_bits_r_addr : !firrtl.uint<32>
      firrtl.strictconnect %32, %valid_1 : !firrtl.uint<1>
      %75 = firrtl.not %vmEnable : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.mux(%75, %c1_ui1, %31) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %7, %76 : !firrtl.uint<1>
      %77 = firrtl.mux(%75, %io_out_req_ready, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready_0, %77 : !firrtl.uint<1>
      %_io_out_req_bits_addr_T = firrtl.bits %io_in_req_bits_addr 31 to 0 {name = "_io_out_req_bits_addr_T"} : (!firrtl.uint<39>) -> !firrtl.uint<32>
      %78 = firrtl.mux(%75, %_io_out_req_bits_addr_T, %40) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_addr_2, %78 : !firrtl.uint<32>
      %79 = firrtl.mux(%75, %io_in_req_bits_size, %41) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_size_3, %79 : !firrtl.uint<3>
      %80 = firrtl.mux(%75, %io_in_req_bits_cmd, %42) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_cmd_4, %80 : !firrtl.uint<4>
      %81 = firrtl.mux(%75, %io_in_req_bits_wmask, %43) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wmask_5, %81 : !firrtl.uint<8>
      %82 = firrtl.mux(%75, %io_in_req_bits_wdata, %44) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_req_bits_wdata_6, %82 : !firrtl.uint<64>
      %83 = firrtl.mux(%75, %io_in_req_valid, %39) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_valid_1, %83 : !firrtl.uint<1>
      %84 = firrtl.mux(%75, %c1_ui1, %io_out_req_ready) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %38, %84 : !firrtl.uint<1>
      %_alreadyOutFinish_T = firrtl.not %7 {name = "_alreadyOutFinish_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_alreadyOutFinish_T_1 = firrtl.and %8, %_alreadyOutFinish_T {name = "_alreadyOutFinish_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %alreadyOutFinish = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 715 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %85 = firrtl.mux(%_alreadyOutFinish_T_1, %c1_ui1, %alreadyOutFinish) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.and %7, %8 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %87 = firrtl.and %alreadyOutFinish, %86 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.mux(%87, %c0_ui1, %85) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %alreadyOutFinish, %88 : !firrtl.uint<1>
      %_tlbFinish_T = firrtl.not %alreadyOutFinish {name = "_tlbFinish_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_tlbFinish_T_1 = firrtl.and %8, %_tlbFinish_T {name = "_tlbFinish_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_tlbFinish_T_2 = firrtl.or %27, %28 {name = "_tlbFinish_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %tlbFinish = firrtl.or %_tlbFinish_T_1, %_tlbFinish_T_2 {name = "tlbFinish"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %89, %tlbFinish : !firrtl.uint<1>
      %90 = firrtl.or %io_csrMMU_loadPF_11, %io_csrMMU_storePF_12 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %91, %90 : !firrtl.uint<1>
      %92 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %92, %vmEnable : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %93 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.and %c_control_logEnable, %93 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %94, "[%d] EmbeddedTLB_1: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %95 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %96 = firrtl.and %c_control_logEnable, %95 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %96, "InReq(%d, %d) InResp(%d, %d) OutReq(%d, %d) OutResp(%d, %d) vmEnable:%d mode:%d\0A" {name = "printf_1"} (%io_in_req_valid, %io_in_req_ready_0, %io_out_resp_valid, %c1_ui1, %io_out_req_valid_1, %io_out_req_ready, %io_out_resp_valid, %c1_ui1, %vmEnable, %io_csrMMU_priviledgeMode) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<2>
      %97 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.and %c_control_logEnable, %97 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %98, "[%d] EmbeddedTLB_1: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %99 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.and %c_control_logEnable, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %100, "InReq: addr:%x cmd:%d wdata:%x OutReq: addr:%x cmd:%x wdata:%x\0A" {name = "printf_3"} (%io_in_req_bits_addr, %io_in_req_bits_cmd, %io_in_req_bits_wdata, %io_out_req_bits_addr_2, %io_out_req_bits_cmd_4, %io_out_req_bits_wdata_6) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<64>
      %101 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %102 = firrtl.and %c_control_logEnable, %101 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %102, "[%d] EmbeddedTLB_1: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %103 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.and %c_control_logEnable, %103 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %104, "OutResp: rdata:%x cmd:%x Inresp: rdata:%x cmd:%x\0A" {name = "printf_5"} (%io_out_resp_bits_rdata, %io_out_resp_bits_cmd, %io_out_resp_bits_rdata, %io_out_resp_bits_cmd) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<4>
      %105 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.and %c_control_logEnable, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %106, "[%d] EmbeddedTLB_1: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %107 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %108 = firrtl.and %c_control_logEnable, %107 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %108, "satp:%x flush:%d cacheEmpty:%d instrPF:%d loadPF:%d storePF:%d \0A" {name = "printf_7"} (%satp__bore, %c0_ui1, %io_cacheEmpty, %c0_ui1, %io_csrMMU_loadPF_11, %io_csrMMU_storePF_12) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_1__bore, %91 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_1__bore_0, %91 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_2__bore, %92 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE_2__bore_1, %92 : !firrtl.uint<1>
      firrtl.strictconnect %_WIRE__bore, %89 : !firrtl.uint<1>
      firrtl.strictconnect %tlbExec_isAMO__bore_14, %tlbExec_isAMO__bore : !firrtl.uint<1>
    }
    firrtl.module private @CacheStage1_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<32>, in %io_in_bits_size: !firrtl.uint<3>, in %io_in_bits_cmd: !firrtl.uint<4>, in %io_in_bits_wmask: !firrtl.uint<8>, in %io_in_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_req_addr: !firrtl.uint<32>, out %io_out_bits_req_size: !firrtl.uint<3>, out %io_out_bits_req_cmd: !firrtl.uint<4>, out %io_out_bits_req_wmask: !firrtl.uint<8>, out %io_out_bits_req_wdata: !firrtl.uint<64>, in %io_metaReadBus_req_ready: !firrtl.uint<1>, out %io_metaReadBus_req_valid: !firrtl.uint<1>, out %io_metaReadBus_req_bits_setIdx: !firrtl.uint<7>, in %io_dataReadBus_req_ready: !firrtl.uint<1>, out %io_dataReadBus_req_valid: !firrtl.uint<1>, out %io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_metaReadBus_req_valid_2 = firrtl.wire {name = "io_metaReadBus_req_valid"} : !firrtl.uint<1>
      %io_metaReadBus_req_bits_setIdx_3 = firrtl.wire {name = "io_metaReadBus_req_bits_setIdx"} : !firrtl.uint<7>
      %io_dataReadBus_req_valid_4 = firrtl.wire {name = "io_dataReadBus_req_valid"} : !firrtl.uint<1>
      %io_dataReadBus_req_bits_setIdx_5 = firrtl.wire {name = "io_dataReadBus_req_bits_setIdx"} : !firrtl.uint<10>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_req_addr, %io_in_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_req_size, %io_in_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_req_cmd, %io_in_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_req_wmask, %io_in_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_req_wdata, %io_in_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_metaReadBus_req_valid, %io_metaReadBus_req_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaReadBus_req_bits_setIdx, %io_metaReadBus_req_bits_setIdx_3 : !firrtl.uint<7>
      firrtl.strictconnect %io_dataReadBus_req_valid, %io_dataReadBus_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx, %io_dataReadBus_req_bits_setIdx_5 : !firrtl.uint<10>
      %0 = firrtl.and %io_in_ready_0, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %1 = firrtl.and %0, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.and %1, %2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %3, "[%d] CacheStage1_1: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %4 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.and %1, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %5, "[L1$] cache stage1, addr in: %x, user: %x id: %x\0A" {name = "printf_1"} (%io_in_bits_addr, %c0_ui1, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<1>, !firrtl.uint<1>
      %readBusValid = firrtl.and %io_in_valid, %io_out_ready {name = "readBusValid"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<7>
      %7 = firrtl.bits %io_in_bits_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %6, %7 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaReadBus_req_bits_setIdx_3, %6 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaReadBus_req_valid_2, %readBusValid : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<7>
      %9 = firrtl.bits %io_in_bits_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %8, %9 : !firrtl.uint<7>
      %10 = firrtl.wire : !firrtl.uint<3>
      %11 = firrtl.bits %io_in_bits_addr 5 to 3 : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %10, %11 : !firrtl.uint<3>
      %12 = firrtl.cat %8, %10 : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx_5, %12 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_valid_4, %readBusValid : !firrtl.uint<1>
      %_io_out_valid_T = firrtl.and %io_in_valid, %io_metaReadBus_req_ready {name = "_io_out_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.and %_io_out_valid_T, %io_dataReadBus_req_ready {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_1 : !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %_io_in_ready_T_2, %io_metaReadBus_req_ready {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.and %_io_in_ready_T_3, %io_dataReadBus_req_ready {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_4 : !firrtl.uint<1>
      %13 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.and %c_control_logEnable, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %14, "[%d] CacheStage1_1: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %15 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.and %c_control_logEnable, %15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %16, "in.ready = %d, in.valid = %d, out.valid = %d, out.ready = %d, addr = %x, cmd = %x, dataReadBus.req.valid = %d\0A" {name = "printf_3"} (%io_in_ready_0, %io_in_valid, %io_out_valid_1, %io_out_ready, %io_in_bits_addr, %io_in_bits_cmd, %io_dataReadBus_req_valid_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<1>
    }
    firrtl.module private @CacheStage2_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_req_addr: !firrtl.uint<32>, in %io_in_bits_req_size: !firrtl.uint<3>, in %io_in_bits_req_cmd: !firrtl.uint<4>, in %io_in_bits_req_wmask: !firrtl.uint<8>, in %io_in_bits_req_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_req_addr: !firrtl.uint<32>, out %io_out_bits_req_size: !firrtl.uint<3>, out %io_out_bits_req_cmd: !firrtl.uint<4>, out %io_out_bits_req_wmask: !firrtl.uint<8>, out %io_out_bits_req_wdata: !firrtl.uint<64>, out %io_out_bits_metas_0_tag: !firrtl.uint<19>, out %io_out_bits_metas_0_valid: !firrtl.uint<1>, out %io_out_bits_metas_0_dirty: !firrtl.uint<1>, out %io_out_bits_metas_1_tag: !firrtl.uint<19>, out %io_out_bits_metas_1_valid: !firrtl.uint<1>, out %io_out_bits_metas_1_dirty: !firrtl.uint<1>, out %io_out_bits_metas_2_tag: !firrtl.uint<19>, out %io_out_bits_metas_2_valid: !firrtl.uint<1>, out %io_out_bits_metas_2_dirty: !firrtl.uint<1>, out %io_out_bits_metas_3_tag: !firrtl.uint<19>, out %io_out_bits_metas_3_valid: !firrtl.uint<1>, out %io_out_bits_metas_3_dirty: !firrtl.uint<1>, out %io_out_bits_datas_0_data: !firrtl.uint<64>, out %io_out_bits_datas_1_data: !firrtl.uint<64>, out %io_out_bits_datas_2_data: !firrtl.uint<64>, out %io_out_bits_datas_3_data: !firrtl.uint<64>, out %io_out_bits_hit: !firrtl.uint<1>, out %io_out_bits_waymask: !firrtl.uint<4>, out %io_out_bits_mmio: !firrtl.uint<1>, out %io_out_bits_isForwardData: !firrtl.uint<1>, out %io_out_bits_forwardData_data_data: !firrtl.uint<64>, out %io_out_bits_forwardData_waymask: !firrtl.uint<4>, in %io_metaReadResp_0_tag: !firrtl.uint<19>, in %io_metaReadResp_0_valid: !firrtl.uint<1>, in %io_metaReadResp_0_dirty: !firrtl.uint<1>, in %io_metaReadResp_1_tag: !firrtl.uint<19>, in %io_metaReadResp_1_valid: !firrtl.uint<1>, in %io_metaReadResp_1_dirty: !firrtl.uint<1>, in %io_metaReadResp_2_tag: !firrtl.uint<19>, in %io_metaReadResp_2_valid: !firrtl.uint<1>, in %io_metaReadResp_2_dirty: !firrtl.uint<1>, in %io_metaReadResp_3_tag: !firrtl.uint<19>, in %io_metaReadResp_3_valid: !firrtl.uint<1>, in %io_metaReadResp_3_dirty: !firrtl.uint<1>, in %io_dataReadResp_0_data: !firrtl.uint<64>, in %io_dataReadResp_1_data: !firrtl.uint<64>, in %io_dataReadResp_2_data: !firrtl.uint<64>, in %io_dataReadResp_3_data: !firrtl.uint<64>, in %io_metaWriteBus_req_valid: !firrtl.uint<1>, in %io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, in %io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, in %io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, in %io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in %io_dataWriteBus_req_valid: !firrtl.uint<1>, in %io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, in %io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, in %io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "forwardMetaReg_data_valid"}
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64>
      %c1073741824_ui31 = firrtl.constant 1073741824 : !firrtl.uint<31>
      %c805306368_ui30 = firrtl.constant 805306368 : !firrtl.uint<30>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c1311768467139281697_ui64 = firrtl.constant 1311768467139281697 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_bits_metas_0_tag_1 = firrtl.wire {name = "io_out_bits_metas_0_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_0_valid_2 = firrtl.wire {name = "io_out_bits_metas_0_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_0_dirty_3 = firrtl.wire {name = "io_out_bits_metas_0_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_1_tag_4 = firrtl.wire {name = "io_out_bits_metas_1_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_1_valid_5 = firrtl.wire {name = "io_out_bits_metas_1_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_1_dirty_6 = firrtl.wire {name = "io_out_bits_metas_1_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_2_tag_7 = firrtl.wire {name = "io_out_bits_metas_2_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_2_valid_8 = firrtl.wire {name = "io_out_bits_metas_2_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_2_dirty_9 = firrtl.wire {name = "io_out_bits_metas_2_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_3_tag_10 = firrtl.wire {name = "io_out_bits_metas_3_tag"} : !firrtl.uint<19>
      %io_out_bits_metas_3_valid_11 = firrtl.wire {name = "io_out_bits_metas_3_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_3_dirty_12 = firrtl.wire {name = "io_out_bits_metas_3_dirty"} : !firrtl.uint<1>
      %io_out_bits_hit_13 = firrtl.wire {name = "io_out_bits_hit"} : !firrtl.uint<1>
      %io_out_bits_waymask_14 = firrtl.wire {name = "io_out_bits_waymask"} : !firrtl.uint<4>
      %io_out_bits_mmio_15 = firrtl.wire {name = "io_out_bits_mmio"} : !firrtl.uint<1>
      %io_out_bits_isForwardData_16 = firrtl.wire {name = "io_out_bits_isForwardData"} : !firrtl.uint<1>
      %io_out_bits_forwardData_data_data_17 = firrtl.wire {name = "io_out_bits_forwardData_data_data"} : !firrtl.uint<64>
      %io_out_bits_forwardData_waymask_18 = firrtl.wire {name = "io_out_bits_forwardData_waymask"} : !firrtl.uint<4>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_req_addr, %io_in_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_req_size, %io_in_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_req_cmd, %io_in_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_req_wmask, %io_in_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_req_wdata, %io_in_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_metas_0_tag, %io_out_bits_metas_0_tag_1 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_0_valid, %io_out_bits_metas_0_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_0_dirty, %io_out_bits_metas_0_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_tag, %io_out_bits_metas_1_tag_4 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_1_valid, %io_out_bits_metas_1_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_dirty, %io_out_bits_metas_1_dirty_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_tag, %io_out_bits_metas_2_tag_7 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_2_valid, %io_out_bits_metas_2_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_dirty, %io_out_bits_metas_2_dirty_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_tag, %io_out_bits_metas_3_tag_10 : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_3_valid, %io_out_bits_metas_3_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_dirty, %io_out_bits_metas_3_dirty_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_datas_0_data, %io_dataReadResp_0_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_1_data, %io_dataReadResp_1_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_2_data, %io_dataReadResp_2_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_3_data, %io_dataReadResp_3_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_hit, %io_out_bits_hit_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask, %io_out_bits_waymask_14 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_mmio, %io_out_bits_mmio_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_isForwardData, %io_out_bits_isForwardData_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_forwardData_data_data, %io_out_bits_forwardData_data_data_17 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_forwardData_waymask, %io_out_bits_forwardData_waymask_18 : !firrtl.uint<4>
      %addr_tag = firrtl.wire : !firrtl.uint<19>
      %_addr_T_3 = firrtl.bits %io_in_bits_req_addr 31 to 13 {name = "_addr_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<19>
      firrtl.strictconnect %addr_tag, %_addr_T_3 : !firrtl.uint<19>
      %_isForwardMeta_T = firrtl.and %io_in_valid, %io_metaWriteBus_req_valid {name = "_isForwardMeta_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isForwardMeta_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_isForwardMeta_T_3 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_isForwardMeta_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_isForwardMeta_WIRE_index, %_isForwardMeta_T_3 : !firrtl.uint<7>
      %_isForwardMeta_T_5 = firrtl.eq %io_metaWriteBus_req_bits_setIdx, %_isForwardMeta_WIRE_index {name = "_isForwardMeta_T_5"} : (!firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %isForwardMeta = firrtl.and %_isForwardMeta_T, %_isForwardMeta_T_5 {name = "isForwardMeta"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardMetaReg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%isForwardMeta, %c1_ui1, %isForwardMetaReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.and %io_in_ready_0, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.or %1, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%2, %c0_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %isForwardMetaReg, %3 : !firrtl.uint<1>
      %forwardMetaReg_data_tag = firrtl.reg %clock {firrtl.random_init_start = 8 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %forwardMetaReg_data_dirty = firrtl.reg %clock {firrtl.random_init_start = 28 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %forwardMetaReg_waymask = firrtl.reg %clock {firrtl.random_init_start = 29 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %4 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_tag, %forwardMetaReg_data_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %forwardMetaReg_data_tag, %4 : !firrtl.uint<19>
      %5 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_dirty, %forwardMetaReg_data_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %forwardMetaReg_data_dirty, %5 : !firrtl.uint<1>
      %6 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_waymask, %forwardMetaReg_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %forwardMetaReg_waymask, %6 : !firrtl.uint<4>
      %metaWay_0_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_0_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_0_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_1_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_1_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_1_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_2_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_2_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_2_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_3_tag = firrtl.wire : !firrtl.uint<19>
      %metaWay_3_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_3_dirty = firrtl.wire : !firrtl.uint<1>
      %pickForwardMeta = firrtl.or %isForwardMetaReg, %isForwardMeta {name = "pickForwardMeta"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %forwardMeta_data_tag = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_tag, %forwardMetaReg_data_tag) {name = "forwardMeta_data_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %forwardMeta_data_dirty = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_dirty, %forwardMetaReg_data_dirty) {name = "forwardMeta_data_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %forwardMeta_waymask = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_waymask, %forwardMetaReg_waymask) {name = "forwardMeta_waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %forwardWaymask_0 = firrtl.bits %forwardMeta_waymask 0 to 0 {name = "forwardWaymask_0"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_1 = firrtl.bits %forwardMeta_waymask 1 to 1 {name = "forwardWaymask_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_2 = firrtl.bits %forwardMeta_waymask 2 to 2 {name = "forwardWaymask_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_3 = firrtl.bits %forwardMeta_waymask 3 to 3 {name = "forwardWaymask_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_metaWay_0_T = firrtl.and %pickForwardMeta, %forwardWaymask_0 {name = "_metaWay_0_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_0_T_1_tag = firrtl.mux(%_metaWay_0_T, %forwardMeta_data_tag, %io_metaReadResp_0_tag) {name = "_metaWay_0_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_0_T_1_valid = firrtl.mux(%_metaWay_0_T, %c1_ui1, %io_metaReadResp_0_valid) {name = "_metaWay_0_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_0_T_1_dirty = firrtl.mux(%_metaWay_0_T, %forwardMeta_data_dirty, %io_metaReadResp_0_dirty) {name = "_metaWay_0_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_0_tag, %_metaWay_0_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_0_valid, %_metaWay_0_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_0_dirty, %_metaWay_0_T_1_dirty : !firrtl.uint<1>
      %_metaWay_1_T = firrtl.and %pickForwardMeta, %forwardWaymask_1 {name = "_metaWay_1_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_1_T_1_tag = firrtl.mux(%_metaWay_1_T, %forwardMeta_data_tag, %io_metaReadResp_1_tag) {name = "_metaWay_1_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_1_T_1_valid = firrtl.mux(%_metaWay_1_T, %c1_ui1, %io_metaReadResp_1_valid) {name = "_metaWay_1_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_1_T_1_dirty = firrtl.mux(%_metaWay_1_T, %forwardMeta_data_dirty, %io_metaReadResp_1_dirty) {name = "_metaWay_1_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_1_tag, %_metaWay_1_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_1_valid, %_metaWay_1_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_1_dirty, %_metaWay_1_T_1_dirty : !firrtl.uint<1>
      %_metaWay_2_T = firrtl.and %pickForwardMeta, %forwardWaymask_2 {name = "_metaWay_2_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_2_T_1_tag = firrtl.mux(%_metaWay_2_T, %forwardMeta_data_tag, %io_metaReadResp_2_tag) {name = "_metaWay_2_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_2_T_1_valid = firrtl.mux(%_metaWay_2_T, %c1_ui1, %io_metaReadResp_2_valid) {name = "_metaWay_2_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_2_T_1_dirty = firrtl.mux(%_metaWay_2_T, %forwardMeta_data_dirty, %io_metaReadResp_2_dirty) {name = "_metaWay_2_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_2_tag, %_metaWay_2_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_2_valid, %_metaWay_2_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_2_dirty, %_metaWay_2_T_1_dirty : !firrtl.uint<1>
      %_metaWay_3_T = firrtl.and %pickForwardMeta, %forwardWaymask_3 {name = "_metaWay_3_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_3_T_1_tag = firrtl.mux(%_metaWay_3_T, %forwardMeta_data_tag, %io_metaReadResp_3_tag) {name = "_metaWay_3_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_metaWay_3_T_1_valid = firrtl.mux(%_metaWay_3_T, %c1_ui1, %io_metaReadResp_3_valid) {name = "_metaWay_3_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_3_T_1_dirty = firrtl.mux(%_metaWay_3_T, %forwardMeta_data_dirty, %io_metaReadResp_3_dirty) {name = "_metaWay_3_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_3_tag, %_metaWay_3_T_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaWay_3_valid, %_metaWay_3_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_3_dirty, %_metaWay_3_T_1_dirty : !firrtl.uint<1>
      %_hitVec_T = firrtl.eq %metaWay_0_tag, %addr_tag {name = "_hitVec_T"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_1 = firrtl.and %metaWay_0_valid, %_hitVec_T {name = "_hitVec_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_2 = firrtl.and %_hitVec_T_1, %io_in_valid {name = "_hitVec_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_3 = firrtl.eq %metaWay_1_tag, %addr_tag {name = "_hitVec_T_3"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_4 = firrtl.and %metaWay_1_valid, %_hitVec_T_3 {name = "_hitVec_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_5 = firrtl.and %_hitVec_T_4, %io_in_valid {name = "_hitVec_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_6 = firrtl.eq %metaWay_2_tag, %addr_tag {name = "_hitVec_T_6"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_7 = firrtl.and %metaWay_2_valid, %_hitVec_T_6 {name = "_hitVec_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_8 = firrtl.and %_hitVec_T_7, %io_in_valid {name = "_hitVec_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_9 = firrtl.eq %metaWay_3_tag, %addr_tag {name = "_hitVec_T_9"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<1>
      %_hitVec_T_10 = firrtl.and %metaWay_3_valid, %_hitVec_T_9 {name = "_hitVec_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_11 = firrtl.and %_hitVec_T_10, %io_in_valid {name = "_hitVec_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_0 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_1 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_2 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_0, %_hitVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_1, %_hitVec_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_2, %_hitVec_T_8 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_3, %_hitVec_T_11 : !firrtl.uint<1>
      %hitVec_lo = firrtl.cat %_hitVec_WIRE_1, %_hitVec_WIRE_0 {name = "hitVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec_hi = firrtl.cat %_hitVec_WIRE_3, %_hitVec_WIRE_2 {name = "hitVec_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec = firrtl.cat %hitVec_hi, %hitVec_lo {name = "hitVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %victimWaymask_lfsr = firrtl.regreset %clock, %reset, %c1311768467139281697_ui64 {firrtl.random_init_start = 33 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_victimWaymask_xor_T = firrtl.bits %victimWaymask_lfsr 0 to 0 {name = "_victimWaymask_xor_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_1 = firrtl.bits %victimWaymask_lfsr 1 to 1 {name = "_victimWaymask_xor_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_2 = firrtl.xor %_victimWaymask_xor_T, %_victimWaymask_xor_T_1 {name = "_victimWaymask_xor_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_3 = firrtl.bits %victimWaymask_lfsr 3 to 3 {name = "_victimWaymask_xor_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_4 = firrtl.xor %_victimWaymask_xor_T_2, %_victimWaymask_xor_T_3 {name = "_victimWaymask_xor_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_5 = firrtl.bits %victimWaymask_lfsr 4 to 4 {name = "_victimWaymask_xor_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %victimWaymask_xor = firrtl.xor %_victimWaymask_xor_T_4, %_victimWaymask_xor_T_5 {name = "victimWaymask_xor"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.orr %victimWaymask_lfsr : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T = firrtl.not %7 {name = "_victimWaymask_lfsr_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T_1 = firrtl.bits %victimWaymask_lfsr 63 to 1 {name = "_victimWaymask_lfsr_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<63>
      %_victimWaymask_lfsr_T_2 = firrtl.cat %victimWaymask_xor, %_victimWaymask_lfsr_T_1 {name = "_victimWaymask_lfsr_T_2"} : (!firrtl.uint<1>, !firrtl.uint<63>) -> !firrtl.uint<64>
      %_victimWaymask_lfsr_T_3 = firrtl.mux(%_victimWaymask_lfsr_T, %c1_ui64, %_victimWaymask_lfsr_T_2) {name = "_victimWaymask_lfsr_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %victimWaymask_lfsr, %_victimWaymask_lfsr_T_3 : !firrtl.uint<64>
      %_victimWaymask_T = firrtl.bits %victimWaymask_lfsr 1 to 0 {name = "_victimWaymask_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %victimWaymask = firrtl.dshl %c1_ui1, %_victimWaymask_T {name = "victimWaymask"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_invalidVec_T = firrtl.not %metaWay_0_valid {name = "_invalidVec_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_1 = firrtl.not %metaWay_1_valid {name = "_invalidVec_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_2 = firrtl.not %metaWay_2_valid {name = "_invalidVec_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_3 = firrtl.not %metaWay_3_valid {name = "_invalidVec_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_WIRE_0 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_1 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_2 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_0, %_invalidVec_T : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_1, %_invalidVec_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_2, %_invalidVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_3, %_invalidVec_T_3 : !firrtl.uint<1>
      %invalidVec_lo = firrtl.cat %_invalidVec_WIRE_1, %_invalidVec_WIRE_0 {name = "invalidVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %invalidVec_hi = firrtl.cat %_invalidVec_WIRE_3, %_invalidVec_WIRE_2 {name = "invalidVec_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %invalidVec = firrtl.cat %invalidVec_hi, %invalidVec_lo {name = "invalidVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hasInvalidWay = firrtl.orr %invalidVec {name = "hasInvalidWay"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T = firrtl.geq %invalidVec, %c8_ui4 {name = "_refillInvalidWaymask_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_1 = firrtl.geq %invalidVec, %c4_ui3 {name = "_refillInvalidWaymask_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_2 = firrtl.geq %invalidVec, %c2_ui2 {name = "_refillInvalidWaymask_T_2"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_3 = firrtl.mux(%_refillInvalidWaymask_T_2, %c2_ui2, %c1_ui2) {name = "_refillInvalidWaymask_T_3"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %8 = firrtl.pad %_refillInvalidWaymask_T_3, 3 : (!firrtl.uint<2>) -> !firrtl.uint<3>
      %_refillInvalidWaymask_T_4 = firrtl.mux(%_refillInvalidWaymask_T_1, %c4_ui3, %8) {name = "_refillInvalidWaymask_T_4"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %9 = firrtl.pad %_refillInvalidWaymask_T_4, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %refillInvalidWaymask = firrtl.mux(%_refillInvalidWaymask_T, %c8_ui4, %9) {name = "refillInvalidWaymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_waymask_T = firrtl.mux(%hasInvalidWay, %refillInvalidWaymask, %victimWaymask) {name = "_waymask_T"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %waymask = firrtl.mux(%io_out_bits_hit_13, %hitVec, %_waymask_T) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %10 = firrtl.bits %waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %11 = firrtl.bits %waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %12 = firrtl.bits %waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %13 = firrtl.bits %waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %14 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %15 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %16 = firrtl.add %14, %15 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %17 = firrtl.gt %16, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %18 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.and %18, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %20, "[%d] CacheStage2_1: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %21 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %18, %21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %22, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_1"} (%metaWay_0_valid, %metaWay_0_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %23 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.and %23, %24 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %25, "[%d] CacheStage2_1: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %26 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.and %23, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %27, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_3"} (%metaWay_1_valid, %metaWay_1_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %28 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.and %28, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %30, "[%d] CacheStage2_1: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %31 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %28, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %32, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_5"} (%metaWay_2_valid, %metaWay_2_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %33 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.and %33, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %35, "[%d] CacheStage2_1: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %36 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.and %33, %36 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %37, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_7"} (%metaWay_3_valid, %metaWay_3_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %38 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.and %38, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %40, "[%d] CacheStage2_1: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %41 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.and %38, %41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %42, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_9"} (%io_metaReadResp_0_valid, %io_metaReadResp_0_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %43 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.and %43, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %45, "[%d] CacheStage2_1: " {name = "printf_10"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %46 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.and %43, %46 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %47, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_11"} (%io_metaReadResp_1_valid, %io_metaReadResp_1_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %48 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.and %48, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %50, "[%d] CacheStage2_1: " {name = "printf_12"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %51 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.and %48, %51 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %52, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_13"} (%io_metaReadResp_2_valid, %io_metaReadResp_2_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %53 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %55 = firrtl.and %53, %54 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %55, "[%d] CacheStage2_1: " {name = "printf_14"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %56 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.and %53, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %57, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_15"} (%io_metaReadResp_3_valid, %io_metaReadResp_3_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>
      %58 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.and %58, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %60, "[%d] CacheStage2_1: " {name = "printf_16"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %61 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.and %58, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %62, "[ERROR] forwardMetaReg isForwardMetaReg %x %x metat %x wm %b\0A" {name = "printf_17"} (%isForwardMetaReg, %c1_ui1, %forwardMetaReg_data_tag, %forwardMetaReg_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<4>
      %63 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.and %63, %64 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %65, "[%d] CacheStage2_1: " {name = "printf_18"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %66 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.and %63, %66 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %67, "[ERROR] forwardMeta isForwardMeta %x %x metat %x wm %b\0A" {name = "printf_19"} (%isForwardMeta, %c1_ui1, %io_metaWriteBus_req_bits_data_tag, %io_metaWriteBus_req_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<4>
      %68 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %69 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %70 = firrtl.add %68, %69 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %71 = firrtl.gt %70, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_1_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_timer, %LogPerfHelper_1_timer : !firrtl.uint<64>
      %72 = firrtl.and %71, %c_control_1_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %73 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %74 = firrtl.and %72, %73 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %74, "[%d] CacheStage2_1: " {name = "printf_20"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %75 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.and %72, %75 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %76, "[ERROR] hit %b wmask %b hitvec %b\0A" {name = "printf_21"} (%io_out_bits_hit_13, %forwardMeta_waymask, %hitVec) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %77 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %78 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %79 = firrtl.add %77, %78 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %80 = firrtl.gt %79, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.and %io_in_valid, %80 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %82 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.not %81 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %83, %82, "Assertion failed\0A    at Cache.scala:208 assert(!(io.in.valid && PopCount(waymask) > 1.U))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      firrtl.strictconnect %io_out_bits_metas_0_tag_1, %metaWay_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_0_valid_2, %metaWay_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_0_dirty_3, %metaWay_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_tag_4, %metaWay_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_1_valid_5, %metaWay_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_dirty_6, %metaWay_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_tag_7, %metaWay_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_2_valid_8, %metaWay_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_dirty_9, %metaWay_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_tag_10, %metaWay_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %io_out_bits_metas_3_valid_11, %metaWay_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_dirty_12, %metaWay_3_dirty : !firrtl.uint<1>
      %_io_out_bits_hit_T = firrtl.orr %hitVec {name = "_io_out_bits_hit_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_hit_T_1 = firrtl.and %io_in_valid, %_io_out_bits_hit_T {name = "_io_out_bits_hit_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_hit_13, %_io_out_bits_hit_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask_14, %waymask : !firrtl.uint<4>
      %84 = firrtl.bits %io_in_bits_req_addr 31 to 30 : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %85 = firrtl.bits %io_in_bits_req_addr 29 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<30>
      %86 = firrtl.xor %85, %c805306368_ui30 : (!firrtl.uint<30>, !firrtl.uint<30>) -> !firrtl.uint<30>
      %_io_out_bits_mmio_T = firrtl.cat %84, %86 {name = "_io_out_bits_mmio_T"} : (!firrtl.uint<2>, !firrtl.uint<30>) -> !firrtl.uint<32>
      %_io_out_bits_mmio_T_1 = firrtl.bits %_io_out_bits_mmio_T 31 to 28 {name = "_io_out_bits_mmio_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %87 = firrtl.orr %_io_out_bits_mmio_T_1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_2 = firrtl.not %87 {name = "_io_out_bits_mmio_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.bits %io_in_bits_req_addr 31 to 31 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %89 = firrtl.bits %io_in_bits_req_addr 30 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<31>
      %90 = firrtl.xor %89, %c1073741824_ui31 : (!firrtl.uint<31>, !firrtl.uint<31>) -> !firrtl.uint<31>
      %_io_out_bits_mmio_T_3 = firrtl.cat %88, %90 {name = "_io_out_bits_mmio_T_3"} : (!firrtl.uint<1>, !firrtl.uint<31>) -> !firrtl.uint<32>
      %_io_out_bits_mmio_T_4 = firrtl.bits %_io_out_bits_mmio_T_3 31 to 30 {name = "_io_out_bits_mmio_T_4"} : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %91 = firrtl.orr %_io_out_bits_mmio_T_4 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_5 = firrtl.not %91 {name = "_io_out_bits_mmio_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_6 = firrtl.or %_io_out_bits_mmio_T_2, %_io_out_bits_mmio_T_5 {name = "_io_out_bits_mmio_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_mmio_15, %_io_out_bits_mmio_T_6 : !firrtl.uint<1>
      %_isForwardData_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_isForwardData_T_2 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_isForwardData_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_isForwardData_WIRE_index, %_isForwardData_T_2 : !firrtl.uint<7>
      %_isForwardData_WIRE_2_wordIndex = firrtl.wire : !firrtl.uint<3>
      %_isForwardData_T_5 = firrtl.bits %io_in_bits_req_addr 5 to 3 {name = "_isForwardData_T_5"} : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %_isForwardData_WIRE_2_wordIndex, %_isForwardData_T_5 : !firrtl.uint<3>
      %_isForwardData_T_8 = firrtl.cat %_isForwardData_WIRE_index, %_isForwardData_WIRE_2_wordIndex {name = "_isForwardData_T_8"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      %_isForwardData_T_9 = firrtl.eq %io_dataWriteBus_req_bits_setIdx, %_isForwardData_T_8 {name = "_isForwardData_T_9"} : (!firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_isForwardData_T_10 = firrtl.and %io_dataWriteBus_req_valid, %_isForwardData_T_9 {name = "_isForwardData_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardData = firrtl.and %io_in_valid, %_isForwardData_T_10 {name = "isForwardData"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardDataReg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 97 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %92 = firrtl.mux(%isForwardData, %c1_ui1, %isForwardDataReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.or %1, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.mux(%93, %c0_ui1, %92) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %isForwardDataReg, %94 : !firrtl.uint<1>
      %forwardDataReg_data_data = firrtl.reg %clock {firrtl.random_init_start = 108 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %forwardDataReg_waymask = firrtl.reg %clock {firrtl.random_init_start = 172 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %95 = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_data_data, %forwardDataReg_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %forwardDataReg_data_data, %95 : !firrtl.uint<64>
      %96 = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_waymask, %forwardDataReg_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %forwardDataReg_waymask, %96 : !firrtl.uint<4>
      %_io_out_bits_isForwardData_T = firrtl.or %isForwardDataReg, %isForwardData {name = "_io_out_bits_isForwardData_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_isForwardData_16, %_io_out_bits_isForwardData_T : !firrtl.uint<1>
      %_io_out_bits_forwardData_T_data_data = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_data_data, %forwardDataReg_data_data) {name = "_io_out_bits_forwardData_T_data_data"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_forwardData_T_waymask = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_waymask, %forwardDataReg_waymask) {name = "_io_out_bits_forwardData_T_waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_forwardData_data_data_17, %_io_out_bits_forwardData_T_data_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_forwardData_waymask_18, %_io_out_bits_forwardData_T_waymask : !firrtl.uint<4>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_in_valid {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_2 : !firrtl.uint<1>
      %LogPerfHelper_2_timer, %LogPerfHelper_2_logEnable, %LogPerfHelper_2_clean, %LogPerfHelper_2_dump = firrtl.instance LogPerfHelper_2 sym @sym_1 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_2_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_2_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_logEnable, %LogPerfHelper_2_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_timer, %LogPerfHelper_2_timer : !firrtl.uint<64>
      %97 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.and %c_control_2_logEnable, %97 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %98, "[%d] CacheStage2_1: " {name = "printf_23"} (%c_control_2_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %99 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.and %c_control_2_logEnable, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %100, "[isFD:%d isFDreg:%d inFire:%d invalid:%d \0A" {name = "printf_24"} (%isForwardData, %isForwardDataReg, %1, %io_in_valid) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %101 = firrtl.wire : !firrtl.uint<7>
      %102 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %101, %102 : !firrtl.uint<7>
      %103 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.and %c_control_2_logEnable, %103 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %104, "[%d] CacheStage2_1: " {name = "printf_25"} (%c_control_2_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %105 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.and %c_control_2_logEnable, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %106, "[isFM:%d isFMreg:%d metawreq:%x widx:%x ridx:%x \0A" {name = "printf_26"} (%isForwardMeta, %isForwardMetaReg, %io_metaWriteBus_req_valid, %io_metaWriteBus_req_bits_setIdx, %101) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>
    }
    firrtl.module private @CacheStage3_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_req_addr: !firrtl.uint<32>, in %io_in_bits_req_size: !firrtl.uint<3>, in %io_in_bits_req_cmd: !firrtl.uint<4>, in %io_in_bits_req_wmask: !firrtl.uint<8>, in %io_in_bits_req_wdata: !firrtl.uint<64>, in %io_in_bits_metas_0_tag: !firrtl.uint<19>, in %io_in_bits_metas_0_valid: !firrtl.uint<1>, in %io_in_bits_metas_0_dirty: !firrtl.uint<1>, in %io_in_bits_metas_1_tag: !firrtl.uint<19>, in %io_in_bits_metas_1_valid: !firrtl.uint<1>, in %io_in_bits_metas_1_dirty: !firrtl.uint<1>, in %io_in_bits_metas_2_tag: !firrtl.uint<19>, in %io_in_bits_metas_2_valid: !firrtl.uint<1>, in %io_in_bits_metas_2_dirty: !firrtl.uint<1>, in %io_in_bits_metas_3_tag: !firrtl.uint<19>, in %io_in_bits_metas_3_valid: !firrtl.uint<1>, in %io_in_bits_metas_3_dirty: !firrtl.uint<1>, in %io_in_bits_datas_0_data: !firrtl.uint<64>, in %io_in_bits_datas_1_data: !firrtl.uint<64>, in %io_in_bits_datas_2_data: !firrtl.uint<64>, in %io_in_bits_datas_3_data: !firrtl.uint<64>, in %io_in_bits_hit: !firrtl.uint<1>, in %io_in_bits_waymask: !firrtl.uint<4>, in %io_in_bits_mmio: !firrtl.uint<1>, in %io_in_bits_isForwardData: !firrtl.uint<1>, in %io_in_bits_forwardData_data_data: !firrtl.uint<64>, in %io_in_bits_forwardData_waymask: !firrtl.uint<4>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_rdata: !firrtl.uint<64>, out %io_isFinish: !firrtl.uint<1>, in %io_dataReadBus_req_ready: !firrtl.uint<1>, out %io_dataReadBus_req_valid: !firrtl.uint<1>, out %io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>, in %io_dataReadBus_resp_data_0_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_1_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_2_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_3_data: !firrtl.uint<64>, out %io_dataWriteBus_req_valid: !firrtl.uint<1>, out %io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, out %io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, out %io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>, out %io_metaWriteBus_req_valid: !firrtl.uint<1>, out %io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, out %io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, out %io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, out %io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in %io_mem_req_ready: !firrtl.uint<1>, out %io_mem_req_valid: !firrtl.uint<1>, out %io_mem_req_bits_addr: !firrtl.uint<32>, out %io_mem_req_bits_cmd: !firrtl.uint<4>, out %io_mem_req_bits_wdata: !firrtl.uint<64>, in %io_mem_resp_valid: !firrtl.uint<1>, in %io_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_mmio_req_ready: !firrtl.uint<1>, out %io_mmio_req_valid: !firrtl.uint<1>, out %io_mmio_req_bits_addr: !firrtl.uint<32>, out %io_mmio_req_bits_size: !firrtl.uint<3>, out %io_mmio_req_bits_cmd: !firrtl.uint<4>, out %io_mmio_req_bits_wmask: !firrtl.uint<8>, out %io_mmio_req_bits_wdata: !firrtl.uint<64>, in %io_mmio_resp_valid: !firrtl.uint<1>, in %io_mmio_resp_bits_rdata: !firrtl.uint<64>, out %io_cohResp_valid: !firrtl.uint<1>, out %io_cohResp_bits_cmd: !firrtl.uint<4>, out %io_cohResp_bits_rdata: !firrtl.uint<64>, out %io_dataReadRespToL1: !firrtl.uint<1>, out %_WIRE__bore: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "needFlush"}
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3> {name = "_io_out_bits_cmd_WIRE"}
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8> {name = "io_mem_req_bits_wmask"}
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3> {name = "io_mem_req_bits_size"}
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui19 = firrtl.constant 0 : !firrtl.uint<19>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c4_ui4 = firrtl.constant 4 : !firrtl.uint<4>
      %c7_ui4 = firrtl.constant 7 : !firrtl.uint<4>
      %c12_ui4 = firrtl.constant 12 : !firrtl.uint<4>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c2_ui4 = firrtl.constant 2 : !firrtl.uint<4>
      %c5_ui4 = firrtl.constant 5 : !firrtl.uint<4>
      %c1_ui4 = firrtl.constant 1 : !firrtl.uint<4>
      %c0_ui6 = firrtl.constant 0 : !firrtl.uint<6>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c3_ui4 = firrtl.constant 3 : !firrtl.uint<4>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_cmd_2 = firrtl.wire {name = "io_out_bits_cmd"} : !firrtl.uint<4>
      %io_out_bits_rdata_3 = firrtl.wire {name = "io_out_bits_rdata"} : !firrtl.uint<64>
      %io_isFinish_4 = firrtl.wire {name = "io_isFinish"} : !firrtl.uint<1>
      %io_dataReadBus_req_valid_5 = firrtl.wire {name = "io_dataReadBus_req_valid"} : !firrtl.uint<1>
      %io_dataReadBus_req_bits_setIdx_6 = firrtl.wire {name = "io_dataReadBus_req_bits_setIdx"} : !firrtl.uint<10>
      %io_dataWriteBus_req_valid_7 = firrtl.wire {name = "io_dataWriteBus_req_valid"} : !firrtl.uint<1>
      %io_dataWriteBus_req_bits_setIdx_8 = firrtl.wire {name = "io_dataWriteBus_req_bits_setIdx"} : !firrtl.uint<10>
      %io_dataWriteBus_req_bits_data_data_9 = firrtl.wire {name = "io_dataWriteBus_req_bits_data_data"} : !firrtl.uint<64>
      %io_dataWriteBus_req_bits_waymask_10 = firrtl.wire {name = "io_dataWriteBus_req_bits_waymask"} : !firrtl.uint<4>
      %io_metaWriteBus_req_valid_11 = firrtl.wire {name = "io_metaWriteBus_req_valid"} : !firrtl.uint<1>
      %io_metaWriteBus_req_bits_setIdx_12 = firrtl.wire {name = "io_metaWriteBus_req_bits_setIdx"} : !firrtl.uint<7>
      %io_metaWriteBus_req_bits_data_tag_13 = firrtl.wire {name = "io_metaWriteBus_req_bits_data_tag"} : !firrtl.uint<19>
      %io_metaWriteBus_req_bits_data_dirty_14 = firrtl.wire {name = "io_metaWriteBus_req_bits_data_dirty"} : !firrtl.uint<1>
      %io_metaWriteBus_req_bits_waymask_15 = firrtl.wire {name = "io_metaWriteBus_req_bits_waymask"} : !firrtl.uint<4>
      %io_mem_req_valid_16 = firrtl.wire {name = "io_mem_req_valid"} : !firrtl.uint<1>
      %io_mem_req_bits_addr_17 = firrtl.wire {name = "io_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_mem_req_bits_cmd_18 = firrtl.wire {name = "io_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_mem_req_bits_wdata_19 = firrtl.wire {name = "io_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_mmio_req_valid_20 = firrtl.wire {name = "io_mmio_req_valid"} : !firrtl.uint<1>
      %io_cohResp_valid_21 = firrtl.wire {name = "io_cohResp_valid"} : !firrtl.uint<1>
      %io_cohResp_bits_cmd_22 = firrtl.wire {name = "io_cohResp_bits_cmd"} : !firrtl.uint<4>
      %io_cohResp_bits_rdata_23 = firrtl.wire {name = "io_cohResp_bits_rdata"} : !firrtl.uint<64>
      %io_dataReadRespToL1_24 = firrtl.wire {name = "io_dataReadRespToL1"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cmd, %io_out_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_rdata, %io_out_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_isFinish, %io_isFinish_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_valid, %io_dataReadBus_req_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx, %io_dataReadBus_req_bits_setIdx_6 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataWriteBus_req_valid, %io_dataWriteBus_req_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataWriteBus_req_bits_setIdx, %io_dataWriteBus_req_bits_setIdx_8 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataWriteBus_req_bits_data_data, %io_dataWriteBus_req_bits_data_data_9 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_waymask, %io_dataWriteBus_req_bits_waymask_10 : !firrtl.uint<4>
      firrtl.strictconnect %io_metaWriteBus_req_valid, %io_metaWriteBus_req_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_setIdx, %io_metaWriteBus_req_bits_setIdx_12 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_tag, %io_metaWriteBus_req_bits_data_tag_13 : !firrtl.uint<19>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_dirty, %io_metaWriteBus_req_bits_data_dirty_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_waymask, %io_metaWriteBus_req_bits_waymask_15 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_valid, %io_mem_req_valid_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr, %io_mem_req_bits_addr_17 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd, %io_mem_req_bits_cmd_18 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata, %io_mem_req_bits_wdata_19 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid, %io_mmio_req_valid_20 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr, %io_in_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size, %io_in_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd, %io_in_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask, %io_in_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata, %io_in_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_cohResp_valid, %io_cohResp_valid_21 : !firrtl.uint<1>
      firrtl.strictconnect %io_cohResp_bits_cmd, %io_cohResp_bits_cmd_22 : !firrtl.uint<4>
      firrtl.strictconnect %io_cohResp_bits_rdata, %io_cohResp_bits_rdata_23 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataReadRespToL1, %io_dataReadRespToL1_24 : !firrtl.uint<1>
      %metaWriteArb_io_in_0_valid, %metaWriteArb_io_in_0_bits_setIdx, %metaWriteArb_io_in_0_bits_data_tag, %metaWriteArb_io_in_0_bits_data_dirty, %metaWriteArb_io_in_0_bits_waymask, %metaWriteArb_io_in_1_valid, %metaWriteArb_io_in_1_bits_setIdx, %metaWriteArb_io_in_1_bits_data_tag, %metaWriteArb_io_in_1_bits_data_dirty, %metaWriteArb_io_in_1_bits_waymask, %metaWriteArb_io_out_valid, %metaWriteArb_io_out_bits_setIdx, %metaWriteArb_io_out_bits_data_tag, %metaWriteArb_io_out_bits_data_dirty, %metaWriteArb_io_out_bits_waymask = firrtl.instance metaWriteArb @Arbiter2_SRAMBundleAW(in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<7>, in io_in_0_bits_data_tag: !firrtl.uint<19>, in io_in_0_bits_data_dirty: !firrtl.uint<1>, in io_in_0_bits_waymask: !firrtl.uint<4>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<7>, in io_in_1_bits_data_tag: !firrtl.uint<19>, in io_in_1_bits_data_dirty: !firrtl.uint<1>, in io_in_1_bits_waymask: !firrtl.uint<4>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<7>, out io_out_bits_data_tag: !firrtl.uint<19>, out io_out_bits_data_dirty: !firrtl.uint<1>, out io_out_bits_waymask: !firrtl.uint<4>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<7>
      %2 = firrtl.wire : !firrtl.uint<19>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<7>
      %5 = firrtl.wire : !firrtl.uint<19>
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<7>
      %9 = firrtl.wire : !firrtl.uint<19>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %metaWriteArb_io_in_0_valid, %0 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_setIdx, %1 : !firrtl.uint<7>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_data_tag, %2 : !firrtl.uint<19>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_data_dirty, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %metaWriteArb_io_in_1_valid, %3 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_setIdx, %4 : !firrtl.uint<7>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_data_tag, %5 : !firrtl.uint<19>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_data_dirty, %6 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %7, %metaWriteArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %8, %metaWriteArb_io_out_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %9, %metaWriteArb_io_out_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %10, %metaWriteArb_io_out_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %11, %metaWriteArb_io_out_bits_waymask : !firrtl.uint<4>
      %dataWriteArb_io_in_0_valid, %dataWriteArb_io_in_0_bits_setIdx, %dataWriteArb_io_in_0_bits_data_data, %dataWriteArb_io_in_0_bits_waymask, %dataWriteArb_io_in_1_valid, %dataWriteArb_io_in_1_bits_setIdx, %dataWriteArb_io_in_1_bits_data_data, %dataWriteArb_io_in_1_bits_waymask, %dataWriteArb_io_out_valid, %dataWriteArb_io_out_bits_setIdx, %dataWriteArb_io_out_bits_data_data, %dataWriteArb_io_out_bits_waymask = firrtl.instance dataWriteArb @Arbiter2_SRAMBundleAW_1(in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<10>, in io_in_0_bits_data_data: !firrtl.uint<64>, in io_in_0_bits_waymask: !firrtl.uint<4>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<10>, in io_in_1_bits_data_data: !firrtl.uint<64>, in io_in_1_bits_waymask: !firrtl.uint<4>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<10>, out io_out_bits_data_data: !firrtl.uint<64>, out io_out_bits_waymask: !firrtl.uint<4>)
      %12 = firrtl.wire : !firrtl.uint<1>
      %13 = firrtl.wire : !firrtl.uint<10>
      %14 = firrtl.wire : !firrtl.uint<64>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<10>
      %17 = firrtl.wire : !firrtl.uint<64>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<10>
      %20 = firrtl.wire : !firrtl.uint<64>
      %21 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %dataWriteArb_io_in_0_valid, %12 : !firrtl.uint<1>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_setIdx, %13 : !firrtl.uint<10>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_data_data, %14 : !firrtl.uint<64>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %dataWriteArb_io_in_1_valid, %15 : !firrtl.uint<1>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_setIdx, %16 : !firrtl.uint<10>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_data_data, %17 : !firrtl.uint<64>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %18, %dataWriteArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %19, %dataWriteArb_io_out_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %20, %dataWriteArb_io_out_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %21, %dataWriteArb_io_out_bits_waymask : !firrtl.uint<4>
      %addr_tag = firrtl.wire : !firrtl.uint<19>
      %addr_index = firrtl.wire : !firrtl.uint<7>
      %addr_wordIndex = firrtl.wire : !firrtl.uint<3>
      %_addr_T_1 = firrtl.bits %io_in_bits_req_addr 5 to 3 {name = "_addr_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %addr_wordIndex, %_addr_T_1 : !firrtl.uint<3>
      %_addr_T_2 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_addr_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %addr_index, %_addr_T_2 : !firrtl.uint<7>
      %_addr_T_3 = firrtl.bits %io_in_bits_req_addr 31 to 13 {name = "_addr_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<19>
      firrtl.strictconnect %addr_tag, %_addr_T_3 : !firrtl.uint<19>
      %mmio = firrtl.and %io_in_valid, %io_in_bits_mmio {name = "mmio"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hit = firrtl.and %io_in_valid, %io_in_bits_hit {name = "hit"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_miss_T = firrtl.not %io_in_bits_hit {name = "_miss_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %miss = firrtl.and %io_in_valid, %_miss_T {name = "miss"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_probe_T_1 = firrtl.eq %io_in_bits_req_cmd, %c8_ui4 {name = "_probe_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %probe = firrtl.and %io_in_valid, %_probe_T_1 {name = "probe"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_11 = firrtl.eq %io_in_bits_req_cmd, %c2_ui2 {name = "_io_out_valid_T_11"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %hitReadBurst = firrtl.and %hit, %_io_out_valid_T_11 {name = "hitReadBurst"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWay_T = firrtl.bits %io_in_bits_waymask 0 to 0 {name = "_dataHitWay_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_1 = firrtl.bits %io_in_bits_waymask 1 to 1 {name = "_dataHitWay_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_2 = firrtl.bits %io_in_bits_waymask 2 to 2 {name = "_dataHitWay_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_3 = firrtl.bits %io_in_bits_waymask 3 to 3 {name = "_dataHitWay_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %meta_tag = firrtl.wire : !firrtl.uint<19>
      %meta_dirty = firrtl.wire : !firrtl.uint<1>
      %_meta_T_4 = firrtl.mux(%_dataHitWay_T, %io_in_bits_metas_0_dirty, %c0_ui1) {name = "_meta_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_5 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_metas_1_dirty, %c0_ui1) {name = "_meta_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_6 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_metas_2_dirty, %c0_ui1) {name = "_meta_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_7 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_metas_3_dirty, %c0_ui1) {name = "_meta_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_8 = firrtl.or %_meta_T_4, %_meta_T_5 {name = "_meta_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_9 = firrtl.or %_meta_T_8, %_meta_T_6 {name = "_meta_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_10 = firrtl.or %_meta_T_9, %_meta_T_7 {name = "_meta_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_meta_WIRE, %_meta_T_10 : !firrtl.uint<1>
      firrtl.strictconnect %meta_dirty, %_meta_WIRE : !firrtl.uint<1>
      %_meta_T_18 = firrtl.mux(%_dataHitWay_T, %io_in_bits_metas_0_tag, %c0_ui19) {name = "_meta_T_18"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_19 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_metas_1_tag, %c0_ui19) {name = "_meta_T_19"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_20 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_metas_2_tag, %c0_ui19) {name = "_meta_T_20"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_21 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_metas_3_tag, %c0_ui19) {name = "_meta_T_21"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_22 = firrtl.or %_meta_T_18, %_meta_T_19 {name = "_meta_T_22"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_23 = firrtl.or %_meta_T_22, %_meta_T_20 {name = "_meta_T_23"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_T_24 = firrtl.or %_meta_T_23, %_meta_T_21 {name = "_meta_T_24"} : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %_meta_WIRE_2 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %_meta_WIRE_2, %_meta_T_24 : !firrtl.uint<19>
      firrtl.strictconnect %meta_tag, %_meta_WIRE_2 : !firrtl.uint<19>
      %22 = firrtl.and %mmio, %hit : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.not %22 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %24, %23, "Assertion failed: MMIO request should not hit in cache\0A    at Cache.scala:265 assert(!(mmio && hit), \22MMIO request should not hit in cache\22)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %25 = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      firrtl.strictconnect %25, %mmio : !firrtl.uint<1>
      %_useForwardData_T = firrtl.eq %io_in_bits_waymask, %io_in_bits_forwardData_waymask {name = "_useForwardData_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %useForwardData = firrtl.and %io_in_bits_isForwardData, %_useForwardData_T {name = "useForwardData"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataReadArray_WIRE_data = firrtl.wire : !firrtl.uint<64>
      %_dataReadArray_T_4 = firrtl.mux(%_dataHitWay_T, %io_in_bits_datas_0_data, %c0_ui64) {name = "_dataReadArray_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_5 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_datas_1_data, %c0_ui64) {name = "_dataReadArray_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_6 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_datas_2_data, %c0_ui64) {name = "_dataReadArray_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_7 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_datas_3_data, %c0_ui64) {name = "_dataReadArray_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_8 = firrtl.or %_dataReadArray_T_4, %_dataReadArray_T_5 {name = "_dataReadArray_T_8"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_9 = firrtl.or %_dataReadArray_T_8, %_dataReadArray_T_6 {name = "_dataReadArray_T_9"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_10 = firrtl.or %_dataReadArray_T_9, %_dataReadArray_T_7 {name = "_dataReadArray_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_dataReadArray_WIRE_1, %_dataReadArray_T_10 : !firrtl.uint<64>
      firrtl.strictconnect %_dataReadArray_WIRE_data, %_dataReadArray_WIRE_1 : !firrtl.uint<64>
      %dataRead = firrtl.mux(%useForwardData, %io_in_bits_forwardData_data_data, %_dataReadArray_WIRE_data) {name = "dataRead"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %metaRefillWriteBus_x15 = firrtl.bits %io_in_bits_req_cmd 0 to 0 {name = "metaRefillWriteBus_x15"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_wordMask_T_3 = firrtl.bits %io_in_bits_req_wmask 0 to 0 {name = "_wordMask_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_4 = firrtl.bits %io_in_bits_req_wmask 1 to 1 {name = "_wordMask_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_5 = firrtl.bits %io_in_bits_req_wmask 2 to 2 {name = "_wordMask_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_6 = firrtl.bits %io_in_bits_req_wmask 3 to 3 {name = "_wordMask_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_7 = firrtl.bits %io_in_bits_req_wmask 4 to 4 {name = "_wordMask_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_8 = firrtl.bits %io_in_bits_req_wmask 5 to 5 {name = "_wordMask_T_8"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_9 = firrtl.bits %io_in_bits_req_wmask 6 to 6 {name = "_wordMask_T_9"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_10 = firrtl.bits %io_in_bits_req_wmask 7 to 7 {name = "_wordMask_T_10"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_11 = firrtl.mux(%_wordMask_T_3, %c255_ui8, %c0_ui8) {name = "_wordMask_T_11"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_12 = firrtl.mux(%_wordMask_T_4, %c255_ui8, %c0_ui8) {name = "_wordMask_T_12"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_13 = firrtl.mux(%_wordMask_T_5, %c255_ui8, %c0_ui8) {name = "_wordMask_T_13"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_14 = firrtl.mux(%_wordMask_T_6, %c255_ui8, %c0_ui8) {name = "_wordMask_T_14"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_15 = firrtl.mux(%_wordMask_T_7, %c255_ui8, %c0_ui8) {name = "_wordMask_T_15"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_16 = firrtl.mux(%_wordMask_T_8, %c255_ui8, %c0_ui8) {name = "_wordMask_T_16"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_17 = firrtl.mux(%_wordMask_T_9, %c255_ui8, %c0_ui8) {name = "_wordMask_T_17"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_18 = firrtl.mux(%_wordMask_T_10, %c255_ui8, %c0_ui8) {name = "_wordMask_T_18"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %wordMask_lo_lo = firrtl.cat %_wordMask_T_12, %_wordMask_T_11 {name = "wordMask_lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_lo_hi = firrtl.cat %_wordMask_T_14, %_wordMask_T_13 {name = "wordMask_lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_lo = firrtl.cat %wordMask_lo_hi, %wordMask_lo_lo {name = "wordMask_lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %wordMask_hi_lo = firrtl.cat %_wordMask_T_16, %_wordMask_T_15 {name = "wordMask_hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_hi_hi = firrtl.cat %_wordMask_T_18, %_wordMask_T_17 {name = "wordMask_hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_hi = firrtl.cat %wordMask_hi_hi, %wordMask_hi_lo {name = "wordMask_hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %_wordMask_T_19 = firrtl.cat %wordMask_hi, %wordMask_lo {name = "_wordMask_T_19"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %wordMask = firrtl.mux(%metaRefillWriteBus_x15, %_wordMask_T_19, %c0_ui64) {name = "wordMask"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %writeL2BeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %_io_isFinish_T_10 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_isFinish_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T = firrtl.eq %io_in_bits_req_cmd, %c3_ui2 {name = "_dataHitWriteBus_x3_T"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T_1 = firrtl.eq %io_in_bits_req_cmd, %c7_ui3 {name = "_dataHitWriteBus_x3_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %26 = firrtl.or %_dataHitWriteBus_x3_T, %_dataHitWriteBus_x3_T_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.and %_io_isFinish_T_10, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T = firrtl.add %writeL2BeatCnt_value, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_1 = firrtl.bits %_value_T 2 to 0 {name = "_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %28 = firrtl.mux(%27, %_value_T_1, %writeL2BeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %hitWrite = firrtl.and %hit, %metaRefillWriteBus_x15 {name = "hitWrite"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %dataHitWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %dataHitWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<10>
      %dataHitWriteBus_req_bits_data_data = firrtl.wire : !firrtl.uint<64>
      %dataHitWriteBus_x1_data = firrtl.wire : !firrtl.uint<64>
      %_dataHitWriteBus_x1_T = firrtl.and %io_in_bits_req_wdata, %wordMask {name = "_dataHitWriteBus_x1_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWriteBus_x1_T_1 = firrtl.not %wordMask {name = "_dataHitWriteBus_x1_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWriteBus_x1_T_2 = firrtl.and %dataRead, %_dataHitWriteBus_x1_T_1 {name = "_dataHitWriteBus_x1_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWriteBus_x1_T_3 = firrtl.or %_dataHitWriteBus_x1_T, %_dataHitWriteBus_x1_T_2 {name = "_dataHitWriteBus_x1_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataHitWriteBus_x1_data, %_dataHitWriteBus_x1_T_3 : !firrtl.uint<64>
      %_dataHitWriteBus_x3_T_2 = firrtl.or %_dataHitWriteBus_x3_T, %_dataHitWriteBus_x3_T_1 {name = "_dataHitWriteBus_x3_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T_3 = firrtl.mux(%_dataHitWriteBus_x3_T_2, %writeL2BeatCnt_value, %addr_wordIndex) {name = "_dataHitWriteBus_x3_T_3"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %dataHitWriteBus_x3 = firrtl.cat %addr_index, %_dataHitWriteBus_x3_T_3 {name = "dataHitWriteBus_x3"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      firrtl.strictconnect %dataHitWriteBus_req_bits_setIdx, %dataHitWriteBus_x3 : !firrtl.uint<10>
      firrtl.strictconnect %dataHitWriteBus_req_bits_data_data, %dataHitWriteBus_x1_data : !firrtl.uint<64>
      firrtl.strictconnect %dataHitWriteBus_req_valid, %hitWrite : !firrtl.uint<1>
      %metaHitWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %metaHitWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<7>
      %metaHitWriteBus_req_bits_data_tag = firrtl.wire : !firrtl.uint<19>
      %_metaHitWriteBus_x5_T = firrtl.not %meta_dirty {name = "_metaHitWriteBus_x5_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %metaHitWriteBus_x5 = firrtl.and %hitWrite, %_metaHitWriteBus_x5_T {name = "metaHitWriteBus_x5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaHitWriteBus_x6_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_metaHitWriteBus_x6_T_2 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_metaHitWriteBus_x6_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_metaHitWriteBus_x6_WIRE_index, %_metaHitWriteBus_x6_T_2 : !firrtl.uint<7>
      %metaHitWriteBus_x8_tag = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %metaHitWriteBus_x8_tag, %meta_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaHitWriteBus_req_bits_setIdx, %_metaHitWriteBus_x6_WIRE_index : !firrtl.uint<7>
      firrtl.strictconnect %metaHitWriteBus_req_bits_data_tag, %metaHitWriteBus_x8_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaHitWriteBus_req_valid, %metaHitWriteBus_x5 : !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %readBeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 8 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %writeBeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 11 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %state2 = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 14 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %_io_mem_req_valid_T_1 = firrtl.eq %state, %c3_ui4 {name = "_io_mem_req_valid_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_2 = firrtl.eq %state, %c8_ui4 {name = "_io_dataReadRespToL1_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %29 = firrtl.or %_io_mem_req_valid_T_1, %_io_dataReadRespToL1_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.orr %state2 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %31 = firrtl.not %30 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %29, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.mux(%_io_dataReadRespToL1_T_2, %readBeatCnt_value, %writeBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %34 = firrtl.cat %addr_index, %33 : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx_6, %34 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataReadBus_req_valid_5, %32 : !firrtl.uint<1>
      %_dataWay_T = firrtl.eq %state2, %c1_ui2 {name = "_dataWay_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %dataWay_0_data = firrtl.reg %clock {firrtl.random_init_start = 16 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_1_data = firrtl.reg %clock {firrtl.random_init_start = 80 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_2_data = firrtl.reg %clock {firrtl.random_init_start = 144 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_3_data = firrtl.reg %clock {firrtl.random_init_start = 208 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %35 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_0_data, %dataWay_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_0_data, %35 : !firrtl.uint<64>
      %36 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_1_data, %dataWay_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_1_data, %36 : !firrtl.uint<64>
      %37 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_2_data, %dataWay_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_2_data, %37 : !firrtl.uint<64>
      %38 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_3_data, %dataWay_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_3_data, %38 : !firrtl.uint<64>
      %_dataHitWay_WIRE_data = firrtl.wire : !firrtl.uint<64>
      %_dataHitWay_T_4 = firrtl.mux(%_dataHitWay_T, %dataWay_0_data, %c0_ui64) {name = "_dataHitWay_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_5 = firrtl.mux(%_dataHitWay_T_1, %dataWay_1_data, %c0_ui64) {name = "_dataHitWay_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_6 = firrtl.mux(%_dataHitWay_T_2, %dataWay_2_data, %c0_ui64) {name = "_dataHitWay_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_7 = firrtl.mux(%_dataHitWay_T_3, %dataWay_3_data, %c0_ui64) {name = "_dataHitWay_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_8 = firrtl.or %_dataHitWay_T_4, %_dataHitWay_T_5 {name = "_dataHitWay_T_8"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_9 = firrtl.or %_dataHitWay_T_8, %_dataHitWay_T_6 {name = "_dataHitWay_T_9"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_10 = firrtl.or %_dataHitWay_T_9, %_dataHitWay_T_7 {name = "_dataHitWay_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_dataHitWay_WIRE_1, %_dataHitWay_T_10 : !firrtl.uint<64>
      firrtl.strictconnect %_dataHitWay_WIRE_data, %_dataHitWay_WIRE_1 : !firrtl.uint<64>
      %39 = firrtl.orr %state2 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %40 = firrtl.not %39 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.and %io_dataReadBus_req_ready, %io_dataReadBus_req_valid_5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.mux(%41, %c1_ui2, %state2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %43 = firrtl.eq %state2, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %44 = firrtl.eq %state2, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %45 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %46 = firrtl.or %45, %io_cohResp_valid_21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.and %hitReadBurst, %io_out_ready : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.or %46, %47 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.and %44, %48 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.mux(%49, %c0_ui2, %state2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %51 = firrtl.mux(%43, %c2_ui2, %50) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %52 = firrtl.mux(%40, %42, %51) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state2, %52 : !firrtl.uint<2>
      %_raddr_T = firrtl.bits %io_in_bits_req_addr 31 to 3 {name = "_raddr_T"} : (!firrtl.uint<32>) -> !firrtl.uint<29>
      %raddr = firrtl.cat %_raddr_T, %c0_ui3 {name = "raddr"} : (!firrtl.uint<29>, !firrtl.uint<3>) -> !firrtl.uint<32>
      %waddr_hi = firrtl.cat %meta_tag, %addr_index {name = "waddr_hi"} : (!firrtl.uint<19>, !firrtl.uint<7>) -> !firrtl.uint<26>
      %waddr = firrtl.cat %waddr_hi, %c0_ui6 {name = "waddr"} : (!firrtl.uint<26>, !firrtl.uint<6>) -> !firrtl.uint<32>
      %_io_mem_req_valid_T = firrtl.eq %state, %c1_ui4 {name = "_io_mem_req_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %wrap_3 = firrtl.andr %writeBeatCnt_value {name = "wrap_3"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_cmd_T_2 = firrtl.mux(%wrap_3, %c7_ui3, %c3_ui3) {name = "_cmd_T_2"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %cmd = firrtl.mux(%_io_mem_req_valid_T, %c2_ui3, %_cmd_T_2) {name = "cmd"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %53 = firrtl.mux(%_io_mem_req_valid_T, %raddr, %waddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_addr_17, %53 : !firrtl.uint<32>
      %54 = firrtl.pad %cmd, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_cmd_18, %54 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata_19, %_dataHitWay_WIRE_data : !firrtl.uint<64>
      %_io_dataReadRespToL1_T_3 = firrtl.eq %state2, %c2_ui2 {name = "_io_dataReadRespToL1_T_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_3 = firrtl.and %_io_mem_req_valid_T_1, %_io_dataReadRespToL1_T_3 {name = "_io_mem_req_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_4 = firrtl.or %_io_mem_req_valid_T, %_io_mem_req_valid_T_3 {name = "_io_mem_req_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_valid_16, %_io_mem_req_valid_T_4 : !firrtl.uint<1>
      %_io_mmio_req_valid_T = firrtl.eq %state, %c5_ui4 {name = "_io_mmio_req_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_valid_20, %_io_mmio_req_valid_T : !firrtl.uint<1>
      %afterFirstRead = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 272 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %alreadyOutFire = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 273 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %55 = firrtl.mux(%_io_isFinish_T_10, %c1_ui1, %alreadyOutFire) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_readingFirst_T = firrtl.not %afterFirstRead {name = "_readingFirst_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_readingFirst_T_2 = firrtl.and %_readingFirst_T, %io_mem_resp_valid {name = "_readingFirst_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_8 = firrtl.eq %state, %c2_ui4 {name = "_io_out_valid_T_8"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %readingFirst = firrtl.and %_readingFirst_T_2, %_io_out_valid_T_8 {name = "readingFirst"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_inRdataRegDemand_T = firrtl.mux(%mmio, %io_mmio_resp_bits_rdata, %io_mem_resp_bits_rdata) {name = "_inRdataRegDemand_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_inRdataRegDemand_T_1 = firrtl.eq %state, %c6_ui4 {name = "_inRdataRegDemand_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_inRdataRegDemand_T_2 = firrtl.mux(%mmio, %_inRdataRegDemand_T_1, %readingFirst) {name = "_inRdataRegDemand_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %inRdataRegDemand = firrtl.reg %clock {firrtl.random_init_start = 274 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %56 = firrtl.mux(%_inRdataRegDemand_T_2, %_inRdataRegDemand_T, %inRdataRegDemand) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %inRdataRegDemand, %56 : !firrtl.uint<64>
      %57 = firrtl.orr %state : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T = firrtl.not %57 {name = "_io_dataReadRespToL1_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_cohResp_valid_T_1 = firrtl.and %_io_dataReadRespToL1_T, %probe {name = "_io_cohResp_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_cohResp_valid_T_4 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_io_cohResp_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_cohResp_valid_T_5 = firrtl.or %_io_cohResp_valid_T_1, %_io_cohResp_valid_T_4 {name = "_io_cohResp_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_cohResp_valid_21, %_io_cohResp_valid_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_cohResp_bits_rdata_23, %_dataHitWay_WIRE_data : !firrtl.uint<64>
      %_releaseLast_T_2 = firrtl.and %_io_dataReadRespToL1_T_2, %io_cohResp_valid_21 {name = "_releaseLast_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %releaseLast_c_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 338 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %releaseLast = firrtl.wire : !firrtl.uint<1>
      %releaseLast_wrap_wrap = firrtl.andr %releaseLast_c_value {name = "releaseLast_wrap_wrap"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_releaseLast_wrap_value_T = firrtl.add %releaseLast_c_value, %c1_ui1 {name = "_releaseLast_wrap_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_releaseLast_wrap_value_T_1 = firrtl.bits %_releaseLast_wrap_value_T 2 to 0 {name = "_releaseLast_wrap_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %58 = firrtl.mux(%_releaseLast_T_2, %_releaseLast_wrap_value_T_1, %releaseLast_c_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %releaseLast_c_value, %58 : !firrtl.uint<3>
      %59 = firrtl.mux(%_releaseLast_T_2, %releaseLast_wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %releaseLast, %59 : !firrtl.uint<1>
      %_io_cohResp_bits_cmd_T_1 = firrtl.mux(%releaseLast, %c6_ui3, %c0_ui3) {name = "_io_cohResp_bits_cmd_T_1"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_io_cohResp_bits_cmd_T_2 = firrtl.mux(%hit, %c12_ui4, %c8_ui4) {name = "_io_cohResp_bits_cmd_T_2"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %60 = firrtl.pad %_io_cohResp_bits_cmd_T_1, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %_io_cohResp_bits_cmd_T_3 = firrtl.mux(%_io_dataReadRespToL1_T_2, %60, %_io_cohResp_bits_cmd_T_2) {name = "_io_cohResp_bits_cmd_T_3"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_cohResp_bits_cmd_22, %_io_cohResp_bits_cmd_T_3 : !firrtl.uint<4>
      %_respToL1Fire_T = firrtl.and %hitReadBurst, %io_out_ready {name = "_respToL1Fire_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %respToL1Fire = firrtl.and %_respToL1Fire_T, %_io_dataReadRespToL1_T_3 {name = "respToL1Fire"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_3 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_respToL1Last_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_4 = firrtl.or %_io_dataReadRespToL1_T, %_respToL1Last_T_3 {name = "_respToL1Last_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_5 = firrtl.and %_respToL1Last_T_4, %hitReadBurst {name = "_respToL1Last_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_6 = firrtl.and %_respToL1Last_T_5, %io_out_ready {name = "_respToL1Last_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %respToL1Last_c_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 341 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %respToL1Last = firrtl.wire : !firrtl.uint<1>
      %respToL1Last_wrap_wrap = firrtl.andr %respToL1Last_c_value {name = "respToL1Last_wrap_wrap"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_respToL1Last_wrap_value_T = firrtl.add %respToL1Last_c_value, %c1_ui1 {name = "_respToL1Last_wrap_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_respToL1Last_wrap_value_T_1 = firrtl.bits %_respToL1Last_wrap_value_T 2 to 0 {name = "_respToL1Last_wrap_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %61 = firrtl.mux(%_respToL1Last_T_6, %_respToL1Last_wrap_value_T_1, %respToL1Last_c_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %respToL1Last_c_value, %61 : !firrtl.uint<3>
      %62 = firrtl.mux(%_respToL1Last_T_6, %respToL1Last_wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %respToL1Last, %62 : !firrtl.uint<1>
      %63 = firrtl.orr %state : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %64 = firrtl.not %63 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.mux(%64, %c0_ui1, %55) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %alreadyOutFire, %65 : !firrtl.uint<1>
      %_state_T = firrtl.mux(%hit, %c8_ui4, %c0_ui4) {name = "_state_T"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %66 = firrtl.mux(%io_cohResp_valid_21, %_state_T, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %67 = firrtl.mux(%io_cohResp_valid_21, %addr_wordIndex, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_value_T_2 = firrtl.andr %addr_wordIndex {name = "_value_T_2"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_value_T_3 = firrtl.add %addr_wordIndex, %c1_ui1 {name = "_value_T_3"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_4 = firrtl.bits %_value_T_3 2 to 0 {name = "_value_T_4"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %_value_T_5 = firrtl.mux(%_value_T_2, %c0_ui3, %_value_T_4) {name = "_value_T_5"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %68 = firrtl.mux(%_respToL1Fire_T, %_value_T_5, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %69 = firrtl.mux(%probe, %67, %68) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %70 = firrtl.or %miss, %mmio : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_state_T_3 = firrtl.mux(%meta_dirty, %c3_ui4, %c1_ui4) {name = "_state_T_3"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_state_T_4 = firrtl.mux(%mmio, %c5_ui4, %_state_T_3) {name = "_state_T_4"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %71 = firrtl.mux(%70, %_state_T_4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %72 = firrtl.mux(%_respToL1Fire_T, %c8_ui4, %71) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %73 = firrtl.mux(%probe, %66, %72) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %74 = firrtl.eq %state, %c5_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %75 = firrtl.and %io_mmio_req_ready, %io_mmio_req_valid_20 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.mux(%75, %c6_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %77 = firrtl.eq %state, %c6_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %78 = firrtl.mux(%io_mmio_resp_valid, %c7_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %79 = firrtl.eq %state, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %80 = firrtl.or %io_cohResp_valid_21, %respToL1Fire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_6 = firrtl.add %readBeatCnt_value, %c1_ui1 {name = "_value_T_6"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_7 = firrtl.bits %_value_T_6 2 to 0 {name = "_value_T_7"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %81 = firrtl.mux(%80, %_value_T_7, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %82 = firrtl.and %probe, %io_cohResp_valid_21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.and %82, %releaseLast : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %84 = firrtl.and %respToL1Fire, %respToL1Last : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %85 = firrtl.or %83, %84 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %86 = firrtl.mux(%85, %c0_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %87 = firrtl.eq %state, %c1_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %88 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.mux(%88, %c2_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %90 = firrtl.mux(%88, %addr_wordIndex, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %91 = firrtl.eq %state, %c2_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %92 = firrtl.and %91, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.mux(%92, %c1_ui1, %afterFirstRead) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.or %79, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %95 = firrtl.or %77, %94 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %96 = firrtl.or %74, %95 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %97 = firrtl.mux(%96, %afterFirstRead, %93) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.mux(%64, %c0_ui1, %97) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %afterFirstRead, %98 : !firrtl.uint<1>
      %_value_T_8 = firrtl.add %readBeatCnt_value, %c1_ui1 {name = "_value_T_8"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_9 = firrtl.bits %_value_T_8 2 to 0 {name = "_value_T_9"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %99 = firrtl.and %91, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.mux(%99, %_value_T_9, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %101 = firrtl.mux(%87, %90, %100) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %102 = firrtl.mux(%79, %81, %101) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %103 = firrtl.or %74, %77 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.mux(%103, %readBeatCnt_value, %102) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %105 = firrtl.mux(%64, %69, %104) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %readBeatCnt_value, %105 : !firrtl.uint<3>
      %106 = firrtl.and %io_mem_resp_valid, %_dataHitWriteBus_x3_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.and %91, %106 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %108 = firrtl.mux(%107, %c0_ui3, %28) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %109 = firrtl.or %79, %87 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.or %77, %109 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %111 = firrtl.or %74, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %112 = firrtl.or %64, %111 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %113 = firrtl.mux(%112, %28, %108) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %writeL2BeatCnt_value, %113 : !firrtl.uint<3>
      %114 = firrtl.eq %io_mem_resp_bits_cmd, %c6_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %115 = firrtl.and %io_mem_resp_valid, %114 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.mux(%115, %c7_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %117 = firrtl.eq %state, %c3_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %118 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_10 = firrtl.add %writeBeatCnt_value, %c1_ui1 {name = "_value_T_10"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_11 = firrtl.bits %_value_T_10 2 to 0 {name = "_value_T_11"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %119 = firrtl.and %117, %118 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.mux(%119, %_value_T_11, %writeBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %121 = firrtl.or %87, %91 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %122 = firrtl.or %79, %121 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.or %77, %122 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %124 = firrtl.or %74, %123 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %125 = firrtl.or %64, %124 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %126 = firrtl.mux(%125, %writeBeatCnt_value, %120) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %writeBeatCnt_value, %126 : !firrtl.uint<3>
      %127 = firrtl.eq %io_mem_req_bits_cmd_18, %c7_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %128 = firrtl.and %127, %118 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %129 = firrtl.mux(%128, %c4_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %130 = firrtl.eq %state, %c4_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %131 = firrtl.mux(%io_mem_resp_valid, %c1_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %132 = firrtl.eq %state, %c7_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %133 = firrtl.or %_io_isFinish_T_10, %alreadyOutFire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %134 = firrtl.and %132, %133 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %135 = firrtl.mux(%134, %c0_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %136 = firrtl.mux(%130, %131, %135) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %137 = firrtl.mux(%117, %129, %136) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %138 = firrtl.mux(%91, %116, %137) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %139 = firrtl.mux(%87, %89, %138) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %140 = firrtl.mux(%79, %86, %139) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %141 = firrtl.mux(%77, %78, %140) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %142 = firrtl.mux(%74, %76, %141) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %143 = firrtl.mux(%64, %73, %142) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %state, %143 : !firrtl.uint<4>
      %144 = firrtl.and %readingFirst, %metaRefillWriteBus_x15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataRefill_T = firrtl.mux(%144, %_wordMask_T_19, %c0_ui64) {name = "_dataRefill_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataRefill_T_1 = firrtl.and %io_in_bits_req_wdata, %_dataRefill_T {name = "_dataRefill_T_1"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataRefill_T_2 = firrtl.not %_dataRefill_T {name = "_dataRefill_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataRefill_T_3 = firrtl.and %io_mem_resp_bits_rdata, %_dataRefill_T_2 {name = "_dataRefill_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %dataRefill = firrtl.or %_dataRefill_T_1, %_dataRefill_T_3 {name = "dataRefill"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %dataRefillWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %dataRefillWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<10>
      %dataRefillWriteBus_req_bits_data_data = firrtl.wire : !firrtl.uint<64>
      %dataRefillWriteBus_x9 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid {name = "dataRefillWriteBus_x9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %dataRefillWriteBus_x10 = firrtl.cat %addr_index, %readBeatCnt_value {name = "dataRefillWriteBus_x10"} : (!firrtl.uint<7>, !firrtl.uint<3>) -> !firrtl.uint<10>
      %dataRefillWriteBus_x11_data = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %dataRefillWriteBus_x11_data, %dataRefill : !firrtl.uint<64>
      firrtl.strictconnect %dataRefillWriteBus_req_bits_setIdx, %dataRefillWriteBus_x10 : !firrtl.uint<10>
      firrtl.strictconnect %dataRefillWriteBus_req_bits_data_data, %dataRefillWriteBus_x11_data : !firrtl.uint<64>
      firrtl.strictconnect %dataRefillWriteBus_req_valid, %dataRefillWriteBus_x9 : !firrtl.uint<1>
      firrtl.strictconnect %12, %dataHitWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %13, %dataHitWriteBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %14, %dataHitWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %15, %dataRefillWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %16, %dataRefillWriteBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %17, %dataRefillWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_setIdx_8, %19 : !firrtl.uint<10>
      firrtl.strictconnect %io_dataWriteBus_req_bits_data_data_9, %20 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_waymask_10, %21 : !firrtl.uint<4>
      firrtl.strictconnect %io_dataWriteBus_req_valid_7, %18 : !firrtl.uint<1>
      %metaRefillWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %metaRefillWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<7>
      %metaRefillWriteBus_req_bits_data_tag = firrtl.wire : !firrtl.uint<19>
      %metaRefillWriteBus_req_bits_data_dirty = firrtl.wire : !firrtl.uint<1>
      %_metaRefillWriteBus_T_2 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid {name = "_metaRefillWriteBus_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaRefillWriteBus_T_3 = firrtl.eq %io_mem_resp_bits_cmd, %c6_ui3 {name = "_metaRefillWriteBus_T_3"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_metaRefillWriteBus_T_4 = firrtl.and %_metaRefillWriteBus_T_2, %_metaRefillWriteBus_T_3 {name = "_metaRefillWriteBus_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %metaRefillWriteBus_qual4_tag = firrtl.wire : !firrtl.uint<19>
      %metaRefillWriteBus_qual4_dirty = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %metaRefillWriteBus_qual4_tag, %addr_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaRefillWriteBus_qual4_dirty, %metaRefillWriteBus_x15 : !firrtl.uint<1>
      %_metaRefillWriteBus_WIRE_index = firrtl.wire : !firrtl.uint<7>
      %_metaRefillWriteBus_T_7 = firrtl.bits %io_in_bits_req_addr 12 to 6 {name = "_metaRefillWriteBus_T_7"} : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %_metaRefillWriteBus_WIRE_index, %_metaRefillWriteBus_T_7 : !firrtl.uint<7>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_setIdx, %_metaRefillWriteBus_WIRE_index : !firrtl.uint<7>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_data_tag, %metaRefillWriteBus_qual4_tag : !firrtl.uint<19>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_data_dirty, %metaRefillWriteBus_qual4_dirty : !firrtl.uint<1>
      firrtl.strictconnect %metaRefillWriteBus_req_valid, %_metaRefillWriteBus_T_4 : !firrtl.uint<1>
      firrtl.strictconnect %0, %metaHitWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %1, %metaHitWriteBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %2, %metaHitWriteBus_req_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %3, %metaRefillWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %4, %metaRefillWriteBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %5, %metaRefillWriteBus_req_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %6, %metaRefillWriteBus_req_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_setIdx_12, %8 : !firrtl.uint<7>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_tag_13, %9 : !firrtl.uint<19>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_dirty_14, %10 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_waymask_15, %11 : !firrtl.uint<4>
      firrtl.strictconnect %io_metaWriteBus_req_valid_11, %7 : !firrtl.uint<1>
      %_io_out_bits_rdata_T = firrtl.mux(%hit, %dataRead, %inRdataRegDemand) {name = "_io_out_bits_rdata_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_rdata_3, %_io_out_bits_rdata_T : !firrtl.uint<64>
      %_io_out_bits_cmd_T_1 = firrtl.not %metaRefillWriteBus_x15 {name = "_io_out_bits_cmd_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_2 = firrtl.bits %io_in_bits_req_cmd 3 to 3 {name = "_io_out_bits_cmd_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_3 = firrtl.not %_io_out_bits_cmd_T_2 {name = "_io_out_bits_cmd_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_4 = firrtl.and %_io_out_bits_cmd_T_1, %_io_out_bits_cmd_T_3 {name = "_io_out_bits_cmd_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_6 = firrtl.mux(%metaRefillWriteBus_x15, %c5_ui3, %c0_ui3) {name = "_io_out_bits_cmd_T_6"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_io_out_bits_cmd_T_7 = firrtl.mux(%_io_out_bits_cmd_T_4, %c6_ui3, %_io_out_bits_cmd_T_6) {name = "_io_out_bits_cmd_T_7"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %145 = firrtl.pad %_io_out_bits_cmd_T_7, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_cmd_2, %145 : !firrtl.uint<4>
      %_io_isFinish_T_9 = firrtl.eq %state, %c7_ui4 {name = "_io_isFinish_T_9"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_valid_T_19 = firrtl.or %metaRefillWriteBus_x15, %mmio {name = "_io_out_valid_T_19"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_21 = firrtl.not %alreadyOutFire {name = "_io_out_valid_T_21"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_22 = firrtl.and %afterFirstRead, %_io_out_valid_T_21 {name = "_io_out_valid_T_22"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_23 = firrtl.mux(%_io_out_valid_T_19, %_io_isFinish_T_9, %_io_out_valid_T_22) {name = "_io_out_valid_T_23"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_24 = firrtl.mux(%hit, %c1_ui1, %_io_out_valid_T_23) {name = "_io_out_valid_T_24"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_26 = firrtl.mux(%probe, %c0_ui1, %_io_out_valid_T_24) {name = "_io_out_valid_T_26"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_27 = firrtl.and %io_in_valid, %_io_out_valid_T_26 {name = "_io_out_valid_T_27"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_27 : !firrtl.uint<1>
      %_io_isFinish_T_3 = firrtl.and %_io_dataReadRespToL1_T_2, %releaseLast {name = "_io_isFinish_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_4 = firrtl.mux(%miss, %_io_dataReadRespToL1_T, %_io_isFinish_T_3) {name = "_io_isFinish_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_5 = firrtl.and %io_cohResp_valid_21, %_io_isFinish_T_4 {name = "_io_isFinish_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_7 = firrtl.or %hit, %metaRefillWriteBus_x15 {name = "_io_isFinish_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_11 = firrtl.or %_io_isFinish_T_10, %alreadyOutFire {name = "_io_isFinish_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_12 = firrtl.and %_io_isFinish_T_9, %_io_isFinish_T_11 {name = "_io_isFinish_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_13 = firrtl.mux(%_io_isFinish_T_7, %_io_isFinish_T_10, %_io_isFinish_T_12) {name = "_io_isFinish_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_14 = firrtl.mux(%probe, %_io_isFinish_T_5, %_io_isFinish_T_13) {name = "_io_isFinish_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_isFinish_4, %_io_isFinish_T_14 : !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.not %hitReadBurst {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.and %_io_dataReadRespToL1_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %io_out_ready, %_io_in_ready_T_2 {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.not %miss {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_5 = firrtl.and %_io_in_ready_T_3, %_io_in_ready_T_4 {name = "_io_in_ready_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_6 = firrtl.not %probe {name = "_io_in_ready_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_7 = firrtl.and %_io_in_ready_T_5, %_io_in_ready_T_6 {name = "_io_in_ready_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_7 : !firrtl.uint<1>
      %_io_dataReadRespToL1_T_1 = firrtl.and %_io_dataReadRespToL1_T, %io_out_ready {name = "_io_dataReadRespToL1_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_4 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_io_dataReadRespToL1_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_5 = firrtl.or %_io_dataReadRespToL1_T_1, %_io_dataReadRespToL1_T_4 {name = "_io_dataReadRespToL1_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_6 = firrtl.and %hitReadBurst, %_io_dataReadRespToL1_T_5 {name = "_io_dataReadRespToL1_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadRespToL1_24, %_io_dataReadRespToL1_T_6 : !firrtl.uint<1>
      %146 = firrtl.and %metaHitWriteBus_req_valid, %metaRefillWriteBus_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %147 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %148 = firrtl.not %146 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %148, %147, "Assertion failed\0A    at Cache.scala:461 assert(!(metaHitWriteBus.req.valid && metaRefillWriteBus.req.valid))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %149 = firrtl.and %dataHitWriteBus_req_valid, %dataRefillWriteBus_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %150 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %151 = firrtl.not %149 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %151, %150, "Assertion failed\0A    at Cache.scala:462 assert(!(dataHitWriteBus.req.valid && dataRefillWriteBus.req.valid))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %152 = firrtl.wire : !firrtl.uint<7>
      %153 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %152, %153 : !firrtl.uint<7>
      %lo = firrtl.cat %io_in_bits_datas_1_data, %io_in_bits_datas_0_data {name = "lo"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %hi = firrtl.cat %io_in_bits_datas_3_data, %io_in_bits_datas_2_data {name = "hi"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %154 = firrtl.cat %hi, %lo : (!firrtl.uint<128>, !firrtl.uint<128>) -> !firrtl.uint<256>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym_1 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %155 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %156 = firrtl.and %c_control_logEnable, %155 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %156, "[%d] CacheStage3_1: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %157 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %158 = firrtl.and %c_control_logEnable, %157 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %158, " metaread idx %x waymask %b metas %x%x:%x %x%x:%x %x%x:%x %x%x:%x %x\0A" {name = "printf_5"} (%152, %io_in_bits_waymask, %io_in_bits_metas_0_valid, %io_in_bits_metas_0_dirty, %io_in_bits_metas_0_tag, %io_in_bits_metas_1_valid, %io_in_bits_metas_1_dirty, %io_in_bits_metas_1_tag, %io_in_bits_metas_2_valid, %io_in_bits_metas_2_dirty, %io_in_bits_metas_2_tag, %io_in_bits_metas_3_valid, %io_in_bits_metas_3_dirty, %io_in_bits_metas_3_tag, %154) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<256>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 344 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %159 = firrtl.and %io_metaWriteBus_req_valid_11, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %160 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %161 = firrtl.and %159, %160 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %161, "[%d] CacheStage3_1: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %162 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %163 = firrtl.and %159, %162 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %163, "%d: [dcache S3]: metawrite idx %x wmask %b meta %x%x:%x\0A" {name = "printf_7"} (%c, %io_metaWriteBus_req_bits_setIdx_12, %io_metaWriteBus_req_bits_waymask_15, %c1_ui1, %io_metaWriteBus_req_bits_data_dirty_14, %io_metaWriteBus_req_bits_data_tag_13) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<7>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<19>
      %164 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %165 = firrtl.and %c_control_logEnable, %164 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %165, "[%d] CacheStage3_1: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %166 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %167 = firrtl.and %c_control_logEnable, %166 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %167, " in.ready = %d, in.valid = %d, hit = %x, state = %d, addr = %x cmd:%d probe:%d isFinish:%d\0A" {name = "printf_9"} (%io_in_ready_0, %io_in_valid, %hit, %state, %io_in_bits_req_addr, %io_in_bits_req_cmd, %probe, %io_isFinish_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>
      %168 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %169 = firrtl.and %c_control_logEnable, %168 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %169, "[%d] CacheStage3_1: " {name = "printf_10"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %170 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %171 = firrtl.and %c_control_logEnable, %170 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %171, " out.valid:%d rdata:%x cmd:%d user:%x id:%x \0A" {name = "printf_11"} (%io_out_valid_1, %io_out_bits_rdata_3, %io_out_bits_cmd_2, %c0_ui1, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>
      %172 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %173 = firrtl.and %c_control_logEnable, %172 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %173, "[%d] CacheStage3_1: " {name = "printf_12"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %174 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %175 = firrtl.and %c_control_logEnable, %174 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %175, " DHW: (%d, %d), data:%x setIdx:%x MHW:(%d, %d)\0A" {name = "printf_13"} (%dataHitWriteBus_req_valid, %c1_ui1, %dataHitWriteBus_req_bits_data_data, %dataHitWriteBus_req_bits_setIdx, %metaHitWriteBus_req_valid, %c1_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<10>, !firrtl.uint<1>, !firrtl.uint<1>
      %176 = firrtl.cat %hi, %lo : (!firrtl.uint<128>, !firrtl.uint<128>) -> !firrtl.uint<256>
      %177 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %178 = firrtl.and %c_control_logEnable, %177 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %178, "[%d] CacheStage3_1: " {name = "printf_14"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %179 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %180 = firrtl.and %c_control_logEnable, %179 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %180, " DreadCache: %x \0A" {name = "printf_15"} (%176) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<256>
      %181 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %182 = firrtl.and %c_control_logEnable, %181 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %182, "[%d] CacheStage3_1: " {name = "printf_16"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %183 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %184 = firrtl.and %c_control_logEnable, %183 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %184, " useFD:%d isFD:%d FD:%x DreadArray:%x dataRead:%x inwaymask:%x FDwaymask:%x \0A" {name = "printf_17"} (%useForwardData, %io_in_bits_isForwardData, %io_in_bits_forwardData_data_data, %_dataReadArray_WIRE_data, %dataRead, %io_in_bits_waymask, %io_in_bits_forwardData_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<4>
      %185 = firrtl.and %io_dataWriteBus_req_valid_7, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %186 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %187 = firrtl.and %185, %186 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %187, "[%d] CacheStage3_1: " {name = "printf_18"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %188 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %189 = firrtl.and %185, %188 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %189, "[WB] waymask: %b data:%x setIdx:%x\0A" {name = "printf_19"} (%io_dataWriteBus_req_bits_waymask_10, %io_dataWriteBus_req_bits_data_data_9, %io_dataWriteBus_req_bits_setIdx_8) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<10>
      %190 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %191 = firrtl.and %_io_mem_req_valid_T_1, %190 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %192 = firrtl.wire : !firrtl.uint<7>
      %193 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %192, %193 : !firrtl.uint<7>
      %194 = firrtl.and %191, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %195 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %196 = firrtl.and %194, %195 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %196, "[%d] CacheStage3_1: " {name = "printf_20"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %197 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %198 = firrtl.and %194, %197 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %198, "[COUTW] cnt %x addr %x data %x cmd %x size %x wmask %x tag %x idx %x waymask %b \0A" {name = "printf_21"} (%writeBeatCnt_value, %io_mem_req_bits_addr_17, %io_mem_req_bits_wdata_19, %io_mem_req_bits_cmd_18, %c3_ui3, %c255_ui8, %addr_tag, %192, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<32>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<19>, !firrtl.uint<7>, !firrtl.uint<4>
      %199 = firrtl.and %_io_mem_req_valid_T, %190 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %200 = firrtl.wire : !firrtl.uint<7>
      %201 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %200, %201 : !firrtl.uint<7>
      %202 = firrtl.and %199, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %203 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %204 = firrtl.and %202, %203 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %204, "[%d] CacheStage3_1: " {name = "printf_22"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %205 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %206 = firrtl.and %202, %205 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %206, "[COUTR] addr %x tag %x idx %x waymask %b \0A" {name = "printf_23"} (%io_mem_req_bits_addr_17, %addr_tag, %200, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<19>, !firrtl.uint<7>, !firrtl.uint<4>
      %207 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %208 = firrtl.wire : !firrtl.uint<7>
      %209 = firrtl.bits %io_in_bits_req_addr 12 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<7>
      firrtl.strictconnect %208, %209 : !firrtl.uint<7>
      %210 = firrtl.and %207, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %211 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %212 = firrtl.and %210, %211 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %212, "[%d] CacheStage3_1: " {name = "printf_24"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %213 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %214 = firrtl.and %210, %213 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %214, "[COUTR] cnt %x data %x tag %x idx %x waymask %b \0A" {name = "printf_25"} (%readBeatCnt_value, %io_mem_resp_bits_rdata, %addr_tag, %208, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<64>, !firrtl.uint<19>, !firrtl.uint<7>, !firrtl.uint<4>
      firrtl.strictconnect %_WIRE__bore, %25 : !firrtl.uint<1>
    }
    firrtl.module private @Arbiter2_SimpleBusReqBundle(out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_addr: !firrtl.uint<32>, in %io_in_0_bits_size: !firrtl.uint<3>, in %io_in_0_bits_cmd: !firrtl.uint<4>, in %io_in_0_bits_wmask: !firrtl.uint<8>, in %io_in_0_bits_wdata: !firrtl.uint<64>, out %io_in_1_ready: !firrtl.uint<1>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_addr: !firrtl.uint<32>, in %io_in_1_bits_size: !firrtl.uint<3>, in %io_in_1_bits_cmd: !firrtl.uint<4>, in %io_in_1_bits_wmask: !firrtl.uint<8>, in %io_in_1_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_size: !firrtl.uint<3>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_wmask: !firrtl.uint<8>, out %io_out_bits_wdata: !firrtl.uint<64>) {
      %io_in_1_ready_0 = firrtl.wire {name = "io_in_1_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_addr_2 = firrtl.wire {name = "io_out_bits_addr"} : !firrtl.uint<32>
      %io_out_bits_size_3 = firrtl.wire {name = "io_out_bits_size"} : !firrtl.uint<3>
      %io_out_bits_cmd_4 = firrtl.wire {name = "io_out_bits_cmd"} : !firrtl.uint<4>
      %io_out_bits_wmask_5 = firrtl.wire {name = "io_out_bits_wmask"} : !firrtl.uint<8>
      %io_out_bits_wdata_6 = firrtl.wire {name = "io_out_bits_wdata"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_0_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready, %io_in_1_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_out_bits_addr_2 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size, %io_out_bits_size_3 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd, %io_out_bits_cmd_4 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask, %io_out_bits_wmask_5 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata, %io_out_bits_wdata_6 : !firrtl.uint<64>
      %0 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_addr, %io_in_1_bits_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_addr_2, %0 : !firrtl.uint<32>
      %1 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_size, %io_in_1_bits_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_size_3, %1 : !firrtl.uint<3>
      %2 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_cmd, %io_in_1_bits_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_cmd_4, %2 : !firrtl.uint<4>
      %3 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_wmask, %io_in_1_bits_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wmask_5, %3 : !firrtl.uint<8>
      %4 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_wdata, %io_in_1_bits_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_wdata_6, %4 : !firrtl.uint<64>
      %grant_1 = firrtl.not %io_in_0_valid {name = "grant_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_1_ready_T = firrtl.and %grant_1, %io_out_ready {name = "_io_in_1_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready_0, %_io_in_1_ready_T : !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.or %io_in_0_valid, %io_in_1_valid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_1 : !firrtl.uint<1>
    }
    firrtl.module private @Cache_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_size: !firrtl.uint<3>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wmask: !firrtl.uint<8>, in %io_in_req_bits_wdata: !firrtl.uint<64>, in %io_in_resp_ready: !firrtl.uint<1>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_mem_req_ready: !firrtl.uint<1>, out %io_out_mem_req_valid: !firrtl.uint<1>, out %io_out_mem_req_bits_addr: !firrtl.uint<32>, out %io_out_mem_req_bits_cmd: !firrtl.uint<4>, out %io_out_mem_req_bits_wdata: !firrtl.uint<64>, in %io_out_mem_resp_valid: !firrtl.uint<1>, in %io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_out_mem_resp_bits_rdata: !firrtl.uint<64>, out %io_out_coh_req_ready: !firrtl.uint<1>, in %io_out_coh_req_valid: !firrtl.uint<1>, in %io_out_coh_req_bits_addr: !firrtl.uint<32>, in %io_out_coh_req_bits_wdata: !firrtl.uint<64>, out %io_out_coh_resp_valid: !firrtl.uint<1>, out %io_out_coh_resp_bits_cmd: !firrtl.uint<4>, out %io_out_coh_resp_bits_rdata: !firrtl.uint<64>, in %io_mmio_req_ready: !firrtl.uint<1>, out %io_mmio_req_valid: !firrtl.uint<1>, out %io_mmio_req_bits_addr: !firrtl.uint<32>, out %io_mmio_req_bits_size: !firrtl.uint<3>, out %io_mmio_req_bits_cmd: !firrtl.uint<4>, out %io_mmio_req_bits_wmask: !firrtl.uint<8>, out %io_mmio_req_bits_wdata: !firrtl.uint<64>, in %io_mmio_resp_valid: !firrtl.uint<1>, in %io_mmio_resp_bits_rdata: !firrtl.uint<64>, out %io_empty: !firrtl.uint<1>, out %s3__WIRE__bore: !firrtl.uint<1>) {
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd_2 = firrtl.wire {name = "io_in_resp_bits_cmd"} : !firrtl.uint<4>
      %io_in_resp_bits_rdata_3 = firrtl.wire {name = "io_in_resp_bits_rdata"} : !firrtl.uint<64>
      %io_out_mem_req_valid_4 = firrtl.wire {name = "io_out_mem_req_valid"} : !firrtl.uint<1>
      %io_out_mem_req_bits_addr_5 = firrtl.wire {name = "io_out_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_out_mem_req_bits_cmd_6 = firrtl.wire {name = "io_out_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_mem_req_bits_wdata_7 = firrtl.wire {name = "io_out_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_out_coh_req_ready_8 = firrtl.wire {name = "io_out_coh_req_ready"} : !firrtl.uint<1>
      %io_out_coh_resp_valid_9 = firrtl.wire {name = "io_out_coh_resp_valid"} : !firrtl.uint<1>
      %io_out_coh_resp_bits_cmd_10 = firrtl.wire {name = "io_out_coh_resp_bits_cmd"} : !firrtl.uint<4>
      %io_out_coh_resp_bits_rdata_11 = firrtl.wire {name = "io_out_coh_resp_bits_rdata"} : !firrtl.uint<64>
      %io_mmio_req_valid_12 = firrtl.wire {name = "io_mmio_req_valid"} : !firrtl.uint<1>
      %io_mmio_req_bits_addr_13 = firrtl.wire {name = "io_mmio_req_bits_addr"} : !firrtl.uint<32>
      %io_mmio_req_bits_size_14 = firrtl.wire {name = "io_mmio_req_bits_size"} : !firrtl.uint<3>
      %io_mmio_req_bits_cmd_15 = firrtl.wire {name = "io_mmio_req_bits_cmd"} : !firrtl.uint<4>
      %io_mmio_req_bits_wmask_16 = firrtl.wire {name = "io_mmio_req_bits_wmask"} : !firrtl.uint<8>
      %io_mmio_req_bits_wdata_17 = firrtl.wire {name = "io_mmio_req_bits_wdata"} : !firrtl.uint<64>
      %io_empty_18 = firrtl.wire {name = "io_empty"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_in_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_in_resp_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_valid, %io_out_mem_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_mem_req_bits_addr, %io_out_mem_req_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_cmd, %io_out_mem_req_bits_cmd_6 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_wdata, %io_out_mem_req_bits_wdata_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_coh_req_ready, %io_out_coh_req_ready_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_coh_resp_valid, %io_out_coh_resp_valid_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_coh_resp_bits_cmd, %io_out_coh_resp_bits_cmd_10 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_coh_resp_bits_rdata, %io_out_coh_resp_bits_rdata_11 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid, %io_mmio_req_valid_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr, %io_mmio_req_bits_addr_13 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size, %io_mmio_req_bits_size_14 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd, %io_mmio_req_bits_cmd_15 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask, %io_mmio_req_bits_wmask_16 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata, %io_mmio_req_bits_wdata_17 : !firrtl.uint<64>
      firrtl.strictconnect %io_empty, %io_empty_18 : !firrtl.uint<1>
      %s1_clock, %s1_reset, %s1_io_in_ready, %s1_io_in_valid, %s1_io_in_bits_addr, %s1_io_in_bits_size, %s1_io_in_bits_cmd, %s1_io_in_bits_wmask, %s1_io_in_bits_wdata, %s1_io_out_ready, %s1_io_out_valid, %s1_io_out_bits_req_addr, %s1_io_out_bits_req_size, %s1_io_out_bits_req_cmd, %s1_io_out_bits_req_wmask, %s1_io_out_bits_req_wdata, %s1_io_metaReadBus_req_ready, %s1_io_metaReadBus_req_valid, %s1_io_metaReadBus_req_bits_setIdx, %s1_io_dataReadBus_req_ready, %s1_io_dataReadBus_req_valid, %s1_io_dataReadBus_req_bits_setIdx = firrtl.instance s1 @CacheStage1_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<32>, in io_in_bits_size: !firrtl.uint<3>, in io_in_bits_cmd: !firrtl.uint<4>, in io_in_bits_wmask: !firrtl.uint<8>, in io_in_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_req_addr: !firrtl.uint<32>, out io_out_bits_req_size: !firrtl.uint<3>, out io_out_bits_req_cmd: !firrtl.uint<4>, out io_out_bits_req_wmask: !firrtl.uint<8>, out io_out_bits_req_wdata: !firrtl.uint<64>, in io_metaReadBus_req_ready: !firrtl.uint<1>, out io_metaReadBus_req_valid: !firrtl.uint<1>, out io_metaReadBus_req_bits_setIdx: !firrtl.uint<7>, in io_dataReadBus_req_ready: !firrtl.uint<1>, out io_dataReadBus_req_valid: !firrtl.uint<1>, out io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<32>
      %3 = firrtl.wire : !firrtl.uint<3>
      %4 = firrtl.wire : !firrtl.uint<4>
      %5 = firrtl.wire : !firrtl.uint<8>
      %6 = firrtl.wire : !firrtl.uint<64>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<32>
      %10 = firrtl.wire : !firrtl.uint<3>
      %11 = firrtl.wire : !firrtl.uint<4>
      %12 = firrtl.wire : !firrtl.uint<8>
      %13 = firrtl.wire : !firrtl.uint<64>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<7>
      %17 = firrtl.wire : !firrtl.uint<19>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<19>
      %21 = firrtl.wire : !firrtl.uint<1>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<19>
      %24 = firrtl.wire : !firrtl.uint<1>
      %25 = firrtl.wire : !firrtl.uint<1>
      %26 = firrtl.wire : !firrtl.uint<19>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<1>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<10>
      %32 = firrtl.wire : !firrtl.uint<64>
      %33 = firrtl.wire : !firrtl.uint<64>
      %34 = firrtl.wire : !firrtl.uint<64>
      %35 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %0, %s1_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s1_io_in_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %s1_io_in_bits_addr, %2 : !firrtl.uint<32>
      firrtl.strictconnect %s1_io_in_bits_size, %3 : !firrtl.uint<3>
      firrtl.strictconnect %s1_io_in_bits_cmd, %4 : !firrtl.uint<4>
      firrtl.strictconnect %s1_io_in_bits_wmask, %5 : !firrtl.uint<8>
      firrtl.strictconnect %s1_io_in_bits_wdata, %6 : !firrtl.uint<64>
      firrtl.strictconnect %s1_io_out_ready, %7 : !firrtl.uint<1>
      firrtl.strictconnect %8, %s1_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %9, %s1_io_out_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %10, %s1_io_out_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %11, %s1_io_out_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %12, %s1_io_out_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %13, %s1_io_out_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %s1_io_metaReadBus_req_ready, %14 : !firrtl.uint<1>
      firrtl.strictconnect %15, %s1_io_metaReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %16, %s1_io_metaReadBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %s1_io_dataReadBus_req_ready, %29 : !firrtl.uint<1>
      firrtl.strictconnect %30, %s1_io_dataReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %31, %s1_io_dataReadBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %s1_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s1_reset, %reset : !firrtl.uint<1>
      %s2_clock, %s2_reset, %s2_io_in_ready, %s2_io_in_valid, %s2_io_in_bits_req_addr, %s2_io_in_bits_req_size, %s2_io_in_bits_req_cmd, %s2_io_in_bits_req_wmask, %s2_io_in_bits_req_wdata, %s2_io_out_ready, %s2_io_out_valid, %s2_io_out_bits_req_addr, %s2_io_out_bits_req_size, %s2_io_out_bits_req_cmd, %s2_io_out_bits_req_wmask, %s2_io_out_bits_req_wdata, %s2_io_out_bits_metas_0_tag, %s2_io_out_bits_metas_0_valid, %s2_io_out_bits_metas_0_dirty, %s2_io_out_bits_metas_1_tag, %s2_io_out_bits_metas_1_valid, %s2_io_out_bits_metas_1_dirty, %s2_io_out_bits_metas_2_tag, %s2_io_out_bits_metas_2_valid, %s2_io_out_bits_metas_2_dirty, %s2_io_out_bits_metas_3_tag, %s2_io_out_bits_metas_3_valid, %s2_io_out_bits_metas_3_dirty, %s2_io_out_bits_datas_0_data, %s2_io_out_bits_datas_1_data, %s2_io_out_bits_datas_2_data, %s2_io_out_bits_datas_3_data, %s2_io_out_bits_hit, %s2_io_out_bits_waymask, %s2_io_out_bits_mmio, %s2_io_out_bits_isForwardData, %s2_io_out_bits_forwardData_data_data, %s2_io_out_bits_forwardData_waymask, %s2_io_metaReadResp_0_tag, %s2_io_metaReadResp_0_valid, %s2_io_metaReadResp_0_dirty, %s2_io_metaReadResp_1_tag, %s2_io_metaReadResp_1_valid, %s2_io_metaReadResp_1_dirty, %s2_io_metaReadResp_2_tag, %s2_io_metaReadResp_2_valid, %s2_io_metaReadResp_2_dirty, %s2_io_metaReadResp_3_tag, %s2_io_metaReadResp_3_valid, %s2_io_metaReadResp_3_dirty, %s2_io_dataReadResp_0_data, %s2_io_dataReadResp_1_data, %s2_io_dataReadResp_2_data, %s2_io_dataReadResp_3_data, %s2_io_metaWriteBus_req_valid, %s2_io_metaWriteBus_req_bits_setIdx, %s2_io_metaWriteBus_req_bits_data_tag, %s2_io_metaWriteBus_req_bits_data_dirty, %s2_io_metaWriteBus_req_bits_waymask, %s2_io_dataWriteBus_req_valid, %s2_io_dataWriteBus_req_bits_setIdx, %s2_io_dataWriteBus_req_bits_data_data, %s2_io_dataWriteBus_req_bits_waymask = firrtl.instance s2 @CacheStage2_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_req_addr: !firrtl.uint<32>, in io_in_bits_req_size: !firrtl.uint<3>, in io_in_bits_req_cmd: !firrtl.uint<4>, in io_in_bits_req_wmask: !firrtl.uint<8>, in io_in_bits_req_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_req_addr: !firrtl.uint<32>, out io_out_bits_req_size: !firrtl.uint<3>, out io_out_bits_req_cmd: !firrtl.uint<4>, out io_out_bits_req_wmask: !firrtl.uint<8>, out io_out_bits_req_wdata: !firrtl.uint<64>, out io_out_bits_metas_0_tag: !firrtl.uint<19>, out io_out_bits_metas_0_valid: !firrtl.uint<1>, out io_out_bits_metas_0_dirty: !firrtl.uint<1>, out io_out_bits_metas_1_tag: !firrtl.uint<19>, out io_out_bits_metas_1_valid: !firrtl.uint<1>, out io_out_bits_metas_1_dirty: !firrtl.uint<1>, out io_out_bits_metas_2_tag: !firrtl.uint<19>, out io_out_bits_metas_2_valid: !firrtl.uint<1>, out io_out_bits_metas_2_dirty: !firrtl.uint<1>, out io_out_bits_metas_3_tag: !firrtl.uint<19>, out io_out_bits_metas_3_valid: !firrtl.uint<1>, out io_out_bits_metas_3_dirty: !firrtl.uint<1>, out io_out_bits_datas_0_data: !firrtl.uint<64>, out io_out_bits_datas_1_data: !firrtl.uint<64>, out io_out_bits_datas_2_data: !firrtl.uint<64>, out io_out_bits_datas_3_data: !firrtl.uint<64>, out io_out_bits_hit: !firrtl.uint<1>, out io_out_bits_waymask: !firrtl.uint<4>, out io_out_bits_mmio: !firrtl.uint<1>, out io_out_bits_isForwardData: !firrtl.uint<1>, out io_out_bits_forwardData_data_data: !firrtl.uint<64>, out io_out_bits_forwardData_waymask: !firrtl.uint<4>, in io_metaReadResp_0_tag: !firrtl.uint<19>, in io_metaReadResp_0_valid: !firrtl.uint<1>, in io_metaReadResp_0_dirty: !firrtl.uint<1>, in io_metaReadResp_1_tag: !firrtl.uint<19>, in io_metaReadResp_1_valid: !firrtl.uint<1>, in io_metaReadResp_1_dirty: !firrtl.uint<1>, in io_metaReadResp_2_tag: !firrtl.uint<19>, in io_metaReadResp_2_valid: !firrtl.uint<1>, in io_metaReadResp_2_dirty: !firrtl.uint<1>, in io_metaReadResp_3_tag: !firrtl.uint<19>, in io_metaReadResp_3_valid: !firrtl.uint<1>, in io_metaReadResp_3_dirty: !firrtl.uint<1>, in io_dataReadResp_0_data: !firrtl.uint<64>, in io_dataReadResp_1_data: !firrtl.uint<64>, in io_dataReadResp_2_data: !firrtl.uint<64>, in io_dataReadResp_3_data: !firrtl.uint<64>, in io_metaWriteBus_req_valid: !firrtl.uint<1>, in io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, in io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, in io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, in io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in io_dataWriteBus_req_valid: !firrtl.uint<1>, in io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, in io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, in io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>)
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<1>
      %38 = firrtl.wire : !firrtl.uint<32>
      %39 = firrtl.wire : !firrtl.uint<3>
      %40 = firrtl.wire : !firrtl.uint<4>
      %41 = firrtl.wire : !firrtl.uint<8>
      %42 = firrtl.wire : !firrtl.uint<64>
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<1>
      %45 = firrtl.wire : !firrtl.uint<32>
      %46 = firrtl.wire : !firrtl.uint<3>
      %47 = firrtl.wire : !firrtl.uint<4>
      %48 = firrtl.wire : !firrtl.uint<8>
      %49 = firrtl.wire : !firrtl.uint<64>
      %50 = firrtl.wire : !firrtl.uint<19>
      %51 = firrtl.wire : !firrtl.uint<1>
      %52 = firrtl.wire : !firrtl.uint<1>
      %53 = firrtl.wire : !firrtl.uint<19>
      %54 = firrtl.wire : !firrtl.uint<1>
      %55 = firrtl.wire : !firrtl.uint<1>
      %56 = firrtl.wire : !firrtl.uint<19>
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<1>
      %59 = firrtl.wire : !firrtl.uint<19>
      %60 = firrtl.wire : !firrtl.uint<1>
      %61 = firrtl.wire : !firrtl.uint<1>
      %62 = firrtl.wire : !firrtl.uint<64>
      %63 = firrtl.wire : !firrtl.uint<64>
      %64 = firrtl.wire : !firrtl.uint<64>
      %65 = firrtl.wire : !firrtl.uint<64>
      %66 = firrtl.wire : !firrtl.uint<1>
      %67 = firrtl.wire : !firrtl.uint<4>
      %68 = firrtl.wire : !firrtl.uint<1>
      %69 = firrtl.wire : !firrtl.uint<1>
      %70 = firrtl.wire : !firrtl.uint<64>
      %71 = firrtl.wire : !firrtl.uint<4>
      %72 = firrtl.wire : !firrtl.uint<19>
      %73 = firrtl.wire : !firrtl.uint<1>
      %74 = firrtl.wire : !firrtl.uint<1>
      %75 = firrtl.wire : !firrtl.uint<19>
      %76 = firrtl.wire : !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<1>
      %78 = firrtl.wire : !firrtl.uint<19>
      %79 = firrtl.wire : !firrtl.uint<1>
      %80 = firrtl.wire : !firrtl.uint<1>
      %81 = firrtl.wire : !firrtl.uint<19>
      %82 = firrtl.wire : !firrtl.uint<1>
      %83 = firrtl.wire : !firrtl.uint<1>
      %84 = firrtl.wire : !firrtl.uint<64>
      %85 = firrtl.wire : !firrtl.uint<64>
      %86 = firrtl.wire : !firrtl.uint<64>
      %87 = firrtl.wire : !firrtl.uint<64>
      %88 = firrtl.wire : !firrtl.uint<1>
      %89 = firrtl.wire : !firrtl.uint<7>
      %90 = firrtl.wire : !firrtl.uint<19>
      %91 = firrtl.wire : !firrtl.uint<1>
      %92 = firrtl.wire : !firrtl.uint<4>
      %93 = firrtl.wire : !firrtl.uint<1>
      %94 = firrtl.wire : !firrtl.uint<10>
      %95 = firrtl.wire : !firrtl.uint<64>
      %96 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %36, %s2_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_in_valid, %37 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_in_bits_req_addr, %38 : !firrtl.uint<32>
      firrtl.strictconnect %s2_io_in_bits_req_size, %39 : !firrtl.uint<3>
      firrtl.strictconnect %s2_io_in_bits_req_cmd, %40 : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_in_bits_req_wmask, %41 : !firrtl.uint<8>
      firrtl.strictconnect %s2_io_in_bits_req_wdata, %42 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_out_ready, %43 : !firrtl.uint<1>
      firrtl.strictconnect %44, %s2_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %45, %s2_io_out_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %46, %s2_io_out_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %47, %s2_io_out_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %48, %s2_io_out_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %49, %s2_io_out_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %50, %s2_io_out_bits_metas_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %51, %s2_io_out_bits_metas_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %52, %s2_io_out_bits_metas_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %53, %s2_io_out_bits_metas_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %54, %s2_io_out_bits_metas_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %55, %s2_io_out_bits_metas_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %56, %s2_io_out_bits_metas_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %57, %s2_io_out_bits_metas_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %58, %s2_io_out_bits_metas_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %59, %s2_io_out_bits_metas_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %60, %s2_io_out_bits_metas_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %61, %s2_io_out_bits_metas_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %62, %s2_io_out_bits_datas_0_data : !firrtl.uint<64>
      firrtl.strictconnect %63, %s2_io_out_bits_datas_1_data : !firrtl.uint<64>
      firrtl.strictconnect %64, %s2_io_out_bits_datas_2_data : !firrtl.uint<64>
      firrtl.strictconnect %65, %s2_io_out_bits_datas_3_data : !firrtl.uint<64>
      firrtl.strictconnect %66, %s2_io_out_bits_hit : !firrtl.uint<1>
      firrtl.strictconnect %67, %s2_io_out_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %68, %s2_io_out_bits_mmio : !firrtl.uint<1>
      firrtl.strictconnect %69, %s2_io_out_bits_isForwardData : !firrtl.uint<1>
      firrtl.strictconnect %70, %s2_io_out_bits_forwardData_data_data : !firrtl.uint<64>
      firrtl.strictconnect %71, %s2_io_out_bits_forwardData_waymask : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_metaReadResp_0_tag, %72 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_0_valid, %73 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_0_dirty, %74 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_1_tag, %75 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_1_valid, %76 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_1_dirty, %77 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_2_tag, %78 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_2_valid, %79 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_2_dirty, %80 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_3_tag, %81 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaReadResp_3_valid, %82 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_3_dirty, %83 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_dataReadResp_0_data, %84 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_1_data, %85 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_2_data, %86 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_3_data, %87 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_metaWriteBus_req_valid, %88 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_setIdx, %89 : !firrtl.uint<7>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_data_tag, %90 : !firrtl.uint<19>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_data_dirty, %91 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_waymask, %92 : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_dataWriteBus_req_valid, %93 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_setIdx, %94 : !firrtl.uint<10>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_data_data, %95 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_waymask, %96 : !firrtl.uint<4>
      firrtl.strictconnect %s2_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s2_reset, %reset : !firrtl.uint<1>
      %s3_clock, %s3_reset, %s3_io_in_ready, %s3_io_in_valid, %s3_io_in_bits_req_addr, %s3_io_in_bits_req_size, %s3_io_in_bits_req_cmd, %s3_io_in_bits_req_wmask, %s3_io_in_bits_req_wdata, %s3_io_in_bits_metas_0_tag, %s3_io_in_bits_metas_0_valid, %s3_io_in_bits_metas_0_dirty, %s3_io_in_bits_metas_1_tag, %s3_io_in_bits_metas_1_valid, %s3_io_in_bits_metas_1_dirty, %s3_io_in_bits_metas_2_tag, %s3_io_in_bits_metas_2_valid, %s3_io_in_bits_metas_2_dirty, %s3_io_in_bits_metas_3_tag, %s3_io_in_bits_metas_3_valid, %s3_io_in_bits_metas_3_dirty, %s3_io_in_bits_datas_0_data, %s3_io_in_bits_datas_1_data, %s3_io_in_bits_datas_2_data, %s3_io_in_bits_datas_3_data, %s3_io_in_bits_hit, %s3_io_in_bits_waymask, %s3_io_in_bits_mmio, %s3_io_in_bits_isForwardData, %s3_io_in_bits_forwardData_data_data, %s3_io_in_bits_forwardData_waymask, %s3_io_out_ready, %s3_io_out_valid, %s3_io_out_bits_cmd, %s3_io_out_bits_rdata, %s3_io_isFinish, %s3_io_dataReadBus_req_ready, %s3_io_dataReadBus_req_valid, %s3_io_dataReadBus_req_bits_setIdx, %s3_io_dataReadBus_resp_data_0_data, %s3_io_dataReadBus_resp_data_1_data, %s3_io_dataReadBus_resp_data_2_data, %s3_io_dataReadBus_resp_data_3_data, %s3_io_dataWriteBus_req_valid, %s3_io_dataWriteBus_req_bits_setIdx, %s3_io_dataWriteBus_req_bits_data_data, %s3_io_dataWriteBus_req_bits_waymask, %s3_io_metaWriteBus_req_valid, %s3_io_metaWriteBus_req_bits_setIdx, %s3_io_metaWriteBus_req_bits_data_tag, %s3_io_metaWriteBus_req_bits_data_dirty, %s3_io_metaWriteBus_req_bits_waymask, %s3_io_mem_req_ready, %s3_io_mem_req_valid, %s3_io_mem_req_bits_addr, %s3_io_mem_req_bits_cmd, %s3_io_mem_req_bits_wdata, %s3_io_mem_resp_valid, %s3_io_mem_resp_bits_cmd, %s3_io_mem_resp_bits_rdata, %s3_io_mmio_req_ready, %s3_io_mmio_req_valid, %s3_io_mmio_req_bits_addr, %s3_io_mmio_req_bits_size, %s3_io_mmio_req_bits_cmd, %s3_io_mmio_req_bits_wmask, %s3_io_mmio_req_bits_wdata, %s3_io_mmio_resp_valid, %s3_io_mmio_resp_bits_rdata, %s3_io_cohResp_valid, %s3_io_cohResp_bits_cmd, %s3_io_cohResp_bits_rdata, %s3_io_dataReadRespToL1, %s3__WIRE__bore_19 = firrtl.instance s3 @CacheStage3_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_req_addr: !firrtl.uint<32>, in io_in_bits_req_size: !firrtl.uint<3>, in io_in_bits_req_cmd: !firrtl.uint<4>, in io_in_bits_req_wmask: !firrtl.uint<8>, in io_in_bits_req_wdata: !firrtl.uint<64>, in io_in_bits_metas_0_tag: !firrtl.uint<19>, in io_in_bits_metas_0_valid: !firrtl.uint<1>, in io_in_bits_metas_0_dirty: !firrtl.uint<1>, in io_in_bits_metas_1_tag: !firrtl.uint<19>, in io_in_bits_metas_1_valid: !firrtl.uint<1>, in io_in_bits_metas_1_dirty: !firrtl.uint<1>, in io_in_bits_metas_2_tag: !firrtl.uint<19>, in io_in_bits_metas_2_valid: !firrtl.uint<1>, in io_in_bits_metas_2_dirty: !firrtl.uint<1>, in io_in_bits_metas_3_tag: !firrtl.uint<19>, in io_in_bits_metas_3_valid: !firrtl.uint<1>, in io_in_bits_metas_3_dirty: !firrtl.uint<1>, in io_in_bits_datas_0_data: !firrtl.uint<64>, in io_in_bits_datas_1_data: !firrtl.uint<64>, in io_in_bits_datas_2_data: !firrtl.uint<64>, in io_in_bits_datas_3_data: !firrtl.uint<64>, in io_in_bits_hit: !firrtl.uint<1>, in io_in_bits_waymask: !firrtl.uint<4>, in io_in_bits_mmio: !firrtl.uint<1>, in io_in_bits_isForwardData: !firrtl.uint<1>, in io_in_bits_forwardData_data_data: !firrtl.uint<64>, in io_in_bits_forwardData_waymask: !firrtl.uint<4>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_rdata: !firrtl.uint<64>, out io_isFinish: !firrtl.uint<1>, in io_dataReadBus_req_ready: !firrtl.uint<1>, out io_dataReadBus_req_valid: !firrtl.uint<1>, out io_dataReadBus_req_bits_setIdx: !firrtl.uint<10>, in io_dataReadBus_resp_data_0_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_1_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_2_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_3_data: !firrtl.uint<64>, out io_dataWriteBus_req_valid: !firrtl.uint<1>, out io_dataWriteBus_req_bits_setIdx: !firrtl.uint<10>, out io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, out io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>, out io_metaWriteBus_req_valid: !firrtl.uint<1>, out io_metaWriteBus_req_bits_setIdx: !firrtl.uint<7>, out io_metaWriteBus_req_bits_data_tag: !firrtl.uint<19>, out io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, out io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in io_mem_req_ready: !firrtl.uint<1>, out io_mem_req_valid: !firrtl.uint<1>, out io_mem_req_bits_addr: !firrtl.uint<32>, out io_mem_req_bits_cmd: !firrtl.uint<4>, out io_mem_req_bits_wdata: !firrtl.uint<64>, in io_mem_resp_valid: !firrtl.uint<1>, in io_mem_resp_bits_cmd: !firrtl.uint<4>, in io_mem_resp_bits_rdata: !firrtl.uint<64>, in io_mmio_req_ready: !firrtl.uint<1>, out io_mmio_req_valid: !firrtl.uint<1>, out io_mmio_req_bits_addr: !firrtl.uint<32>, out io_mmio_req_bits_size: !firrtl.uint<3>, out io_mmio_req_bits_cmd: !firrtl.uint<4>, out io_mmio_req_bits_wmask: !firrtl.uint<8>, out io_mmio_req_bits_wdata: !firrtl.uint<64>, in io_mmio_resp_valid: !firrtl.uint<1>, in io_mmio_resp_bits_rdata: !firrtl.uint<64>, out io_cohResp_valid: !firrtl.uint<1>, out io_cohResp_bits_cmd: !firrtl.uint<4>, out io_cohResp_bits_rdata: !firrtl.uint<64>, out io_dataReadRespToL1: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>)
      %97 = firrtl.wire : !firrtl.uint<1>
      %98 = firrtl.wire : !firrtl.uint<1>
      %99 = firrtl.wire : !firrtl.uint<32>
      %100 = firrtl.wire : !firrtl.uint<3>
      %101 = firrtl.wire : !firrtl.uint<4>
      %102 = firrtl.wire : !firrtl.uint<8>
      %103 = firrtl.wire : !firrtl.uint<64>
      %104 = firrtl.wire : !firrtl.uint<19>
      %105 = firrtl.wire : !firrtl.uint<1>
      %106 = firrtl.wire : !firrtl.uint<1>
      %107 = firrtl.wire : !firrtl.uint<19>
      %108 = firrtl.wire : !firrtl.uint<1>
      %109 = firrtl.wire : !firrtl.uint<1>
      %110 = firrtl.wire : !firrtl.uint<19>
      %111 = firrtl.wire : !firrtl.uint<1>
      %112 = firrtl.wire : !firrtl.uint<1>
      %113 = firrtl.wire : !firrtl.uint<19>
      %114 = firrtl.wire : !firrtl.uint<1>
      %115 = firrtl.wire : !firrtl.uint<1>
      %116 = firrtl.wire : !firrtl.uint<64>
      %117 = firrtl.wire : !firrtl.uint<64>
      %118 = firrtl.wire : !firrtl.uint<64>
      %119 = firrtl.wire : !firrtl.uint<64>
      %120 = firrtl.wire : !firrtl.uint<1>
      %121 = firrtl.wire : !firrtl.uint<4>
      %122 = firrtl.wire : !firrtl.uint<1>
      %123 = firrtl.wire : !firrtl.uint<1>
      %124 = firrtl.wire : !firrtl.uint<64>
      %125 = firrtl.wire : !firrtl.uint<4>
      %126 = firrtl.wire : !firrtl.uint<1>
      %127 = firrtl.wire : !firrtl.uint<4>
      %128 = firrtl.wire : !firrtl.uint<64>
      %129 = firrtl.wire : !firrtl.uint<1>
      %130 = firrtl.wire : !firrtl.uint<1>
      %131 = firrtl.wire : !firrtl.uint<1>
      %132 = firrtl.wire : !firrtl.uint<10>
      %133 = firrtl.wire : !firrtl.uint<64>
      %134 = firrtl.wire : !firrtl.uint<64>
      %135 = firrtl.wire : !firrtl.uint<64>
      %136 = firrtl.wire : !firrtl.uint<64>
      %137 = firrtl.wire : !firrtl.uint<1>
      %138 = firrtl.wire : !firrtl.uint<10>
      %139 = firrtl.wire : !firrtl.uint<64>
      %140 = firrtl.wire : !firrtl.uint<4>
      %141 = firrtl.wire : !firrtl.uint<1>
      %142 = firrtl.wire : !firrtl.uint<7>
      %143 = firrtl.wire : !firrtl.uint<19>
      %144 = firrtl.wire : !firrtl.uint<1>
      %145 = firrtl.wire : !firrtl.uint<4>
      %146 = firrtl.wire : !firrtl.uint<1>
      %147 = firrtl.wire : !firrtl.uint<32>
      %148 = firrtl.wire : !firrtl.uint<4>
      %149 = firrtl.wire : !firrtl.uint<64>
      %150 = firrtl.wire : !firrtl.uint<1>
      %151 = firrtl.wire : !firrtl.uint<32>
      %152 = firrtl.wire : !firrtl.uint<3>
      %153 = firrtl.wire : !firrtl.uint<4>
      %154 = firrtl.wire : !firrtl.uint<8>
      %155 = firrtl.wire : !firrtl.uint<64>
      %156 = firrtl.wire : !firrtl.uint<1>
      %157 = firrtl.wire : !firrtl.uint<4>
      %158 = firrtl.wire : !firrtl.uint<64>
      %159 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %97, %s3_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_valid, %98 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_req_addr, %99 : !firrtl.uint<32>
      firrtl.strictconnect %s3_io_in_bits_req_size, %100 : !firrtl.uint<3>
      firrtl.strictconnect %s3_io_in_bits_req_cmd, %101 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_req_wmask, %102 : !firrtl.uint<8>
      firrtl.strictconnect %s3_io_in_bits_req_wdata, %103 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_metas_0_tag, %104 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_0_valid, %105 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_0_dirty, %106 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_1_tag, %107 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_1_valid, %108 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_1_dirty, %109 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_2_tag, %110 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_2_valid, %111 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_2_dirty, %112 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_3_tag, %113 : !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_metas_3_valid, %114 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_3_dirty, %115 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_datas_0_data, %116 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_1_data, %117 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_2_data, %118 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_3_data, %119 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_hit, %120 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_waymask, %121 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_mmio, %122 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_isForwardData, %123 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_forwardData_data_data, %124 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_forwardData_waymask, %125 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_out_ready, %io_in_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %126, %s3_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %127, %s3_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %128, %s3_io_out_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %129, %s3_io_isFinish : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_dataReadBus_req_ready, %130 : !firrtl.uint<1>
      firrtl.strictconnect %131, %s3_io_dataReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %132, %s3_io_dataReadBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_0_data, %133 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_1_data, %134 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_2_data, %135 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_3_data, %136 : !firrtl.uint<64>
      firrtl.strictconnect %137, %s3_io_dataWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %138, %s3_io_dataWriteBus_req_bits_setIdx : !firrtl.uint<10>
      firrtl.strictconnect %139, %s3_io_dataWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %140, %s3_io_dataWriteBus_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %141, %s3_io_metaWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %142, %s3_io_metaWriteBus_req_bits_setIdx : !firrtl.uint<7>
      firrtl.strictconnect %143, %s3_io_metaWriteBus_req_bits_data_tag : !firrtl.uint<19>
      firrtl.strictconnect %144, %s3_io_metaWriteBus_req_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %145, %s3_io_metaWriteBus_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_mem_req_ready, %io_out_mem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %146, %s3_io_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %147, %s3_io_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %148, %s3_io_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %149, %s3_io_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_mem_resp_valid, %io_out_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_mem_resp_bits_cmd, %io_out_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_mem_resp_bits_rdata, %io_out_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_mmio_req_ready, %io_mmio_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %150, %s3_io_mmio_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %151, %s3_io_mmio_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %152, %s3_io_mmio_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %153, %s3_io_mmio_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %154, %s3_io_mmio_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %155, %s3_io_mmio_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_mmio_resp_valid, %io_mmio_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_mmio_resp_bits_rdata, %io_mmio_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %156, %s3_io_cohResp_valid : !firrtl.uint<1>
      firrtl.strictconnect %157, %s3_io_cohResp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %158, %s3_io_cohResp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %159, %s3_io_dataReadRespToL1 : !firrtl.uint<1>
      firrtl.strictconnect %s3_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s3_reset, %reset : !firrtl.uint<1>
      %metaArray_clock, %metaArray_reset, %metaArray_io_r_0_req_ready, %metaArray_io_r_0_req_valid, %metaArray_io_r_0_req_bits_setIdx, %metaArray_io_r_0_resp_data_0_tag, %metaArray_io_r_0_resp_data_0_valid, %metaArray_io_r_0_resp_data_0_dirty, %metaArray_io_r_0_resp_data_1_tag, %metaArray_io_r_0_resp_data_1_valid, %metaArray_io_r_0_resp_data_1_dirty, %metaArray_io_r_0_resp_data_2_tag, %metaArray_io_r_0_resp_data_2_valid, %metaArray_io_r_0_resp_data_2_dirty, %metaArray_io_r_0_resp_data_3_tag, %metaArray_io_r_0_resp_data_3_valid, %metaArray_io_r_0_resp_data_3_dirty, %metaArray_io_w_req_valid, %metaArray_io_w_req_bits_setIdx, %metaArray_io_w_req_bits_data_tag, %metaArray_io_w_req_bits_data_dirty, %metaArray_io_w_req_bits_waymask = firrtl.instance metaArray @SRAMTemplateWithArbiter(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_0_req_ready: !firrtl.uint<1>, in io_r_0_req_valid: !firrtl.uint<1>, in io_r_0_req_bits_setIdx: !firrtl.uint<7>, out io_r_0_resp_data_0_tag: !firrtl.uint<19>, out io_r_0_resp_data_0_valid: !firrtl.uint<1>, out io_r_0_resp_data_0_dirty: !firrtl.uint<1>, out io_r_0_resp_data_1_tag: !firrtl.uint<19>, out io_r_0_resp_data_1_valid: !firrtl.uint<1>, out io_r_0_resp_data_1_dirty: !firrtl.uint<1>, out io_r_0_resp_data_2_tag: !firrtl.uint<19>, out io_r_0_resp_data_2_valid: !firrtl.uint<1>, out io_r_0_resp_data_2_dirty: !firrtl.uint<1>, out io_r_0_resp_data_3_tag: !firrtl.uint<19>, out io_r_0_resp_data_3_valid: !firrtl.uint<1>, out io_r_0_resp_data_3_dirty: !firrtl.uint<1>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<7>, in io_w_req_bits_data_tag: !firrtl.uint<19>, in io_w_req_bits_data_dirty: !firrtl.uint<1>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %160 = firrtl.wire : !firrtl.uint<1>
      %161 = firrtl.wire : !firrtl.uint<1>
      %162 = firrtl.wire : !firrtl.uint<7>
      %163 = firrtl.wire : !firrtl.uint<19>
      %164 = firrtl.wire : !firrtl.uint<1>
      %165 = firrtl.wire : !firrtl.uint<1>
      %166 = firrtl.wire : !firrtl.uint<19>
      %167 = firrtl.wire : !firrtl.uint<1>
      %168 = firrtl.wire : !firrtl.uint<1>
      %169 = firrtl.wire : !firrtl.uint<19>
      %170 = firrtl.wire : !firrtl.uint<1>
      %171 = firrtl.wire : !firrtl.uint<1>
      %172 = firrtl.wire : !firrtl.uint<19>
      %173 = firrtl.wire : !firrtl.uint<1>
      %174 = firrtl.wire : !firrtl.uint<1>
      %175 = firrtl.wire : !firrtl.uint<1>
      %176 = firrtl.wire : !firrtl.uint<7>
      %177 = firrtl.wire : !firrtl.uint<19>
      %178 = firrtl.wire : !firrtl.uint<1>
      %179 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %160, %metaArray_io_r_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_r_0_req_valid, %161 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_r_0_req_bits_setIdx, %162 : !firrtl.uint<7>
      firrtl.strictconnect %163, %metaArray_io_r_0_resp_data_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %164, %metaArray_io_r_0_resp_data_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %165, %metaArray_io_r_0_resp_data_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %166, %metaArray_io_r_0_resp_data_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %167, %metaArray_io_r_0_resp_data_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %168, %metaArray_io_r_0_resp_data_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %169, %metaArray_io_r_0_resp_data_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %170, %metaArray_io_r_0_resp_data_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %171, %metaArray_io_r_0_resp_data_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %172, %metaArray_io_r_0_resp_data_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %173, %metaArray_io_r_0_resp_data_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %174, %metaArray_io_r_0_resp_data_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_valid, %175 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_bits_setIdx, %176 : !firrtl.uint<7>
      firrtl.strictconnect %metaArray_io_w_req_bits_data_tag, %177 : !firrtl.uint<19>
      firrtl.strictconnect %metaArray_io_w_req_bits_data_dirty, %178 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_bits_waymask, %179 : !firrtl.uint<4>
      firrtl.strictconnect %metaArray_clock, %clock : !firrtl.clock
      firrtl.strictconnect %metaArray_reset, %reset : !firrtl.uint<1>
      %dataArray_clock, %dataArray_reset, %dataArray_io_r_0_req_ready, %dataArray_io_r_0_req_valid, %dataArray_io_r_0_req_bits_setIdx, %dataArray_io_r_0_resp_data_0_data, %dataArray_io_r_0_resp_data_1_data, %dataArray_io_r_0_resp_data_2_data, %dataArray_io_r_0_resp_data_3_data, %dataArray_io_r_1_req_ready, %dataArray_io_r_1_req_valid, %dataArray_io_r_1_req_bits_setIdx, %dataArray_io_r_1_resp_data_0_data, %dataArray_io_r_1_resp_data_1_data, %dataArray_io_r_1_resp_data_2_data, %dataArray_io_r_1_resp_data_3_data, %dataArray_io_w_req_valid, %dataArray_io_w_req_bits_setIdx, %dataArray_io_w_req_bits_data_data, %dataArray_io_w_req_bits_waymask = firrtl.instance dataArray @SRAMTemplateWithArbiter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_0_req_ready: !firrtl.uint<1>, in io_r_0_req_valid: !firrtl.uint<1>, in io_r_0_req_bits_setIdx: !firrtl.uint<10>, out io_r_0_resp_data_0_data: !firrtl.uint<64>, out io_r_0_resp_data_1_data: !firrtl.uint<64>, out io_r_0_resp_data_2_data: !firrtl.uint<64>, out io_r_0_resp_data_3_data: !firrtl.uint<64>, out io_r_1_req_ready: !firrtl.uint<1>, in io_r_1_req_valid: !firrtl.uint<1>, in io_r_1_req_bits_setIdx: !firrtl.uint<10>, out io_r_1_resp_data_0_data: !firrtl.uint<64>, out io_r_1_resp_data_1_data: !firrtl.uint<64>, out io_r_1_resp_data_2_data: !firrtl.uint<64>, out io_r_1_resp_data_3_data: !firrtl.uint<64>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<10>, in io_w_req_bits_data_data: !firrtl.uint<64>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %180 = firrtl.wire : !firrtl.uint<1>
      %181 = firrtl.wire : !firrtl.uint<1>
      %182 = firrtl.wire : !firrtl.uint<10>
      %183 = firrtl.wire : !firrtl.uint<64>
      %184 = firrtl.wire : !firrtl.uint<64>
      %185 = firrtl.wire : !firrtl.uint<64>
      %186 = firrtl.wire : !firrtl.uint<64>
      %187 = firrtl.wire : !firrtl.uint<1>
      %188 = firrtl.wire : !firrtl.uint<1>
      %189 = firrtl.wire : !firrtl.uint<10>
      %190 = firrtl.wire : !firrtl.uint<64>
      %191 = firrtl.wire : !firrtl.uint<64>
      %192 = firrtl.wire : !firrtl.uint<64>
      %193 = firrtl.wire : !firrtl.uint<64>
      %194 = firrtl.wire : !firrtl.uint<1>
      %195 = firrtl.wire : !firrtl.uint<10>
      %196 = firrtl.wire : !firrtl.uint<64>
      %197 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %180, %dataArray_io_r_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_0_req_valid, %181 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_0_req_bits_setIdx, %182 : !firrtl.uint<10>
      firrtl.strictconnect %183, %dataArray_io_r_0_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %184, %dataArray_io_r_0_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %185, %dataArray_io_r_0_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %186, %dataArray_io_r_0_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %187, %dataArray_io_r_1_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_1_req_valid, %188 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_1_req_bits_setIdx, %189 : !firrtl.uint<10>
      firrtl.strictconnect %190, %dataArray_io_r_1_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %191, %dataArray_io_r_1_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %192, %dataArray_io_r_1_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %193, %dataArray_io_r_1_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %dataArray_io_w_req_valid, %194 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_w_req_bits_setIdx, %195 : !firrtl.uint<10>
      firrtl.strictconnect %dataArray_io_w_req_bits_data_data, %196 : !firrtl.uint<64>
      firrtl.strictconnect %dataArray_io_w_req_bits_waymask, %197 : !firrtl.uint<4>
      firrtl.strictconnect %dataArray_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dataArray_reset, %reset : !firrtl.uint<1>
      %arb_io_in_0_ready, %arb_io_in_0_valid, %arb_io_in_0_bits_addr, %arb_io_in_0_bits_size, %arb_io_in_0_bits_cmd, %arb_io_in_0_bits_wmask, %arb_io_in_0_bits_wdata, %arb_io_in_1_ready, %arb_io_in_1_valid, %arb_io_in_1_bits_addr, %arb_io_in_1_bits_size, %arb_io_in_1_bits_cmd, %arb_io_in_1_bits_wmask, %arb_io_in_1_bits_wdata, %arb_io_out_ready, %arb_io_out_valid, %arb_io_out_bits_addr, %arb_io_out_bits_size, %arb_io_out_bits_cmd, %arb_io_out_bits_wmask, %arb_io_out_bits_wdata = firrtl.instance arb @Arbiter2_SimpleBusReqBundle(out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_addr: !firrtl.uint<32>, in io_in_0_bits_size: !firrtl.uint<3>, in io_in_0_bits_cmd: !firrtl.uint<4>, in io_in_0_bits_wmask: !firrtl.uint<8>, in io_in_0_bits_wdata: !firrtl.uint<64>, out io_in_1_ready: !firrtl.uint<1>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_addr: !firrtl.uint<32>, in io_in_1_bits_size: !firrtl.uint<3>, in io_in_1_bits_cmd: !firrtl.uint<4>, in io_in_1_bits_wmask: !firrtl.uint<8>, in io_in_1_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_size: !firrtl.uint<3>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_wmask: !firrtl.uint<8>, out io_out_bits_wdata: !firrtl.uint<64>)
      %198 = firrtl.wire : !firrtl.uint<1>
      %199 = firrtl.wire : !firrtl.uint<1>
      %200 = firrtl.wire : !firrtl.uint<1>
      %201 = firrtl.wire : !firrtl.uint<1>
      %202 = firrtl.wire : !firrtl.uint<32>
      %203 = firrtl.wire : !firrtl.uint<3>
      %204 = firrtl.wire : !firrtl.uint<4>
      %205 = firrtl.wire : !firrtl.uint<8>
      %206 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %198, %arb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_0_valid, %io_out_coh_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_0_bits_addr, %io_out_coh_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %arb_io_in_0_bits_size, %c3_ui3 : !firrtl.uint<3>
      firrtl.strictconnect %arb_io_in_0_bits_cmd, %c8_ui4 : !firrtl.uint<4>
      firrtl.strictconnect %arb_io_in_0_bits_wmask, %c255_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %arb_io_in_0_bits_wdata, %io_out_coh_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %199, %arb_io_in_1_ready : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_1_valid, %io_in_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_1_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %arb_io_in_1_bits_size, %io_in_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %arb_io_in_1_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %arb_io_in_1_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %arb_io_in_1_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %arb_io_out_ready, %200 : !firrtl.uint<1>
      firrtl.strictconnect %201, %arb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %202, %arb_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %203, %arb_io_out_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %204, %arb_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %205, %arb_io_out_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %206, %arb_io_out_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_in_req_ready_0, %199 : !firrtl.uint<1>
      firrtl.strictconnect %200, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %201 : !firrtl.uint<1>
      firrtl.strictconnect %2, %202 : !firrtl.uint<32>
      firrtl.strictconnect %3, %203 : !firrtl.uint<3>
      firrtl.strictconnect %4, %204 : !firrtl.uint<4>
      firrtl.strictconnect %5, %205 : !firrtl.uint<8>
      firrtl.strictconnect %6, %206 : !firrtl.uint<64>
      %207 = firrtl.and %43, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %208 = firrtl.mux(%207, %c0_ui1, %valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_s2_io_in_bits_T = firrtl.and %8, %36 {name = "_s2_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %209 = firrtl.mux(%_s2_io_in_bits_T, %c1_ui1, %208) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid, %209 : !firrtl.uint<1>
      firrtl.strictconnect %7, %36 : !firrtl.uint<1>
      %s2_io_in_bits_r_req_addr = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %s2_io_in_bits_r_req_size = firrtl.reg %clock {firrtl.random_init_start = 33 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %s2_io_in_bits_r_req_cmd = firrtl.reg %clock {firrtl.random_init_start = 36 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s2_io_in_bits_r_req_wmask = firrtl.reg %clock {firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %s2_io_in_bits_r_req_wdata = firrtl.reg %clock {firrtl.random_init_start = 48 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %210 = firrtl.mux(%_s2_io_in_bits_T, %9, %s2_io_in_bits_r_req_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %s2_io_in_bits_r_req_addr, %210 : !firrtl.uint<32>
      %211 = firrtl.mux(%_s2_io_in_bits_T, %10, %s2_io_in_bits_r_req_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %s2_io_in_bits_r_req_size, %211 : !firrtl.uint<3>
      %212 = firrtl.mux(%_s2_io_in_bits_T, %11, %s2_io_in_bits_r_req_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s2_io_in_bits_r_req_cmd, %212 : !firrtl.uint<4>
      %213 = firrtl.mux(%_s2_io_in_bits_T, %12, %s2_io_in_bits_r_req_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %s2_io_in_bits_r_req_wmask, %213 : !firrtl.uint<8>
      %214 = firrtl.mux(%_s2_io_in_bits_T, %13, %s2_io_in_bits_r_req_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s2_io_in_bits_r_req_wdata, %214 : !firrtl.uint<64>
      firrtl.strictconnect %42, %s2_io_in_bits_r_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %41, %s2_io_in_bits_r_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %40, %s2_io_in_bits_r_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %39, %s2_io_in_bits_r_req_size : !firrtl.uint<3>
      firrtl.strictconnect %38, %s2_io_in_bits_r_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %37, %valid : !firrtl.uint<1>
      %valid_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 112 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %215 = firrtl.mux(%129, %c0_ui1, %valid_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_s3_io_in_bits_T = firrtl.and %44, %97 {name = "_s3_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %216 = firrtl.mux(%_s3_io_in_bits_T, %c1_ui1, %215) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid_1, %216 : !firrtl.uint<1>
      firrtl.strictconnect %43, %97 : !firrtl.uint<1>
      %s3_io_in_bits_r_req_addr = firrtl.reg %clock {firrtl.random_init_start = 113 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %s3_io_in_bits_r_req_size = firrtl.reg %clock {firrtl.random_init_start = 145 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %s3_io_in_bits_r_req_cmd = firrtl.reg %clock {firrtl.random_init_start = 148 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s3_io_in_bits_r_req_wmask = firrtl.reg %clock {firrtl.random_init_start = 152 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %s3_io_in_bits_r_req_wdata = firrtl.reg %clock {firrtl.random_init_start = 160 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_metas_0_tag = firrtl.reg %clock {firrtl.random_init_start = 224 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_0_valid = firrtl.reg %clock {firrtl.random_init_start = 243 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_0_dirty = firrtl.reg %clock {firrtl.random_init_start = 244 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_1_tag = firrtl.reg %clock {firrtl.random_init_start = 245 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_1_valid = firrtl.reg %clock {firrtl.random_init_start = 264 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_1_dirty = firrtl.reg %clock {firrtl.random_init_start = 265 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_2_tag = firrtl.reg %clock {firrtl.random_init_start = 266 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_2_valid = firrtl.reg %clock {firrtl.random_init_start = 285 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_2_dirty = firrtl.reg %clock {firrtl.random_init_start = 286 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_3_tag = firrtl.reg %clock {firrtl.random_init_start = 287 : ui64} : !firrtl.clock, !firrtl.uint<19>
      %s3_io_in_bits_r_metas_3_valid = firrtl.reg %clock {firrtl.random_init_start = 306 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_3_dirty = firrtl.reg %clock {firrtl.random_init_start = 307 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_datas_0_data = firrtl.reg %clock {firrtl.random_init_start = 308 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_1_data = firrtl.reg %clock {firrtl.random_init_start = 372 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_2_data = firrtl.reg %clock {firrtl.random_init_start = 436 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_3_data = firrtl.reg %clock {firrtl.random_init_start = 500 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_hit = firrtl.reg %clock {firrtl.random_init_start = 564 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_waymask = firrtl.reg %clock {firrtl.random_init_start = 565 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s3_io_in_bits_r_mmio = firrtl.reg %clock {firrtl.random_init_start = 569 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_isForwardData = firrtl.reg %clock {firrtl.random_init_start = 570 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_forwardData_data_data = firrtl.reg %clock {firrtl.random_init_start = 581 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_forwardData_waymask = firrtl.reg %clock {firrtl.random_init_start = 645 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %217 = firrtl.mux(%_s3_io_in_bits_T, %45, %s3_io_in_bits_r_req_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %s3_io_in_bits_r_req_addr, %217 : !firrtl.uint<32>
      %218 = firrtl.mux(%_s3_io_in_bits_T, %46, %s3_io_in_bits_r_req_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %s3_io_in_bits_r_req_size, %218 : !firrtl.uint<3>
      %219 = firrtl.mux(%_s3_io_in_bits_T, %47, %s3_io_in_bits_r_req_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_req_cmd, %219 : !firrtl.uint<4>
      %220 = firrtl.mux(%_s3_io_in_bits_T, %48, %s3_io_in_bits_r_req_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %s3_io_in_bits_r_req_wmask, %220 : !firrtl.uint<8>
      %221 = firrtl.mux(%_s3_io_in_bits_T, %49, %s3_io_in_bits_r_req_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_req_wdata, %221 : !firrtl.uint<64>
      %222 = firrtl.mux(%_s3_io_in_bits_T, %50, %s3_io_in_bits_r_metas_0_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_tag, %222 : !firrtl.uint<19>
      %223 = firrtl.mux(%_s3_io_in_bits_T, %51, %s3_io_in_bits_r_metas_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_valid, %223 : !firrtl.uint<1>
      %224 = firrtl.mux(%_s3_io_in_bits_T, %52, %s3_io_in_bits_r_metas_0_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_dirty, %224 : !firrtl.uint<1>
      %225 = firrtl.mux(%_s3_io_in_bits_T, %53, %s3_io_in_bits_r_metas_1_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_tag, %225 : !firrtl.uint<19>
      %226 = firrtl.mux(%_s3_io_in_bits_T, %54, %s3_io_in_bits_r_metas_1_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_valid, %226 : !firrtl.uint<1>
      %227 = firrtl.mux(%_s3_io_in_bits_T, %55, %s3_io_in_bits_r_metas_1_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_dirty, %227 : !firrtl.uint<1>
      %228 = firrtl.mux(%_s3_io_in_bits_T, %56, %s3_io_in_bits_r_metas_2_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_tag, %228 : !firrtl.uint<19>
      %229 = firrtl.mux(%_s3_io_in_bits_T, %57, %s3_io_in_bits_r_metas_2_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_valid, %229 : !firrtl.uint<1>
      %230 = firrtl.mux(%_s3_io_in_bits_T, %58, %s3_io_in_bits_r_metas_2_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_dirty, %230 : !firrtl.uint<1>
      %231 = firrtl.mux(%_s3_io_in_bits_T, %59, %s3_io_in_bits_r_metas_3_tag) : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_tag, %231 : !firrtl.uint<19>
      %232 = firrtl.mux(%_s3_io_in_bits_T, %60, %s3_io_in_bits_r_metas_3_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_valid, %232 : !firrtl.uint<1>
      %233 = firrtl.mux(%_s3_io_in_bits_T, %61, %s3_io_in_bits_r_metas_3_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_dirty, %233 : !firrtl.uint<1>
      %234 = firrtl.mux(%_s3_io_in_bits_T, %62, %s3_io_in_bits_r_datas_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_0_data, %234 : !firrtl.uint<64>
      %235 = firrtl.mux(%_s3_io_in_bits_T, %63, %s3_io_in_bits_r_datas_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_1_data, %235 : !firrtl.uint<64>
      %236 = firrtl.mux(%_s3_io_in_bits_T, %64, %s3_io_in_bits_r_datas_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_2_data, %236 : !firrtl.uint<64>
      %237 = firrtl.mux(%_s3_io_in_bits_T, %65, %s3_io_in_bits_r_datas_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_3_data, %237 : !firrtl.uint<64>
      %238 = firrtl.mux(%_s3_io_in_bits_T, %66, %s3_io_in_bits_r_hit) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_hit, %238 : !firrtl.uint<1>
      %239 = firrtl.mux(%_s3_io_in_bits_T, %67, %s3_io_in_bits_r_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_waymask, %239 : !firrtl.uint<4>
      %240 = firrtl.mux(%_s3_io_in_bits_T, %68, %s3_io_in_bits_r_mmio) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_mmio, %240 : !firrtl.uint<1>
      %241 = firrtl.mux(%_s3_io_in_bits_T, %69, %s3_io_in_bits_r_isForwardData) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_isForwardData, %241 : !firrtl.uint<1>
      %242 = firrtl.mux(%_s3_io_in_bits_T, %70, %s3_io_in_bits_r_forwardData_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_forwardData_data_data, %242 : !firrtl.uint<64>
      %243 = firrtl.mux(%_s3_io_in_bits_T, %71, %s3_io_in_bits_r_forwardData_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_forwardData_waymask, %243 : !firrtl.uint<4>
      firrtl.strictconnect %125, %s3_io_in_bits_r_forwardData_waymask : !firrtl.uint<4>
      firrtl.strictconnect %124, %s3_io_in_bits_r_forwardData_data_data : !firrtl.uint<64>
      firrtl.strictconnect %123, %s3_io_in_bits_r_isForwardData : !firrtl.uint<1>
      firrtl.strictconnect %122, %s3_io_in_bits_r_mmio : !firrtl.uint<1>
      firrtl.strictconnect %121, %s3_io_in_bits_r_waymask : !firrtl.uint<4>
      firrtl.strictconnect %120, %s3_io_in_bits_r_hit : !firrtl.uint<1>
      firrtl.strictconnect %116, %s3_io_in_bits_r_datas_0_data : !firrtl.uint<64>
      firrtl.strictconnect %117, %s3_io_in_bits_r_datas_1_data : !firrtl.uint<64>
      firrtl.strictconnect %118, %s3_io_in_bits_r_datas_2_data : !firrtl.uint<64>
      firrtl.strictconnect %119, %s3_io_in_bits_r_datas_3_data : !firrtl.uint<64>
      firrtl.strictconnect %106, %s3_io_in_bits_r_metas_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %105, %s3_io_in_bits_r_metas_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %104, %s3_io_in_bits_r_metas_0_tag : !firrtl.uint<19>
      firrtl.strictconnect %109, %s3_io_in_bits_r_metas_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %108, %s3_io_in_bits_r_metas_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %107, %s3_io_in_bits_r_metas_1_tag : !firrtl.uint<19>
      firrtl.strictconnect %112, %s3_io_in_bits_r_metas_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %111, %s3_io_in_bits_r_metas_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %110, %s3_io_in_bits_r_metas_2_tag : !firrtl.uint<19>
      firrtl.strictconnect %115, %s3_io_in_bits_r_metas_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %114, %s3_io_in_bits_r_metas_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %113, %s3_io_in_bits_r_metas_3_tag : !firrtl.uint<19>
      firrtl.strictconnect %103, %s3_io_in_bits_r_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %102, %s3_io_in_bits_r_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %101, %s3_io_in_bits_r_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %100, %s3_io_in_bits_r_req_size : !firrtl.uint<3>
      firrtl.strictconnect %99, %s3_io_in_bits_r_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %98, %valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd_2, %127 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata_3, %128 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_bits_addr_5, %147 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_cmd_6, %148 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_wdata_7, %149 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_valid_4, %146 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr_13, %151 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size_14, %152 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd_15, %153 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask_16, %154 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata_17, %155 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid_12, %150 : !firrtl.uint<1>
      %_io_empty_T = firrtl.not %37 {name = "_io_empty_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_empty_T_1 = firrtl.not %98 {name = "_io_empty_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_empty_T_2 = firrtl.and %_io_empty_T, %_io_empty_T_1 {name = "_io_empty_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_empty_18, %_io_empty_T_2 : !firrtl.uint<1>
      %_io_in_resp_valid_T = firrtl.eq %127, %c4_ui3 {name = "_io_in_resp_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_1 = firrtl.and %126, %_io_in_resp_valid_T {name = "_io_in_resp_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_2 = firrtl.or %126, %159 {name = "_io_in_resp_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_3 = firrtl.mux(%_io_in_resp_valid_T_1, %c0_ui1, %_io_in_resp_valid_T_2) {name = "_io_in_resp_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %_io_in_resp_valid_T_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_coh_req_ready_8, %198 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_coh_resp_bits_cmd_10, %157 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_coh_resp_bits_rdata_11, %158 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_coh_resp_valid_9, %156 : !firrtl.uint<1>
      firrtl.strictconnect %14, %160 : !firrtl.uint<1>
      firrtl.strictconnect %161, %15 : !firrtl.uint<1>
      firrtl.strictconnect %162, %16 : !firrtl.uint<7>
      firrtl.strictconnect %17, %163 : !firrtl.uint<19>
      firrtl.strictconnect %18, %164 : !firrtl.uint<1>
      firrtl.strictconnect %19, %165 : !firrtl.uint<1>
      firrtl.strictconnect %20, %166 : !firrtl.uint<19>
      firrtl.strictconnect %21, %167 : !firrtl.uint<1>
      firrtl.strictconnect %22, %168 : !firrtl.uint<1>
      firrtl.strictconnect %23, %169 : !firrtl.uint<19>
      firrtl.strictconnect %24, %170 : !firrtl.uint<1>
      firrtl.strictconnect %25, %171 : !firrtl.uint<1>
      firrtl.strictconnect %26, %172 : !firrtl.uint<19>
      firrtl.strictconnect %27, %173 : !firrtl.uint<1>
      firrtl.strictconnect %28, %174 : !firrtl.uint<1>
      firrtl.strictconnect %29, %180 : !firrtl.uint<1>
      firrtl.strictconnect %181, %30 : !firrtl.uint<1>
      firrtl.strictconnect %182, %31 : !firrtl.uint<10>
      firrtl.strictconnect %32, %183 : !firrtl.uint<64>
      firrtl.strictconnect %33, %184 : !firrtl.uint<64>
      firrtl.strictconnect %34, %185 : !firrtl.uint<64>
      firrtl.strictconnect %35, %186 : !firrtl.uint<64>
      firrtl.strictconnect %130, %187 : !firrtl.uint<1>
      firrtl.strictconnect %188, %131 : !firrtl.uint<1>
      firrtl.strictconnect %189, %132 : !firrtl.uint<10>
      firrtl.strictconnect %133, %190 : !firrtl.uint<64>
      firrtl.strictconnect %134, %191 : !firrtl.uint<64>
      firrtl.strictconnect %135, %192 : !firrtl.uint<64>
      firrtl.strictconnect %136, %193 : !firrtl.uint<64>
      firrtl.strictconnect %175, %141 : !firrtl.uint<1>
      firrtl.strictconnect %176, %142 : !firrtl.uint<7>
      firrtl.strictconnect %177, %143 : !firrtl.uint<19>
      firrtl.strictconnect %178, %144 : !firrtl.uint<1>
      firrtl.strictconnect %179, %145 : !firrtl.uint<4>
      firrtl.strictconnect %194, %137 : !firrtl.uint<1>
      firrtl.strictconnect %195, %138 : !firrtl.uint<10>
      firrtl.strictconnect %196, %139 : !firrtl.uint<64>
      firrtl.strictconnect %197, %140 : !firrtl.uint<4>
      firrtl.strictconnect %74, %19 : !firrtl.uint<1>
      firrtl.strictconnect %73, %18 : !firrtl.uint<1>
      firrtl.strictconnect %72, %17 : !firrtl.uint<19>
      firrtl.strictconnect %77, %22 : !firrtl.uint<1>
      firrtl.strictconnect %76, %21 : !firrtl.uint<1>
      firrtl.strictconnect %75, %20 : !firrtl.uint<19>
      firrtl.strictconnect %80, %25 : !firrtl.uint<1>
      firrtl.strictconnect %79, %24 : !firrtl.uint<1>
      firrtl.strictconnect %78, %23 : !firrtl.uint<19>
      firrtl.strictconnect %83, %28 : !firrtl.uint<1>
      firrtl.strictconnect %82, %27 : !firrtl.uint<1>
      firrtl.strictconnect %81, %26 : !firrtl.uint<19>
      firrtl.strictconnect %84, %32 : !firrtl.uint<64>
      firrtl.strictconnect %85, %33 : !firrtl.uint<64>
      firrtl.strictconnect %86, %34 : !firrtl.uint<64>
      firrtl.strictconnect %87, %35 : !firrtl.uint<64>
      firrtl.strictconnect %96, %140 : !firrtl.uint<4>
      firrtl.strictconnect %95, %139 : !firrtl.uint<64>
      firrtl.strictconnect %94, %138 : !firrtl.uint<10>
      firrtl.strictconnect %93, %137 : !firrtl.uint<1>
      firrtl.strictconnect %92, %145 : !firrtl.uint<4>
      firrtl.strictconnect %91, %144 : !firrtl.uint<1>
      firrtl.strictconnect %90, %143 : !firrtl.uint<19>
      firrtl.strictconnect %89, %142 : !firrtl.uint<7>
      firrtl.strictconnect %88, %141 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym_1 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %244 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %245 = firrtl.and %c_control_logEnable, %244 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %245, "[%d] Cache_1: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %246 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %247 = firrtl.and %c_control_logEnable, %246 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %247, "InReq(%d, %d) InResp(%d, %d) \0A" {name = "printf_1"} (%io_in_req_valid, %io_in_req_ready_0, %io_in_resp_valid_1, %io_in_resp_ready) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %248 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %249 = firrtl.and %c_control_logEnable, %248 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %249, "[%d] Cache_1: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %250 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %251 = firrtl.and %c_control_logEnable, %250 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %251, "{IN s1:(%d,%d), s2:(%d,%d), s3:(%d,%d)} {OUT s1:(%d,%d), s2:(%d,%d), s3:(%d,%d)}\0A" {name = "printf_3"} (%1, %0, %37, %36, %98, %97, %8, %7, %44, %43, %126, %io_in_resp_ready) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %252 = firrtl.and %1, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %253 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %254 = firrtl.and %252, %253 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %254, "[%d] Cache_1: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %255 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %256 = firrtl.and %252, %255 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %256, "[dcache.S1]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_5"} (%2, %4, %3, %5, %6) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %257 = firrtl.and %37, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %258 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %259 = firrtl.and %257, %258 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %259, "[%d] Cache_1: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %260 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %261 = firrtl.and %257, %260 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %261, "[dcache.S2]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_7"} (%38, %40, %39, %41, %42) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %262 = firrtl.and %98, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %263 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %264 = firrtl.and %262, %263 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %264, "[%d] Cache_1: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %265 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %266 = firrtl.and %262, %265 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %266, "[dcache.S3]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_9"} (%99, %101, %100, %102, %103) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      firrtl.strictconnect %s3__WIRE__bore, %s3__WIRE__bore_19 : !firrtl.uint<1>
    }
    firrtl.module private @NutCore(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_imem_mem_req_ready: !firrtl.uint<1>, out %io_imem_mem_req_valid: !firrtl.uint<1>, out %io_imem_mem_req_bits_addr: !firrtl.uint<32>, out %io_imem_mem_req_bits_cmd: !firrtl.uint<4>, out %io_imem_mem_req_bits_wdata: !firrtl.uint<64>, in %io_imem_mem_resp_valid: !firrtl.uint<1>, in %io_imem_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_imem_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_dmem_mem_req_ready: !firrtl.uint<1>, out %io_dmem_mem_req_valid: !firrtl.uint<1>, out %io_dmem_mem_req_bits_addr: !firrtl.uint<32>, out %io_dmem_mem_req_bits_cmd: !firrtl.uint<4>, out %io_dmem_mem_req_bits_wdata: !firrtl.uint<64>, in %io_dmem_mem_resp_valid: !firrtl.uint<1>, in %io_dmem_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_dmem_mem_resp_bits_rdata: !firrtl.uint<64>, out %io_dmem_coh_req_ready: !firrtl.uint<1>, in %io_dmem_coh_req_valid: !firrtl.uint<1>, in %io_dmem_coh_req_bits_addr: !firrtl.uint<32>, in %io_dmem_coh_req_bits_wdata: !firrtl.uint<64>, out %io_dmem_coh_resp_valid: !firrtl.uint<1>, out %io_dmem_coh_resp_bits_cmd: !firrtl.uint<4>, out %io_dmem_coh_resp_bits_rdata: !firrtl.uint<64>, in %io_mmio_req_ready: !firrtl.uint<1>, out %io_mmio_req_valid: !firrtl.uint<1>, out %io_mmio_req_bits_addr: !firrtl.uint<32>, out %io_mmio_req_bits_size: !firrtl.uint<3>, out %io_mmio_req_bits_cmd: !firrtl.uint<4>, out %io_mmio_req_bits_wmask: !firrtl.uint<8>, out %io_mmio_req_bits_wdata: !firrtl.uint<64>, in %io_mmio_resp_valid: !firrtl.uint<1>, in %io_mmio_resp_bits_cmd: !firrtl.uint<4>, in %io_mmio_resp_bits_rdata: !firrtl.uint<64>, out %io_frontend_req_ready: !firrtl.uint<1>, in %io_frontend_req_valid: !firrtl.uint<1>, in %io_frontend_req_bits_addr: !firrtl.uint<32>, in %io_frontend_req_bits_size: !firrtl.uint<3>, in %io_frontend_req_bits_cmd: !firrtl.uint<4>, in %io_frontend_req_bits_wmask: !firrtl.uint<8>, in %io_frontend_req_bits_wdata: !firrtl.uint<64>, in %io_frontend_resp_ready: !firrtl.uint<1>, out %io_frontend_resp_valid: !firrtl.uint<1>, out %io_frontend_resp_bits_cmd: !firrtl.uint<4>, out %io_frontend_resp_bits_rdata: !firrtl.uint<64>, out %frontend_idu__WIRE__bore: !firrtl.uint<1>, in %backend_exu_csr_msip__bore: !firrtl.uint<1>, in %backend_exu_csr_meip__bore: !firrtl.uint<1>, in %backend_exu_csr_mtip__bore: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "dataBuffer_0_cf_exceptionVec_0"}
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui5 = firrtl.constant 0 : !firrtl.uint<5>
      %c0_ui7 = firrtl.constant 0 : !firrtl.uint<7>
      %c0_ui39 = firrtl.constant 0 : !firrtl.uint<39>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3> {name = "_dataBuffer_WIRE_4_3_ctrl_fuType"}
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %io_imem_mem_req_valid_0 = firrtl.wire {name = "io_imem_mem_req_valid"} : !firrtl.uint<1>
      %io_imem_mem_req_bits_addr_1 = firrtl.wire {name = "io_imem_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_imem_mem_req_bits_cmd_2 = firrtl.wire {name = "io_imem_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_imem_mem_req_bits_wdata_3 = firrtl.wire {name = "io_imem_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_dmem_mem_req_valid_4 = firrtl.wire {name = "io_dmem_mem_req_valid"} : !firrtl.uint<1>
      %io_dmem_mem_req_bits_addr_5 = firrtl.wire {name = "io_dmem_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_dmem_mem_req_bits_cmd_6 = firrtl.wire {name = "io_dmem_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_dmem_mem_req_bits_wdata_7 = firrtl.wire {name = "io_dmem_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_dmem_coh_req_ready_8 = firrtl.wire {name = "io_dmem_coh_req_ready"} : !firrtl.uint<1>
      %io_dmem_coh_resp_valid_9 = firrtl.wire {name = "io_dmem_coh_resp_valid"} : !firrtl.uint<1>
      %io_dmem_coh_resp_bits_cmd_10 = firrtl.wire {name = "io_dmem_coh_resp_bits_cmd"} : !firrtl.uint<4>
      %io_dmem_coh_resp_bits_rdata_11 = firrtl.wire {name = "io_dmem_coh_resp_bits_rdata"} : !firrtl.uint<64>
      %io_mmio_req_valid_12 = firrtl.wire {name = "io_mmio_req_valid"} : !firrtl.uint<1>
      %io_mmio_req_bits_addr_13 = firrtl.wire {name = "io_mmio_req_bits_addr"} : !firrtl.uint<32>
      %io_mmio_req_bits_size_14 = firrtl.wire {name = "io_mmio_req_bits_size"} : !firrtl.uint<3>
      %io_mmio_req_bits_cmd_15 = firrtl.wire {name = "io_mmio_req_bits_cmd"} : !firrtl.uint<4>
      %io_mmio_req_bits_wmask_16 = firrtl.wire {name = "io_mmio_req_bits_wmask"} : !firrtl.uint<8>
      %io_mmio_req_bits_wdata_17 = firrtl.wire {name = "io_mmio_req_bits_wdata"} : !firrtl.uint<64>
      %io_frontend_req_ready_18 = firrtl.wire {name = "io_frontend_req_ready"} : !firrtl.uint<1>
      %io_frontend_resp_valid_19 = firrtl.wire {name = "io_frontend_resp_valid"} : !firrtl.uint<1>
      %io_frontend_resp_bits_cmd_20 = firrtl.wire {name = "io_frontend_resp_bits_cmd"} : !firrtl.uint<4>
      %io_frontend_resp_bits_rdata_21 = firrtl.wire {name = "io_frontend_resp_bits_rdata"} : !firrtl.uint<64>
      firrtl.strictconnect %io_imem_mem_req_valid, %io_imem_mem_req_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_mem_req_bits_addr, %io_imem_mem_req_bits_addr_1 : !firrtl.uint<32>
      firrtl.strictconnect %io_imem_mem_req_bits_cmd, %io_imem_mem_req_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_imem_mem_req_bits_wdata, %io_imem_mem_req_bits_wdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_mem_req_valid, %io_dmem_mem_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_mem_req_bits_addr, %io_dmem_mem_req_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_dmem_mem_req_bits_cmd, %io_dmem_mem_req_bits_cmd_6 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_mem_req_bits_wdata, %io_dmem_mem_req_bits_wdata_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_coh_req_ready, %io_dmem_coh_req_ready_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_coh_resp_valid, %io_dmem_coh_resp_valid_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_coh_resp_bits_cmd, %io_dmem_coh_resp_bits_cmd_10 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_coh_resp_bits_rdata, %io_dmem_coh_resp_bits_rdata_11 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid, %io_mmio_req_valid_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr, %io_mmio_req_bits_addr_13 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size, %io_mmio_req_bits_size_14 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd, %io_mmio_req_bits_cmd_15 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask, %io_mmio_req_bits_wmask_16 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata, %io_mmio_req_bits_wdata_17 : !firrtl.uint<64>
      firrtl.strictconnect %io_frontend_req_ready, %io_frontend_req_ready_18 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_resp_valid, %io_frontend_resp_valid_19 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_resp_bits_cmd, %io_frontend_resp_bits_cmd_20 : !firrtl.uint<4>
      firrtl.strictconnect %io_frontend_resp_bits_rdata, %io_frontend_resp_bits_rdata_21 : !firrtl.uint<64>
      %frontend_clock, %frontend_reset, %frontend_io_imem_req_ready, %frontend_io_imem_req_valid, %frontend_io_imem_req_bits_addr, %frontend_io_imem_req_bits_user, %frontend_io_imem_resp_ready, %frontend_io_imem_resp_valid, %frontend_io_imem_resp_bits_rdata, %frontend_io_imem_resp_bits_user, %frontend_io_out_0_ready, %frontend_io_out_0_valid, %frontend_io_out_0_bits_cf_instr, %frontend_io_out_0_bits_cf_pc, %frontend_io_out_0_bits_cf_pnpc, %frontend_io_out_0_bits_cf_exceptionVec_1, %frontend_io_out_0_bits_cf_exceptionVec_2, %frontend_io_out_0_bits_cf_exceptionVec_12, %frontend_io_out_0_bits_cf_intrVec_0, %frontend_io_out_0_bits_cf_intrVec_1, %frontend_io_out_0_bits_cf_intrVec_2, %frontend_io_out_0_bits_cf_intrVec_3, %frontend_io_out_0_bits_cf_intrVec_4, %frontend_io_out_0_bits_cf_intrVec_5, %frontend_io_out_0_bits_cf_intrVec_6, %frontend_io_out_0_bits_cf_intrVec_7, %frontend_io_out_0_bits_cf_intrVec_8, %frontend_io_out_0_bits_cf_intrVec_9, %frontend_io_out_0_bits_cf_intrVec_10, %frontend_io_out_0_bits_cf_intrVec_11, %frontend_io_out_0_bits_cf_brIdx, %frontend_io_out_0_bits_cf_crossPageIPFFix, %frontend_io_out_0_bits_ctrl_src1Type, %frontend_io_out_0_bits_ctrl_src2Type, %frontend_io_out_0_bits_ctrl_fuType, %frontend_io_out_0_bits_ctrl_fuOpType, %frontend_io_out_0_bits_ctrl_rfSrc1, %frontend_io_out_0_bits_ctrl_rfSrc2, %frontend_io_out_0_bits_ctrl_rfWen, %frontend_io_out_0_bits_ctrl_rfDest, %frontend_io_out_0_bits_ctrl_isNutCoreTrap, %frontend_io_out_0_bits_data_imm, %frontend_io_out_1_bits_cf_intrVec_0, %frontend_io_out_1_bits_cf_intrVec_1, %frontend_io_out_1_bits_cf_intrVec_2, %frontend_io_out_1_bits_cf_intrVec_3, %frontend_io_out_1_bits_cf_intrVec_4, %frontend_io_out_1_bits_cf_intrVec_5, %frontend_io_out_1_bits_cf_intrVec_6, %frontend_io_out_1_bits_cf_intrVec_7, %frontend_io_out_1_bits_cf_intrVec_8, %frontend_io_out_1_bits_cf_intrVec_9, %frontend_io_out_1_bits_cf_intrVec_10, %frontend_io_out_1_bits_cf_intrVec_11, %frontend_io_flushVec, %frontend_io_redirect_target, %frontend_io_redirect_valid, %frontend_io_ipf, %frontend_ifu_bp1_req__bore_valid, %frontend_ifu_bp1_req__bore_pc, %frontend_ifu_bp1_req__bore_isMissPredict, %frontend_ifu_bp1_req__bore_actualTarget, %frontend_ifu_bp1_req__bore_actualTaken, %frontend_ifu_bp1_req__bore_fuOpType, %frontend_ifu_bp1_req__bore_btbType, %frontend_ifu_bp1_req__bore_isRVC, %frontend_ifu_r__bore, %frontend_idu__WIRE__bore_22, %frontend_idu_decoder1_vmEnable__bore, %frontend_ifu_bp1_flushTLB__bore, %frontend_idu_decoder1_intrVec__bore, %frontend_idu_decoder2_intrVec__bore, %frontend_ifu_bp1_flushBTB__bore, %frontend_ifu__WIRE__bore = firrtl.instance frontend @Frontend_inorder(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_imem_req_ready: !firrtl.uint<1>, out io_imem_req_valid: !firrtl.uint<1>, out io_imem_req_bits_addr: !firrtl.uint<39>, out io_imem_req_bits_user: !firrtl.uint<87>, out io_imem_resp_ready: !firrtl.uint<1>, in io_imem_resp_valid: !firrtl.uint<1>, in io_imem_resp_bits_rdata: !firrtl.uint<64>, in io_imem_resp_bits_user: !firrtl.uint<87>, in io_out_0_ready: !firrtl.uint<1>, out io_out_0_valid: !firrtl.uint<1>, out io_out_0_bits_cf_instr: !firrtl.uint<64>, out io_out_0_bits_cf_pc: !firrtl.uint<39>, out io_out_0_bits_cf_pnpc: !firrtl.uint<39>, out io_out_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, out io_out_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, out io_out_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_0: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_1: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_2: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_3: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_4: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_5: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_6: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_7: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_8: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_9: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_10: !firrtl.uint<1>, out io_out_0_bits_cf_intrVec_11: !firrtl.uint<1>, out io_out_0_bits_cf_brIdx: !firrtl.uint<4>, out io_out_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, out io_out_0_bits_ctrl_src1Type: !firrtl.uint<1>, out io_out_0_bits_ctrl_src2Type: !firrtl.uint<1>, out io_out_0_bits_ctrl_fuType: !firrtl.uint<3>, out io_out_0_bits_ctrl_fuOpType: !firrtl.uint<7>, out io_out_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, out io_out_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, out io_out_0_bits_ctrl_rfWen: !firrtl.uint<1>, out io_out_0_bits_ctrl_rfDest: !firrtl.uint<5>, out io_out_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, out io_out_0_bits_data_imm: !firrtl.uint<64>, out io_out_1_bits_cf_intrVec_0: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_1: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_2: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_3: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_4: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_5: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_6: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_7: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_8: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_9: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_10: !firrtl.uint<1>, out io_out_1_bits_cf_intrVec_11: !firrtl.uint<1>, out io_flushVec: !firrtl.uint<4>, in io_redirect_target: !firrtl.uint<39>, in io_redirect_valid: !firrtl.uint<1>, in io_ipf: !firrtl.uint<1>, in ifu_bp1_req__bore_valid: !firrtl.uint<1>, in ifu_bp1_req__bore_pc: !firrtl.uint<39>, in ifu_bp1_req__bore_isMissPredict: !firrtl.uint<1>, in ifu_bp1_req__bore_actualTarget: !firrtl.uint<39>, in ifu_bp1_req__bore_actualTaken: !firrtl.uint<1>, in ifu_bp1_req__bore_fuOpType: !firrtl.uint<7>, in ifu_bp1_req__bore_btbType: !firrtl.uint<2>, in ifu_bp1_req__bore_isRVC: !firrtl.uint<1>, out ifu_r__bore: !firrtl.uint<1>, out idu__WIRE__bore: !firrtl.uint<1>, in idu_decoder1_vmEnable__bore: !firrtl.uint<1>, in ifu_bp1_flushTLB__bore: !firrtl.uint<1>, in idu_decoder1_intrVec__bore: !firrtl.uint<12>, in idu_decoder2_intrVec__bore: !firrtl.uint<12>, in ifu_bp1_flushBTB__bore: !firrtl.uint<1>, out ifu__WIRE__bore: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<39>
      %3 = firrtl.wire : !firrtl.uint<87>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<64>
      %7 = firrtl.wire : !firrtl.uint<87>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<64>
      %11 = firrtl.wire : !firrtl.uint<39>
      %12 = firrtl.wire : !firrtl.uint<39>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<1>
      %21 = firrtl.wire : !firrtl.uint<1>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<1>
      %24 = firrtl.wire : !firrtl.uint<1>
      %25 = firrtl.wire : !firrtl.uint<1>
      %26 = firrtl.wire : !firrtl.uint<1>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<4>
      %29 = firrtl.wire : !firrtl.uint<1>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<3>
      %33 = firrtl.wire : !firrtl.uint<7>
      %34 = firrtl.wire : !firrtl.uint<5>
      %35 = firrtl.wire : !firrtl.uint<5>
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<5>
      %38 = firrtl.wire : !firrtl.uint<1>
      %39 = firrtl.wire : !firrtl.uint<64>
      %40 = firrtl.wire : !firrtl.uint<1>
      %41 = firrtl.wire : !firrtl.uint<1>
      %42 = firrtl.wire : !firrtl.uint<1>
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<1>
      %45 = firrtl.wire : !firrtl.uint<1>
      %46 = firrtl.wire : !firrtl.uint<1>
      %47 = firrtl.wire : !firrtl.uint<1>
      %48 = firrtl.wire : !firrtl.uint<1>
      %49 = firrtl.wire : !firrtl.uint<1>
      %50 = firrtl.wire : !firrtl.uint<1>
      %51 = firrtl.wire : !firrtl.uint<1>
      %52 = firrtl.wire : !firrtl.uint<4>
      %53 = firrtl.wire : !firrtl.uint<39>
      %54 = firrtl.wire : !firrtl.uint<1>
      %55 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %frontend_io_imem_req_ready, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %frontend_io_imem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %2, %frontend_io_imem_req_bits_addr : !firrtl.uint<39>
      firrtl.strictconnect %3, %frontend_io_imem_req_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %4, %frontend_io_imem_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %frontend_io_imem_resp_valid, %5 : !firrtl.uint<1>
      firrtl.strictconnect %frontend_io_imem_resp_bits_rdata, %6 : !firrtl.uint<64>
      firrtl.strictconnect %frontend_io_imem_resp_bits_user, %7 : !firrtl.uint<87>
      firrtl.strictconnect %frontend_io_out_0_ready, %8 : !firrtl.uint<1>
      firrtl.strictconnect %9, %frontend_io_out_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %10, %frontend_io_out_0_bits_cf_instr : !firrtl.uint<64>
      firrtl.strictconnect %11, %frontend_io_out_0_bits_cf_pc : !firrtl.uint<39>
      firrtl.strictconnect %12, %frontend_io_out_0_bits_cf_pnpc : !firrtl.uint<39>
      firrtl.strictconnect %13, %frontend_io_out_0_bits_cf_exceptionVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %14, %frontend_io_out_0_bits_cf_exceptionVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %15, %frontend_io_out_0_bits_cf_exceptionVec_12 : !firrtl.uint<1>
      firrtl.strictconnect %16, %frontend_io_out_0_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %17, %frontend_io_out_0_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %18, %frontend_io_out_0_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %19, %frontend_io_out_0_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %20, %frontend_io_out_0_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %21, %frontend_io_out_0_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %22, %frontend_io_out_0_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %23, %frontend_io_out_0_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %24, %frontend_io_out_0_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %25, %frontend_io_out_0_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %26, %frontend_io_out_0_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %27, %frontend_io_out_0_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %28, %frontend_io_out_0_bits_cf_brIdx : !firrtl.uint<4>
      firrtl.strictconnect %29, %frontend_io_out_0_bits_cf_crossPageIPFFix : !firrtl.uint<1>
      firrtl.strictconnect %30, %frontend_io_out_0_bits_ctrl_src1Type : !firrtl.uint<1>
      firrtl.strictconnect %31, %frontend_io_out_0_bits_ctrl_src2Type : !firrtl.uint<1>
      firrtl.strictconnect %32, %frontend_io_out_0_bits_ctrl_fuType : !firrtl.uint<3>
      firrtl.strictconnect %33, %frontend_io_out_0_bits_ctrl_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %34, %frontend_io_out_0_bits_ctrl_rfSrc1 : !firrtl.uint<5>
      firrtl.strictconnect %35, %frontend_io_out_0_bits_ctrl_rfSrc2 : !firrtl.uint<5>
      firrtl.strictconnect %36, %frontend_io_out_0_bits_ctrl_rfWen : !firrtl.uint<1>
      firrtl.strictconnect %37, %frontend_io_out_0_bits_ctrl_rfDest : !firrtl.uint<5>
      firrtl.strictconnect %38, %frontend_io_out_0_bits_ctrl_isNutCoreTrap : !firrtl.uint<1>
      firrtl.strictconnect %39, %frontend_io_out_0_bits_data_imm : !firrtl.uint<64>
      firrtl.strictconnect %40, %frontend_io_out_1_bits_cf_intrVec_0 : !firrtl.uint<1>
      firrtl.strictconnect %41, %frontend_io_out_1_bits_cf_intrVec_1 : !firrtl.uint<1>
      firrtl.strictconnect %42, %frontend_io_out_1_bits_cf_intrVec_2 : !firrtl.uint<1>
      firrtl.strictconnect %43, %frontend_io_out_1_bits_cf_intrVec_3 : !firrtl.uint<1>
      firrtl.strictconnect %44, %frontend_io_out_1_bits_cf_intrVec_4 : !firrtl.uint<1>
      firrtl.strictconnect %45, %frontend_io_out_1_bits_cf_intrVec_5 : !firrtl.uint<1>
      firrtl.strictconnect %46, %frontend_io_out_1_bits_cf_intrVec_6 : !firrtl.uint<1>
      firrtl.strictconnect %47, %frontend_io_out_1_bits_cf_intrVec_7 : !firrtl.uint<1>
      firrtl.strictconnect %48, %frontend_io_out_1_bits_cf_intrVec_8 : !firrtl.uint<1>
      firrtl.strictconnect %49, %frontend_io_out_1_bits_cf_intrVec_9 : !firrtl.uint<1>
      firrtl.strictconnect %50, %frontend_io_out_1_bits_cf_intrVec_10 : !firrtl.uint<1>
      firrtl.strictconnect %51, %frontend_io_out_1_bits_cf_intrVec_11 : !firrtl.uint<1>
      firrtl.strictconnect %52, %frontend_io_flushVec : !firrtl.uint<4>
      firrtl.strictconnect %frontend_io_redirect_target, %53 : !firrtl.uint<39>
      firrtl.strictconnect %frontend_io_redirect_valid, %54 : !firrtl.uint<1>
      firrtl.strictconnect %frontend_io_ipf, %55 : !firrtl.uint<1>
      firrtl.strictconnect %frontend_clock, %clock : !firrtl.clock
      firrtl.strictconnect %frontend_reset, %reset : !firrtl.uint<1>
      %backend_clock, %backend_reset, %backend_io_in_0_ready, %backend_io_in_0_valid, %backend_io_in_0_bits_cf_instr, %backend_io_in_0_bits_cf_pc, %backend_io_in_0_bits_cf_pnpc, %backend_io_in_0_bits_cf_exceptionVec_1, %backend_io_in_0_bits_cf_exceptionVec_2, %backend_io_in_0_bits_cf_exceptionVec_12, %backend_io_in_0_bits_cf_intrVec_0, %backend_io_in_0_bits_cf_intrVec_1, %backend_io_in_0_bits_cf_intrVec_2, %backend_io_in_0_bits_cf_intrVec_3, %backend_io_in_0_bits_cf_intrVec_4, %backend_io_in_0_bits_cf_intrVec_5, %backend_io_in_0_bits_cf_intrVec_6, %backend_io_in_0_bits_cf_intrVec_7, %backend_io_in_0_bits_cf_intrVec_8, %backend_io_in_0_bits_cf_intrVec_9, %backend_io_in_0_bits_cf_intrVec_10, %backend_io_in_0_bits_cf_intrVec_11, %backend_io_in_0_bits_cf_brIdx, %backend_io_in_0_bits_cf_crossPageIPFFix, %backend_io_in_0_bits_ctrl_src1Type, %backend_io_in_0_bits_ctrl_src2Type, %backend_io_in_0_bits_ctrl_fuType, %backend_io_in_0_bits_ctrl_fuOpType, %backend_io_in_0_bits_ctrl_rfSrc1, %backend_io_in_0_bits_ctrl_rfSrc2, %backend_io_in_0_bits_ctrl_rfWen, %backend_io_in_0_bits_ctrl_rfDest, %backend_io_in_0_bits_ctrl_isNutCoreTrap, %backend_io_in_0_bits_data_imm, %backend_io_flush, %backend_io_dmem_req_ready, %backend_io_dmem_req_valid, %backend_io_dmem_req_bits_addr, %backend_io_dmem_req_bits_size, %backend_io_dmem_req_bits_cmd, %backend_io_dmem_req_bits_wmask, %backend_io_dmem_req_bits_wdata, %backend_io_dmem_resp_valid, %backend_io_dmem_resp_bits_rdata, %backend_io_memMMU_imem_priviledgeMode, %backend_io_memMMU_dmem_priviledgeMode, %backend_io_memMMU_dmem_status_sum, %backend_io_memMMU_dmem_status_mxr, %backend_io_memMMU_dmem_loadPF, %backend_io_memMMU_dmem_storePF, %backend_io_memMMU_dmem_addr, %backend_io_redirect_target, %backend_io_redirect_valid, %backend_exu_lsu_lsExecUnit_dtlbPF__bore, %backend_exu_lsu_dtlbPF__bore, %backend_exu_alu_REG__bore_valid, %backend_exu_alu_REG__bore_pc, %backend_exu_alu_REG__bore_isMissPredict, %backend_exu_alu_REG__bore_actualTarget, %backend_exu_alu_REG__bore_actualTaken, %backend_exu_alu_REG__bore_fuOpType, %backend_exu_alu_REG__bore_btbType, %backend_exu_alu_REG__bore_isRVC, %backend_exu_csr_perfCntCond_4__bore, %backend_exu_lsu_lsExecUnit_dtlbEnable__bore, %backend_exu_csr_satp__bore, %backend_exu_csr_satp__bore_0, %backend_exu_csr_msip__bore_23, %backend_exu_csr_meip__bore_24, %backend_exu_mou__WIRE_1__bore, %backend_exu_mou__WIRE_1__bore_0, %backend_exu_mou__WIRE_1__bore_1, %backend_exu_lsu_lsuMMIO__bore, %backend_exu_csr_mtip__bore_25, %backend_exu_csr__WIRE__bore, %backend_exu_csr__WIRE__bore_0, %backend_exu_mou__WIRE__bore, %backend_exu_mou__WIRE__bore_0, %backend_exu_csr_perfCntCond_15__bore, %backend_exu_lsu_lsExecUnit_dtlbFinish__bore, %backend_exu_lsu__WIRE__bore = firrtl.instance backend @Backend_inorder(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_cf_instr: !firrtl.uint<64>, in io_in_0_bits_cf_pc: !firrtl.uint<39>, in io_in_0_bits_cf_pnpc: !firrtl.uint<39>, in io_in_0_bits_cf_exceptionVec_1: !firrtl.uint<1>, in io_in_0_bits_cf_exceptionVec_2: !firrtl.uint<1>, in io_in_0_bits_cf_exceptionVec_12: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_0: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_1: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_2: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_3: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_4: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_5: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_6: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_7: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_8: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_9: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_10: !firrtl.uint<1>, in io_in_0_bits_cf_intrVec_11: !firrtl.uint<1>, in io_in_0_bits_cf_brIdx: !firrtl.uint<4>, in io_in_0_bits_cf_crossPageIPFFix: !firrtl.uint<1>, in io_in_0_bits_ctrl_src1Type: !firrtl.uint<1>, in io_in_0_bits_ctrl_src2Type: !firrtl.uint<1>, in io_in_0_bits_ctrl_fuType: !firrtl.uint<3>, in io_in_0_bits_ctrl_fuOpType: !firrtl.uint<7>, in io_in_0_bits_ctrl_rfSrc1: !firrtl.uint<5>, in io_in_0_bits_ctrl_rfSrc2: !firrtl.uint<5>, in io_in_0_bits_ctrl_rfWen: !firrtl.uint<1>, in io_in_0_bits_ctrl_rfDest: !firrtl.uint<5>, in io_in_0_bits_ctrl_isNutCoreTrap: !firrtl.uint<1>, in io_in_0_bits_data_imm: !firrtl.uint<64>, in io_flush: !firrtl.uint<2>, in io_dmem_req_ready: !firrtl.uint<1>, out io_dmem_req_valid: !firrtl.uint<1>, out io_dmem_req_bits_addr: !firrtl.uint<39>, out io_dmem_req_bits_size: !firrtl.uint<3>, out io_dmem_req_bits_cmd: !firrtl.uint<4>, out io_dmem_req_bits_wmask: !firrtl.uint<8>, out io_dmem_req_bits_wdata: !firrtl.uint<64>, in io_dmem_resp_valid: !firrtl.uint<1>, in io_dmem_resp_bits_rdata: !firrtl.uint<64>, out io_memMMU_imem_priviledgeMode: !firrtl.uint<2>, out io_memMMU_dmem_priviledgeMode: !firrtl.uint<2>, out io_memMMU_dmem_status_sum: !firrtl.uint<1>, out io_memMMU_dmem_status_mxr: !firrtl.uint<1>, in io_memMMU_dmem_loadPF: !firrtl.uint<1>, in io_memMMU_dmem_storePF: !firrtl.uint<1>, in io_memMMU_dmem_addr: !firrtl.uint<39>, out io_redirect_target: !firrtl.uint<39>, out io_redirect_valid: !firrtl.uint<1>, in exu_lsu_lsExecUnit_dtlbPF__bore: !firrtl.uint<1>, in exu_lsu_dtlbPF__bore: !firrtl.uint<1>, out exu_alu_REG__bore_valid: !firrtl.uint<1>, out exu_alu_REG__bore_pc: !firrtl.uint<39>, out exu_alu_REG__bore_isMissPredict: !firrtl.uint<1>, out exu_alu_REG__bore_actualTarget: !firrtl.uint<39>, out exu_alu_REG__bore_actualTaken: !firrtl.uint<1>, out exu_alu_REG__bore_fuOpType: !firrtl.uint<7>, out exu_alu_REG__bore_btbType: !firrtl.uint<2>, out exu_alu_REG__bore_isRVC: !firrtl.uint<1>, in exu_csr_perfCntCond_4__bore: !firrtl.uint<1>, in exu_lsu_lsExecUnit_dtlbEnable__bore: !firrtl.uint<1>, out exu_csr_satp__bore: !firrtl.uint<64>, out exu_csr_satp__bore_0: !firrtl.uint<64>, in exu_csr_msip__bore: !firrtl.uint<1>, in exu_csr_meip__bore: !firrtl.uint<1>, out exu_mou__WIRE_1__bore: !firrtl.uint<1>, out exu_mou__WIRE_1__bore_0: !firrtl.uint<1>, out exu_mou__WIRE_1__bore_1: !firrtl.uint<1>, in exu_lsu_lsuMMIO__bore: !firrtl.uint<1>, in exu_csr_mtip__bore: !firrtl.uint<1>, out exu_csr__WIRE__bore: !firrtl.uint<12>, out exu_csr__WIRE__bore_0: !firrtl.uint<12>, out exu_mou__WIRE__bore: !firrtl.uint<1>, out exu_mou__WIRE__bore_0: !firrtl.uint<1>, in exu_csr_perfCntCond_15__bore: !firrtl.uint<1>, in exu_lsu_lsExecUnit_dtlbFinish__bore: !firrtl.uint<1>, out exu_lsu__WIRE__bore: !firrtl.uint<1>)
      %56 = firrtl.wire : !firrtl.uint<1>
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<64>
      %59 = firrtl.wire : !firrtl.uint<39>
      %60 = firrtl.wire : !firrtl.uint<39>
      %61 = firrtl.wire : !firrtl.uint<1>
      %62 = firrtl.wire : !firrtl.uint<1>
      %63 = firrtl.wire : !firrtl.uint<1>
      %64 = firrtl.wire : !firrtl.uint<1>
      %65 = firrtl.wire : !firrtl.uint<1>
      %66 = firrtl.wire : !firrtl.uint<1>
      %67 = firrtl.wire : !firrtl.uint<1>
      %68 = firrtl.wire : !firrtl.uint<1>
      %69 = firrtl.wire : !firrtl.uint<1>
      %70 = firrtl.wire : !firrtl.uint<1>
      %71 = firrtl.wire : !firrtl.uint<1>
      %72 = firrtl.wire : !firrtl.uint<1>
      %73 = firrtl.wire : !firrtl.uint<1>
      %74 = firrtl.wire : !firrtl.uint<1>
      %75 = firrtl.wire : !firrtl.uint<1>
      %76 = firrtl.wire : !firrtl.uint<4>
      %77 = firrtl.wire : !firrtl.uint<1>
      %78 = firrtl.wire : !firrtl.uint<1>
      %79 = firrtl.wire : !firrtl.uint<1>
      %80 = firrtl.wire : !firrtl.uint<3>
      %81 = firrtl.wire : !firrtl.uint<7>
      %82 = firrtl.wire : !firrtl.uint<5>
      %83 = firrtl.wire : !firrtl.uint<5>
      %84 = firrtl.wire : !firrtl.uint<1>
      %85 = firrtl.wire : !firrtl.uint<5>
      %86 = firrtl.wire : !firrtl.uint<1>
      %87 = firrtl.wire : !firrtl.uint<64>
      %88 = firrtl.wire : !firrtl.uint<2>
      %89 = firrtl.wire : !firrtl.uint<1>
      %90 = firrtl.wire : !firrtl.uint<1>
      %91 = firrtl.wire : !firrtl.uint<39>
      %92 = firrtl.wire : !firrtl.uint<3>
      %93 = firrtl.wire : !firrtl.uint<4>
      %94 = firrtl.wire : !firrtl.uint<8>
      %95 = firrtl.wire : !firrtl.uint<64>
      %96 = firrtl.wire : !firrtl.uint<1>
      %97 = firrtl.wire : !firrtl.uint<64>
      %98 = firrtl.wire : !firrtl.uint<2>
      %99 = firrtl.wire : !firrtl.uint<2>
      %100 = firrtl.wire : !firrtl.uint<1>
      %101 = firrtl.wire : !firrtl.uint<1>
      %102 = firrtl.wire : !firrtl.uint<1>
      %103 = firrtl.wire : !firrtl.uint<1>
      %104 = firrtl.wire : !firrtl.uint<39>
      %105 = firrtl.wire : !firrtl.uint<39>
      %106 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %56, %backend_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_valid, %57 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_instr, %58 : !firrtl.uint<64>
      firrtl.strictconnect %backend_io_in_0_bits_cf_pc, %59 : !firrtl.uint<39>
      firrtl.strictconnect %backend_io_in_0_bits_cf_pnpc, %60 : !firrtl.uint<39>
      firrtl.strictconnect %backend_io_in_0_bits_cf_exceptionVec_1, %61 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_exceptionVec_2, %62 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_exceptionVec_12, %63 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_0, %64 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_1, %65 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_2, %66 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_3, %67 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_4, %68 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_5, %69 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_6, %70 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_7, %71 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_8, %72 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_9, %73 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_10, %74 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_intrVec_11, %75 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_cf_brIdx, %76 : !firrtl.uint<4>
      firrtl.strictconnect %backend_io_in_0_bits_cf_crossPageIPFFix, %77 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_src1Type, %78 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_src2Type, %79 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_fuType, %80 : !firrtl.uint<3>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_fuOpType, %81 : !firrtl.uint<7>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_rfSrc1, %82 : !firrtl.uint<5>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_rfSrc2, %83 : !firrtl.uint<5>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_rfWen, %84 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_rfDest, %85 : !firrtl.uint<5>
      firrtl.strictconnect %backend_io_in_0_bits_ctrl_isNutCoreTrap, %86 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_in_0_bits_data_imm, %87 : !firrtl.uint<64>
      firrtl.strictconnect %backend_io_flush, %88 : !firrtl.uint<2>
      firrtl.strictconnect %backend_io_dmem_req_ready, %89 : !firrtl.uint<1>
      firrtl.strictconnect %90, %backend_io_dmem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %91, %backend_io_dmem_req_bits_addr : !firrtl.uint<39>
      firrtl.strictconnect %92, %backend_io_dmem_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %93, %backend_io_dmem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %94, %backend_io_dmem_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %95, %backend_io_dmem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %backend_io_dmem_resp_valid, %96 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_dmem_resp_bits_rdata, %97 : !firrtl.uint<64>
      firrtl.strictconnect %98, %backend_io_memMMU_imem_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %99, %backend_io_memMMU_dmem_priviledgeMode : !firrtl.uint<2>
      firrtl.strictconnect %100, %backend_io_memMMU_dmem_status_sum : !firrtl.uint<1>
      firrtl.strictconnect %101, %backend_io_memMMU_dmem_status_mxr : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_memMMU_dmem_loadPF, %102 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_memMMU_dmem_storePF, %103 : !firrtl.uint<1>
      firrtl.strictconnect %backend_io_memMMU_dmem_addr, %104 : !firrtl.uint<39>
      firrtl.strictconnect %105, %backend_io_redirect_target : !firrtl.uint<39>
      firrtl.strictconnect %106, %backend_io_redirect_valid : !firrtl.uint<1>
      firrtl.strictconnect %backend_clock, %clock : !firrtl.clock
      firrtl.strictconnect %backend_reset, %reset : !firrtl.uint<1>
      %107 = firrtl.bits %52 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %dataBuffer_0_cf_instr = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %dataBuffer_0_cf_pc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 64 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_0_cf_pnpc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 103 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_0_cf_exceptionVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 184 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_exceptionVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 185 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_exceptionVec_12 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 195 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 199 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 200 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 201 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_3 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 202 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_4 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 203 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_5 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 204 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_6 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 205 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_7 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 206 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_8 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 207 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_9 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 208 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_10 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 209 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_intrVec_11 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 210 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_cf_brIdx = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 211 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %dataBuffer_0_cf_crossPageIPFFix = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 216 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_ctrl_src1Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 282 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_ctrl_src2Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 283 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_ctrl_fuType = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 284 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %dataBuffer_0_ctrl_fuOpType = firrtl.regreset %clock, %reset, %c0_ui7 {firrtl.random_init_start = 287 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>
      %dataBuffer_0_ctrl_rfSrc1 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 294 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_0_ctrl_rfSrc2 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 299 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_0_ctrl_rfWen = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 304 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_ctrl_rfDest = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 305 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_0_ctrl_isNutCoreTrap = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 310 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_0_data_imm = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 443 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %dataBuffer_1_cf_instr = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 507 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %dataBuffer_1_cf_pc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 571 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_1_cf_pnpc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 610 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_1_cf_exceptionVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 691 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_exceptionVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 692 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_exceptionVec_12 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 702 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 706 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 707 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 708 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_3 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 709 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_4 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 710 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_5 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 711 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_6 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 712 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_7 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 713 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_8 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 714 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_9 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 715 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_10 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 716 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_intrVec_11 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 717 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_cf_brIdx = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 718 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %dataBuffer_1_cf_crossPageIPFFix = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 723 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_ctrl_src1Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 789 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_ctrl_src2Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 790 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_ctrl_fuType = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 791 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %dataBuffer_1_ctrl_fuOpType = firrtl.regreset %clock, %reset, %c0_ui7 {firrtl.random_init_start = 794 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>
      %dataBuffer_1_ctrl_rfSrc1 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 801 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_1_ctrl_rfSrc2 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 806 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_1_ctrl_rfWen = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 811 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_ctrl_rfDest = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 812 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_1_ctrl_isNutCoreTrap = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 817 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_1_data_imm = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 950 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %dataBuffer_2_cf_instr = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 1014 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %dataBuffer_2_cf_pc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 1078 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_2_cf_pnpc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 1117 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_2_cf_exceptionVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1198 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_exceptionVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1199 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_exceptionVec_12 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1209 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1213 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1214 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1215 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_3 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1216 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_4 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1217 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_5 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1218 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_6 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1219 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_7 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1220 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_8 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1221 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_9 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1222 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_10 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1223 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_intrVec_11 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1224 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_cf_brIdx = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 1225 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %dataBuffer_2_cf_crossPageIPFFix = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1230 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_ctrl_src1Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1296 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_ctrl_src2Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1297 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_ctrl_fuType = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 1298 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %dataBuffer_2_ctrl_fuOpType = firrtl.regreset %clock, %reset, %c0_ui7 {firrtl.random_init_start = 1301 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>
      %dataBuffer_2_ctrl_rfSrc1 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 1308 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_2_ctrl_rfSrc2 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 1313 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_2_ctrl_rfWen = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1318 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_ctrl_rfDest = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 1319 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_2_ctrl_isNutCoreTrap = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1324 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_2_data_imm = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 1457 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %dataBuffer_3_cf_instr = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 1521 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %dataBuffer_3_cf_pc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 1585 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_3_cf_pnpc = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 1624 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %dataBuffer_3_cf_exceptionVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1705 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_exceptionVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1706 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_exceptionVec_12 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1716 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1720 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1721 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1722 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_3 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1723 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_4 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1724 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_5 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1725 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_6 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1726 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_7 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1727 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_8 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1728 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_9 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1729 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_10 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1730 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_intrVec_11 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1731 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_cf_brIdx = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 1732 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %dataBuffer_3_cf_crossPageIPFFix = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1737 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_ctrl_src1Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1803 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_ctrl_src2Type = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1804 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_ctrl_fuType = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 1805 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %dataBuffer_3_ctrl_fuOpType = firrtl.regreset %clock, %reset, %c0_ui7 {firrtl.random_init_start = 1808 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>
      %dataBuffer_3_ctrl_rfSrc1 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 1815 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_3_ctrl_rfSrc2 = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 1820 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_3_ctrl_rfWen = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1825 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_ctrl_rfDest = firrtl.regreset %clock, %reset, %c0_ui5 {firrtl.random_init_start = 1826 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>
      %dataBuffer_3_ctrl_isNutCoreTrap = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1831 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %dataBuffer_3_data_imm = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 1964 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %ringBufferHead = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 2028 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %ringBufferTail = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 2030 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %_ringBufferAllowin_T = firrtl.add %ringBufferHead, %c1_ui1 {name = "_ringBufferAllowin_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_ringBufferAllowin_T_1 = firrtl.bits %_ringBufferAllowin_T 1 to 0 {name = "_ringBufferAllowin_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %_ringBufferAllowin_T_2 = firrtl.neq %_ringBufferAllowin_T_1, %ringBufferTail {name = "_ringBufferAllowin_T_2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_ringBufferAllowin_T_3 = firrtl.add %ringBufferHead, %c2_ui2 {name = "_ringBufferAllowin_T_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_ringBufferAllowin_T_4 = firrtl.bits %_ringBufferAllowin_T_3 1 to 0 {name = "_ringBufferAllowin_T_4"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %_ringBufferAllowin_T_6 = firrtl.neq %_ringBufferAllowin_T_4, %ringBufferTail {name = "_ringBufferAllowin_T_6"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %ringBufferAllowin = firrtl.and %_ringBufferAllowin_T_2, %_ringBufferAllowin_T_6 {name = "ringBufferAllowin"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %needEnqueue_0 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %needEnqueue_0, %9 : !firrtl.uint<1>
      %108 = firrtl.pad %needEnqueue_0, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %enqueueFire_0 = firrtl.geq %108, %c1_ui1 {name = "enqueueFire_0"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %enqueueFire_1 = firrtl.geq %108, %c2_ui2 {name = "enqueueFire_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_wen_T = firrtl.and %8, %9 {name = "_wen_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_instr = firrtl.mux(%needEnqueue_0, %10, %c0_ui64) {name = "_dataBuffer_T_cf_instr"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataBuffer_T_cf_pc = firrtl.mux(%needEnqueue_0, %11, %c0_ui39) {name = "_dataBuffer_T_cf_pc"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_dataBuffer_T_cf_pnpc = firrtl.mux(%needEnqueue_0, %12, %c0_ui39) {name = "_dataBuffer_T_cf_pnpc"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %_dataBuffer_T_cf_exceptionVec_1 = firrtl.mux(%needEnqueue_0, %13, %c0_ui1) {name = "_dataBuffer_T_cf_exceptionVec_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_exceptionVec_2 = firrtl.mux(%needEnqueue_0, %14, %c0_ui1) {name = "_dataBuffer_T_cf_exceptionVec_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_exceptionVec_12 = firrtl.mux(%needEnqueue_0, %15, %c0_ui1) {name = "_dataBuffer_T_cf_exceptionVec_12"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_0 = firrtl.mux(%needEnqueue_0, %16, %40) {name = "_dataBuffer_T_cf_intrVec_0"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_1 = firrtl.mux(%needEnqueue_0, %17, %41) {name = "_dataBuffer_T_cf_intrVec_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_2 = firrtl.mux(%needEnqueue_0, %18, %42) {name = "_dataBuffer_T_cf_intrVec_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_3 = firrtl.mux(%needEnqueue_0, %19, %43) {name = "_dataBuffer_T_cf_intrVec_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_4 = firrtl.mux(%needEnqueue_0, %20, %44) {name = "_dataBuffer_T_cf_intrVec_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_5 = firrtl.mux(%needEnqueue_0, %21, %45) {name = "_dataBuffer_T_cf_intrVec_5"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_6 = firrtl.mux(%needEnqueue_0, %22, %46) {name = "_dataBuffer_T_cf_intrVec_6"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_7 = firrtl.mux(%needEnqueue_0, %23, %47) {name = "_dataBuffer_T_cf_intrVec_7"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_8 = firrtl.mux(%needEnqueue_0, %24, %48) {name = "_dataBuffer_T_cf_intrVec_8"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_9 = firrtl.mux(%needEnqueue_0, %25, %49) {name = "_dataBuffer_T_cf_intrVec_9"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_10 = firrtl.mux(%needEnqueue_0, %26, %50) {name = "_dataBuffer_T_cf_intrVec_10"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_intrVec_11 = firrtl.mux(%needEnqueue_0, %27, %51) {name = "_dataBuffer_T_cf_intrVec_11"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_cf_brIdx = firrtl.mux(%needEnqueue_0, %28, %c0_ui4) {name = "_dataBuffer_T_cf_brIdx"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_dataBuffer_T_cf_crossPageIPFFix = firrtl.mux(%needEnqueue_0, %29, %c0_ui1) {name = "_dataBuffer_T_cf_crossPageIPFFix"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_ctrl_src1Type = firrtl.mux(%needEnqueue_0, %30, %c1_ui1) {name = "_dataBuffer_T_ctrl_src1Type"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_ctrl_src2Type = firrtl.mux(%needEnqueue_0, %31, %c1_ui1) {name = "_dataBuffer_T_ctrl_src2Type"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_ctrl_fuType = firrtl.mux(%needEnqueue_0, %32, %c3_ui3) {name = "_dataBuffer_T_ctrl_fuType"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_dataBuffer_T_ctrl_fuOpType = firrtl.mux(%needEnqueue_0, %33, %c0_ui7) {name = "_dataBuffer_T_ctrl_fuOpType"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_dataBuffer_T_ctrl_rfSrc1 = firrtl.mux(%needEnqueue_0, %34, %c0_ui5) {name = "_dataBuffer_T_ctrl_rfSrc1"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_dataBuffer_T_ctrl_rfSrc2 = firrtl.mux(%needEnqueue_0, %35, %c0_ui5) {name = "_dataBuffer_T_ctrl_rfSrc2"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_dataBuffer_T_ctrl_rfWen = firrtl.mux(%needEnqueue_0, %36, %c0_ui1) {name = "_dataBuffer_T_ctrl_rfWen"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_ctrl_rfDest = firrtl.mux(%needEnqueue_0, %37, %c0_ui5) {name = "_dataBuffer_T_ctrl_rfDest"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_dataBuffer_T_ctrl_isNutCoreTrap = firrtl.mux(%needEnqueue_0, %38, %c0_ui1) {name = "_dataBuffer_T_ctrl_isNutCoreTrap"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataBuffer_T_data_imm = firrtl.mux(%needEnqueue_0, %39, %c0_ui64) {name = "_dataBuffer_T_data_imm"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %109 = firrtl.orr %ringBufferHead : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %110 = firrtl.not %109 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %111 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %112 = firrtl.mux(%111, %_dataBuffer_T_cf_instr, %dataBuffer_0_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %113 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %114 = firrtl.mux(%113, %_dataBuffer_T_cf_pc, %dataBuffer_0_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %115 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.mux(%115, %_dataBuffer_T_cf_pnpc, %dataBuffer_0_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %117 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.mux(%117, %_dataBuffer_T_cf_exceptionVec_1, %dataBuffer_0_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.mux(%119, %_dataBuffer_T_cf_exceptionVec_2, %dataBuffer_0_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %121 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %122 = firrtl.mux(%121, %_dataBuffer_T_cf_exceptionVec_12, %dataBuffer_0_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %124 = firrtl.mux(%123, %_dataBuffer_T_cf_intrVec_0, %dataBuffer_0_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %125 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %126 = firrtl.mux(%125, %_dataBuffer_T_cf_intrVec_1, %dataBuffer_0_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %127 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %128 = firrtl.mux(%127, %_dataBuffer_T_cf_intrVec_2, %dataBuffer_0_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %129 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %130 = firrtl.mux(%129, %_dataBuffer_T_cf_intrVec_3, %dataBuffer_0_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %131 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %132 = firrtl.mux(%131, %_dataBuffer_T_cf_intrVec_4, %dataBuffer_0_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %133 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %134 = firrtl.mux(%133, %_dataBuffer_T_cf_intrVec_5, %dataBuffer_0_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %135 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %136 = firrtl.mux(%135, %_dataBuffer_T_cf_intrVec_6, %dataBuffer_0_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %137 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %138 = firrtl.mux(%137, %_dataBuffer_T_cf_intrVec_7, %dataBuffer_0_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %139 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %140 = firrtl.mux(%139, %_dataBuffer_T_cf_intrVec_8, %dataBuffer_0_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %141 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %142 = firrtl.mux(%141, %_dataBuffer_T_cf_intrVec_9, %dataBuffer_0_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %143 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %144 = firrtl.mux(%143, %_dataBuffer_T_cf_intrVec_10, %dataBuffer_0_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %145 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %146 = firrtl.mux(%145, %_dataBuffer_T_cf_intrVec_11, %dataBuffer_0_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %147 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %148 = firrtl.mux(%147, %_dataBuffer_T_cf_brIdx, %dataBuffer_0_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %149 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %150 = firrtl.mux(%149, %_dataBuffer_T_cf_crossPageIPFFix, %dataBuffer_0_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %151 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %152 = firrtl.mux(%151, %_dataBuffer_T_ctrl_src1Type, %dataBuffer_0_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %153 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %154 = firrtl.mux(%153, %_dataBuffer_T_ctrl_src2Type, %dataBuffer_0_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %155 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %156 = firrtl.mux(%155, %_dataBuffer_T_ctrl_fuType, %dataBuffer_0_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %157 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %158 = firrtl.mux(%157, %_dataBuffer_T_ctrl_fuOpType, %dataBuffer_0_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %159 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %160 = firrtl.mux(%159, %_dataBuffer_T_ctrl_rfSrc1, %dataBuffer_0_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %161 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %162 = firrtl.mux(%161, %_dataBuffer_T_ctrl_rfSrc2, %dataBuffer_0_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %163 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %164 = firrtl.mux(%163, %_dataBuffer_T_ctrl_rfWen, %dataBuffer_0_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %165 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %166 = firrtl.mux(%165, %_dataBuffer_T_ctrl_rfDest, %dataBuffer_0_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %167 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %168 = firrtl.mux(%167, %_dataBuffer_T_ctrl_isNutCoreTrap, %dataBuffer_0_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %169 = firrtl.and %enqueueFire_0, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %170 = firrtl.mux(%169, %_dataBuffer_T_data_imm, %dataBuffer_0_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %171 = firrtl.eq %ringBufferHead, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %172 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %173 = firrtl.mux(%172, %_dataBuffer_T_cf_instr, %dataBuffer_1_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %174 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %175 = firrtl.mux(%174, %_dataBuffer_T_cf_pc, %dataBuffer_1_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %176 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %177 = firrtl.mux(%176, %_dataBuffer_T_cf_pnpc, %dataBuffer_1_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %178 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %179 = firrtl.mux(%178, %_dataBuffer_T_cf_exceptionVec_1, %dataBuffer_1_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %180 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %181 = firrtl.mux(%180, %_dataBuffer_T_cf_exceptionVec_2, %dataBuffer_1_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %182 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %183 = firrtl.mux(%182, %_dataBuffer_T_cf_exceptionVec_12, %dataBuffer_1_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %184 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %185 = firrtl.mux(%184, %_dataBuffer_T_cf_intrVec_0, %dataBuffer_1_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %186 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %187 = firrtl.mux(%186, %_dataBuffer_T_cf_intrVec_1, %dataBuffer_1_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %188 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %189 = firrtl.mux(%188, %_dataBuffer_T_cf_intrVec_2, %dataBuffer_1_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %190 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %191 = firrtl.mux(%190, %_dataBuffer_T_cf_intrVec_3, %dataBuffer_1_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %192 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %193 = firrtl.mux(%192, %_dataBuffer_T_cf_intrVec_4, %dataBuffer_1_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %194 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %195 = firrtl.mux(%194, %_dataBuffer_T_cf_intrVec_5, %dataBuffer_1_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %196 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %197 = firrtl.mux(%196, %_dataBuffer_T_cf_intrVec_6, %dataBuffer_1_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %198 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %199 = firrtl.mux(%198, %_dataBuffer_T_cf_intrVec_7, %dataBuffer_1_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %200 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %201 = firrtl.mux(%200, %_dataBuffer_T_cf_intrVec_8, %dataBuffer_1_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %202 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %203 = firrtl.mux(%202, %_dataBuffer_T_cf_intrVec_9, %dataBuffer_1_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %204 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %205 = firrtl.mux(%204, %_dataBuffer_T_cf_intrVec_10, %dataBuffer_1_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %206 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %207 = firrtl.mux(%206, %_dataBuffer_T_cf_intrVec_11, %dataBuffer_1_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %208 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %209 = firrtl.mux(%208, %_dataBuffer_T_cf_brIdx, %dataBuffer_1_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %210 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %211 = firrtl.mux(%210, %_dataBuffer_T_cf_crossPageIPFFix, %dataBuffer_1_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %212 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %213 = firrtl.mux(%212, %_dataBuffer_T_ctrl_src1Type, %dataBuffer_1_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %214 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %215 = firrtl.mux(%214, %_dataBuffer_T_ctrl_src2Type, %dataBuffer_1_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %216 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %217 = firrtl.mux(%216, %_dataBuffer_T_ctrl_fuType, %dataBuffer_1_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %218 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %219 = firrtl.mux(%218, %_dataBuffer_T_ctrl_fuOpType, %dataBuffer_1_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %220 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %221 = firrtl.mux(%220, %_dataBuffer_T_ctrl_rfSrc1, %dataBuffer_1_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %222 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %223 = firrtl.mux(%222, %_dataBuffer_T_ctrl_rfSrc2, %dataBuffer_1_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %224 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %225 = firrtl.mux(%224, %_dataBuffer_T_ctrl_rfWen, %dataBuffer_1_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %226 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %227 = firrtl.mux(%226, %_dataBuffer_T_ctrl_rfDest, %dataBuffer_1_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %228 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %229 = firrtl.mux(%228, %_dataBuffer_T_ctrl_isNutCoreTrap, %dataBuffer_1_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %230 = firrtl.and %enqueueFire_0, %171 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %231 = firrtl.mux(%230, %_dataBuffer_T_data_imm, %dataBuffer_1_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %232 = firrtl.eq %ringBufferHead, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %233 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %234 = firrtl.mux(%233, %_dataBuffer_T_cf_instr, %dataBuffer_2_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %235 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %236 = firrtl.mux(%235, %_dataBuffer_T_cf_pc, %dataBuffer_2_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %237 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %238 = firrtl.mux(%237, %_dataBuffer_T_cf_pnpc, %dataBuffer_2_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %239 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %240 = firrtl.mux(%239, %_dataBuffer_T_cf_exceptionVec_1, %dataBuffer_2_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %241 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %242 = firrtl.mux(%241, %_dataBuffer_T_cf_exceptionVec_2, %dataBuffer_2_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %243 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %244 = firrtl.mux(%243, %_dataBuffer_T_cf_exceptionVec_12, %dataBuffer_2_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %245 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %246 = firrtl.mux(%245, %_dataBuffer_T_cf_intrVec_0, %dataBuffer_2_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %247 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %248 = firrtl.mux(%247, %_dataBuffer_T_cf_intrVec_1, %dataBuffer_2_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %249 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %250 = firrtl.mux(%249, %_dataBuffer_T_cf_intrVec_2, %dataBuffer_2_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %251 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %252 = firrtl.mux(%251, %_dataBuffer_T_cf_intrVec_3, %dataBuffer_2_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %253 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %254 = firrtl.mux(%253, %_dataBuffer_T_cf_intrVec_4, %dataBuffer_2_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %255 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %256 = firrtl.mux(%255, %_dataBuffer_T_cf_intrVec_5, %dataBuffer_2_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %257 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %258 = firrtl.mux(%257, %_dataBuffer_T_cf_intrVec_6, %dataBuffer_2_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %259 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %260 = firrtl.mux(%259, %_dataBuffer_T_cf_intrVec_7, %dataBuffer_2_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %261 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %262 = firrtl.mux(%261, %_dataBuffer_T_cf_intrVec_8, %dataBuffer_2_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %263 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %264 = firrtl.mux(%263, %_dataBuffer_T_cf_intrVec_9, %dataBuffer_2_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %265 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %266 = firrtl.mux(%265, %_dataBuffer_T_cf_intrVec_10, %dataBuffer_2_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %267 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %268 = firrtl.mux(%267, %_dataBuffer_T_cf_intrVec_11, %dataBuffer_2_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %269 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %270 = firrtl.mux(%269, %_dataBuffer_T_cf_brIdx, %dataBuffer_2_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %271 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %272 = firrtl.mux(%271, %_dataBuffer_T_cf_crossPageIPFFix, %dataBuffer_2_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %273 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %274 = firrtl.mux(%273, %_dataBuffer_T_ctrl_src1Type, %dataBuffer_2_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %275 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %276 = firrtl.mux(%275, %_dataBuffer_T_ctrl_src2Type, %dataBuffer_2_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %277 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %278 = firrtl.mux(%277, %_dataBuffer_T_ctrl_fuType, %dataBuffer_2_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %279 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %280 = firrtl.mux(%279, %_dataBuffer_T_ctrl_fuOpType, %dataBuffer_2_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %281 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %282 = firrtl.mux(%281, %_dataBuffer_T_ctrl_rfSrc1, %dataBuffer_2_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %283 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %284 = firrtl.mux(%283, %_dataBuffer_T_ctrl_rfSrc2, %dataBuffer_2_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %285 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %286 = firrtl.mux(%285, %_dataBuffer_T_ctrl_rfWen, %dataBuffer_2_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %287 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %288 = firrtl.mux(%287, %_dataBuffer_T_ctrl_rfDest, %dataBuffer_2_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %289 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %290 = firrtl.mux(%289, %_dataBuffer_T_ctrl_isNutCoreTrap, %dataBuffer_2_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %291 = firrtl.and %enqueueFire_0, %232 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %292 = firrtl.mux(%291, %_dataBuffer_T_data_imm, %dataBuffer_2_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %293 = firrtl.andr %ringBufferHead : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %294 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %295 = firrtl.mux(%294, %_dataBuffer_T_cf_instr, %dataBuffer_3_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %296 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %297 = firrtl.mux(%296, %_dataBuffer_T_cf_pc, %dataBuffer_3_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %298 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %299 = firrtl.mux(%298, %_dataBuffer_T_cf_pnpc, %dataBuffer_3_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %300 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %301 = firrtl.mux(%300, %_dataBuffer_T_cf_exceptionVec_1, %dataBuffer_3_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %302 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %303 = firrtl.mux(%302, %_dataBuffer_T_cf_exceptionVec_2, %dataBuffer_3_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %304 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %305 = firrtl.mux(%304, %_dataBuffer_T_cf_exceptionVec_12, %dataBuffer_3_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %306 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %307 = firrtl.mux(%306, %_dataBuffer_T_cf_intrVec_0, %dataBuffer_3_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %308 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %309 = firrtl.mux(%308, %_dataBuffer_T_cf_intrVec_1, %dataBuffer_3_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %310 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %311 = firrtl.mux(%310, %_dataBuffer_T_cf_intrVec_2, %dataBuffer_3_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %312 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %313 = firrtl.mux(%312, %_dataBuffer_T_cf_intrVec_3, %dataBuffer_3_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %314 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %315 = firrtl.mux(%314, %_dataBuffer_T_cf_intrVec_4, %dataBuffer_3_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %316 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %317 = firrtl.mux(%316, %_dataBuffer_T_cf_intrVec_5, %dataBuffer_3_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %318 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %319 = firrtl.mux(%318, %_dataBuffer_T_cf_intrVec_6, %dataBuffer_3_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %320 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %321 = firrtl.mux(%320, %_dataBuffer_T_cf_intrVec_7, %dataBuffer_3_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %322 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %323 = firrtl.mux(%322, %_dataBuffer_T_cf_intrVec_8, %dataBuffer_3_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %324 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %325 = firrtl.mux(%324, %_dataBuffer_T_cf_intrVec_9, %dataBuffer_3_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %326 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %327 = firrtl.mux(%326, %_dataBuffer_T_cf_intrVec_10, %dataBuffer_3_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %328 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %329 = firrtl.mux(%328, %_dataBuffer_T_cf_intrVec_11, %dataBuffer_3_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %330 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %331 = firrtl.mux(%330, %_dataBuffer_T_cf_brIdx, %dataBuffer_3_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %332 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %333 = firrtl.mux(%332, %_dataBuffer_T_cf_crossPageIPFFix, %dataBuffer_3_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %334 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %335 = firrtl.mux(%334, %_dataBuffer_T_ctrl_src1Type, %dataBuffer_3_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %336 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %337 = firrtl.mux(%336, %_dataBuffer_T_ctrl_src2Type, %dataBuffer_3_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %338 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %339 = firrtl.mux(%338, %_dataBuffer_T_ctrl_fuType, %dataBuffer_3_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %340 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %341 = firrtl.mux(%340, %_dataBuffer_T_ctrl_fuOpType, %dataBuffer_3_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %342 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %343 = firrtl.mux(%342, %_dataBuffer_T_ctrl_rfSrc1, %dataBuffer_3_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %344 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %345 = firrtl.mux(%344, %_dataBuffer_T_ctrl_rfSrc2, %dataBuffer_3_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %346 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %347 = firrtl.mux(%346, %_dataBuffer_T_ctrl_rfWen, %dataBuffer_3_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %348 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %349 = firrtl.mux(%348, %_dataBuffer_T_ctrl_rfDest, %dataBuffer_3_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %350 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %351 = firrtl.mux(%350, %_dataBuffer_T_ctrl_isNutCoreTrap, %dataBuffer_3_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %352 = firrtl.and %enqueueFire_0, %293 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %353 = firrtl.mux(%352, %_dataBuffer_T_data_imm, %dataBuffer_3_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %354 = firrtl.add %ringBufferHead, %c1_ui1 : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %355 = firrtl.bits %354 1 to 0 : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %356 = firrtl.orr %355 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %357 = firrtl.not %356 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %358 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %359 = firrtl.mux(%358, %c0_ui64, %112) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %360 = firrtl.mux(%_wen_T, %359, %dataBuffer_0_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_0_cf_instr, %360 : !firrtl.uint<64>
      %361 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %362 = firrtl.mux(%361, %c0_ui39, %114) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %363 = firrtl.mux(%_wen_T, %362, %dataBuffer_0_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_0_cf_pc, %363 : !firrtl.uint<39>
      %364 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %365 = firrtl.mux(%364, %c0_ui39, %116) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %366 = firrtl.mux(%_wen_T, %365, %dataBuffer_0_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_0_cf_pnpc, %366 : !firrtl.uint<39>
      %367 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %368 = firrtl.mux(%367, %c0_ui1, %118) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %369 = firrtl.mux(%_wen_T, %368, %dataBuffer_0_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_exceptionVec_1, %369 : !firrtl.uint<1>
      %370 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %371 = firrtl.mux(%370, %c0_ui1, %120) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %372 = firrtl.mux(%_wen_T, %371, %dataBuffer_0_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_exceptionVec_2, %372 : !firrtl.uint<1>
      %373 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %374 = firrtl.mux(%373, %c0_ui1, %122) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %375 = firrtl.mux(%_wen_T, %374, %dataBuffer_0_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_exceptionVec_12, %375 : !firrtl.uint<1>
      %376 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %377 = firrtl.mux(%376, %40, %124) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %378 = firrtl.mux(%_wen_T, %377, %dataBuffer_0_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_0, %378 : !firrtl.uint<1>
      %379 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %380 = firrtl.mux(%379, %41, %126) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %381 = firrtl.mux(%_wen_T, %380, %dataBuffer_0_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_1, %381 : !firrtl.uint<1>
      %382 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %383 = firrtl.mux(%382, %42, %128) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %384 = firrtl.mux(%_wen_T, %383, %dataBuffer_0_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_2, %384 : !firrtl.uint<1>
      %385 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %386 = firrtl.mux(%385, %43, %130) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %387 = firrtl.mux(%_wen_T, %386, %dataBuffer_0_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_3, %387 : !firrtl.uint<1>
      %388 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %389 = firrtl.mux(%388, %44, %132) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %390 = firrtl.mux(%_wen_T, %389, %dataBuffer_0_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_4, %390 : !firrtl.uint<1>
      %391 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %392 = firrtl.mux(%391, %45, %134) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %393 = firrtl.mux(%_wen_T, %392, %dataBuffer_0_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_5, %393 : !firrtl.uint<1>
      %394 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %395 = firrtl.mux(%394, %46, %136) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %396 = firrtl.mux(%_wen_T, %395, %dataBuffer_0_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_6, %396 : !firrtl.uint<1>
      %397 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %398 = firrtl.mux(%397, %47, %138) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %399 = firrtl.mux(%_wen_T, %398, %dataBuffer_0_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_7, %399 : !firrtl.uint<1>
      %400 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %401 = firrtl.mux(%400, %48, %140) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %402 = firrtl.mux(%_wen_T, %401, %dataBuffer_0_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_8, %402 : !firrtl.uint<1>
      %403 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %404 = firrtl.mux(%403, %49, %142) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %405 = firrtl.mux(%_wen_T, %404, %dataBuffer_0_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_9, %405 : !firrtl.uint<1>
      %406 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %407 = firrtl.mux(%406, %50, %144) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %408 = firrtl.mux(%_wen_T, %407, %dataBuffer_0_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_10, %408 : !firrtl.uint<1>
      %409 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %410 = firrtl.mux(%409, %51, %146) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %411 = firrtl.mux(%_wen_T, %410, %dataBuffer_0_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_intrVec_11, %411 : !firrtl.uint<1>
      %412 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %413 = firrtl.mux(%412, %c0_ui4, %148) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %414 = firrtl.mux(%_wen_T, %413, %dataBuffer_0_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %dataBuffer_0_cf_brIdx, %414 : !firrtl.uint<4>
      %415 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %416 = firrtl.mux(%415, %c0_ui1, %150) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %417 = firrtl.mux(%_wen_T, %416, %dataBuffer_0_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_cf_crossPageIPFFix, %417 : !firrtl.uint<1>
      %418 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %419 = firrtl.mux(%418, %c1_ui1, %152) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %420 = firrtl.mux(%_wen_T, %419, %dataBuffer_0_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_ctrl_src1Type, %420 : !firrtl.uint<1>
      %421 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %422 = firrtl.mux(%421, %c1_ui1, %154) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %423 = firrtl.mux(%_wen_T, %422, %dataBuffer_0_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_ctrl_src2Type, %423 : !firrtl.uint<1>
      %424 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %425 = firrtl.mux(%424, %c3_ui3, %156) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %426 = firrtl.mux(%_wen_T, %425, %dataBuffer_0_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %dataBuffer_0_ctrl_fuType, %426 : !firrtl.uint<3>
      %427 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %428 = firrtl.mux(%427, %c0_ui7, %158) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %429 = firrtl.mux(%_wen_T, %428, %dataBuffer_0_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %dataBuffer_0_ctrl_fuOpType, %429 : !firrtl.uint<7>
      %430 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %431 = firrtl.mux(%430, %c0_ui5, %160) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %432 = firrtl.mux(%_wen_T, %431, %dataBuffer_0_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_0_ctrl_rfSrc1, %432 : !firrtl.uint<5>
      %433 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %434 = firrtl.mux(%433, %c0_ui5, %162) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %435 = firrtl.mux(%_wen_T, %434, %dataBuffer_0_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_0_ctrl_rfSrc2, %435 : !firrtl.uint<5>
      %436 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %437 = firrtl.mux(%436, %c0_ui1, %164) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %438 = firrtl.mux(%_wen_T, %437, %dataBuffer_0_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_ctrl_rfWen, %438 : !firrtl.uint<1>
      %439 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %440 = firrtl.mux(%439, %c0_ui5, %166) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %441 = firrtl.mux(%_wen_T, %440, %dataBuffer_0_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_0_ctrl_rfDest, %441 : !firrtl.uint<5>
      %442 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %443 = firrtl.mux(%442, %c0_ui1, %168) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %444 = firrtl.mux(%_wen_T, %443, %dataBuffer_0_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_0_ctrl_isNutCoreTrap, %444 : !firrtl.uint<1>
      %445 = firrtl.and %enqueueFire_1, %357 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %446 = firrtl.mux(%445, %c0_ui64, %170) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %447 = firrtl.mux(%_wen_T, %446, %dataBuffer_0_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_0_data_imm, %447 : !firrtl.uint<64>
      %448 = firrtl.eq %355, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %449 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %450 = firrtl.mux(%449, %c0_ui64, %173) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %451 = firrtl.mux(%_wen_T, %450, %dataBuffer_1_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_1_cf_instr, %451 : !firrtl.uint<64>
      %452 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %453 = firrtl.mux(%452, %c0_ui39, %175) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %454 = firrtl.mux(%_wen_T, %453, %dataBuffer_1_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_1_cf_pc, %454 : !firrtl.uint<39>
      %455 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %456 = firrtl.mux(%455, %c0_ui39, %177) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %457 = firrtl.mux(%_wen_T, %456, %dataBuffer_1_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_1_cf_pnpc, %457 : !firrtl.uint<39>
      %458 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %459 = firrtl.mux(%458, %c0_ui1, %179) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %460 = firrtl.mux(%_wen_T, %459, %dataBuffer_1_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_exceptionVec_1, %460 : !firrtl.uint<1>
      %461 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %462 = firrtl.mux(%461, %c0_ui1, %181) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %463 = firrtl.mux(%_wen_T, %462, %dataBuffer_1_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_exceptionVec_2, %463 : !firrtl.uint<1>
      %464 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %465 = firrtl.mux(%464, %c0_ui1, %183) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %466 = firrtl.mux(%_wen_T, %465, %dataBuffer_1_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_exceptionVec_12, %466 : !firrtl.uint<1>
      %467 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %468 = firrtl.mux(%467, %40, %185) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %469 = firrtl.mux(%_wen_T, %468, %dataBuffer_1_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_0, %469 : !firrtl.uint<1>
      %470 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %471 = firrtl.mux(%470, %41, %187) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %472 = firrtl.mux(%_wen_T, %471, %dataBuffer_1_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_1, %472 : !firrtl.uint<1>
      %473 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %474 = firrtl.mux(%473, %42, %189) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %475 = firrtl.mux(%_wen_T, %474, %dataBuffer_1_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_2, %475 : !firrtl.uint<1>
      %476 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %477 = firrtl.mux(%476, %43, %191) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %478 = firrtl.mux(%_wen_T, %477, %dataBuffer_1_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_3, %478 : !firrtl.uint<1>
      %479 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %480 = firrtl.mux(%479, %44, %193) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %481 = firrtl.mux(%_wen_T, %480, %dataBuffer_1_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_4, %481 : !firrtl.uint<1>
      %482 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %483 = firrtl.mux(%482, %45, %195) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %484 = firrtl.mux(%_wen_T, %483, %dataBuffer_1_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_5, %484 : !firrtl.uint<1>
      %485 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %486 = firrtl.mux(%485, %46, %197) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %487 = firrtl.mux(%_wen_T, %486, %dataBuffer_1_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_6, %487 : !firrtl.uint<1>
      %488 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %489 = firrtl.mux(%488, %47, %199) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %490 = firrtl.mux(%_wen_T, %489, %dataBuffer_1_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_7, %490 : !firrtl.uint<1>
      %491 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %492 = firrtl.mux(%491, %48, %201) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %493 = firrtl.mux(%_wen_T, %492, %dataBuffer_1_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_8, %493 : !firrtl.uint<1>
      %494 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %495 = firrtl.mux(%494, %49, %203) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %496 = firrtl.mux(%_wen_T, %495, %dataBuffer_1_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_9, %496 : !firrtl.uint<1>
      %497 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %498 = firrtl.mux(%497, %50, %205) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %499 = firrtl.mux(%_wen_T, %498, %dataBuffer_1_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_10, %499 : !firrtl.uint<1>
      %500 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %501 = firrtl.mux(%500, %51, %207) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %502 = firrtl.mux(%_wen_T, %501, %dataBuffer_1_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_intrVec_11, %502 : !firrtl.uint<1>
      %503 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %504 = firrtl.mux(%503, %c0_ui4, %209) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %505 = firrtl.mux(%_wen_T, %504, %dataBuffer_1_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %dataBuffer_1_cf_brIdx, %505 : !firrtl.uint<4>
      %506 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %507 = firrtl.mux(%506, %c0_ui1, %211) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %508 = firrtl.mux(%_wen_T, %507, %dataBuffer_1_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_cf_crossPageIPFFix, %508 : !firrtl.uint<1>
      %509 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %510 = firrtl.mux(%509, %c1_ui1, %213) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %511 = firrtl.mux(%_wen_T, %510, %dataBuffer_1_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_ctrl_src1Type, %511 : !firrtl.uint<1>
      %512 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %513 = firrtl.mux(%512, %c1_ui1, %215) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %514 = firrtl.mux(%_wen_T, %513, %dataBuffer_1_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_ctrl_src2Type, %514 : !firrtl.uint<1>
      %515 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %516 = firrtl.mux(%515, %c3_ui3, %217) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %517 = firrtl.mux(%_wen_T, %516, %dataBuffer_1_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %dataBuffer_1_ctrl_fuType, %517 : !firrtl.uint<3>
      %518 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %519 = firrtl.mux(%518, %c0_ui7, %219) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %520 = firrtl.mux(%_wen_T, %519, %dataBuffer_1_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %dataBuffer_1_ctrl_fuOpType, %520 : !firrtl.uint<7>
      %521 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %522 = firrtl.mux(%521, %c0_ui5, %221) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %523 = firrtl.mux(%_wen_T, %522, %dataBuffer_1_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_1_ctrl_rfSrc1, %523 : !firrtl.uint<5>
      %524 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %525 = firrtl.mux(%524, %c0_ui5, %223) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %526 = firrtl.mux(%_wen_T, %525, %dataBuffer_1_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_1_ctrl_rfSrc2, %526 : !firrtl.uint<5>
      %527 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %528 = firrtl.mux(%527, %c0_ui1, %225) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %529 = firrtl.mux(%_wen_T, %528, %dataBuffer_1_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_ctrl_rfWen, %529 : !firrtl.uint<1>
      %530 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %531 = firrtl.mux(%530, %c0_ui5, %227) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %532 = firrtl.mux(%_wen_T, %531, %dataBuffer_1_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_1_ctrl_rfDest, %532 : !firrtl.uint<5>
      %533 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %534 = firrtl.mux(%533, %c0_ui1, %229) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %535 = firrtl.mux(%_wen_T, %534, %dataBuffer_1_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_1_ctrl_isNutCoreTrap, %535 : !firrtl.uint<1>
      %536 = firrtl.and %enqueueFire_1, %448 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %537 = firrtl.mux(%536, %c0_ui64, %231) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %538 = firrtl.mux(%_wen_T, %537, %dataBuffer_1_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_1_data_imm, %538 : !firrtl.uint<64>
      %539 = firrtl.eq %355, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %540 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %541 = firrtl.mux(%540, %c0_ui64, %234) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %542 = firrtl.mux(%_wen_T, %541, %dataBuffer_2_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_2_cf_instr, %542 : !firrtl.uint<64>
      %543 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %544 = firrtl.mux(%543, %c0_ui39, %236) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %545 = firrtl.mux(%_wen_T, %544, %dataBuffer_2_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_2_cf_pc, %545 : !firrtl.uint<39>
      %546 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %547 = firrtl.mux(%546, %c0_ui39, %238) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %548 = firrtl.mux(%_wen_T, %547, %dataBuffer_2_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_2_cf_pnpc, %548 : !firrtl.uint<39>
      %549 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %550 = firrtl.mux(%549, %c0_ui1, %240) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %551 = firrtl.mux(%_wen_T, %550, %dataBuffer_2_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_exceptionVec_1, %551 : !firrtl.uint<1>
      %552 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %553 = firrtl.mux(%552, %c0_ui1, %242) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %554 = firrtl.mux(%_wen_T, %553, %dataBuffer_2_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_exceptionVec_2, %554 : !firrtl.uint<1>
      %555 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %556 = firrtl.mux(%555, %c0_ui1, %244) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %557 = firrtl.mux(%_wen_T, %556, %dataBuffer_2_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_exceptionVec_12, %557 : !firrtl.uint<1>
      %558 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %559 = firrtl.mux(%558, %40, %246) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %560 = firrtl.mux(%_wen_T, %559, %dataBuffer_2_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_0, %560 : !firrtl.uint<1>
      %561 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %562 = firrtl.mux(%561, %41, %248) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %563 = firrtl.mux(%_wen_T, %562, %dataBuffer_2_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_1, %563 : !firrtl.uint<1>
      %564 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %565 = firrtl.mux(%564, %42, %250) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %566 = firrtl.mux(%_wen_T, %565, %dataBuffer_2_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_2, %566 : !firrtl.uint<1>
      %567 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %568 = firrtl.mux(%567, %43, %252) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %569 = firrtl.mux(%_wen_T, %568, %dataBuffer_2_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_3, %569 : !firrtl.uint<1>
      %570 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %571 = firrtl.mux(%570, %44, %254) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %572 = firrtl.mux(%_wen_T, %571, %dataBuffer_2_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_4, %572 : !firrtl.uint<1>
      %573 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %574 = firrtl.mux(%573, %45, %256) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %575 = firrtl.mux(%_wen_T, %574, %dataBuffer_2_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_5, %575 : !firrtl.uint<1>
      %576 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %577 = firrtl.mux(%576, %46, %258) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %578 = firrtl.mux(%_wen_T, %577, %dataBuffer_2_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_6, %578 : !firrtl.uint<1>
      %579 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %580 = firrtl.mux(%579, %47, %260) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %581 = firrtl.mux(%_wen_T, %580, %dataBuffer_2_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_7, %581 : !firrtl.uint<1>
      %582 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %583 = firrtl.mux(%582, %48, %262) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %584 = firrtl.mux(%_wen_T, %583, %dataBuffer_2_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_8, %584 : !firrtl.uint<1>
      %585 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %586 = firrtl.mux(%585, %49, %264) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %587 = firrtl.mux(%_wen_T, %586, %dataBuffer_2_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_9, %587 : !firrtl.uint<1>
      %588 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %589 = firrtl.mux(%588, %50, %266) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %590 = firrtl.mux(%_wen_T, %589, %dataBuffer_2_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_10, %590 : !firrtl.uint<1>
      %591 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %592 = firrtl.mux(%591, %51, %268) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %593 = firrtl.mux(%_wen_T, %592, %dataBuffer_2_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_intrVec_11, %593 : !firrtl.uint<1>
      %594 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %595 = firrtl.mux(%594, %c0_ui4, %270) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %596 = firrtl.mux(%_wen_T, %595, %dataBuffer_2_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %dataBuffer_2_cf_brIdx, %596 : !firrtl.uint<4>
      %597 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %598 = firrtl.mux(%597, %c0_ui1, %272) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %599 = firrtl.mux(%_wen_T, %598, %dataBuffer_2_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_cf_crossPageIPFFix, %599 : !firrtl.uint<1>
      %600 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %601 = firrtl.mux(%600, %c1_ui1, %274) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %602 = firrtl.mux(%_wen_T, %601, %dataBuffer_2_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_ctrl_src1Type, %602 : !firrtl.uint<1>
      %603 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %604 = firrtl.mux(%603, %c1_ui1, %276) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %605 = firrtl.mux(%_wen_T, %604, %dataBuffer_2_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_ctrl_src2Type, %605 : !firrtl.uint<1>
      %606 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %607 = firrtl.mux(%606, %c3_ui3, %278) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %608 = firrtl.mux(%_wen_T, %607, %dataBuffer_2_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %dataBuffer_2_ctrl_fuType, %608 : !firrtl.uint<3>
      %609 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %610 = firrtl.mux(%609, %c0_ui7, %280) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %611 = firrtl.mux(%_wen_T, %610, %dataBuffer_2_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %dataBuffer_2_ctrl_fuOpType, %611 : !firrtl.uint<7>
      %612 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %613 = firrtl.mux(%612, %c0_ui5, %282) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %614 = firrtl.mux(%_wen_T, %613, %dataBuffer_2_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_2_ctrl_rfSrc1, %614 : !firrtl.uint<5>
      %615 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %616 = firrtl.mux(%615, %c0_ui5, %284) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %617 = firrtl.mux(%_wen_T, %616, %dataBuffer_2_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_2_ctrl_rfSrc2, %617 : !firrtl.uint<5>
      %618 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %619 = firrtl.mux(%618, %c0_ui1, %286) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %620 = firrtl.mux(%_wen_T, %619, %dataBuffer_2_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_ctrl_rfWen, %620 : !firrtl.uint<1>
      %621 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %622 = firrtl.mux(%621, %c0_ui5, %288) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %623 = firrtl.mux(%_wen_T, %622, %dataBuffer_2_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_2_ctrl_rfDest, %623 : !firrtl.uint<5>
      %624 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %625 = firrtl.mux(%624, %c0_ui1, %290) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %626 = firrtl.mux(%_wen_T, %625, %dataBuffer_2_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_2_ctrl_isNutCoreTrap, %626 : !firrtl.uint<1>
      %627 = firrtl.and %enqueueFire_1, %539 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %628 = firrtl.mux(%627, %c0_ui64, %292) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %629 = firrtl.mux(%_wen_T, %628, %dataBuffer_2_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_2_data_imm, %629 : !firrtl.uint<64>
      %630 = firrtl.andr %355 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %631 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %632 = firrtl.mux(%631, %c0_ui64, %295) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %633 = firrtl.mux(%_wen_T, %632, %dataBuffer_3_cf_instr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_3_cf_instr, %633 : !firrtl.uint<64>
      %634 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %635 = firrtl.mux(%634, %c0_ui39, %297) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %636 = firrtl.mux(%_wen_T, %635, %dataBuffer_3_cf_pc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_3_cf_pc, %636 : !firrtl.uint<39>
      %637 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %638 = firrtl.mux(%637, %c0_ui39, %299) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      %639 = firrtl.mux(%_wen_T, %638, %dataBuffer_3_cf_pnpc) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %dataBuffer_3_cf_pnpc, %639 : !firrtl.uint<39>
      %640 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %641 = firrtl.mux(%640, %c0_ui1, %301) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %642 = firrtl.mux(%_wen_T, %641, %dataBuffer_3_cf_exceptionVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_exceptionVec_1, %642 : !firrtl.uint<1>
      %643 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %644 = firrtl.mux(%643, %c0_ui1, %303) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %645 = firrtl.mux(%_wen_T, %644, %dataBuffer_3_cf_exceptionVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_exceptionVec_2, %645 : !firrtl.uint<1>
      %646 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %647 = firrtl.mux(%646, %c0_ui1, %305) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %648 = firrtl.mux(%_wen_T, %647, %dataBuffer_3_cf_exceptionVec_12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_exceptionVec_12, %648 : !firrtl.uint<1>
      %649 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %650 = firrtl.mux(%649, %40, %307) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %651 = firrtl.mux(%_wen_T, %650, %dataBuffer_3_cf_intrVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_0, %651 : !firrtl.uint<1>
      %652 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %653 = firrtl.mux(%652, %41, %309) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %654 = firrtl.mux(%_wen_T, %653, %dataBuffer_3_cf_intrVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_1, %654 : !firrtl.uint<1>
      %655 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %656 = firrtl.mux(%655, %42, %311) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %657 = firrtl.mux(%_wen_T, %656, %dataBuffer_3_cf_intrVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_2, %657 : !firrtl.uint<1>
      %658 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %659 = firrtl.mux(%658, %43, %313) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %660 = firrtl.mux(%_wen_T, %659, %dataBuffer_3_cf_intrVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_3, %660 : !firrtl.uint<1>
      %661 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %662 = firrtl.mux(%661, %44, %315) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %663 = firrtl.mux(%_wen_T, %662, %dataBuffer_3_cf_intrVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_4, %663 : !firrtl.uint<1>
      %664 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %665 = firrtl.mux(%664, %45, %317) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %666 = firrtl.mux(%_wen_T, %665, %dataBuffer_3_cf_intrVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_5, %666 : !firrtl.uint<1>
      %667 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %668 = firrtl.mux(%667, %46, %319) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %669 = firrtl.mux(%_wen_T, %668, %dataBuffer_3_cf_intrVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_6, %669 : !firrtl.uint<1>
      %670 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %671 = firrtl.mux(%670, %47, %321) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %672 = firrtl.mux(%_wen_T, %671, %dataBuffer_3_cf_intrVec_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_7, %672 : !firrtl.uint<1>
      %673 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %674 = firrtl.mux(%673, %48, %323) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %675 = firrtl.mux(%_wen_T, %674, %dataBuffer_3_cf_intrVec_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_8, %675 : !firrtl.uint<1>
      %676 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %677 = firrtl.mux(%676, %49, %325) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %678 = firrtl.mux(%_wen_T, %677, %dataBuffer_3_cf_intrVec_9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_9, %678 : !firrtl.uint<1>
      %679 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %680 = firrtl.mux(%679, %50, %327) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %681 = firrtl.mux(%_wen_T, %680, %dataBuffer_3_cf_intrVec_10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_10, %681 : !firrtl.uint<1>
      %682 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %683 = firrtl.mux(%682, %51, %329) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %684 = firrtl.mux(%_wen_T, %683, %dataBuffer_3_cf_intrVec_11) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_intrVec_11, %684 : !firrtl.uint<1>
      %685 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %686 = firrtl.mux(%685, %c0_ui4, %331) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %687 = firrtl.mux(%_wen_T, %686, %dataBuffer_3_cf_brIdx) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %dataBuffer_3_cf_brIdx, %687 : !firrtl.uint<4>
      %688 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %689 = firrtl.mux(%688, %c0_ui1, %333) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %690 = firrtl.mux(%_wen_T, %689, %dataBuffer_3_cf_crossPageIPFFix) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_cf_crossPageIPFFix, %690 : !firrtl.uint<1>
      %691 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %692 = firrtl.mux(%691, %c1_ui1, %335) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %693 = firrtl.mux(%_wen_T, %692, %dataBuffer_3_ctrl_src1Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_ctrl_src1Type, %693 : !firrtl.uint<1>
      %694 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %695 = firrtl.mux(%694, %c1_ui1, %337) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %696 = firrtl.mux(%_wen_T, %695, %dataBuffer_3_ctrl_src2Type) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_ctrl_src2Type, %696 : !firrtl.uint<1>
      %697 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %698 = firrtl.mux(%697, %c3_ui3, %339) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %699 = firrtl.mux(%_wen_T, %698, %dataBuffer_3_ctrl_fuType) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %dataBuffer_3_ctrl_fuType, %699 : !firrtl.uint<3>
      %700 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %701 = firrtl.mux(%700, %c0_ui7, %341) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %702 = firrtl.mux(%_wen_T, %701, %dataBuffer_3_ctrl_fuOpType) : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      firrtl.strictconnect %dataBuffer_3_ctrl_fuOpType, %702 : !firrtl.uint<7>
      %703 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %704 = firrtl.mux(%703, %c0_ui5, %343) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %705 = firrtl.mux(%_wen_T, %704, %dataBuffer_3_ctrl_rfSrc1) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_3_ctrl_rfSrc1, %705 : !firrtl.uint<5>
      %706 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %707 = firrtl.mux(%706, %c0_ui5, %345) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %708 = firrtl.mux(%_wen_T, %707, %dataBuffer_3_ctrl_rfSrc2) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_3_ctrl_rfSrc2, %708 : !firrtl.uint<5>
      %709 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %710 = firrtl.mux(%709, %c0_ui1, %347) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %711 = firrtl.mux(%_wen_T, %710, %dataBuffer_3_ctrl_rfWen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_ctrl_rfWen, %711 : !firrtl.uint<1>
      %712 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %713 = firrtl.mux(%712, %c0_ui5, %349) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %714 = firrtl.mux(%_wen_T, %713, %dataBuffer_3_ctrl_rfDest) : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      firrtl.strictconnect %dataBuffer_3_ctrl_rfDest, %714 : !firrtl.uint<5>
      %715 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %716 = firrtl.mux(%715, %c0_ui1, %351) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %717 = firrtl.mux(%_wen_T, %716, %dataBuffer_3_ctrl_isNutCoreTrap) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %dataBuffer_3_ctrl_isNutCoreTrap, %717 : !firrtl.uint<1>
      %718 = firrtl.and %enqueueFire_1, %630 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %719 = firrtl.mux(%718, %c0_ui64, %353) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %720 = firrtl.mux(%_wen_T, %719, %dataBuffer_3_data_imm) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataBuffer_3_data_imm, %720 : !firrtl.uint<64>
      %_ringBufferHead_T = firrtl.add %needEnqueue_0, %ringBufferHead {name = "_ringBufferHead_T"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_ringBufferHead_T_1 = firrtl.bits %_ringBufferHead_T 1 to 0 {name = "_ringBufferHead_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %721 = firrtl.mux(%_wen_T, %_ringBufferHead_T_1, %ringBufferHead) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_frontend_io_out_0_ready_T = firrtl.not %9 {name = "_frontend_io_out_0_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_frontend_io_out_0_ready_T_1 = firrtl.or %ringBufferAllowin, %_frontend_io_out_0_ready_T {name = "_frontend_io_out_0_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %8, %_frontend_io_out_0_ready_T_1 : !firrtl.uint<1>
      %722 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_instr, %dataBuffer_2_cf_instr, %dataBuffer_1_cf_instr, %dataBuffer_0_cf_instr : !firrtl.uint<2>, !firrtl.uint<64>
      %723 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_pc, %dataBuffer_2_cf_pc, %dataBuffer_1_cf_pc, %dataBuffer_0_cf_pc : !firrtl.uint<2>, !firrtl.uint<39>
      %724 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_pnpc, %dataBuffer_2_cf_pnpc, %dataBuffer_1_cf_pnpc, %dataBuffer_0_cf_pnpc : !firrtl.uint<2>, !firrtl.uint<39>
      %725 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_exceptionVec_1, %dataBuffer_2_cf_exceptionVec_1, %dataBuffer_1_cf_exceptionVec_1, %dataBuffer_0_cf_exceptionVec_1 : !firrtl.uint<2>, !firrtl.uint<1>
      %726 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_exceptionVec_2, %dataBuffer_2_cf_exceptionVec_2, %dataBuffer_1_cf_exceptionVec_2, %dataBuffer_0_cf_exceptionVec_2 : !firrtl.uint<2>, !firrtl.uint<1>
      %727 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_exceptionVec_12, %dataBuffer_2_cf_exceptionVec_12, %dataBuffer_1_cf_exceptionVec_12, %dataBuffer_0_cf_exceptionVec_12 : !firrtl.uint<2>, !firrtl.uint<1>
      %728 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_0, %dataBuffer_2_cf_intrVec_0, %dataBuffer_1_cf_intrVec_0, %dataBuffer_0_cf_intrVec_0 : !firrtl.uint<2>, !firrtl.uint<1>
      %729 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_1, %dataBuffer_2_cf_intrVec_1, %dataBuffer_1_cf_intrVec_1, %dataBuffer_0_cf_intrVec_1 : !firrtl.uint<2>, !firrtl.uint<1>
      %730 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_2, %dataBuffer_2_cf_intrVec_2, %dataBuffer_1_cf_intrVec_2, %dataBuffer_0_cf_intrVec_2 : !firrtl.uint<2>, !firrtl.uint<1>
      %731 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_3, %dataBuffer_2_cf_intrVec_3, %dataBuffer_1_cf_intrVec_3, %dataBuffer_0_cf_intrVec_3 : !firrtl.uint<2>, !firrtl.uint<1>
      %732 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_4, %dataBuffer_2_cf_intrVec_4, %dataBuffer_1_cf_intrVec_4, %dataBuffer_0_cf_intrVec_4 : !firrtl.uint<2>, !firrtl.uint<1>
      %733 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_5, %dataBuffer_2_cf_intrVec_5, %dataBuffer_1_cf_intrVec_5, %dataBuffer_0_cf_intrVec_5 : !firrtl.uint<2>, !firrtl.uint<1>
      %734 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_6, %dataBuffer_2_cf_intrVec_6, %dataBuffer_1_cf_intrVec_6, %dataBuffer_0_cf_intrVec_6 : !firrtl.uint<2>, !firrtl.uint<1>
      %735 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_7, %dataBuffer_2_cf_intrVec_7, %dataBuffer_1_cf_intrVec_7, %dataBuffer_0_cf_intrVec_7 : !firrtl.uint<2>, !firrtl.uint<1>
      %736 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_8, %dataBuffer_2_cf_intrVec_8, %dataBuffer_1_cf_intrVec_8, %dataBuffer_0_cf_intrVec_8 : !firrtl.uint<2>, !firrtl.uint<1>
      %737 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_9, %dataBuffer_2_cf_intrVec_9, %dataBuffer_1_cf_intrVec_9, %dataBuffer_0_cf_intrVec_9 : !firrtl.uint<2>, !firrtl.uint<1>
      %738 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_10, %dataBuffer_2_cf_intrVec_10, %dataBuffer_1_cf_intrVec_10, %dataBuffer_0_cf_intrVec_10 : !firrtl.uint<2>, !firrtl.uint<1>
      %739 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_intrVec_11, %dataBuffer_2_cf_intrVec_11, %dataBuffer_1_cf_intrVec_11, %dataBuffer_0_cf_intrVec_11 : !firrtl.uint<2>, !firrtl.uint<1>
      %740 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_brIdx, %dataBuffer_2_cf_brIdx, %dataBuffer_1_cf_brIdx, %dataBuffer_0_cf_brIdx : !firrtl.uint<2>, !firrtl.uint<4>
      %741 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_cf_crossPageIPFFix, %dataBuffer_2_cf_crossPageIPFFix, %dataBuffer_1_cf_crossPageIPFFix, %dataBuffer_0_cf_crossPageIPFFix : !firrtl.uint<2>, !firrtl.uint<1>
      %742 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_src1Type, %dataBuffer_2_ctrl_src1Type, %dataBuffer_1_ctrl_src1Type, %dataBuffer_0_ctrl_src1Type : !firrtl.uint<2>, !firrtl.uint<1>
      %743 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_src2Type, %dataBuffer_2_ctrl_src2Type, %dataBuffer_1_ctrl_src2Type, %dataBuffer_0_ctrl_src2Type : !firrtl.uint<2>, !firrtl.uint<1>
      %744 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_fuType, %dataBuffer_2_ctrl_fuType, %dataBuffer_1_ctrl_fuType, %dataBuffer_0_ctrl_fuType : !firrtl.uint<2>, !firrtl.uint<3>
      %745 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_fuOpType, %dataBuffer_2_ctrl_fuOpType, %dataBuffer_1_ctrl_fuOpType, %dataBuffer_0_ctrl_fuOpType : !firrtl.uint<2>, !firrtl.uint<7>
      %746 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_rfSrc1, %dataBuffer_2_ctrl_rfSrc1, %dataBuffer_1_ctrl_rfSrc1, %dataBuffer_0_ctrl_rfSrc1 : !firrtl.uint<2>, !firrtl.uint<5>
      %747 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_rfSrc2, %dataBuffer_2_ctrl_rfSrc2, %dataBuffer_1_ctrl_rfSrc2, %dataBuffer_0_ctrl_rfSrc2 : !firrtl.uint<2>, !firrtl.uint<5>
      %748 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_rfWen, %dataBuffer_2_ctrl_rfWen, %dataBuffer_1_ctrl_rfWen, %dataBuffer_0_ctrl_rfWen : !firrtl.uint<2>, !firrtl.uint<1>
      %749 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_rfDest, %dataBuffer_2_ctrl_rfDest, %dataBuffer_1_ctrl_rfDest, %dataBuffer_0_ctrl_rfDest : !firrtl.uint<2>, !firrtl.uint<5>
      %750 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_ctrl_isNutCoreTrap, %dataBuffer_2_ctrl_isNutCoreTrap, %dataBuffer_1_ctrl_isNutCoreTrap, %dataBuffer_0_ctrl_isNutCoreTrap : !firrtl.uint<2>, !firrtl.uint<1>
      %751 = firrtl.multibit_mux %ringBufferTail, %dataBuffer_3_data_imm, %dataBuffer_2_data_imm, %dataBuffer_1_data_imm, %dataBuffer_0_data_imm : !firrtl.uint<2>, !firrtl.uint<64>
      firrtl.strictconnect %87, %751 : !firrtl.uint<64>
      firrtl.strictconnect %86, %750 : !firrtl.uint<1>
      firrtl.strictconnect %85, %749 : !firrtl.uint<5>
      firrtl.strictconnect %84, %748 : !firrtl.uint<1>
      firrtl.strictconnect %83, %747 : !firrtl.uint<5>
      firrtl.strictconnect %82, %746 : !firrtl.uint<5>
      firrtl.strictconnect %81, %745 : !firrtl.uint<7>
      firrtl.strictconnect %80, %744 : !firrtl.uint<3>
      firrtl.strictconnect %79, %743 : !firrtl.uint<1>
      firrtl.strictconnect %78, %742 : !firrtl.uint<1>
      firrtl.strictconnect %77, %741 : !firrtl.uint<1>
      firrtl.strictconnect %76, %740 : !firrtl.uint<4>
      firrtl.strictconnect %64, %728 : !firrtl.uint<1>
      firrtl.strictconnect %65, %729 : !firrtl.uint<1>
      firrtl.strictconnect %66, %730 : !firrtl.uint<1>
      firrtl.strictconnect %67, %731 : !firrtl.uint<1>
      firrtl.strictconnect %68, %732 : !firrtl.uint<1>
      firrtl.strictconnect %69, %733 : !firrtl.uint<1>
      firrtl.strictconnect %70, %734 : !firrtl.uint<1>
      firrtl.strictconnect %71, %735 : !firrtl.uint<1>
      firrtl.strictconnect %72, %736 : !firrtl.uint<1>
      firrtl.strictconnect %73, %737 : !firrtl.uint<1>
      firrtl.strictconnect %74, %738 : !firrtl.uint<1>
      firrtl.strictconnect %75, %739 : !firrtl.uint<1>
      firrtl.strictconnect %61, %725 : !firrtl.uint<1>
      firrtl.strictconnect %62, %726 : !firrtl.uint<1>
      firrtl.strictconnect %63, %727 : !firrtl.uint<1>
      firrtl.strictconnect %60, %724 : !firrtl.uint<39>
      firrtl.strictconnect %59, %723 : !firrtl.uint<39>
      firrtl.strictconnect %58, %722 : !firrtl.uint<64>
      %_backend_io_in_0_valid_T = firrtl.neq %ringBufferHead, %ringBufferTail {name = "_backend_io_in_0_valid_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      firrtl.strictconnect %57, %_backend_io_in_0_valid_T : !firrtl.uint<1>
      %_dequeueSize_T = firrtl.and %56, %57 {name = "_dequeueSize_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %752 = firrtl.pad %_dequeueSize_T, 2 : (!firrtl.uint<1>) -> !firrtl.uint<2>
      %dequeueFire = firrtl.gt %752, %c0_ui1 {name = "dequeueFire"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_ringBufferTail_T = firrtl.add %_dequeueSize_T, %ringBufferTail {name = "_ringBufferTail_T"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %_ringBufferTail_T_1 = firrtl.bits %_ringBufferTail_T 1 to 0 {name = "_ringBufferTail_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<2>
      %753 = firrtl.mux(%dequeueFire, %_ringBufferTail_T_1, %ringBufferTail) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %754 = firrtl.mux(%107, %c0_ui2, %721) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %ringBufferHead, %754 : !firrtl.uint<2>
      %755 = firrtl.mux(%107, %c0_ui2, %753) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %ringBufferTail, %755 : !firrtl.uint<2>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %control_timer = firrtl.wire : !firrtl.uint<64>
      %control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %756 = firrtl.add %ringBufferHead, %c4_ui3 : (!firrtl.uint<2>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %757 = firrtl.sub %756, %ringBufferTail : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<5>
      %758 = firrtl.bits %757 3 to 0 : (!firrtl.uint<5>) -> !firrtl.uint<4>
      %759 = firrtl.rem %758, %c4_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %760 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %761 = firrtl.and %control_logEnable, %760 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %761, "[DPQ] size %x head %x tail %x enq %x deq %x\0A" {name = "printf"} (%759, %ringBufferHead, %ringBufferTail, %108, %752) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<2>, !firrtl.uint<2>, !firrtl.uint<2>, !firrtl.uint<2>
      %mmioXbar_clock, %mmioXbar_reset, %mmioXbar_io_in_0_req_ready, %mmioXbar_io_in_0_req_valid, %mmioXbar_io_in_0_req_bits_addr, %mmioXbar_io_in_0_req_bits_size, %mmioXbar_io_in_0_req_bits_cmd, %mmioXbar_io_in_0_req_bits_wmask, %mmioXbar_io_in_0_req_bits_wdata, %mmioXbar_io_in_0_resp_valid, %mmioXbar_io_in_0_resp_bits_cmd, %mmioXbar_io_in_0_resp_bits_rdata, %mmioXbar_io_in_1_req_ready, %mmioXbar_io_in_1_req_valid, %mmioXbar_io_in_1_req_bits_addr, %mmioXbar_io_in_1_req_bits_size, %mmioXbar_io_in_1_req_bits_cmd, %mmioXbar_io_in_1_req_bits_wmask, %mmioXbar_io_in_1_req_bits_wdata, %mmioXbar_io_in_1_resp_valid, %mmioXbar_io_in_1_resp_bits_cmd, %mmioXbar_io_in_1_resp_bits_rdata, %mmioXbar_io_out_req_ready, %mmioXbar_io_out_req_valid, %mmioXbar_io_out_req_bits_addr, %mmioXbar_io_out_req_bits_size, %mmioXbar_io_out_req_bits_cmd, %mmioXbar_io_out_req_bits_wmask, %mmioXbar_io_out_req_bits_wdata, %mmioXbar_io_out_resp_valid, %mmioXbar_io_out_resp_bits_cmd, %mmioXbar_io_out_resp_bits_rdata = firrtl.instance mmioXbar @SimpleBusCrossbarNto1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_req_ready: !firrtl.uint<1>, in io_in_0_req_valid: !firrtl.uint<1>, in io_in_0_req_bits_addr: !firrtl.uint<32>, in io_in_0_req_bits_size: !firrtl.uint<3>, in io_in_0_req_bits_cmd: !firrtl.uint<4>, in io_in_0_req_bits_wmask: !firrtl.uint<8>, in io_in_0_req_bits_wdata: !firrtl.uint<64>, out io_in_0_resp_valid: !firrtl.uint<1>, out io_in_0_resp_bits_cmd: !firrtl.uint<4>, out io_in_0_resp_bits_rdata: !firrtl.uint<64>, out io_in_1_req_ready: !firrtl.uint<1>, in io_in_1_req_valid: !firrtl.uint<1>, in io_in_1_req_bits_addr: !firrtl.uint<32>, in io_in_1_req_bits_size: !firrtl.uint<3>, in io_in_1_req_bits_cmd: !firrtl.uint<4>, in io_in_1_req_bits_wmask: !firrtl.uint<8>, in io_in_1_req_bits_wdata: !firrtl.uint<64>, out io_in_1_resp_valid: !firrtl.uint<1>, out io_in_1_resp_bits_cmd: !firrtl.uint<4>, out io_in_1_resp_bits_rdata: !firrtl.uint<64>, in io_out_req_ready: !firrtl.uint<1>, out io_out_req_valid: !firrtl.uint<1>, out io_out_req_bits_addr: !firrtl.uint<32>, out io_out_req_bits_size: !firrtl.uint<3>, out io_out_req_bits_cmd: !firrtl.uint<4>, out io_out_req_bits_wmask: !firrtl.uint<8>, out io_out_req_bits_wdata: !firrtl.uint<64>, in io_out_resp_valid: !firrtl.uint<1>, in io_out_resp_bits_cmd: !firrtl.uint<4>, in io_out_resp_bits_rdata: !firrtl.uint<64>)
      %762 = firrtl.wire : !firrtl.uint<1>
      %763 = firrtl.wire : !firrtl.uint<1>
      %764 = firrtl.wire : !firrtl.uint<32>
      %765 = firrtl.wire : !firrtl.uint<3>
      %766 = firrtl.wire : !firrtl.uint<4>
      %767 = firrtl.wire : !firrtl.uint<8>
      %768 = firrtl.wire : !firrtl.uint<64>
      %769 = firrtl.wire : !firrtl.uint<1>
      %770 = firrtl.wire : !firrtl.uint<64>
      %771 = firrtl.wire : !firrtl.uint<1>
      %772 = firrtl.wire : !firrtl.uint<1>
      %773 = firrtl.wire : !firrtl.uint<32>
      %774 = firrtl.wire : !firrtl.uint<3>
      %775 = firrtl.wire : !firrtl.uint<4>
      %776 = firrtl.wire : !firrtl.uint<8>
      %777 = firrtl.wire : !firrtl.uint<64>
      %778 = firrtl.wire : !firrtl.uint<1>
      %779 = firrtl.wire : !firrtl.uint<64>
      %780 = firrtl.wire : !firrtl.uint<1>
      %781 = firrtl.wire : !firrtl.uint<32>
      %782 = firrtl.wire : !firrtl.uint<3>
      %783 = firrtl.wire : !firrtl.uint<4>
      %784 = firrtl.wire : !firrtl.uint<8>
      %785 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %762, %mmioXbar_io_in_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_in_0_req_valid, %763 : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_in_0_req_bits_addr, %764 : !firrtl.uint<32>
      firrtl.strictconnect %mmioXbar_io_in_0_req_bits_size, %765 : !firrtl.uint<3>
      firrtl.strictconnect %mmioXbar_io_in_0_req_bits_cmd, %766 : !firrtl.uint<4>
      firrtl.strictconnect %mmioXbar_io_in_0_req_bits_wmask, %767 : !firrtl.uint<8>
      firrtl.strictconnect %mmioXbar_io_in_0_req_bits_wdata, %768 : !firrtl.uint<64>
      firrtl.strictconnect %769, %mmioXbar_io_in_0_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %770, %mmioXbar_io_in_0_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %771, %mmioXbar_io_in_1_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_in_1_req_valid, %772 : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_in_1_req_bits_addr, %773 : !firrtl.uint<32>
      firrtl.strictconnect %mmioXbar_io_in_1_req_bits_size, %774 : !firrtl.uint<3>
      firrtl.strictconnect %mmioXbar_io_in_1_req_bits_cmd, %775 : !firrtl.uint<4>
      firrtl.strictconnect %mmioXbar_io_in_1_req_bits_wmask, %776 : !firrtl.uint<8>
      firrtl.strictconnect %mmioXbar_io_in_1_req_bits_wdata, %777 : !firrtl.uint<64>
      firrtl.strictconnect %778, %mmioXbar_io_in_1_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %779, %mmioXbar_io_in_1_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %mmioXbar_io_out_req_ready, %io_mmio_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %780, %mmioXbar_io_out_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %781, %mmioXbar_io_out_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %782, %mmioXbar_io_out_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %783, %mmioXbar_io_out_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %784, %mmioXbar_io_out_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %785, %mmioXbar_io_out_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %mmioXbar_io_out_resp_valid, %io_mmio_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_out_resp_bits_cmd, %io_mmio_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %mmioXbar_io_out_resp_bits_rdata, %io_mmio_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %mmioXbar_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mmioXbar_reset, %reset : !firrtl.uint<1>
      %dmemXbar_clock, %dmemXbar_reset, %dmemXbar_io_in_0_req_ready, %dmemXbar_io_in_0_req_valid, %dmemXbar_io_in_0_req_bits_addr, %dmemXbar_io_in_0_req_bits_size, %dmemXbar_io_in_0_req_bits_cmd, %dmemXbar_io_in_0_req_bits_wmask, %dmemXbar_io_in_0_req_bits_wdata, %dmemXbar_io_in_0_resp_valid, %dmemXbar_io_in_0_resp_bits_cmd, %dmemXbar_io_in_0_resp_bits_rdata, %dmemXbar_io_in_1_req_ready, %dmemXbar_io_in_1_req_valid, %dmemXbar_io_in_1_req_bits_addr, %dmemXbar_io_in_1_req_bits_cmd, %dmemXbar_io_in_1_req_bits_wdata, %dmemXbar_io_in_1_resp_valid, %dmemXbar_io_in_1_resp_bits_cmd, %dmemXbar_io_in_1_resp_bits_rdata, %dmemXbar_io_in_2_req_ready, %dmemXbar_io_in_2_req_valid, %dmemXbar_io_in_2_req_bits_addr, %dmemXbar_io_in_2_req_bits_cmd, %dmemXbar_io_in_2_req_bits_wdata, %dmemXbar_io_in_2_resp_valid, %dmemXbar_io_in_2_resp_bits_cmd, %dmemXbar_io_in_2_resp_bits_rdata, %dmemXbar_io_in_3_req_ready, %dmemXbar_io_in_3_req_valid, %dmemXbar_io_in_3_req_bits_addr, %dmemXbar_io_in_3_req_bits_size, %dmemXbar_io_in_3_req_bits_cmd, %dmemXbar_io_in_3_req_bits_wmask, %dmemXbar_io_in_3_req_bits_wdata, %dmemXbar_io_in_3_resp_ready, %dmemXbar_io_in_3_resp_valid, %dmemXbar_io_in_3_resp_bits_cmd, %dmemXbar_io_in_3_resp_bits_rdata, %dmemXbar_io_out_req_ready, %dmemXbar_io_out_req_valid, %dmemXbar_io_out_req_bits_addr, %dmemXbar_io_out_req_bits_size, %dmemXbar_io_out_req_bits_cmd, %dmemXbar_io_out_req_bits_wmask, %dmemXbar_io_out_req_bits_wdata, %dmemXbar_io_out_resp_ready, %dmemXbar_io_out_resp_valid, %dmemXbar_io_out_resp_bits_cmd, %dmemXbar_io_out_resp_bits_rdata = firrtl.instance dmemXbar @SimpleBusCrossbarNto1_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_req_ready: !firrtl.uint<1>, in io_in_0_req_valid: !firrtl.uint<1>, in io_in_0_req_bits_addr: !firrtl.uint<32>, in io_in_0_req_bits_size: !firrtl.uint<3>, in io_in_0_req_bits_cmd: !firrtl.uint<4>, in io_in_0_req_bits_wmask: !firrtl.uint<8>, in io_in_0_req_bits_wdata: !firrtl.uint<64>, out io_in_0_resp_valid: !firrtl.uint<1>, out io_in_0_resp_bits_cmd: !firrtl.uint<4>, out io_in_0_resp_bits_rdata: !firrtl.uint<64>, out io_in_1_req_ready: !firrtl.uint<1>, in io_in_1_req_valid: !firrtl.uint<1>, in io_in_1_req_bits_addr: !firrtl.uint<32>, in io_in_1_req_bits_cmd: !firrtl.uint<4>, in io_in_1_req_bits_wdata: !firrtl.uint<64>, out io_in_1_resp_valid: !firrtl.uint<1>, out io_in_1_resp_bits_cmd: !firrtl.uint<4>, out io_in_1_resp_bits_rdata: !firrtl.uint<64>, out io_in_2_req_ready: !firrtl.uint<1>, in io_in_2_req_valid: !firrtl.uint<1>, in io_in_2_req_bits_addr: !firrtl.uint<32>, in io_in_2_req_bits_cmd: !firrtl.uint<4>, in io_in_2_req_bits_wdata: !firrtl.uint<64>, out io_in_2_resp_valid: !firrtl.uint<1>, out io_in_2_resp_bits_cmd: !firrtl.uint<4>, out io_in_2_resp_bits_rdata: !firrtl.uint<64>, out io_in_3_req_ready: !firrtl.uint<1>, in io_in_3_req_valid: !firrtl.uint<1>, in io_in_3_req_bits_addr: !firrtl.uint<32>, in io_in_3_req_bits_size: !firrtl.uint<3>, in io_in_3_req_bits_cmd: !firrtl.uint<4>, in io_in_3_req_bits_wmask: !firrtl.uint<8>, in io_in_3_req_bits_wdata: !firrtl.uint<64>, in io_in_3_resp_ready: !firrtl.uint<1>, out io_in_3_resp_valid: !firrtl.uint<1>, out io_in_3_resp_bits_cmd: !firrtl.uint<4>, out io_in_3_resp_bits_rdata: !firrtl.uint<64>, in io_out_req_ready: !firrtl.uint<1>, out io_out_req_valid: !firrtl.uint<1>, out io_out_req_bits_addr: !firrtl.uint<32>, out io_out_req_bits_size: !firrtl.uint<3>, out io_out_req_bits_cmd: !firrtl.uint<4>, out io_out_req_bits_wmask: !firrtl.uint<8>, out io_out_req_bits_wdata: !firrtl.uint<64>, out io_out_resp_ready: !firrtl.uint<1>, in io_out_resp_valid: !firrtl.uint<1>, in io_out_resp_bits_cmd: !firrtl.uint<4>, in io_out_resp_bits_rdata: !firrtl.uint<64>)
      %786 = firrtl.wire : !firrtl.uint<1>
      %787 = firrtl.wire : !firrtl.uint<1>
      %788 = firrtl.wire : !firrtl.uint<32>
      %789 = firrtl.wire : !firrtl.uint<3>
      %790 = firrtl.wire : !firrtl.uint<4>
      %791 = firrtl.wire : !firrtl.uint<8>
      %792 = firrtl.wire : !firrtl.uint<64>
      %793 = firrtl.wire : !firrtl.uint<1>
      %794 = firrtl.wire : !firrtl.uint<4>
      %795 = firrtl.wire : !firrtl.uint<64>
      %796 = firrtl.wire : !firrtl.uint<1>
      %797 = firrtl.wire : !firrtl.uint<1>
      %798 = firrtl.wire : !firrtl.uint<32>
      %799 = firrtl.wire : !firrtl.uint<4>
      %800 = firrtl.wire : !firrtl.uint<64>
      %801 = firrtl.wire : !firrtl.uint<1>
      %802 = firrtl.wire : !firrtl.uint<4>
      %803 = firrtl.wire : !firrtl.uint<64>
      %804 = firrtl.wire : !firrtl.uint<1>
      %805 = firrtl.wire : !firrtl.uint<1>
      %806 = firrtl.wire : !firrtl.uint<32>
      %807 = firrtl.wire : !firrtl.uint<4>
      %808 = firrtl.wire : !firrtl.uint<64>
      %809 = firrtl.wire : !firrtl.uint<1>
      %810 = firrtl.wire : !firrtl.uint<4>
      %811 = firrtl.wire : !firrtl.uint<64>
      %812 = firrtl.wire : !firrtl.uint<1>
      %813 = firrtl.wire : !firrtl.uint<1>
      %814 = firrtl.wire : !firrtl.uint<4>
      %815 = firrtl.wire : !firrtl.uint<64>
      %816 = firrtl.wire : !firrtl.uint<1>
      %817 = firrtl.wire : !firrtl.uint<1>
      %818 = firrtl.wire : !firrtl.uint<32>
      %819 = firrtl.wire : !firrtl.uint<3>
      %820 = firrtl.wire : !firrtl.uint<4>
      %821 = firrtl.wire : !firrtl.uint<8>
      %822 = firrtl.wire : !firrtl.uint<64>
      %823 = firrtl.wire : !firrtl.uint<1>
      %824 = firrtl.wire : !firrtl.uint<1>
      %825 = firrtl.wire : !firrtl.uint<4>
      %826 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %786, %dmemXbar_io_in_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_0_req_valid, %787 : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_0_req_bits_addr, %788 : !firrtl.uint<32>
      firrtl.strictconnect %dmemXbar_io_in_0_req_bits_size, %789 : !firrtl.uint<3>
      firrtl.strictconnect %dmemXbar_io_in_0_req_bits_cmd, %790 : !firrtl.uint<4>
      firrtl.strictconnect %dmemXbar_io_in_0_req_bits_wmask, %791 : !firrtl.uint<8>
      firrtl.strictconnect %dmemXbar_io_in_0_req_bits_wdata, %792 : !firrtl.uint<64>
      firrtl.strictconnect %793, %dmemXbar_io_in_0_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %794, %dmemXbar_io_in_0_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %795, %dmemXbar_io_in_0_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %796, %dmemXbar_io_in_1_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_1_req_valid, %797 : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_1_req_bits_addr, %798 : !firrtl.uint<32>
      firrtl.strictconnect %dmemXbar_io_in_1_req_bits_cmd, %799 : !firrtl.uint<4>
      firrtl.strictconnect %dmemXbar_io_in_1_req_bits_wdata, %800 : !firrtl.uint<64>
      firrtl.strictconnect %801, %dmemXbar_io_in_1_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %802, %dmemXbar_io_in_1_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %803, %dmemXbar_io_in_1_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %804, %dmemXbar_io_in_2_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_2_req_valid, %805 : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_2_req_bits_addr, %806 : !firrtl.uint<32>
      firrtl.strictconnect %dmemXbar_io_in_2_req_bits_cmd, %807 : !firrtl.uint<4>
      firrtl.strictconnect %dmemXbar_io_in_2_req_bits_wdata, %808 : !firrtl.uint<64>
      firrtl.strictconnect %809, %dmemXbar_io_in_2_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %810, %dmemXbar_io_in_2_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %811, %dmemXbar_io_in_2_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %812, %dmemXbar_io_in_3_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_3_req_valid, %io_frontend_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_in_3_req_bits_addr, %io_frontend_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %dmemXbar_io_in_3_req_bits_size, %io_frontend_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %dmemXbar_io_in_3_req_bits_cmd, %io_frontend_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %dmemXbar_io_in_3_req_bits_wmask, %io_frontend_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %dmemXbar_io_in_3_req_bits_wdata, %io_frontend_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %dmemXbar_io_in_3_resp_ready, %io_frontend_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %813, %dmemXbar_io_in_3_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %814, %dmemXbar_io_in_3_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %815, %dmemXbar_io_in_3_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %dmemXbar_io_out_req_ready, %816 : !firrtl.uint<1>
      firrtl.strictconnect %817, %dmemXbar_io_out_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %818, %dmemXbar_io_out_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %819, %dmemXbar_io_out_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %820, %dmemXbar_io_out_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %821, %dmemXbar_io_out_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %822, %dmemXbar_io_out_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %823, %dmemXbar_io_out_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_out_resp_valid, %824 : !firrtl.uint<1>
      firrtl.strictconnect %dmemXbar_io_out_resp_bits_cmd, %825 : !firrtl.uint<4>
      firrtl.strictconnect %dmemXbar_io_out_resp_bits_rdata, %826 : !firrtl.uint<64>
      firrtl.strictconnect %dmemXbar_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dmemXbar_reset, %reset : !firrtl.uint<1>
      %_io_imem_T = firrtl.bits %52 0 to 0 {name = "_io_imem_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %itlb_clock, %itlb_reset, %itlb_io_in_req_ready, %itlb_io_in_req_valid, %itlb_io_in_req_bits_addr, %itlb_io_in_req_bits_user, %itlb_io_in_resp_ready, %itlb_io_in_resp_valid, %itlb_io_in_resp_bits_rdata, %itlb_io_in_resp_bits_user, %itlb_io_out_req_ready, %itlb_io_out_req_valid, %itlb_io_out_req_bits_addr, %itlb_io_out_req_bits_user, %itlb_io_out_resp_ready, %itlb_io_out_resp_valid, %itlb_io_out_resp_bits_cmd, %itlb_io_out_resp_bits_rdata, %itlb_io_out_resp_bits_user, %itlb_io_mem_req_ready, %itlb_io_mem_req_valid, %itlb_io_mem_req_bits_addr, %itlb_io_mem_req_bits_cmd, %itlb_io_mem_req_bits_wdata, %itlb_io_mem_resp_valid, %itlb_io_mem_resp_bits_cmd, %itlb_io_mem_resp_bits_rdata, %itlb_io_flush, %itlb_io_csrMMU_priviledgeMode, %itlb_io_cacheEmpty, %itlb_io_ipf, %itlb_satp__bore, %itlb_flushTLB__bore = firrtl.instance itlb @EmbeddedTLB(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<39>, in io_in_req_bits_user: !firrtl.uint<87>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, out io_in_resp_bits_user: !firrtl.uint<87>, in io_out_req_ready: !firrtl.uint<1>, out io_out_req_valid: !firrtl.uint<1>, out io_out_req_bits_addr: !firrtl.uint<32>, out io_out_req_bits_user: !firrtl.uint<87>, out io_out_resp_ready: !firrtl.uint<1>, in io_out_resp_valid: !firrtl.uint<1>, in io_out_resp_bits_cmd: !firrtl.uint<4>, in io_out_resp_bits_rdata: !firrtl.uint<64>, in io_out_resp_bits_user: !firrtl.uint<87>, in io_mem_req_ready: !firrtl.uint<1>, out io_mem_req_valid: !firrtl.uint<1>, out io_mem_req_bits_addr: !firrtl.uint<32>, out io_mem_req_bits_cmd: !firrtl.uint<4>, out io_mem_req_bits_wdata: !firrtl.uint<64>, in io_mem_resp_valid: !firrtl.uint<1>, in io_mem_resp_bits_cmd: !firrtl.uint<4>, in io_mem_resp_bits_rdata: !firrtl.uint<64>, in io_flush: !firrtl.uint<1>, in io_csrMMU_priviledgeMode: !firrtl.uint<2>, in io_cacheEmpty: !firrtl.uint<1>, out io_ipf: !firrtl.uint<1>, in satp__bore: !firrtl.uint<64>, in flushTLB__bore: !firrtl.uint<1>)
      %827 = firrtl.wire : !firrtl.uint<1>
      %828 = firrtl.wire : !firrtl.uint<1>
      %829 = firrtl.wire : !firrtl.uint<39>
      %830 = firrtl.wire : !firrtl.uint<87>
      %831 = firrtl.wire : !firrtl.uint<1>
      %832 = firrtl.wire : !firrtl.uint<1>
      %833 = firrtl.wire : !firrtl.uint<64>
      %834 = firrtl.wire : !firrtl.uint<87>
      %835 = firrtl.wire : !firrtl.uint<1>
      %836 = firrtl.wire : !firrtl.uint<1>
      %837 = firrtl.wire : !firrtl.uint<32>
      %838 = firrtl.wire : !firrtl.uint<87>
      %839 = firrtl.wire : !firrtl.uint<1>
      %840 = firrtl.wire : !firrtl.uint<1>
      %841 = firrtl.wire : !firrtl.uint<4>
      %842 = firrtl.wire : !firrtl.uint<64>
      %843 = firrtl.wire : !firrtl.uint<87>
      %844 = firrtl.wire : !firrtl.uint<1>
      %845 = firrtl.wire : !firrtl.uint<1>
      %846 = firrtl.wire : !firrtl.uint<32>
      %847 = firrtl.wire : !firrtl.uint<4>
      %848 = firrtl.wire : !firrtl.uint<64>
      %849 = firrtl.wire : !firrtl.uint<1>
      %850 = firrtl.wire : !firrtl.uint<4>
      %851 = firrtl.wire : !firrtl.uint<64>
      %852 = firrtl.wire : !firrtl.uint<1>
      %853 = firrtl.wire : !firrtl.uint<2>
      %854 = firrtl.wire : !firrtl.uint<1>
      %855 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %827, %itlb_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %itlb_io_in_req_valid, %828 : !firrtl.uint<1>
      firrtl.strictconnect %itlb_io_in_req_bits_addr, %829 : !firrtl.uint<39>
      firrtl.strictconnect %itlb_io_in_req_bits_user, %830 : !firrtl.uint<87>
      firrtl.strictconnect %itlb_io_in_resp_ready, %831 : !firrtl.uint<1>
      firrtl.strictconnect %832, %itlb_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %833, %itlb_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %834, %itlb_io_in_resp_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %itlb_io_out_req_ready, %835 : !firrtl.uint<1>
      firrtl.strictconnect %836, %itlb_io_out_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %837, %itlb_io_out_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %838, %itlb_io_out_req_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %839, %itlb_io_out_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %itlb_io_out_resp_valid, %840 : !firrtl.uint<1>
      firrtl.strictconnect %itlb_io_out_resp_bits_cmd, %841 : !firrtl.uint<4>
      firrtl.strictconnect %itlb_io_out_resp_bits_rdata, %842 : !firrtl.uint<64>
      firrtl.strictconnect %itlb_io_out_resp_bits_user, %843 : !firrtl.uint<87>
      firrtl.strictconnect %itlb_io_mem_req_ready, %844 : !firrtl.uint<1>
      firrtl.strictconnect %845, %itlb_io_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %846, %itlb_io_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %847, %itlb_io_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %848, %itlb_io_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %itlb_io_mem_resp_valid, %849 : !firrtl.uint<1>
      firrtl.strictconnect %itlb_io_mem_resp_bits_cmd, %850 : !firrtl.uint<4>
      firrtl.strictconnect %itlb_io_mem_resp_bits_rdata, %851 : !firrtl.uint<64>
      firrtl.strictconnect %itlb_io_flush, %852 : !firrtl.uint<1>
      firrtl.strictconnect %itlb_io_csrMMU_priviledgeMode, %853 : !firrtl.uint<2>
      firrtl.strictconnect %itlb_io_cacheEmpty, %854 : !firrtl.uint<1>
      firrtl.strictconnect %855, %itlb_io_ipf : !firrtl.uint<1>
      firrtl.strictconnect %itlb_clock, %clock : !firrtl.clock
      firrtl.strictconnect %itlb_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %0, %827 : !firrtl.uint<1>
      firrtl.strictconnect %828, %1 : !firrtl.uint<1>
      firrtl.strictconnect %829, %2 : !firrtl.uint<39>
      firrtl.strictconnect %830, %3 : !firrtl.uint<87>
      firrtl.strictconnect %831, %4 : !firrtl.uint<1>
      firrtl.strictconnect %5, %832 : !firrtl.uint<1>
      firrtl.strictconnect %6, %833 : !firrtl.uint<64>
      firrtl.strictconnect %7, %834 : !firrtl.uint<87>
      firrtl.strictconnect %844, %796 : !firrtl.uint<1>
      firrtl.strictconnect %797, %845 : !firrtl.uint<1>
      firrtl.strictconnect %798, %846 : !firrtl.uint<32>
      firrtl.strictconnect %799, %847 : !firrtl.uint<4>
      firrtl.strictconnect %800, %848 : !firrtl.uint<64>
      firrtl.strictconnect %849, %801 : !firrtl.uint<1>
      firrtl.strictconnect %850, %802 : !firrtl.uint<4>
      firrtl.strictconnect %851, %803 : !firrtl.uint<64>
      firrtl.strictconnect %852, %_io_imem_T : !firrtl.uint<1>
      firrtl.strictconnect %853, %98 : !firrtl.uint<2>
      firrtl.strictconnect %55, %855 : !firrtl.uint<1>
      %_io_imem_T_2 = firrtl.mux(%_io_imem_T, %c3_ui2, %c0_ui2) {name = "_io_imem_T_2"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %io_imem_cache_clock, %io_imem_cache_reset, %io_imem_cache_io_in_req_ready, %io_imem_cache_io_in_req_valid, %io_imem_cache_io_in_req_bits_addr, %io_imem_cache_io_in_req_bits_user, %io_imem_cache_io_in_resp_ready, %io_imem_cache_io_in_resp_valid, %io_imem_cache_io_in_resp_bits_cmd, %io_imem_cache_io_in_resp_bits_rdata, %io_imem_cache_io_in_resp_bits_user, %io_imem_cache_io_flush, %io_imem_cache_io_out_mem_req_ready, %io_imem_cache_io_out_mem_req_valid, %io_imem_cache_io_out_mem_req_bits_addr, %io_imem_cache_io_out_mem_req_bits_cmd, %io_imem_cache_io_out_mem_req_bits_wdata, %io_imem_cache_io_out_mem_resp_valid, %io_imem_cache_io_out_mem_resp_bits_cmd, %io_imem_cache_io_out_mem_resp_bits_rdata, %io_imem_cache_io_mmio_req_ready, %io_imem_cache_io_mmio_req_valid, %io_imem_cache_io_mmio_req_bits_addr, %io_imem_cache_io_mmio_req_bits_size, %io_imem_cache_io_mmio_req_bits_cmd, %io_imem_cache_io_mmio_req_bits_wmask, %io_imem_cache_io_mmio_req_bits_wdata, %io_imem_cache_io_mmio_resp_valid, %io_imem_cache_io_mmio_resp_bits_rdata, %io_imem_cache_io_empty, %io_imem_cache_flushICache__bore = firrtl.instance io_imem_cache @Cache(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_user: !firrtl.uint<87>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, out io_in_resp_bits_user: !firrtl.uint<87>, in io_flush: !firrtl.uint<2>, in io_out_mem_req_ready: !firrtl.uint<1>, out io_out_mem_req_valid: !firrtl.uint<1>, out io_out_mem_req_bits_addr: !firrtl.uint<32>, out io_out_mem_req_bits_cmd: !firrtl.uint<4>, out io_out_mem_req_bits_wdata: !firrtl.uint<64>, in io_out_mem_resp_valid: !firrtl.uint<1>, in io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in io_out_mem_resp_bits_rdata: !firrtl.uint<64>, in io_mmio_req_ready: !firrtl.uint<1>, out io_mmio_req_valid: !firrtl.uint<1>, out io_mmio_req_bits_addr: !firrtl.uint<32>, out io_mmio_req_bits_size: !firrtl.uint<3>, out io_mmio_req_bits_cmd: !firrtl.uint<4>, out io_mmio_req_bits_wmask: !firrtl.uint<8>, out io_mmio_req_bits_wdata: !firrtl.uint<64>, in io_mmio_resp_valid: !firrtl.uint<1>, in io_mmio_resp_bits_rdata: !firrtl.uint<64>, out io_empty: !firrtl.uint<1>, in flushICache__bore: !firrtl.uint<1>)
      %856 = firrtl.wire : !firrtl.uint<1>
      %857 = firrtl.wire : !firrtl.uint<1>
      %858 = firrtl.wire : !firrtl.uint<32>
      %859 = firrtl.wire : !firrtl.uint<87>
      %860 = firrtl.wire : !firrtl.uint<1>
      %861 = firrtl.wire : !firrtl.uint<1>
      %862 = firrtl.wire : !firrtl.uint<4>
      %863 = firrtl.wire : !firrtl.uint<64>
      %864 = firrtl.wire : !firrtl.uint<87>
      %865 = firrtl.wire : !firrtl.uint<2>
      %866 = firrtl.wire : !firrtl.uint<1>
      %867 = firrtl.wire : !firrtl.uint<32>
      %868 = firrtl.wire : !firrtl.uint<4>
      %869 = firrtl.wire : !firrtl.uint<64>
      %870 = firrtl.wire : !firrtl.uint<1>
      %871 = firrtl.wire : !firrtl.uint<1>
      %872 = firrtl.wire : !firrtl.uint<32>
      %873 = firrtl.wire : !firrtl.uint<3>
      %874 = firrtl.wire : !firrtl.uint<4>
      %875 = firrtl.wire : !firrtl.uint<8>
      %876 = firrtl.wire : !firrtl.uint<64>
      %877 = firrtl.wire : !firrtl.uint<1>
      %878 = firrtl.wire : !firrtl.uint<64>
      %879 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %856, %io_imem_cache_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_cache_io_in_req_valid, %857 : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_cache_io_in_req_bits_addr, %858 : !firrtl.uint<32>
      firrtl.strictconnect %io_imem_cache_io_in_req_bits_user, %859 : !firrtl.uint<87>
      firrtl.strictconnect %io_imem_cache_io_in_resp_ready, %860 : !firrtl.uint<1>
      firrtl.strictconnect %861, %io_imem_cache_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %862, %io_imem_cache_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %863, %io_imem_cache_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %864, %io_imem_cache_io_in_resp_bits_user : !firrtl.uint<87>
      firrtl.strictconnect %io_imem_cache_io_flush, %865 : !firrtl.uint<2>
      firrtl.strictconnect %io_imem_cache_io_out_mem_req_ready, %io_imem_mem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %866, %io_imem_cache_io_out_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %867, %io_imem_cache_io_out_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %868, %io_imem_cache_io_out_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %869, %io_imem_cache_io_out_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_imem_cache_io_out_mem_resp_valid, %io_imem_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_cache_io_out_mem_resp_bits_cmd, %io_imem_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_imem_cache_io_out_mem_resp_bits_rdata, %io_imem_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_imem_cache_io_mmio_req_ready, %870 : !firrtl.uint<1>
      firrtl.strictconnect %871, %io_imem_cache_io_mmio_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %872, %io_imem_cache_io_mmio_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %873, %io_imem_cache_io_mmio_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %874, %io_imem_cache_io_mmio_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %875, %io_imem_cache_io_mmio_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %876, %io_imem_cache_io_mmio_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_imem_cache_io_mmio_resp_valid, %877 : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_cache_io_mmio_resp_bits_rdata, %878 : !firrtl.uint<64>
      firrtl.strictconnect %879, %io_imem_cache_io_empty : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_cache_clock, %clock : !firrtl.clock
      firrtl.strictconnect %io_imem_cache_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %865, %_io_imem_T_2 : !firrtl.uint<2>
      firrtl.strictconnect %835, %856 : !firrtl.uint<1>
      firrtl.strictconnect %857, %836 : !firrtl.uint<1>
      firrtl.strictconnect %858, %837 : !firrtl.uint<32>
      firrtl.strictconnect %859, %838 : !firrtl.uint<87>
      firrtl.strictconnect %860, %839 : !firrtl.uint<1>
      firrtl.strictconnect %840, %861 : !firrtl.uint<1>
      firrtl.strictconnect %841, %862 : !firrtl.uint<4>
      firrtl.strictconnect %842, %863 : !firrtl.uint<64>
      firrtl.strictconnect %843, %864 : !firrtl.uint<87>
      firrtl.strictconnect %870, %762 : !firrtl.uint<1>
      firrtl.strictconnect %763, %871 : !firrtl.uint<1>
      firrtl.strictconnect %764, %872 : !firrtl.uint<32>
      firrtl.strictconnect %765, %873 : !firrtl.uint<3>
      firrtl.strictconnect %766, %874 : !firrtl.uint<4>
      firrtl.strictconnect %767, %875 : !firrtl.uint<8>
      firrtl.strictconnect %768, %876 : !firrtl.uint<64>
      firrtl.strictconnect %877, %769 : !firrtl.uint<1>
      firrtl.strictconnect %878, %770 : !firrtl.uint<64>
      firrtl.strictconnect %854, %879 : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_mem_req_bits_addr_1, %867 : !firrtl.uint<32>
      firrtl.strictconnect %io_imem_mem_req_bits_cmd_2, %868 : !firrtl.uint<4>
      firrtl.strictconnect %io_imem_mem_req_bits_wdata_3, %869 : !firrtl.uint<64>
      firrtl.strictconnect %io_imem_mem_req_valid_0, %866 : !firrtl.uint<1>
      %dtlb_clock, %dtlb_reset, %dtlb_io_in_req_ready, %dtlb_io_in_req_valid, %dtlb_io_in_req_bits_addr, %dtlb_io_in_req_bits_size, %dtlb_io_in_req_bits_cmd, %dtlb_io_in_req_bits_wmask, %dtlb_io_in_req_bits_wdata, %dtlb_io_in_resp_valid, %dtlb_io_in_resp_bits_rdata, %dtlb_io_out_req_ready, %dtlb_io_out_req_valid, %dtlb_io_out_req_bits_addr, %dtlb_io_out_req_bits_size, %dtlb_io_out_req_bits_cmd, %dtlb_io_out_req_bits_wmask, %dtlb_io_out_req_bits_wdata, %dtlb_io_out_resp_valid, %dtlb_io_out_resp_bits_cmd, %dtlb_io_out_resp_bits_rdata, %dtlb_io_mem_req_ready, %dtlb_io_mem_req_valid, %dtlb_io_mem_req_bits_addr, %dtlb_io_mem_req_bits_cmd, %dtlb_io_mem_req_bits_wdata, %dtlb_io_mem_resp_valid, %dtlb_io_mem_resp_bits_cmd, %dtlb_io_mem_resp_bits_rdata, %dtlb_io_csrMMU_priviledgeMode, %dtlb_io_csrMMU_status_sum, %dtlb_io_csrMMU_status_mxr, %dtlb_io_csrMMU_loadPF, %dtlb_io_csrMMU_storePF, %dtlb_io_csrMMU_addr, %dtlb_io_cacheEmpty, %dtlb__WIRE_1__bore, %dtlb__WIRE_1__bore_0, %dtlb__WIRE_2__bore, %dtlb__WIRE_2__bore_1, %dtlb_satp__bore, %dtlb_flushTLB__bore, %dtlb__WIRE__bore, %dtlb_tlbExec_isAMO__bore = firrtl.instance dtlb @EmbeddedTLB_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<39>, in io_in_req_bits_size: !firrtl.uint<3>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_req_ready: !firrtl.uint<1>, out io_out_req_valid: !firrtl.uint<1>, out io_out_req_bits_addr: !firrtl.uint<32>, out io_out_req_bits_size: !firrtl.uint<3>, out io_out_req_bits_cmd: !firrtl.uint<4>, out io_out_req_bits_wmask: !firrtl.uint<8>, out io_out_req_bits_wdata: !firrtl.uint<64>, in io_out_resp_valid: !firrtl.uint<1>, in io_out_resp_bits_cmd: !firrtl.uint<4>, in io_out_resp_bits_rdata: !firrtl.uint<64>, in io_mem_req_ready: !firrtl.uint<1>, out io_mem_req_valid: !firrtl.uint<1>, out io_mem_req_bits_addr: !firrtl.uint<32>, out io_mem_req_bits_cmd: !firrtl.uint<4>, out io_mem_req_bits_wdata: !firrtl.uint<64>, in io_mem_resp_valid: !firrtl.uint<1>, in io_mem_resp_bits_cmd: !firrtl.uint<4>, in io_mem_resp_bits_rdata: !firrtl.uint<64>, in io_csrMMU_priviledgeMode: !firrtl.uint<2>, in io_csrMMU_status_sum: !firrtl.uint<1>, in io_csrMMU_status_mxr: !firrtl.uint<1>, out io_csrMMU_loadPF: !firrtl.uint<1>, out io_csrMMU_storePF: !firrtl.uint<1>, out io_csrMMU_addr: !firrtl.uint<39>, in io_cacheEmpty: !firrtl.uint<1>, out _WIRE_1__bore: !firrtl.uint<1>, out _WIRE_1__bore_0: !firrtl.uint<1>, out _WIRE_2__bore: !firrtl.uint<1>, out _WIRE_2__bore_1: !firrtl.uint<1>, in satp__bore: !firrtl.uint<64>, in flushTLB__bore: !firrtl.uint<1>, out _WIRE__bore: !firrtl.uint<1>, in tlbExec_isAMO__bore: !firrtl.uint<1>)
      %880 = firrtl.wire : !firrtl.uint<1>
      %881 = firrtl.wire : !firrtl.uint<1>
      %882 = firrtl.wire : !firrtl.uint<39>
      %883 = firrtl.wire : !firrtl.uint<3>
      %884 = firrtl.wire : !firrtl.uint<4>
      %885 = firrtl.wire : !firrtl.uint<8>
      %886 = firrtl.wire : !firrtl.uint<64>
      %887 = firrtl.wire : !firrtl.uint<1>
      %888 = firrtl.wire : !firrtl.uint<64>
      %889 = firrtl.wire : !firrtl.uint<1>
      %890 = firrtl.wire : !firrtl.uint<1>
      %891 = firrtl.wire : !firrtl.uint<32>
      %892 = firrtl.wire : !firrtl.uint<3>
      %893 = firrtl.wire : !firrtl.uint<4>
      %894 = firrtl.wire : !firrtl.uint<8>
      %895 = firrtl.wire : !firrtl.uint<64>
      %896 = firrtl.wire : !firrtl.uint<1>
      %897 = firrtl.wire : !firrtl.uint<4>
      %898 = firrtl.wire : !firrtl.uint<64>
      %899 = firrtl.wire : !firrtl.uint<1>
      %900 = firrtl.wire : !firrtl.uint<1>
      %901 = firrtl.wire : !firrtl.uint<32>
      %902 = firrtl.wire : !firrtl.uint<4>
      %903 = firrtl.wire : !firrtl.uint<64>
      %904 = firrtl.wire : !firrtl.uint<1>
      %905 = firrtl.wire : !firrtl.uint<4>
      %906 = firrtl.wire : !firrtl.uint<64>
      %907 = firrtl.wire : !firrtl.uint<2>
      %908 = firrtl.wire : !firrtl.uint<1>
      %909 = firrtl.wire : !firrtl.uint<1>
      %910 = firrtl.wire : !firrtl.uint<1>
      %911 = firrtl.wire : !firrtl.uint<1>
      %912 = firrtl.wire : !firrtl.uint<39>
      %913 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %880, %dtlb_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_io_in_req_valid, %881 : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_io_in_req_bits_addr, %882 : !firrtl.uint<39>
      firrtl.strictconnect %dtlb_io_in_req_bits_size, %883 : !firrtl.uint<3>
      firrtl.strictconnect %dtlb_io_in_req_bits_cmd, %884 : !firrtl.uint<4>
      firrtl.strictconnect %dtlb_io_in_req_bits_wmask, %885 : !firrtl.uint<8>
      firrtl.strictconnect %dtlb_io_in_req_bits_wdata, %886 : !firrtl.uint<64>
      firrtl.strictconnect %887, %dtlb_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %888, %dtlb_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %dtlb_io_out_req_ready, %889 : !firrtl.uint<1>
      firrtl.strictconnect %890, %dtlb_io_out_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %891, %dtlb_io_out_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %892, %dtlb_io_out_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %893, %dtlb_io_out_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %894, %dtlb_io_out_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %895, %dtlb_io_out_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %dtlb_io_out_resp_valid, %896 : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_io_out_resp_bits_cmd, %897 : !firrtl.uint<4>
      firrtl.strictconnect %dtlb_io_out_resp_bits_rdata, %898 : !firrtl.uint<64>
      firrtl.strictconnect %dtlb_io_mem_req_ready, %899 : !firrtl.uint<1>
      firrtl.strictconnect %900, %dtlb_io_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %901, %dtlb_io_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %902, %dtlb_io_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %903, %dtlb_io_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %dtlb_io_mem_resp_valid, %904 : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_io_mem_resp_bits_cmd, %905 : !firrtl.uint<4>
      firrtl.strictconnect %dtlb_io_mem_resp_bits_rdata, %906 : !firrtl.uint<64>
      firrtl.strictconnect %dtlb_io_csrMMU_priviledgeMode, %907 : !firrtl.uint<2>
      firrtl.strictconnect %dtlb_io_csrMMU_status_sum, %908 : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_io_csrMMU_status_mxr, %909 : !firrtl.uint<1>
      firrtl.strictconnect %910, %dtlb_io_csrMMU_loadPF : !firrtl.uint<1>
      firrtl.strictconnect %911, %dtlb_io_csrMMU_storePF : !firrtl.uint<1>
      firrtl.strictconnect %912, %dtlb_io_csrMMU_addr : !firrtl.uint<39>
      firrtl.strictconnect %dtlb_io_cacheEmpty, %913 : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dtlb_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %89, %880 : !firrtl.uint<1>
      firrtl.strictconnect %881, %90 : !firrtl.uint<1>
      firrtl.strictconnect %882, %91 : !firrtl.uint<39>
      firrtl.strictconnect %883, %92 : !firrtl.uint<3>
      firrtl.strictconnect %884, %93 : !firrtl.uint<4>
      firrtl.strictconnect %885, %94 : !firrtl.uint<8>
      firrtl.strictconnect %886, %95 : !firrtl.uint<64>
      firrtl.strictconnect %96, %887 : !firrtl.uint<1>
      firrtl.strictconnect %97, %888 : !firrtl.uint<64>
      firrtl.strictconnect %899, %804 : !firrtl.uint<1>
      firrtl.strictconnect %805, %900 : !firrtl.uint<1>
      firrtl.strictconnect %806, %901 : !firrtl.uint<32>
      firrtl.strictconnect %807, %902 : !firrtl.uint<4>
      firrtl.strictconnect %808, %903 : !firrtl.uint<64>
      firrtl.strictconnect %904, %809 : !firrtl.uint<1>
      firrtl.strictconnect %905, %810 : !firrtl.uint<4>
      firrtl.strictconnect %906, %811 : !firrtl.uint<64>
      firrtl.strictconnect %907, %99 : !firrtl.uint<2>
      firrtl.strictconnect %908, %100 : !firrtl.uint<1>
      firrtl.strictconnect %909, %101 : !firrtl.uint<1>
      firrtl.strictconnect %102, %910 : !firrtl.uint<1>
      firrtl.strictconnect %103, %911 : !firrtl.uint<1>
      firrtl.strictconnect %104, %912 : !firrtl.uint<39>
      firrtl.strictconnect %889, %786 : !firrtl.uint<1>
      firrtl.strictconnect %787, %890 : !firrtl.uint<1>
      firrtl.strictconnect %788, %891 : !firrtl.uint<32>
      firrtl.strictconnect %789, %892 : !firrtl.uint<3>
      firrtl.strictconnect %790, %893 : !firrtl.uint<4>
      firrtl.strictconnect %791, %894 : !firrtl.uint<8>
      firrtl.strictconnect %792, %895 : !firrtl.uint<64>
      firrtl.strictconnect %896, %793 : !firrtl.uint<1>
      firrtl.strictconnect %897, %794 : !firrtl.uint<4>
      firrtl.strictconnect %898, %795 : !firrtl.uint<64>
      %io_dmem_cache_clock, %io_dmem_cache_reset, %io_dmem_cache_io_in_req_ready, %io_dmem_cache_io_in_req_valid, %io_dmem_cache_io_in_req_bits_addr, %io_dmem_cache_io_in_req_bits_size, %io_dmem_cache_io_in_req_bits_cmd, %io_dmem_cache_io_in_req_bits_wmask, %io_dmem_cache_io_in_req_bits_wdata, %io_dmem_cache_io_in_resp_ready, %io_dmem_cache_io_in_resp_valid, %io_dmem_cache_io_in_resp_bits_cmd, %io_dmem_cache_io_in_resp_bits_rdata, %io_dmem_cache_io_out_mem_req_ready, %io_dmem_cache_io_out_mem_req_valid, %io_dmem_cache_io_out_mem_req_bits_addr, %io_dmem_cache_io_out_mem_req_bits_cmd, %io_dmem_cache_io_out_mem_req_bits_wdata, %io_dmem_cache_io_out_mem_resp_valid, %io_dmem_cache_io_out_mem_resp_bits_cmd, %io_dmem_cache_io_out_mem_resp_bits_rdata, %io_dmem_cache_io_out_coh_req_ready, %io_dmem_cache_io_out_coh_req_valid, %io_dmem_cache_io_out_coh_req_bits_addr, %io_dmem_cache_io_out_coh_req_bits_wdata, %io_dmem_cache_io_out_coh_resp_valid, %io_dmem_cache_io_out_coh_resp_bits_cmd, %io_dmem_cache_io_out_coh_resp_bits_rdata, %io_dmem_cache_io_mmio_req_ready, %io_dmem_cache_io_mmio_req_valid, %io_dmem_cache_io_mmio_req_bits_addr, %io_dmem_cache_io_mmio_req_bits_size, %io_dmem_cache_io_mmio_req_bits_cmd, %io_dmem_cache_io_mmio_req_bits_wmask, %io_dmem_cache_io_mmio_req_bits_wdata, %io_dmem_cache_io_mmio_resp_valid, %io_dmem_cache_io_mmio_resp_bits_rdata, %io_dmem_cache_io_empty, %io_dmem_cache_s3__WIRE__bore = firrtl.instance io_dmem_cache @Cache_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_size: !firrtl.uint<3>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_mem_req_ready: !firrtl.uint<1>, out io_out_mem_req_valid: !firrtl.uint<1>, out io_out_mem_req_bits_addr: !firrtl.uint<32>, out io_out_mem_req_bits_cmd: !firrtl.uint<4>, out io_out_mem_req_bits_wdata: !firrtl.uint<64>, in io_out_mem_resp_valid: !firrtl.uint<1>, in io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in io_out_mem_resp_bits_rdata: !firrtl.uint<64>, out io_out_coh_req_ready: !firrtl.uint<1>, in io_out_coh_req_valid: !firrtl.uint<1>, in io_out_coh_req_bits_addr: !firrtl.uint<32>, in io_out_coh_req_bits_wdata: !firrtl.uint<64>, out io_out_coh_resp_valid: !firrtl.uint<1>, out io_out_coh_resp_bits_cmd: !firrtl.uint<4>, out io_out_coh_resp_bits_rdata: !firrtl.uint<64>, in io_mmio_req_ready: !firrtl.uint<1>, out io_mmio_req_valid: !firrtl.uint<1>, out io_mmio_req_bits_addr: !firrtl.uint<32>, out io_mmio_req_bits_size: !firrtl.uint<3>, out io_mmio_req_bits_cmd: !firrtl.uint<4>, out io_mmio_req_bits_wmask: !firrtl.uint<8>, out io_mmio_req_bits_wdata: !firrtl.uint<64>, in io_mmio_resp_valid: !firrtl.uint<1>, in io_mmio_resp_bits_rdata: !firrtl.uint<64>, out io_empty: !firrtl.uint<1>, out s3__WIRE__bore: !firrtl.uint<1>)
      %914 = firrtl.wire : !firrtl.uint<1>
      %915 = firrtl.wire : !firrtl.uint<1>
      %916 = firrtl.wire : !firrtl.uint<32>
      %917 = firrtl.wire : !firrtl.uint<3>
      %918 = firrtl.wire : !firrtl.uint<4>
      %919 = firrtl.wire : !firrtl.uint<8>
      %920 = firrtl.wire : !firrtl.uint<64>
      %921 = firrtl.wire : !firrtl.uint<1>
      %922 = firrtl.wire : !firrtl.uint<1>
      %923 = firrtl.wire : !firrtl.uint<4>
      %924 = firrtl.wire : !firrtl.uint<64>
      %925 = firrtl.wire : !firrtl.uint<1>
      %926 = firrtl.wire : !firrtl.uint<32>
      %927 = firrtl.wire : !firrtl.uint<4>
      %928 = firrtl.wire : !firrtl.uint<64>
      %929 = firrtl.wire : !firrtl.uint<1>
      %930 = firrtl.wire : !firrtl.uint<1>
      %931 = firrtl.wire : !firrtl.uint<4>
      %932 = firrtl.wire : !firrtl.uint<64>
      %933 = firrtl.wire : !firrtl.uint<1>
      %934 = firrtl.wire : !firrtl.uint<1>
      %935 = firrtl.wire : !firrtl.uint<32>
      %936 = firrtl.wire : !firrtl.uint<3>
      %937 = firrtl.wire : !firrtl.uint<4>
      %938 = firrtl.wire : !firrtl.uint<8>
      %939 = firrtl.wire : !firrtl.uint<64>
      %940 = firrtl.wire : !firrtl.uint<1>
      %941 = firrtl.wire : !firrtl.uint<64>
      %942 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %914, %io_dmem_cache_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_cache_io_in_req_valid, %915 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_cache_io_in_req_bits_addr, %916 : !firrtl.uint<32>
      firrtl.strictconnect %io_dmem_cache_io_in_req_bits_size, %917 : !firrtl.uint<3>
      firrtl.strictconnect %io_dmem_cache_io_in_req_bits_cmd, %918 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_cache_io_in_req_bits_wmask, %919 : !firrtl.uint<8>
      firrtl.strictconnect %io_dmem_cache_io_in_req_bits_wdata, %920 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_cache_io_in_resp_ready, %921 : !firrtl.uint<1>
      firrtl.strictconnect %922, %io_dmem_cache_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %923, %io_dmem_cache_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %924, %io_dmem_cache_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_cache_io_out_mem_req_ready, %io_dmem_mem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %925, %io_dmem_cache_io_out_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %926, %io_dmem_cache_io_out_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %927, %io_dmem_cache_io_out_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %928, %io_dmem_cache_io_out_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_cache_io_out_mem_resp_valid, %io_dmem_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_cache_io_out_mem_resp_bits_cmd, %io_dmem_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_cache_io_out_mem_resp_bits_rdata, %io_dmem_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %929, %io_dmem_cache_io_out_coh_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_cache_io_out_coh_req_valid, %io_dmem_coh_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_cache_io_out_coh_req_bits_addr, %io_dmem_coh_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_dmem_cache_io_out_coh_req_bits_wdata, %io_dmem_coh_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %930, %io_dmem_cache_io_out_coh_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %931, %io_dmem_cache_io_out_coh_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %932, %io_dmem_cache_io_out_coh_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_cache_io_mmio_req_ready, %933 : !firrtl.uint<1>
      firrtl.strictconnect %934, %io_dmem_cache_io_mmio_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %935, %io_dmem_cache_io_mmio_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %936, %io_dmem_cache_io_mmio_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %937, %io_dmem_cache_io_mmio_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %938, %io_dmem_cache_io_mmio_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %939, %io_dmem_cache_io_mmio_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_cache_io_mmio_resp_valid, %940 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_cache_io_mmio_resp_bits_rdata, %941 : !firrtl.uint<64>
      firrtl.strictconnect %942, %io_dmem_cache_io_empty : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_cache_clock, %clock : !firrtl.clock
      firrtl.strictconnect %io_dmem_cache_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %816, %914 : !firrtl.uint<1>
      firrtl.strictconnect %915, %817 : !firrtl.uint<1>
      firrtl.strictconnect %916, %818 : !firrtl.uint<32>
      firrtl.strictconnect %917, %819 : !firrtl.uint<3>
      firrtl.strictconnect %918, %820 : !firrtl.uint<4>
      firrtl.strictconnect %919, %821 : !firrtl.uint<8>
      firrtl.strictconnect %920, %822 : !firrtl.uint<64>
      firrtl.strictconnect %921, %823 : !firrtl.uint<1>
      firrtl.strictconnect %824, %922 : !firrtl.uint<1>
      firrtl.strictconnect %825, %923 : !firrtl.uint<4>
      firrtl.strictconnect %826, %924 : !firrtl.uint<64>
      firrtl.strictconnect %933, %771 : !firrtl.uint<1>
      firrtl.strictconnect %772, %934 : !firrtl.uint<1>
      firrtl.strictconnect %773, %935 : !firrtl.uint<32>
      firrtl.strictconnect %774, %936 : !firrtl.uint<3>
      firrtl.strictconnect %775, %937 : !firrtl.uint<4>
      firrtl.strictconnect %776, %938 : !firrtl.uint<8>
      firrtl.strictconnect %777, %939 : !firrtl.uint<64>
      firrtl.strictconnect %940, %778 : !firrtl.uint<1>
      firrtl.strictconnect %941, %779 : !firrtl.uint<64>
      firrtl.strictconnect %913, %942 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_coh_req_ready_8, %929 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_coh_resp_valid_9, %930 : !firrtl.uint<1>
      firrtl.strictconnect %io_dmem_coh_resp_bits_cmd_10, %931 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_coh_resp_bits_rdata_11, %932 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_mem_req_bits_addr_5, %926 : !firrtl.uint<32>
      firrtl.strictconnect %io_dmem_mem_req_bits_cmd_6, %927 : !firrtl.uint<4>
      firrtl.strictconnect %io_dmem_mem_req_bits_wdata_7, %928 : !firrtl.uint<64>
      firrtl.strictconnect %io_dmem_mem_req_valid_4, %925 : !firrtl.uint<1>
      firrtl.strictconnect %53, %105 : !firrtl.uint<39>
      firrtl.strictconnect %54, %106 : !firrtl.uint<1>
      %_backend_io_flush_T = firrtl.bits %52 3 to 2 {name = "_backend_io_flush_T"} : (!firrtl.uint<4>) -> !firrtl.uint<2>
      firrtl.strictconnect %88, %_backend_io_flush_T : !firrtl.uint<2>
      firrtl.strictconnect %io_frontend_req_ready_18, %812 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_resp_valid_19, %813 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_resp_bits_cmd_20, %814 : !firrtl.uint<4>
      firrtl.strictconnect %io_frontend_resp_bits_rdata_21, %815 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_bits_addr_13, %781 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size_14, %782 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd_15, %783 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask_16, %784 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata_17, %785 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid_12, %780 : !firrtl.uint<1>
      %943 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %944 = firrtl.and %control_logEnable, %943 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %944, "[%d] NutCore: " {name = "printf_1"} (%control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %945 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %946 = firrtl.and %control_logEnable, %945 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %946, "------------------------ BACKEND ------------------------\0A" {name = "printf_2"}  : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %frontend_idu__WIRE__bore, %frontend_idu__WIRE__bore_22 : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_csr_msip__bore_23, %backend_exu_csr_msip__bore : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_csr_meip__bore_24, %backend_exu_csr_meip__bore : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_csr_mtip__bore_25, %backend_exu_csr_mtip__bore : !firrtl.uint<1>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_valid, %backend_exu_alu_REG__bore_valid : !firrtl.uint<1>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_pc, %backend_exu_alu_REG__bore_pc : !firrtl.uint<39>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_isMissPredict, %backend_exu_alu_REG__bore_isMissPredict : !firrtl.uint<1>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_actualTarget, %backend_exu_alu_REG__bore_actualTarget : !firrtl.uint<39>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_actualTaken, %backend_exu_alu_REG__bore_actualTaken : !firrtl.uint<1>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_fuOpType, %backend_exu_alu_REG__bore_fuOpType : !firrtl.uint<7>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_btbType, %backend_exu_alu_REG__bore_btbType : !firrtl.uint<2>
      firrtl.strictconnect %frontend_ifu_bp1_req__bore_isRVC, %backend_exu_alu_REG__bore_isRVC : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_csr_perfCntCond_4__bore, %frontend_ifu_r__bore : !firrtl.uint<1>
      firrtl.strictconnect %frontend_ifu_bp1_flushTLB__bore, %backend_exu_mou__WIRE_1__bore : !firrtl.uint<1>
      firrtl.strictconnect %frontend_idu_decoder1_intrVec__bore, %backend_exu_csr__WIRE__bore : !firrtl.uint<12>
      firrtl.strictconnect %frontend_idu_decoder2_intrVec__bore, %backend_exu_csr__WIRE__bore_0 : !firrtl.uint<12>
      firrtl.strictconnect %frontend_ifu_bp1_flushBTB__bore, %backend_exu_mou__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_csr_perfCntCond_15__bore, %frontend_ifu__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %itlb_satp__bore, %backend_exu_csr_satp__bore : !firrtl.uint<64>
      firrtl.strictconnect %itlb_flushTLB__bore, %backend_exu_mou__WIRE_1__bore_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_imem_cache_flushICache__bore, %backend_exu_mou__WIRE__bore_0 : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_lsu_lsExecUnit_dtlbPF__bore, %dtlb__WIRE_1__bore : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_lsu_dtlbPF__bore, %dtlb__WIRE_1__bore_0 : !firrtl.uint<1>
      firrtl.strictconnect %frontend_idu_decoder1_vmEnable__bore, %dtlb__WIRE_2__bore : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_lsu_lsExecUnit_dtlbEnable__bore, %dtlb__WIRE_2__bore_1 : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_satp__bore, %backend_exu_csr_satp__bore_0 : !firrtl.uint<64>
      firrtl.strictconnect %dtlb_flushTLB__bore, %backend_exu_mou__WIRE_1__bore_1 : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_lsu_lsExecUnit_dtlbFinish__bore, %dtlb__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %dtlb_tlbExec_isAMO__bore, %backend_exu_lsu__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %backend_exu_lsu_lsuMMIO__bore, %io_dmem_cache_s3__WIRE__bore : !firrtl.uint<1>
    }
    firrtl.module private @CoherenceManager(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wdata: !firrtl.uint<64>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_mem_req_ready: !firrtl.uint<1>, out %io_out_mem_req_valid: !firrtl.uint<1>, out %io_out_mem_req_bits_addr: !firrtl.uint<32>, out %io_out_mem_req_bits_cmd: !firrtl.uint<4>, out %io_out_mem_req_bits_wdata: !firrtl.uint<64>, in %io_out_mem_resp_valid: !firrtl.uint<1>, in %io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_out_mem_resp_bits_rdata: !firrtl.uint<64>, in %io_out_coh_req_ready: !firrtl.uint<1>, out %io_out_coh_req_valid: !firrtl.uint<1>, out %io_out_coh_req_bits_addr: !firrtl.uint<32>, out %io_out_coh_req_bits_wdata: !firrtl.uint<64>, in %io_out_coh_resp_valid: !firrtl.uint<1>, in %io_out_coh_resp_bits_cmd: !firrtl.uint<4>, in %io_out_coh_resp_bits_rdata: !firrtl.uint<64>) {
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3> {name = "reqLatch_size"}
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c12_ui4 = firrtl.constant 12 : !firrtl.uint<4>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd_2 = firrtl.wire {name = "io_in_resp_bits_cmd"} : !firrtl.uint<4>
      %io_in_resp_bits_rdata_3 = firrtl.wire {name = "io_in_resp_bits_rdata"} : !firrtl.uint<64>
      %io_out_mem_req_valid_4 = firrtl.wire {name = "io_out_mem_req_valid"} : !firrtl.uint<1>
      %io_out_mem_req_bits_addr_5 = firrtl.wire {name = "io_out_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_out_mem_req_bits_cmd_6 = firrtl.wire {name = "io_out_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_mem_req_bits_wdata_7 = firrtl.wire {name = "io_out_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_out_coh_req_valid_8 = firrtl.wire {name = "io_out_coh_req_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_in_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_in_resp_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_valid, %io_out_mem_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_mem_req_bits_addr, %io_out_mem_req_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_cmd, %io_out_mem_req_bits_cmd_6 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_wdata, %io_out_mem_req_bits_wdata_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_coh_req_valid, %io_out_coh_req_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_coh_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_coh_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      %state = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %inflight = firrtl.orr %state {name = "inflight"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_reqLatch_T_1 = firrtl.bits %io_in_req_bits_cmd 0 to 0 {name = "_reqLatch_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %0 = firrtl.not %_reqLatch_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_reqLatch_T_3 = firrtl.bits %io_in_req_bits_cmd 3 to 3 {name = "_reqLatch_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %1 = firrtl.not %_reqLatch_T_3 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.and %0, %1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.not %2 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %4 = firrtl.and %io_in_req_valid, %3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.not %_reqLatch_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.and %4, %5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.not %6 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %8, %7, "Assertion failed\0A    at Coherence.scala:49 assert(!(thisReq.valid && !thisReq.bits.isRead() && !thisReq.bits.isWrite()))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %_io_in_req_ready_T_2 = firrtl.not %inflight {name = "_io_in_req_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_reqLatch_T_2 = firrtl.not %_reqLatch_T_1 {name = "_reqLatch_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_reqLatch_T_4 = firrtl.not %_reqLatch_T_3 {name = "_reqLatch_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_reqLatch_T_5 = firrtl.and %_reqLatch_T_2, %_reqLatch_T_4 {name = "_reqLatch_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_reqLatch_T_6 = firrtl.and %_io_in_req_ready_T_2, %_reqLatch_T_5 {name = "_reqLatch_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %reqLatch_addr = firrtl.reg %clock {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %reqLatch_cmd = firrtl.reg %clock {firrtl.random_init_start = 38 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %reqLatch_wdata = firrtl.reg %clock {firrtl.random_init_start = 50 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %9 = firrtl.mux(%_reqLatch_T_6, %io_in_req_bits_addr, %reqLatch_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %reqLatch_addr, %9 : !firrtl.uint<32>
      %10 = firrtl.mux(%_reqLatch_T_6, %io_in_req_bits_cmd, %reqLatch_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %reqLatch_cmd, %10 : !firrtl.uint<4>
      %11 = firrtl.mux(%_reqLatch_T_6, %io_in_req_bits_wdata, %reqLatch_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %reqLatch_wdata, %11 : !firrtl.uint<64>
      %_io_out_mem_req_valid_T_1 = firrtl.and %io_in_req_valid, %_io_in_req_ready_T_2 {name = "_io_out_mem_req_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.mux(%_reqLatch_T_1, %_io_out_mem_req_valid_T_1, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_1 = firrtl.and %io_out_mem_req_ready, %_io_in_req_ready_T_2 {name = "_io_in_req_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.not %_reqLatch_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.not %_reqLatch_T_3 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.and %13, %14 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_coh_req_valid_T_1 = firrtl.and %io_in_req_valid, %_io_in_req_ready_T_2 {name = "_io_out_coh_req_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.mux(%15, %_io_out_coh_req_valid_T_1, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.mux(%_reqLatch_T_1, %c0_ui1, %16) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_coh_req_valid_8, %17 : !firrtl.uint<1>
      %_io_in_req_ready_T_3 = firrtl.and %io_out_coh_req_ready, %_io_in_req_ready_T_2 {name = "_io_in_req_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.mux(%15, %_io_in_req_ready_T_3, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.mux(%_reqLatch_T_1, %_io_in_req_ready_T_1, %18) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready_0, %19 : !firrtl.uint<1>
      %20 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %21 = firrtl.not %20 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %io_in_req_ready_0, %io_in_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.not %_reqLatch_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.not %_reqLatch_T_3 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.and %23, %24 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.eq %io_in_req_bits_cmd, %c7_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %27 = firrtl.mux(%26, %c5_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %28 = firrtl.mux(%25, %c1_ui3, %27) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %29 = firrtl.mux(%22, %28, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %30 = firrtl.eq %state, %c1_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_state_T_1 = firrtl.eq %io_out_coh_resp_bits_cmd, %c12_ui4 {name = "_state_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_state_T_2 = firrtl.mux(%_state_T_1, %c2_ui3, %c3_ui3) {name = "_state_T_2"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %31 = firrtl.mux(%io_out_coh_resp_valid, %_state_T_2, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %32 = firrtl.eq %state, %c2_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %33 = firrtl.mux(%32, %io_out_coh_resp_valid, %io_out_mem_resp_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.or %21, %30 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.mux(%34, %io_out_mem_resp_valid, %33) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %35 : !firrtl.uint<1>
      %36 = firrtl.mux(%32, %io_out_coh_resp_bits_cmd, %io_out_mem_resp_bits_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %37 = firrtl.or %21, %30 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.mux(%37, %io_out_mem_resp_bits_cmd, %36) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_cmd_2, %38 : !firrtl.uint<4>
      %39 = firrtl.mux(%32, %io_out_coh_resp_bits_rdata, %io_out_mem_resp_bits_rdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %40 = firrtl.or %21, %30 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.mux(%40, %io_out_mem_resp_bits_rdata, %39) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_resp_bits_rdata_3, %41 : !firrtl.uint<64>
      %42 = firrtl.eq %io_in_resp_bits_cmd_2, %c6_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %43 = firrtl.and %io_in_resp_valid_1, %42 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.mux(%43, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %45 = firrtl.eq %state, %c3_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %46 = firrtl.mux(%45, %reqLatch_addr, %io_in_req_bits_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %47 = firrtl.or %30, %32 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.or %21, %47 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.mux(%48, %io_in_req_bits_addr, %46) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_addr_5, %49 : !firrtl.uint<32>
      %50 = firrtl.mux(%45, %reqLatch_cmd, %io_in_req_bits_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %51 = firrtl.or %30, %32 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.or %21, %51 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %53 = firrtl.mux(%52, %io_in_req_bits_cmd, %50) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_cmd_6, %53 : !firrtl.uint<4>
      %54 = firrtl.mux(%45, %reqLatch_wdata, %io_in_req_bits_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %55 = firrtl.or %30, %32 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %56 = firrtl.or %21, %55 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.mux(%56, %io_in_req_bits_wdata, %54) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_bits_wdata_7, %57 : !firrtl.uint<64>
      %58 = firrtl.mux(%45, %c1_ui1, %12) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.or %30, %32 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.or %21, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %61 = firrtl.mux(%60, %12, %58) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_mem_req_valid_4, %61 : !firrtl.uint<1>
      %62 = firrtl.and %io_out_mem_req_ready, %io_out_mem_req_valid_4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %63 = firrtl.mux(%62, %c4_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %64 = firrtl.eq %state, %c4_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %65 = firrtl.eq %io_out_mem_resp_bits_cmd, %c6_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %66 = firrtl.and %io_out_mem_resp_valid, %65 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.mux(%66, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %68 = firrtl.eq %state, %c5_ui3 : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %69 = firrtl.and %68, %io_out_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %70 = firrtl.mux(%69, %c0_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %71 = firrtl.mux(%64, %67, %70) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %72 = firrtl.mux(%45, %63, %71) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %73 = firrtl.mux(%32, %44, %72) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %74 = firrtl.mux(%30, %31, %73) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %75 = firrtl.mux(%21, %29, %74) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %state, %75 : !firrtl.uint<3>
    }
    firrtl.module private @AXI42SimpleBusConverter(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, in %io_out_req_ready: !firrtl.uint<1>, out %io_out_req_valid: !firrtl.uint<1>, out %io_out_req_bits_addr: !firrtl.uint<32>, out %io_out_req_bits_size: !firrtl.uint<3>, out %io_out_req_bits_cmd: !firrtl.uint<4>, out %io_out_req_bits_wmask: !firrtl.uint<8>, out %io_out_req_bits_wdata: !firrtl.uint<64>, out %io_out_resp_ready: !firrtl.uint<1>, in %io_out_resp_valid: !firrtl.uint<1>, in %io_out_resp_bits_cmd: !firrtl.uint<4>, in %io_out_resp_bits_rdata: !firrtl.uint<64>) {
      %c1_ui4 = firrtl.constant 1 : !firrtl.uint<4>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_in_r_bits_user"}
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3> {name = "aw_reg_size"}
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8> {name = "aw_reg_len"}
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2> {name = "io_in_r_bits_resp"}
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64> {name = "default_axi_r_bits_data"}
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32> {name = "default_mem_req_bits_addr"}
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3> {name = "default_mem_req_bits_size"}
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_out_req_valid_6 = firrtl.wire {name = "io_out_req_valid"} : !firrtl.uint<1>
      %io_out_req_bits_addr_7 = firrtl.wire {name = "io_out_req_bits_addr"} : !firrtl.uint<32>
      %io_out_req_bits_size_8 = firrtl.wire {name = "io_out_req_bits_size"} : !firrtl.uint<3>
      %io_out_req_bits_cmd_9 = firrtl.wire {name = "io_out_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_req_bits_wmask_10 = firrtl.wire {name = "io_out_req_bits_wmask"} : !firrtl.uint<8>
      %io_out_req_bits_wdata_11 = firrtl.wire {name = "io_out_req_bits_wdata"} : !firrtl.uint<64>
      %io_out_resp_ready_12 = firrtl.wire {name = "io_out_resp_ready"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_req_valid, %io_out_req_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_bits_addr, %io_out_req_bits_addr_7 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_size, %io_out_req_bits_size_8 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_cmd, %io_out_req_bits_cmd_9 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_wmask, %io_out_req_bits_wmask_10 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wdata, %io_out_req_bits_wdata_11 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_resp_ready, %io_out_resp_ready_12 : !firrtl.uint<1>
      %inflight_type = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 18 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %_io_in_aw_ready_T_1 = firrtl.orr %inflight_type {name = "_io_in_aw_ready_T_1"} : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %0 = firrtl.not %_io_in_aw_ready_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.and %0, %io_in_ar_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.mux(%1, %io_in_ar_bits_addr, %c0_ui32) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %3 = firrtl.and %io_out_req_ready, %io_out_req_valid_6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %4 = firrtl.and %1, %3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%4, %c1_ui2, %inflight_type) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_io_in_r_valid_T = firrtl.eq %inflight_type, %c1_ui2 {name = "_io_in_r_valid_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %6 = firrtl.and %_io_in_r_valid_T, %io_out_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%6, %io_out_resp_bits_rdata, %c0_ui64) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %7 : !firrtl.uint<64>
      %_io_in_r_bits_last_T = firrtl.eq %io_out_resp_bits_cmd, %c6_ui3 {name = "_io_in_r_bits_last_T"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %8 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %9 = firrtl.and %8, %_io_in_r_bits_last_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.and %6, %9 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %11 = firrtl.mux(%10, %c0_ui2, %5) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %aw_reg_addr = firrtl.reg %clock {firrtl.random_init_start = 20 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %bresp_en = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 96 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %12 = firrtl.not %_io_in_aw_ready_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.and %12, %io_in_aw_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_aw_ready_T_3 = firrtl.not %io_in_ar_valid {name = "_io_in_aw_ready_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.and %13, %_io_in_aw_ready_T_3 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.mux(%14, %io_in_aw_bits_addr, %aw_reg_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %aw_reg_addr, %15 : !firrtl.uint<32>
      %16 = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.and %14, %16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %18 = firrtl.mux(%17, %c2_ui2, %11) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_io_in_w_ready_T = firrtl.eq %inflight_type, %c2_ui2 {name = "_io_in_w_ready_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %19 = firrtl.and %io_in_w_ready_1, %io_in_w_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.and %_io_in_w_ready_T, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.mux(%20, %c1_ui4, %c0_ui4) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_cmd_9, %21 : !firrtl.uint<4>
      %22 = firrtl.mux(%20, %aw_reg_addr, %2) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_addr_7, %22 : !firrtl.uint<32>
      %23 = firrtl.or %20, %1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.mux(%23, %c2_ui3, %c0_ui3) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %io_out_req_bits_size_8, %24 : !firrtl.uint<3>
      %25 = firrtl.mux(%20, %io_in_w_bits_strb, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_out_req_bits_wmask_10, %25 : !firrtl.uint<8>
      %26 = firrtl.mux(%20, %io_in_w_bits_data, %c0_ui64) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_req_bits_wdata_11, %26 : !firrtl.uint<64>
      %27 = firrtl.mux(%20, %c1_ui1, %bresp_en) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.mux(%28, %c0_ui1, %27) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %bresp_en, %29 : !firrtl.uint<1>
      %30 = firrtl.mux(%28, %c0_ui2, %18) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %inflight_type, %30 : !firrtl.uint<2>
      %_io_out_req_valid_T_2 = firrtl.not %_io_in_aw_ready_T_1 {name = "_io_out_req_valid_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_req_valid_T_3 = firrtl.and %_io_out_req_valid_T_2, %io_in_ar_valid {name = "_io_out_req_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_req_valid_T_5 = firrtl.and %_io_in_w_ready_T, %io_in_w_valid {name = "_io_out_req_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_req_valid_T_6 = firrtl.or %_io_out_req_valid_T_3, %_io_out_req_valid_T_5 {name = "_io_out_req_valid_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_valid_6, %_io_out_req_valid_T_6 : !firrtl.uint<1>
      %_io_out_resp_ready_T_2 = firrtl.not %_io_in_aw_ready_T_1 {name = "_io_out_resp_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_resp_ready_T_4 = firrtl.and %_io_in_r_valid_T, %io_in_r_ready {name = "_io_out_resp_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_resp_ready_T_5 = firrtl.or %_io_out_resp_ready_T_2, %_io_out_resp_ready_T_4 {name = "_io_out_resp_ready_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_resp_ready_T_7 = firrtl.and %_io_in_w_ready_T, %io_in_b_ready {name = "_io_out_resp_ready_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_resp_ready_T_8 = firrtl.or %_io_out_resp_ready_T_5, %_io_out_resp_ready_T_7 {name = "_io_out_resp_ready_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_resp_ready_12, %_io_out_resp_ready_T_8 : !firrtl.uint<1>
      %_io_in_ar_ready_T_2 = firrtl.not %_io_in_aw_ready_T_1 {name = "_io_in_ar_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_3 = firrtl.and %_io_in_ar_ready_T_2, %io_out_req_ready {name = "_io_in_ar_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_3 : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.and %_io_in_r_valid_T, %io_out_resp_valid {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %_io_in_r_valid_T_1 : !firrtl.uint<1>
      %_io_in_aw_ready_T_2 = firrtl.not %_io_in_aw_ready_T_1 {name = "_io_in_aw_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_aw_ready_T_4 = firrtl.and %_io_in_aw_ready_T_2, %_io_in_aw_ready_T_3 {name = "_io_in_aw_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T_4 : !firrtl.uint<1>
      %_io_in_w_ready_T_1 = firrtl.and %_io_in_w_ready_T, %io_out_req_ready {name = "_io_in_w_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T_1 : !firrtl.uint<1>
      %_io_in_b_valid_T = firrtl.and %bresp_en, %io_out_resp_valid {name = "_io_in_b_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %_io_in_b_valid_T : !firrtl.uint<1>
      %31 = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %io_out_req_ready, %io_out_req_valid_6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.not %_io_in_aw_ready_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.and %32, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %36 = firrtl.and %31, %35 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %34, %36, "Assertion failed\0A    at ToAXI4.scala:137 when (axi.ar.fire) { assert(mem.req.fire && !isInflight()); }\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %37 = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.and %37, %38 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.not %_io_in_aw_ready_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %40, %39, "Assertion failed\0A    at ToAXI4.scala:138 when (axi.aw.fire) { assert(!isInflight()); }\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %41 = firrtl.and %io_out_req_ready, %io_out_req_valid_6 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.and %41, %_io_in_w_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.and %19, %43 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %42, %44, "Assertion failed\0A    at ToAXI4.scala:139 when (axi.w.fire) { assert(mem.req .fire && isState(axi_write)); }\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %45 = firrtl.and %io_out_resp_ready_12, %io_out_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %46 = firrtl.and %45, %_io_in_w_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.and %28, %47 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %46, %48, "Assertion failed\0A    at ToAXI4.scala:140 when (axi.b.fire) { assert(mem.resp.fire && isState(axi_write)); }\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %49 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.and %io_out_resp_ready_12, %io_out_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.and %50, %_io_in_r_valid_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %53 = firrtl.and %49, %52 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %51, %53, "Assertion failed\0A    at ToAXI4.scala:141 when (axi.r.fire) { assert(mem.resp.fire && isState(axi_read)); }\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
    }
    firrtl.module private @Prefetcher(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<32>, in %io_in_bits_size: !firrtl.uint<3>, in %io_in_bits_cmd: !firrtl.uint<4>, in %io_in_bits_wmask: !firrtl.uint<8>, in %io_in_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_size: !firrtl.uint<3>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_wmask: !firrtl.uint<8>, out %io_out_bits_wdata: !firrtl.uint<64>) {
      %c4294967232_ui32 = firrtl.constant 4294967232 : !firrtl.uint<32>
      %c18446744073709551552_ui64 = firrtl.constant 18446744073709551552 : !firrtl.uint<64>
      %c4_ui4 = firrtl.constant 4 : !firrtl.uint<4> {name = "prefetchReq_cmd"}
      %c1073741824_ui31 = firrtl.constant 1073741824 : !firrtl.uint<31>
      %c805306368_ui30 = firrtl.constant 805306368 : !firrtl.uint<30>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c64_ui7 = firrtl.constant 64 : !firrtl.uint<7>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_addr_2 = firrtl.wire {name = "io_out_bits_addr"} : !firrtl.uint<32>
      %io_out_bits_size_3 = firrtl.wire {name = "io_out_bits_size"} : !firrtl.uint<3>
      %io_out_bits_cmd_4 = firrtl.wire {name = "io_out_bits_cmd"} : !firrtl.uint<4>
      %io_out_bits_wmask_5 = firrtl.wire {name = "io_out_bits_wmask"} : !firrtl.uint<8>
      %io_out_bits_wdata_6 = firrtl.wire {name = "io_out_bits_wdata"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_out_bits_addr_2 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_size, %io_out_bits_size_3 : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_cmd, %io_out_bits_cmd_4 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_wmask, %io_out_bits_wmask_5 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wdata, %io_out_bits_wdata_6 : !firrtl.uint<64>
      %getNewReq = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %prefetchReq_addr = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %prefetchReq_size = firrtl.reg %clock {firrtl.random_init_start = 33 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %prefetchReq_wmask = firrtl.reg %clock {firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %prefetchReq_wdata = firrtl.reg %clock {firrtl.random_init_start = 48 : ui64} : !firrtl.clock, !firrtl.uint<64>
      firrtl.strictconnect %prefetchReq_size, %io_in_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %prefetchReq_wmask, %io_in_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %prefetchReq_wdata, %io_in_bits_wdata : !firrtl.uint<64>
      %_prefetchReq_addr_T = firrtl.add %io_in_bits_addr, %c64_ui7 {name = "_prefetchReq_addr_T"} : (!firrtl.uint<32>, !firrtl.uint<7>) -> !firrtl.uint<33>
      %_prefetchReq_addr_T_1 = firrtl.bits %_prefetchReq_addr_T 31 to 0 {name = "_prefetchReq_addr_T_1"} : (!firrtl.uint<33>) -> !firrtl.uint<32>
      firrtl.strictconnect %prefetchReq_addr, %_prefetchReq_addr_T_1 : !firrtl.uint<32>
      %lastReqAddr = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 112 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_getNewReq_T = firrtl.and %io_in_ready_0, %io_in_valid {name = "_getNewReq_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.pad %io_in_bits_addr, 64 : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %1 = firrtl.mux(%_getNewReq_T, %0, %lastReqAddr) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %lastReqAddr, %1 : !firrtl.uint<64>
      %2 = firrtl.and %io_in_bits_addr, %c4294967232_ui32 : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_neqAddr_T = firrtl.pad %2, 64 {name = "_neqAddr_T"} : (!firrtl.uint<32>) -> !firrtl.uint<64>
      %_neqAddr_T_1 = firrtl.and %lastReqAddr, %c18446744073709551552_ui64 {name = "_neqAddr_T_1"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %neqAddr = firrtl.neq %_neqAddr_T, %_neqAddr_T_1 {name = "neqAddr"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<1>
      %3 = firrtl.not %getNewReq : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_getNewReq_T_1 = firrtl.bits %io_in_bits_cmd 1 to 1 {name = "_getNewReq_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_getNewReq_T_2 = firrtl.and %_getNewReq_T, %_getNewReq_T_1 {name = "_getNewReq_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_getNewReq_T_3 = firrtl.and %_getNewReq_T_2, %neqAddr {name = "_getNewReq_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %4 = firrtl.mux(%3, %io_in_bits_addr, %prefetchReq_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_addr_2, %4 : !firrtl.uint<32>
      %5 = firrtl.mux(%3, %io_in_bits_size, %prefetchReq_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_size_3, %5 : !firrtl.uint<3>
      %6 = firrtl.mux(%3, %io_in_bits_cmd, %c4_ui4) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_cmd_4, %6 : !firrtl.uint<4>
      %7 = firrtl.mux(%3, %io_in_bits_wmask, %prefetchReq_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_wmask_5, %7 : !firrtl.uint<8>
      %8 = firrtl.mux(%3, %io_in_bits_wdata, %prefetchReq_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_wdata_6, %8 : !firrtl.uint<64>
      %9 = firrtl.bits %prefetchReq_addr 31 to 30 : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %10 = firrtl.bits %prefetchReq_addr 29 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<30>
      %11 = firrtl.xor %10, %c805306368_ui30 : (!firrtl.uint<30>, !firrtl.uint<30>) -> !firrtl.uint<30>
      %_getNewReq_T_5 = firrtl.cat %9, %11 {name = "_getNewReq_T_5"} : (!firrtl.uint<2>, !firrtl.uint<30>) -> !firrtl.uint<32>
      %_io_out_valid_T_1 = firrtl.bits %_getNewReq_T_5 31 to 28 {name = "_io_out_valid_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %12 = firrtl.orr %_io_out_valid_T_1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_valid_T_2 = firrtl.not %12 {name = "_io_out_valid_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.bits %prefetchReq_addr 31 to 31 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %14 = firrtl.bits %prefetchReq_addr 30 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<31>
      %15 = firrtl.xor %14, %c1073741824_ui31 : (!firrtl.uint<31>, !firrtl.uint<31>) -> !firrtl.uint<31>
      %_getNewReq_T_8 = firrtl.cat %13, %15 {name = "_getNewReq_T_8"} : (!firrtl.uint<1>, !firrtl.uint<31>) -> !firrtl.uint<32>
      %_io_out_valid_T_4 = firrtl.bits %_getNewReq_T_8 31 to 30 {name = "_io_out_valid_T_4"} : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %16 = firrtl.orr %_io_out_valid_T_4 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_valid_T_5 = firrtl.not %16 {name = "_io_out_valid_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_6 = firrtl.or %_io_out_valid_T_2, %_io_out_valid_T_5 {name = "_io_out_valid_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_7 = firrtl.not %_io_out_valid_T_6 {name = "_io_out_valid_T_7"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.mux(%3, %io_in_valid, %_io_out_valid_T_7) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %17 : !firrtl.uint<1>
      %18 = firrtl.mux(%3, %_io_in_ready_T_2, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %18 : !firrtl.uint<1>
      %_getNewReq_T_4 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_getNewReq_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_getNewReq_T_6 = firrtl.bits %_getNewReq_T_5 31 to 28 {name = "_getNewReq_T_6"} : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %19 = firrtl.orr %_getNewReq_T_6 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_getNewReq_T_7 = firrtl.not %19 {name = "_getNewReq_T_7"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_getNewReq_T_9 = firrtl.bits %_getNewReq_T_8 31 to 30 {name = "_getNewReq_T_9"} : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %20 = firrtl.orr %_getNewReq_T_9 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_getNewReq_T_10 = firrtl.not %20 {name = "_getNewReq_T_10"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_getNewReq_T_11 = firrtl.or %_getNewReq_T_7, %_getNewReq_T_10 {name = "_getNewReq_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_getNewReq_T_12 = firrtl.or %_getNewReq_T_4, %_getNewReq_T_11 {name = "_getNewReq_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_getNewReq_T_13 = firrtl.not %_getNewReq_T_12 {name = "_getNewReq_T_13"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.mux(%3, %_getNewReq_T_3, %_getNewReq_T_13) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %getNewReq, %21 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 176 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %22 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.and %control_logEnable, %22 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %23, "%d: [Prefetcher]: in(%d,%d), out(%d,%d), in.bits.addr = %x\0A" {name = "printf"} (%c, %io_in_valid, %io_in_ready_0, %io_out_valid_1, %io_out_ready, %io_in_bits_addr) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>
    }
    firrtl.module private @CacheStage1_2(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<32>, in %io_in_bits_size: !firrtl.uint<3>, in %io_in_bits_cmd: !firrtl.uint<4>, in %io_in_bits_wmask: !firrtl.uint<8>, in %io_in_bits_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_req_addr: !firrtl.uint<32>, out %io_out_bits_req_size: !firrtl.uint<3>, out %io_out_bits_req_cmd: !firrtl.uint<4>, out %io_out_bits_req_wmask: !firrtl.uint<8>, out %io_out_bits_req_wdata: !firrtl.uint<64>, in %io_metaReadBus_req_ready: !firrtl.uint<1>, out %io_metaReadBus_req_valid: !firrtl.uint<1>, out %io_metaReadBus_req_bits_setIdx: !firrtl.uint<9>, in %io_dataReadBus_req_ready: !firrtl.uint<1>, out %io_dataReadBus_req_valid: !firrtl.uint<1>, out %io_dataReadBus_req_bits_setIdx: !firrtl.uint<12>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_metaReadBus_req_valid_2 = firrtl.wire {name = "io_metaReadBus_req_valid"} : !firrtl.uint<1>
      %io_metaReadBus_req_bits_setIdx_3 = firrtl.wire {name = "io_metaReadBus_req_bits_setIdx"} : !firrtl.uint<9>
      %io_dataReadBus_req_valid_4 = firrtl.wire {name = "io_dataReadBus_req_valid"} : !firrtl.uint<1>
      %io_dataReadBus_req_bits_setIdx_5 = firrtl.wire {name = "io_dataReadBus_req_bits_setIdx"} : !firrtl.uint<12>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_req_addr, %io_in_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_req_size, %io_in_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_req_cmd, %io_in_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_req_wmask, %io_in_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_req_wdata, %io_in_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_metaReadBus_req_valid, %io_metaReadBus_req_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaReadBus_req_bits_setIdx, %io_metaReadBus_req_bits_setIdx_3 : !firrtl.uint<9>
      firrtl.strictconnect %io_dataReadBus_req_valid, %io_dataReadBus_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx, %io_dataReadBus_req_bits_setIdx_5 : !firrtl.uint<12>
      %0 = firrtl.and %io_in_ready_0, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %1 = firrtl.and %0, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.and %1, %2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %3, "[%d] CacheStage1_2: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %4 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.and %1, %4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %5, "[L1$] cache stage1, addr in: %x, user: %x id: %x\0A" {name = "printf_1"} (%io_in_bits_addr, %c0_ui1, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<1>, !firrtl.uint<1>
      %readBusValid = firrtl.and %io_in_valid, %io_out_ready {name = "readBusValid"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<9>
      %7 = firrtl.bits %io_in_bits_addr 14 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %6, %7 : !firrtl.uint<9>
      firrtl.strictconnect %io_metaReadBus_req_bits_setIdx_3, %6 : !firrtl.uint<9>
      firrtl.strictconnect %io_metaReadBus_req_valid_2, %readBusValid : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<9>
      %9 = firrtl.bits %io_in_bits_addr 14 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %8, %9 : !firrtl.uint<9>
      %10 = firrtl.wire : !firrtl.uint<3>
      %11 = firrtl.bits %io_in_bits_addr 5 to 3 : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %10, %11 : !firrtl.uint<3>
      %12 = firrtl.cat %8, %10 : (!firrtl.uint<9>, !firrtl.uint<3>) -> !firrtl.uint<12>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx_5, %12 : !firrtl.uint<12>
      firrtl.strictconnect %io_dataReadBus_req_valid_4, %readBusValid : !firrtl.uint<1>
      %_io_out_valid_T = firrtl.and %io_in_valid, %io_metaReadBus_req_ready {name = "_io_out_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.and %_io_out_valid_T, %io_dataReadBus_req_ready {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_1 : !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_out_valid_1 {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_3 = firrtl.and %_io_in_ready_T_2, %io_metaReadBus_req_ready {name = "_io_in_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.and %_io_in_ready_T_3, %io_dataReadBus_req_ready {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_4 : !firrtl.uint<1>
      %13 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.and %c_control_logEnable, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %14, "[%d] CacheStage1_2: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %15 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.and %c_control_logEnable, %15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %16, "in.ready = %d, in.valid = %d, out.valid = %d, out.ready = %d, addr = %x, cmd = %x, dataReadBus.req.valid = %d\0A" {name = "printf_3"} (%io_in_ready_0, %io_in_valid, %io_out_valid_1, %io_out_ready, %io_in_bits_addr, %io_in_bits_cmd, %io_dataReadBus_req_valid_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<1>
    }
    firrtl.module private @CacheStage2_2(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_req_addr: !firrtl.uint<32>, in %io_in_bits_req_size: !firrtl.uint<3>, in %io_in_bits_req_cmd: !firrtl.uint<4>, in %io_in_bits_req_wmask: !firrtl.uint<8>, in %io_in_bits_req_wdata: !firrtl.uint<64>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_req_addr: !firrtl.uint<32>, out %io_out_bits_req_size: !firrtl.uint<3>, out %io_out_bits_req_cmd: !firrtl.uint<4>, out %io_out_bits_req_wmask: !firrtl.uint<8>, out %io_out_bits_req_wdata: !firrtl.uint<64>, out %io_out_bits_metas_0_tag: !firrtl.uint<17>, out %io_out_bits_metas_0_valid: !firrtl.uint<1>, out %io_out_bits_metas_0_dirty: !firrtl.uint<1>, out %io_out_bits_metas_1_tag: !firrtl.uint<17>, out %io_out_bits_metas_1_valid: !firrtl.uint<1>, out %io_out_bits_metas_1_dirty: !firrtl.uint<1>, out %io_out_bits_metas_2_tag: !firrtl.uint<17>, out %io_out_bits_metas_2_valid: !firrtl.uint<1>, out %io_out_bits_metas_2_dirty: !firrtl.uint<1>, out %io_out_bits_metas_3_tag: !firrtl.uint<17>, out %io_out_bits_metas_3_valid: !firrtl.uint<1>, out %io_out_bits_metas_3_dirty: !firrtl.uint<1>, out %io_out_bits_datas_0_data: !firrtl.uint<64>, out %io_out_bits_datas_1_data: !firrtl.uint<64>, out %io_out_bits_datas_2_data: !firrtl.uint<64>, out %io_out_bits_datas_3_data: !firrtl.uint<64>, out %io_out_bits_hit: !firrtl.uint<1>, out %io_out_bits_waymask: !firrtl.uint<4>, out %io_out_bits_mmio: !firrtl.uint<1>, out %io_out_bits_isForwardData: !firrtl.uint<1>, out %io_out_bits_forwardData_data_data: !firrtl.uint<64>, out %io_out_bits_forwardData_waymask: !firrtl.uint<4>, in %io_metaReadResp_0_tag: !firrtl.uint<17>, in %io_metaReadResp_0_valid: !firrtl.uint<1>, in %io_metaReadResp_0_dirty: !firrtl.uint<1>, in %io_metaReadResp_1_tag: !firrtl.uint<17>, in %io_metaReadResp_1_valid: !firrtl.uint<1>, in %io_metaReadResp_1_dirty: !firrtl.uint<1>, in %io_metaReadResp_2_tag: !firrtl.uint<17>, in %io_metaReadResp_2_valid: !firrtl.uint<1>, in %io_metaReadResp_2_dirty: !firrtl.uint<1>, in %io_metaReadResp_3_tag: !firrtl.uint<17>, in %io_metaReadResp_3_valid: !firrtl.uint<1>, in %io_metaReadResp_3_dirty: !firrtl.uint<1>, in %io_dataReadResp_0_data: !firrtl.uint<64>, in %io_dataReadResp_1_data: !firrtl.uint<64>, in %io_dataReadResp_2_data: !firrtl.uint<64>, in %io_dataReadResp_3_data: !firrtl.uint<64>, in %io_metaWriteBus_req_valid: !firrtl.uint<1>, in %io_metaWriteBus_req_bits_setIdx: !firrtl.uint<9>, in %io_metaWriteBus_req_bits_data_tag: !firrtl.uint<17>, in %io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, in %io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in %io_dataWriteBus_req_valid: !firrtl.uint<1>, in %io_dataWriteBus_req_bits_setIdx: !firrtl.uint<12>, in %io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, in %io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "forwardMetaReg_data_valid"}
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64>
      %c1073741824_ui31 = firrtl.constant 1073741824 : !firrtl.uint<31>
      %c805306368_ui30 = firrtl.constant 805306368 : !firrtl.uint<30>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c1311768467139281697_ui64 = firrtl.constant 1311768467139281697 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_bits_metas_0_tag_1 = firrtl.wire {name = "io_out_bits_metas_0_tag"} : !firrtl.uint<17>
      %io_out_bits_metas_0_valid_2 = firrtl.wire {name = "io_out_bits_metas_0_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_0_dirty_3 = firrtl.wire {name = "io_out_bits_metas_0_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_1_tag_4 = firrtl.wire {name = "io_out_bits_metas_1_tag"} : !firrtl.uint<17>
      %io_out_bits_metas_1_valid_5 = firrtl.wire {name = "io_out_bits_metas_1_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_1_dirty_6 = firrtl.wire {name = "io_out_bits_metas_1_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_2_tag_7 = firrtl.wire {name = "io_out_bits_metas_2_tag"} : !firrtl.uint<17>
      %io_out_bits_metas_2_valid_8 = firrtl.wire {name = "io_out_bits_metas_2_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_2_dirty_9 = firrtl.wire {name = "io_out_bits_metas_2_dirty"} : !firrtl.uint<1>
      %io_out_bits_metas_3_tag_10 = firrtl.wire {name = "io_out_bits_metas_3_tag"} : !firrtl.uint<17>
      %io_out_bits_metas_3_valid_11 = firrtl.wire {name = "io_out_bits_metas_3_valid"} : !firrtl.uint<1>
      %io_out_bits_metas_3_dirty_12 = firrtl.wire {name = "io_out_bits_metas_3_dirty"} : !firrtl.uint<1>
      %io_out_bits_hit_13 = firrtl.wire {name = "io_out_bits_hit"} : !firrtl.uint<1>
      %io_out_bits_waymask_14 = firrtl.wire {name = "io_out_bits_waymask"} : !firrtl.uint<4>
      %io_out_bits_mmio_15 = firrtl.wire {name = "io_out_bits_mmio"} : !firrtl.uint<1>
      %io_out_bits_isForwardData_16 = firrtl.wire {name = "io_out_bits_isForwardData"} : !firrtl.uint<1>
      %io_out_bits_forwardData_data_data_17 = firrtl.wire {name = "io_out_bits_forwardData_data_data"} : !firrtl.uint<64>
      %io_out_bits_forwardData_waymask_18 = firrtl.wire {name = "io_out_bits_forwardData_waymask"} : !firrtl.uint<4>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_req_addr, %io_in_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_req_size, %io_in_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_bits_req_cmd, %io_in_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_req_wmask, %io_in_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_bits_req_wdata, %io_in_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_metas_0_tag, %io_out_bits_metas_0_tag_1 : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_0_valid, %io_out_bits_metas_0_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_0_dirty, %io_out_bits_metas_0_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_tag, %io_out_bits_metas_1_tag_4 : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_1_valid, %io_out_bits_metas_1_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_dirty, %io_out_bits_metas_1_dirty_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_tag, %io_out_bits_metas_2_tag_7 : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_2_valid, %io_out_bits_metas_2_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_dirty, %io_out_bits_metas_2_dirty_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_tag, %io_out_bits_metas_3_tag_10 : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_3_valid, %io_out_bits_metas_3_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_dirty, %io_out_bits_metas_3_dirty_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_datas_0_data, %io_dataReadResp_0_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_1_data, %io_dataReadResp_1_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_2_data, %io_dataReadResp_2_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_datas_3_data, %io_dataReadResp_3_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_hit, %io_out_bits_hit_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask, %io_out_bits_waymask_14 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_mmio, %io_out_bits_mmio_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_isForwardData, %io_out_bits_isForwardData_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_forwardData_data_data, %io_out_bits_forwardData_data_data_17 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_forwardData_waymask, %io_out_bits_forwardData_waymask_18 : !firrtl.uint<4>
      %addr_tag = firrtl.wire : !firrtl.uint<17>
      %_addr_T_3 = firrtl.bits %io_in_bits_req_addr 31 to 15 {name = "_addr_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<17>
      firrtl.strictconnect %addr_tag, %_addr_T_3 : !firrtl.uint<17>
      %_isForwardMeta_T = firrtl.and %io_in_valid, %io_metaWriteBus_req_valid {name = "_isForwardMeta_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_isForwardMeta_WIRE_index = firrtl.wire : !firrtl.uint<9>
      %_isForwardMeta_T_3 = firrtl.bits %io_in_bits_req_addr 14 to 6 {name = "_isForwardMeta_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %_isForwardMeta_WIRE_index, %_isForwardMeta_T_3 : !firrtl.uint<9>
      %_isForwardMeta_T_5 = firrtl.eq %io_metaWriteBus_req_bits_setIdx, %_isForwardMeta_WIRE_index {name = "_isForwardMeta_T_5"} : (!firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<1>
      %isForwardMeta = firrtl.and %_isForwardMeta_T, %_isForwardMeta_T_5 {name = "isForwardMeta"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardMetaReg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%isForwardMeta, %c1_ui1, %isForwardMetaReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.and %io_in_ready_0, %io_in_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T = firrtl.not %io_in_valid {name = "_io_in_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %2 = firrtl.or %1, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%2, %c0_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %isForwardMetaReg, %3 : !firrtl.uint<1>
      %forwardMetaReg_data_tag = firrtl.reg %clock {firrtl.random_init_start = 10 : ui64} : !firrtl.clock, !firrtl.uint<17>
      %forwardMetaReg_data_dirty = firrtl.reg %clock {firrtl.random_init_start = 28 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %forwardMetaReg_waymask = firrtl.reg %clock {firrtl.random_init_start = 29 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %4 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_tag, %forwardMetaReg_data_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %forwardMetaReg_data_tag, %4 : !firrtl.uint<17>
      %5 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_dirty, %forwardMetaReg_data_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %forwardMetaReg_data_dirty, %5 : !firrtl.uint<1>
      %6 = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_waymask, %forwardMetaReg_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %forwardMetaReg_waymask, %6 : !firrtl.uint<4>
      %metaWay_0_tag = firrtl.wire : !firrtl.uint<17>
      %metaWay_0_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_0_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_1_tag = firrtl.wire : !firrtl.uint<17>
      %metaWay_1_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_1_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_2_tag = firrtl.wire : !firrtl.uint<17>
      %metaWay_2_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_2_dirty = firrtl.wire : !firrtl.uint<1>
      %metaWay_3_tag = firrtl.wire : !firrtl.uint<17>
      %metaWay_3_valid = firrtl.wire : !firrtl.uint<1>
      %metaWay_3_dirty = firrtl.wire : !firrtl.uint<1>
      %pickForwardMeta = firrtl.or %isForwardMetaReg, %isForwardMeta {name = "pickForwardMeta"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %forwardMeta_data_tag = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_tag, %forwardMetaReg_data_tag) {name = "forwardMeta_data_tag"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %forwardMeta_data_dirty = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_data_dirty, %forwardMetaReg_data_dirty) {name = "forwardMeta_data_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %forwardMeta_waymask = firrtl.mux(%isForwardMeta, %io_metaWriteBus_req_bits_waymask, %forwardMetaReg_waymask) {name = "forwardMeta_waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %forwardWaymask_0 = firrtl.bits %forwardMeta_waymask 0 to 0 {name = "forwardWaymask_0"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_1 = firrtl.bits %forwardMeta_waymask 1 to 1 {name = "forwardWaymask_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_2 = firrtl.bits %forwardMeta_waymask 2 to 2 {name = "forwardWaymask_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %forwardWaymask_3 = firrtl.bits %forwardMeta_waymask 3 to 3 {name = "forwardWaymask_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_metaWay_0_T = firrtl.and %pickForwardMeta, %forwardWaymask_0 {name = "_metaWay_0_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_0_T_1_tag = firrtl.mux(%_metaWay_0_T, %forwardMeta_data_tag, %io_metaReadResp_0_tag) {name = "_metaWay_0_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_metaWay_0_T_1_valid = firrtl.mux(%_metaWay_0_T, %c1_ui1, %io_metaReadResp_0_valid) {name = "_metaWay_0_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_0_T_1_dirty = firrtl.mux(%_metaWay_0_T, %forwardMeta_data_dirty, %io_metaReadResp_0_dirty) {name = "_metaWay_0_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_0_tag, %_metaWay_0_T_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaWay_0_valid, %_metaWay_0_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_0_dirty, %_metaWay_0_T_1_dirty : !firrtl.uint<1>
      %_metaWay_1_T = firrtl.and %pickForwardMeta, %forwardWaymask_1 {name = "_metaWay_1_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_1_T_1_tag = firrtl.mux(%_metaWay_1_T, %forwardMeta_data_tag, %io_metaReadResp_1_tag) {name = "_metaWay_1_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_metaWay_1_T_1_valid = firrtl.mux(%_metaWay_1_T, %c1_ui1, %io_metaReadResp_1_valid) {name = "_metaWay_1_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_1_T_1_dirty = firrtl.mux(%_metaWay_1_T, %forwardMeta_data_dirty, %io_metaReadResp_1_dirty) {name = "_metaWay_1_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_1_tag, %_metaWay_1_T_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaWay_1_valid, %_metaWay_1_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_1_dirty, %_metaWay_1_T_1_dirty : !firrtl.uint<1>
      %_metaWay_2_T = firrtl.and %pickForwardMeta, %forwardWaymask_2 {name = "_metaWay_2_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_2_T_1_tag = firrtl.mux(%_metaWay_2_T, %forwardMeta_data_tag, %io_metaReadResp_2_tag) {name = "_metaWay_2_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_metaWay_2_T_1_valid = firrtl.mux(%_metaWay_2_T, %c1_ui1, %io_metaReadResp_2_valid) {name = "_metaWay_2_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_2_T_1_dirty = firrtl.mux(%_metaWay_2_T, %forwardMeta_data_dirty, %io_metaReadResp_2_dirty) {name = "_metaWay_2_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_2_tag, %_metaWay_2_T_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaWay_2_valid, %_metaWay_2_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_2_dirty, %_metaWay_2_T_1_dirty : !firrtl.uint<1>
      %_metaWay_3_T = firrtl.and %pickForwardMeta, %forwardWaymask_3 {name = "_metaWay_3_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_3_T_1_tag = firrtl.mux(%_metaWay_3_T, %forwardMeta_data_tag, %io_metaReadResp_3_tag) {name = "_metaWay_3_T_1_tag"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_metaWay_3_T_1_valid = firrtl.mux(%_metaWay_3_T, %c1_ui1, %io_metaReadResp_3_valid) {name = "_metaWay_3_T_1_valid"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaWay_3_T_1_dirty = firrtl.mux(%_metaWay_3_T, %forwardMeta_data_dirty, %io_metaReadResp_3_dirty) {name = "_metaWay_3_T_1_dirty"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %metaWay_3_tag, %_metaWay_3_T_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaWay_3_valid, %_metaWay_3_T_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %metaWay_3_dirty, %_metaWay_3_T_1_dirty : !firrtl.uint<1>
      %_hitVec_T = firrtl.eq %metaWay_0_tag, %addr_tag {name = "_hitVec_T"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<1>
      %_hitVec_T_1 = firrtl.and %metaWay_0_valid, %_hitVec_T {name = "_hitVec_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_2 = firrtl.and %_hitVec_T_1, %io_in_valid {name = "_hitVec_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_3 = firrtl.eq %metaWay_1_tag, %addr_tag {name = "_hitVec_T_3"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<1>
      %_hitVec_T_4 = firrtl.and %metaWay_1_valid, %_hitVec_T_3 {name = "_hitVec_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_5 = firrtl.and %_hitVec_T_4, %io_in_valid {name = "_hitVec_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_6 = firrtl.eq %metaWay_2_tag, %addr_tag {name = "_hitVec_T_6"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<1>
      %_hitVec_T_7 = firrtl.and %metaWay_2_valid, %_hitVec_T_6 {name = "_hitVec_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_8 = firrtl.and %_hitVec_T_7, %io_in_valid {name = "_hitVec_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_9 = firrtl.eq %metaWay_3_tag, %addr_tag {name = "_hitVec_T_9"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<1>
      %_hitVec_T_10 = firrtl.and %metaWay_3_valid, %_hitVec_T_9 {name = "_hitVec_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_T_11 = firrtl.and %_hitVec_T_10, %io_in_valid {name = "_hitVec_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_hitVec_WIRE_0 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_1 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_2 = firrtl.wire : !firrtl.uint<1>
      %_hitVec_WIRE_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_0, %_hitVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_1, %_hitVec_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_2, %_hitVec_T_8 : !firrtl.uint<1>
      firrtl.strictconnect %_hitVec_WIRE_3, %_hitVec_T_11 : !firrtl.uint<1>
      %hitVec_lo = firrtl.cat %_hitVec_WIRE_1, %_hitVec_WIRE_0 {name = "hitVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec_hi = firrtl.cat %_hitVec_WIRE_3, %_hitVec_WIRE_2 {name = "hitVec_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %hitVec = firrtl.cat %hitVec_hi, %hitVec_lo {name = "hitVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %victimWaymask_lfsr = firrtl.regreset %clock, %reset, %c1311768467139281697_ui64 {firrtl.random_init_start = 33 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_victimWaymask_xor_T = firrtl.bits %victimWaymask_lfsr 0 to 0 {name = "_victimWaymask_xor_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_1 = firrtl.bits %victimWaymask_lfsr 1 to 1 {name = "_victimWaymask_xor_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_2 = firrtl.xor %_victimWaymask_xor_T, %_victimWaymask_xor_T_1 {name = "_victimWaymask_xor_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_3 = firrtl.bits %victimWaymask_lfsr 3 to 3 {name = "_victimWaymask_xor_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_4 = firrtl.xor %_victimWaymask_xor_T_2, %_victimWaymask_xor_T_3 {name = "_victimWaymask_xor_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_xor_T_5 = firrtl.bits %victimWaymask_lfsr 4 to 4 {name = "_victimWaymask_xor_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %victimWaymask_xor = firrtl.xor %_victimWaymask_xor_T_4, %_victimWaymask_xor_T_5 {name = "victimWaymask_xor"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.orr %victimWaymask_lfsr : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T = firrtl.not %7 {name = "_victimWaymask_lfsr_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_victimWaymask_lfsr_T_1 = firrtl.bits %victimWaymask_lfsr 63 to 1 {name = "_victimWaymask_lfsr_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<63>
      %_victimWaymask_lfsr_T_2 = firrtl.cat %victimWaymask_xor, %_victimWaymask_lfsr_T_1 {name = "_victimWaymask_lfsr_T_2"} : (!firrtl.uint<1>, !firrtl.uint<63>) -> !firrtl.uint<64>
      %_victimWaymask_lfsr_T_3 = firrtl.mux(%_victimWaymask_lfsr_T, %c1_ui64, %_victimWaymask_lfsr_T_2) {name = "_victimWaymask_lfsr_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %victimWaymask_lfsr, %_victimWaymask_lfsr_T_3 : !firrtl.uint<64>
      %_victimWaymask_T = firrtl.bits %victimWaymask_lfsr 1 to 0 {name = "_victimWaymask_T"} : (!firrtl.uint<64>) -> !firrtl.uint<2>
      %victimWaymask = firrtl.dshl %c1_ui1, %_victimWaymask_T {name = "victimWaymask"} : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_invalidVec_T = firrtl.not %metaWay_0_valid {name = "_invalidVec_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_1 = firrtl.not %metaWay_1_valid {name = "_invalidVec_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_2 = firrtl.not %metaWay_2_valid {name = "_invalidVec_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_T_3 = firrtl.not %metaWay_3_valid {name = "_invalidVec_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_invalidVec_WIRE_0 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_1 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_2 = firrtl.wire : !firrtl.uint<1>
      %_invalidVec_WIRE_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_0, %_invalidVec_T : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_1, %_invalidVec_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_2, %_invalidVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %_invalidVec_WIRE_3, %_invalidVec_T_3 : !firrtl.uint<1>
      %invalidVec_lo = firrtl.cat %_invalidVec_WIRE_1, %_invalidVec_WIRE_0 {name = "invalidVec_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %invalidVec_hi = firrtl.cat %_invalidVec_WIRE_3, %_invalidVec_WIRE_2 {name = "invalidVec_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %invalidVec = firrtl.cat %invalidVec_hi, %invalidVec_lo {name = "invalidVec"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %hasInvalidWay = firrtl.orr %invalidVec {name = "hasInvalidWay"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T = firrtl.geq %invalidVec, %c8_ui4 {name = "_refillInvalidWaymask_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_1 = firrtl.geq %invalidVec, %c4_ui3 {name = "_refillInvalidWaymask_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_2 = firrtl.geq %invalidVec, %c2_ui2 {name = "_refillInvalidWaymask_T_2"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_refillInvalidWaymask_T_3 = firrtl.mux(%_refillInvalidWaymask_T_2, %c2_ui2, %c1_ui2) {name = "_refillInvalidWaymask_T_3"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %8 = firrtl.pad %_refillInvalidWaymask_T_3, 3 : (!firrtl.uint<2>) -> !firrtl.uint<3>
      %_refillInvalidWaymask_T_4 = firrtl.mux(%_refillInvalidWaymask_T_1, %c4_ui3, %8) {name = "_refillInvalidWaymask_T_4"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %9 = firrtl.pad %_refillInvalidWaymask_T_4, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %refillInvalidWaymask = firrtl.mux(%_refillInvalidWaymask_T, %c8_ui4, %9) {name = "refillInvalidWaymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_waymask_T = firrtl.mux(%hasInvalidWay, %refillInvalidWaymask, %victimWaymask) {name = "_waymask_T"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %waymask = firrtl.mux(%io_out_bits_hit_13, %hitVec, %_waymask_T) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %10 = firrtl.bits %waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %11 = firrtl.bits %waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %12 = firrtl.bits %waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %13 = firrtl.bits %waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %14 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %15 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %16 = firrtl.add %14, %15 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %17 = firrtl.gt %16, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %18 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %20 = firrtl.and %18, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %20, "[%d] CacheStage2_2: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %21 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %18, %21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %22, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_1"} (%metaWay_0_valid, %metaWay_0_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %23 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.and %23, %24 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %25, "[%d] CacheStage2_2: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %26 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.and %23, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %27, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_3"} (%metaWay_1_valid, %metaWay_1_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %28 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.and %28, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %30, "[%d] CacheStage2_2: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %31 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %28, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %32, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_5"} (%metaWay_2_valid, %metaWay_2_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %33 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.and %33, %34 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %35, "[%d] CacheStage2_2: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %36 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.and %33, %36 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %37, "[ERROR] metaWay %x metat %x reqt %x\0A" {name = "printf_7"} (%metaWay_3_valid, %metaWay_3_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %38 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.and %38, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %40, "[%d] CacheStage2_2: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %41 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %42 = firrtl.and %38, %41 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %42, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_9"} (%io_metaReadResp_0_valid, %io_metaReadResp_0_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %43 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %44 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.and %43, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %45, "[%d] CacheStage2_2: " {name = "printf_10"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %46 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.and %43, %46 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %47, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_11"} (%io_metaReadResp_1_valid, %io_metaReadResp_1_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %48 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.and %48, %49 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %50, "[%d] CacheStage2_2: " {name = "printf_12"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %51 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %52 = firrtl.and %48, %51 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %52, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_13"} (%io_metaReadResp_2_valid, %io_metaReadResp_2_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %53 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %54 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %55 = firrtl.and %53, %54 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %55, "[%d] CacheStage2_2: " {name = "printf_14"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %56 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.and %53, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %57, "[ERROR] metaReadResp %x metat %x reqt %x\0A" {name = "printf_15"} (%io_metaReadResp_3_valid, %io_metaReadResp_3_tag, %addr_tag) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %58 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %60 = firrtl.and %58, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %60, "[%d] CacheStage2_2: " {name = "printf_16"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %61 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.and %58, %61 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %62, "[ERROR] forwardMetaReg isForwardMetaReg %x %x metat %x wm %b\0A" {name = "printf_17"} (%isForwardMetaReg, %c1_ui1, %forwardMetaReg_data_tag, %forwardMetaReg_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<4>
      %63 = firrtl.and %17, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %64 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.and %63, %64 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %65, "[%d] CacheStage2_2: " {name = "printf_18"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %66 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.and %63, %66 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %67, "[ERROR] forwardMeta isForwardMeta %x %x metat %x wm %b\0A" {name = "printf_19"} (%isForwardMeta, %c1_ui1, %io_metaWriteBus_req_bits_data_tag, %io_metaWriteBus_req_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<4>
      %68 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %69 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %70 = firrtl.add %68, %69 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %71 = firrtl.gt %70, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_1_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_1_timer, %LogPerfHelper_1_timer : !firrtl.uint<64>
      %72 = firrtl.and %71, %c_control_1_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %73 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %74 = firrtl.and %72, %73 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %74, "[%d] CacheStage2_2: " {name = "printf_20"} (%c_control_1_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %75 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %76 = firrtl.and %72, %75 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %76, "[ERROR] hit %b wmask %b hitvec %b\0A" {name = "printf_21"} (%io_out_bits_hit_13, %forwardMeta_waymask, %hitVec) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %77 = firrtl.add %10, %11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %78 = firrtl.add %12, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %79 = firrtl.add %77, %78 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %80 = firrtl.gt %79, %c1_ui1 : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %81 = firrtl.and %io_in_valid, %80 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %82 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.not %81 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %83, %82, "Assertion failed\0A    at Cache.scala:208 assert(!(io.in.valid && PopCount(waymask) > 1.U))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      firrtl.strictconnect %io_out_bits_metas_0_tag_1, %metaWay_0_tag : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_0_valid_2, %metaWay_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_0_dirty_3, %metaWay_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_tag_4, %metaWay_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_1_valid_5, %metaWay_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_1_dirty_6, %metaWay_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_tag_7, %metaWay_2_tag : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_2_valid_8, %metaWay_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_2_dirty_9, %metaWay_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_tag_10, %metaWay_3_tag : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_metas_3_valid_11, %metaWay_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_metas_3_dirty_12, %metaWay_3_dirty : !firrtl.uint<1>
      %_io_out_bits_hit_T = firrtl.orr %hitVec {name = "_io_out_bits_hit_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_hit_T_1 = firrtl.and %io_in_valid, %_io_out_bits_hit_T {name = "_io_out_bits_hit_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_hit_13, %_io_out_bits_hit_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask_14, %waymask : !firrtl.uint<4>
      %84 = firrtl.bits %io_in_bits_req_addr 31 to 30 : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %85 = firrtl.bits %io_in_bits_req_addr 29 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<30>
      %86 = firrtl.xor %85, %c805306368_ui30 : (!firrtl.uint<30>, !firrtl.uint<30>) -> !firrtl.uint<30>
      %_io_out_bits_mmio_T = firrtl.cat %84, %86 {name = "_io_out_bits_mmio_T"} : (!firrtl.uint<2>, !firrtl.uint<30>) -> !firrtl.uint<32>
      %_io_out_bits_mmio_T_1 = firrtl.bits %_io_out_bits_mmio_T 31 to 28 {name = "_io_out_bits_mmio_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %87 = firrtl.orr %_io_out_bits_mmio_T_1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_2 = firrtl.not %87 {name = "_io_out_bits_mmio_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.bits %io_in_bits_req_addr 31 to 31 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %89 = firrtl.bits %io_in_bits_req_addr 30 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<31>
      %90 = firrtl.xor %89, %c1073741824_ui31 : (!firrtl.uint<31>, !firrtl.uint<31>) -> !firrtl.uint<31>
      %_io_out_bits_mmio_T_3 = firrtl.cat %88, %90 {name = "_io_out_bits_mmio_T_3"} : (!firrtl.uint<1>, !firrtl.uint<31>) -> !firrtl.uint<32>
      %_io_out_bits_mmio_T_4 = firrtl.bits %_io_out_bits_mmio_T_3 31 to 30 {name = "_io_out_bits_mmio_T_4"} : (!firrtl.uint<32>) -> !firrtl.uint<2>
      %91 = firrtl.orr %_io_out_bits_mmio_T_4 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_5 = firrtl.not %91 {name = "_io_out_bits_mmio_T_5"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_mmio_T_6 = firrtl.or %_io_out_bits_mmio_T_2, %_io_out_bits_mmio_T_5 {name = "_io_out_bits_mmio_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_mmio_15, %_io_out_bits_mmio_T_6 : !firrtl.uint<1>
      %_isForwardData_WIRE_index = firrtl.wire : !firrtl.uint<9>
      %_isForwardData_T_2 = firrtl.bits %io_in_bits_req_addr 14 to 6 {name = "_isForwardData_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %_isForwardData_WIRE_index, %_isForwardData_T_2 : !firrtl.uint<9>
      %_isForwardData_WIRE_2_wordIndex = firrtl.wire : !firrtl.uint<3>
      %_isForwardData_T_5 = firrtl.bits %io_in_bits_req_addr 5 to 3 {name = "_isForwardData_T_5"} : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %_isForwardData_WIRE_2_wordIndex, %_isForwardData_T_5 : !firrtl.uint<3>
      %_isForwardData_T_8 = firrtl.cat %_isForwardData_WIRE_index, %_isForwardData_WIRE_2_wordIndex {name = "_isForwardData_T_8"} : (!firrtl.uint<9>, !firrtl.uint<3>) -> !firrtl.uint<12>
      %_isForwardData_T_9 = firrtl.eq %io_dataWriteBus_req_bits_setIdx, %_isForwardData_T_8 {name = "_isForwardData_T_9"} : (!firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<1>
      %_isForwardData_T_10 = firrtl.and %io_dataWriteBus_req_valid, %_isForwardData_T_9 {name = "_isForwardData_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardData = firrtl.and %io_in_valid, %_isForwardData_T_10 {name = "isForwardData"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %isForwardDataReg = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 97 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %92 = firrtl.mux(%isForwardData, %c1_ui1, %isForwardDataReg) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %93 = firrtl.or %1, %_io_in_ready_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.mux(%93, %c0_ui1, %92) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %isForwardDataReg, %94 : !firrtl.uint<1>
      %forwardDataReg_data_data = firrtl.reg %clock {firrtl.random_init_start = 110 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %forwardDataReg_waymask = firrtl.reg %clock {firrtl.random_init_start = 174 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %95 = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_data_data, %forwardDataReg_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %forwardDataReg_data_data, %95 : !firrtl.uint<64>
      %96 = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_waymask, %forwardDataReg_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %forwardDataReg_waymask, %96 : !firrtl.uint<4>
      %_io_out_bits_isForwardData_T = firrtl.or %isForwardDataReg, %isForwardData {name = "_io_out_bits_isForwardData_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_isForwardData_16, %_io_out_bits_isForwardData_T : !firrtl.uint<1>
      %_io_out_bits_forwardData_T_data_data = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_data_data, %forwardDataReg_data_data) {name = "_io_out_bits_forwardData_T_data_data"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_out_bits_forwardData_T_waymask = firrtl.mux(%isForwardData, %io_dataWriteBus_req_bits_waymask, %forwardDataReg_waymask) {name = "_io_out_bits_forwardData_T_waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_forwardData_data_data_17, %_io_out_bits_forwardData_T_data_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_forwardData_waymask_18, %_io_out_bits_forwardData_T_waymask : !firrtl.uint<4>
      %_io_in_ready_T_1 = firrtl.and %io_out_ready, %io_in_valid {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.or %_io_in_ready_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_2 : !firrtl.uint<1>
      %LogPerfHelper_2_timer, %LogPerfHelper_2_logEnable, %LogPerfHelper_2_clean, %LogPerfHelper_2_dump = firrtl.instance LogPerfHelper_2 sym @sym_1 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_2_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_2_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_logEnable, %LogPerfHelper_2_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_2_timer, %LogPerfHelper_2_timer : !firrtl.uint<64>
      %97 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.and %c_control_2_logEnable, %97 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %98, "[%d] CacheStage2_2: " {name = "printf_23"} (%c_control_2_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %99 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %100 = firrtl.and %c_control_2_logEnable, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %100, "[isFD:%d isFDreg:%d inFire:%d invalid:%d \0A" {name = "printf_24"} (%isForwardData, %isForwardDataReg, %1, %io_in_valid) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %101 = firrtl.wire : !firrtl.uint<9>
      %102 = firrtl.bits %io_in_bits_req_addr 14 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %101, %102 : !firrtl.uint<9>
      %103 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.and %c_control_2_logEnable, %103 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %104, "[%d] CacheStage2_2: " {name = "printf_25"} (%c_control_2_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %105 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.and %c_control_2_logEnable, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %106, "[isFM:%d isFMreg:%d metawreq:%x widx:%x ridx:%x \0A" {name = "printf_26"} (%isForwardMeta, %isForwardMetaReg, %io_metaWriteBus_req_valid, %io_metaWriteBus_req_bits_setIdx, %101) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>
    }
    firrtl.module private @Arbiter2_SRAMBundleAW_4(in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<9>, in %io_in_0_bits_data_tag: !firrtl.uint<17>, in %io_in_0_bits_waymask: !firrtl.uint<4>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_setIdx: !firrtl.uint<9>, in %io_in_1_bits_data_tag: !firrtl.uint<17>, in %io_in_1_bits_data_dirty: !firrtl.uint<1>, in %io_in_1_bits_waymask: !firrtl.uint<4>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<9>, out %io_out_bits_data_tag: !firrtl.uint<17>, out %io_out_bits_data_dirty: !firrtl.uint<1>, out %io_out_bits_waymask: !firrtl.uint<4>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_out_valid_0 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_setIdx_1 = firrtl.wire {name = "io_out_bits_setIdx"} : !firrtl.uint<9>
      %io_out_bits_data_tag_2 = firrtl.wire {name = "io_out_bits_data_tag"} : !firrtl.uint<17>
      %io_out_bits_data_dirty_3 = firrtl.wire {name = "io_out_bits_data_dirty"} : !firrtl.uint<1>
      %io_out_bits_waymask_4 = firrtl.wire {name = "io_out_bits_waymask"} : !firrtl.uint<4>
      firrtl.strictconnect %io_out_valid, %io_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_out_bits_setIdx_1 : !firrtl.uint<9>
      firrtl.strictconnect %io_out_bits_data_tag, %io_out_bits_data_tag_2 : !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_data_dirty, %io_out_bits_data_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_waymask, %io_out_bits_waymask_4 : !firrtl.uint<4>
      %0 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_setIdx, %io_in_1_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      firrtl.strictconnect %io_out_bits_setIdx_1, %0 : !firrtl.uint<9>
      %1 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_data_tag, %io_in_1_bits_data_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %io_out_bits_data_tag_2, %1 : !firrtl.uint<17>
      %2 = firrtl.mux(%io_in_0_valid, %c1_ui1, %io_in_1_bits_data_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_data_dirty_3, %2 : !firrtl.uint<1>
      %3 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_waymask, %io_in_1_bits_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_waymask_4, %3 : !firrtl.uint<4>
      %_io_out_valid_T_1 = firrtl.or %io_in_0_valid, %io_in_1_valid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_0, %_io_out_valid_T_1 : !firrtl.uint<1>
    }
    firrtl.module private @Arbiter2_SRAMBundleAW_5(in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<12>, in %io_in_0_bits_data_data: !firrtl.uint<64>, in %io_in_0_bits_waymask: !firrtl.uint<4>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_setIdx: !firrtl.uint<12>, in %io_in_1_bits_data_data: !firrtl.uint<64>, in %io_in_1_bits_waymask: !firrtl.uint<4>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<12>, out %io_out_bits_data_data: !firrtl.uint<64>, out %io_out_bits_waymask: !firrtl.uint<4>) {
      %io_out_valid_0 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_setIdx_1 = firrtl.wire {name = "io_out_bits_setIdx"} : !firrtl.uint<12>
      %io_out_bits_data_data_2 = firrtl.wire {name = "io_out_bits_data_data"} : !firrtl.uint<64>
      %io_out_bits_waymask_3 = firrtl.wire {name = "io_out_bits_waymask"} : !firrtl.uint<4>
      firrtl.strictconnect %io_out_valid, %io_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_out_bits_setIdx_1 : !firrtl.uint<12>
      firrtl.strictconnect %io_out_bits_data_data, %io_out_bits_data_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_waymask, %io_out_bits_waymask_3 : !firrtl.uint<4>
      %0 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_setIdx, %io_in_1_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      firrtl.strictconnect %io_out_bits_setIdx_1, %0 : !firrtl.uint<12>
      %1 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_data_data, %io_in_1_bits_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_data_data_2, %1 : !firrtl.uint<64>
      %2 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_waymask, %io_in_1_bits_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_waymask_3, %2 : !firrtl.uint<4>
      %_io_out_valid_T_1 = firrtl.or %io_in_0_valid, %io_in_1_valid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_0, %_io_out_valid_T_1 : !firrtl.uint<1>
    }
    firrtl.module private @CacheStage3_2(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_req_addr: !firrtl.uint<32>, in %io_in_bits_req_cmd: !firrtl.uint<4>, in %io_in_bits_req_wmask: !firrtl.uint<8>, in %io_in_bits_req_wdata: !firrtl.uint<64>, in %io_in_bits_metas_0_tag: !firrtl.uint<17>, in %io_in_bits_metas_0_valid: !firrtl.uint<1>, in %io_in_bits_metas_0_dirty: !firrtl.uint<1>, in %io_in_bits_metas_1_tag: !firrtl.uint<17>, in %io_in_bits_metas_1_valid: !firrtl.uint<1>, in %io_in_bits_metas_1_dirty: !firrtl.uint<1>, in %io_in_bits_metas_2_tag: !firrtl.uint<17>, in %io_in_bits_metas_2_valid: !firrtl.uint<1>, in %io_in_bits_metas_2_dirty: !firrtl.uint<1>, in %io_in_bits_metas_3_tag: !firrtl.uint<17>, in %io_in_bits_metas_3_valid: !firrtl.uint<1>, in %io_in_bits_metas_3_dirty: !firrtl.uint<1>, in %io_in_bits_datas_0_data: !firrtl.uint<64>, in %io_in_bits_datas_1_data: !firrtl.uint<64>, in %io_in_bits_datas_2_data: !firrtl.uint<64>, in %io_in_bits_datas_3_data: !firrtl.uint<64>, in %io_in_bits_hit: !firrtl.uint<1>, in %io_in_bits_waymask: !firrtl.uint<4>, in %io_in_bits_mmio: !firrtl.uint<1>, in %io_in_bits_isForwardData: !firrtl.uint<1>, in %io_in_bits_forwardData_data_data: !firrtl.uint<64>, in %io_in_bits_forwardData_waymask: !firrtl.uint<4>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_cmd: !firrtl.uint<4>, out %io_out_bits_rdata: !firrtl.uint<64>, out %io_isFinish: !firrtl.uint<1>, in %io_dataReadBus_req_ready: !firrtl.uint<1>, out %io_dataReadBus_req_valid: !firrtl.uint<1>, out %io_dataReadBus_req_bits_setIdx: !firrtl.uint<12>, in %io_dataReadBus_resp_data_0_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_1_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_2_data: !firrtl.uint<64>, in %io_dataReadBus_resp_data_3_data: !firrtl.uint<64>, out %io_dataWriteBus_req_valid: !firrtl.uint<1>, out %io_dataWriteBus_req_bits_setIdx: !firrtl.uint<12>, out %io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, out %io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>, out %io_metaWriteBus_req_valid: !firrtl.uint<1>, out %io_metaWriteBus_req_bits_setIdx: !firrtl.uint<9>, out %io_metaWriteBus_req_bits_data_tag: !firrtl.uint<17>, out %io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, out %io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in %io_mem_req_ready: !firrtl.uint<1>, out %io_mem_req_valid: !firrtl.uint<1>, out %io_mem_req_bits_addr: !firrtl.uint<32>, out %io_mem_req_bits_cmd: !firrtl.uint<4>, out %io_mem_req_bits_wdata: !firrtl.uint<64>, in %io_mem_resp_valid: !firrtl.uint<1>, in %io_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_mem_resp_bits_rdata: !firrtl.uint<64>, out %io_dataReadRespToL1: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "needFlush"}
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8> {name = "io_mem_req_bits_wmask"}
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3> {name = "io_mem_req_bits_size"}
      %c0_ui17 = firrtl.constant 0 : !firrtl.uint<17>
      %c4_ui4 = firrtl.constant 4 : !firrtl.uint<4>
      %c7_ui4 = firrtl.constant 7 : !firrtl.uint<4>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c2_ui4 = firrtl.constant 2 : !firrtl.uint<4>
      %c5_ui4 = firrtl.constant 5 : !firrtl.uint<4>
      %c1_ui4 = firrtl.constant 1 : !firrtl.uint<4>
      %c0_ui6 = firrtl.constant 0 : !firrtl.uint<6>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c3_ui4 = firrtl.constant 3 : !firrtl.uint<4>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %io_in_ready_0 = firrtl.wire {name = "io_in_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_cmd_2 = firrtl.wire {name = "io_out_bits_cmd"} : !firrtl.uint<4>
      %io_out_bits_rdata_3 = firrtl.wire {name = "io_out_bits_rdata"} : !firrtl.uint<64>
      %io_isFinish_4 = firrtl.wire {name = "io_isFinish"} : !firrtl.uint<1>
      %io_dataReadBus_req_valid_5 = firrtl.wire {name = "io_dataReadBus_req_valid"} : !firrtl.uint<1>
      %io_dataReadBus_req_bits_setIdx_6 = firrtl.wire {name = "io_dataReadBus_req_bits_setIdx"} : !firrtl.uint<12>
      %io_dataWriteBus_req_valid_7 = firrtl.wire {name = "io_dataWriteBus_req_valid"} : !firrtl.uint<1>
      %io_dataWriteBus_req_bits_setIdx_8 = firrtl.wire {name = "io_dataWriteBus_req_bits_setIdx"} : !firrtl.uint<12>
      %io_dataWriteBus_req_bits_data_data_9 = firrtl.wire {name = "io_dataWriteBus_req_bits_data_data"} : !firrtl.uint<64>
      %io_dataWriteBus_req_bits_waymask_10 = firrtl.wire {name = "io_dataWriteBus_req_bits_waymask"} : !firrtl.uint<4>
      %io_metaWriteBus_req_valid_11 = firrtl.wire {name = "io_metaWriteBus_req_valid"} : !firrtl.uint<1>
      %io_metaWriteBus_req_bits_setIdx_12 = firrtl.wire {name = "io_metaWriteBus_req_bits_setIdx"} : !firrtl.uint<9>
      %io_metaWriteBus_req_bits_data_tag_13 = firrtl.wire {name = "io_metaWriteBus_req_bits_data_tag"} : !firrtl.uint<17>
      %io_metaWriteBus_req_bits_data_dirty_14 = firrtl.wire {name = "io_metaWriteBus_req_bits_data_dirty"} : !firrtl.uint<1>
      %io_metaWriteBus_req_bits_waymask_15 = firrtl.wire {name = "io_metaWriteBus_req_bits_waymask"} : !firrtl.uint<4>
      %io_mem_req_valid_16 = firrtl.wire {name = "io_mem_req_valid"} : !firrtl.uint<1>
      %io_mem_req_bits_addr_17 = firrtl.wire {name = "io_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_mem_req_bits_cmd_18 = firrtl.wire {name = "io_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_mem_req_bits_wdata_19 = firrtl.wire {name = "io_mem_req_bits_wdata"} : !firrtl.uint<64>
      %io_cohResp_valid = firrtl.wire : !firrtl.uint<1>
      %io_dataReadRespToL1_20 = firrtl.wire {name = "io_dataReadRespToL1"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready, %io_in_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_cmd, %io_out_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_rdata, %io_out_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_isFinish, %io_isFinish_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_valid, %io_dataReadBus_req_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx, %io_dataReadBus_req_bits_setIdx_6 : !firrtl.uint<12>
      firrtl.strictconnect %io_dataWriteBus_req_valid, %io_dataWriteBus_req_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_dataWriteBus_req_bits_setIdx, %io_dataWriteBus_req_bits_setIdx_8 : !firrtl.uint<12>
      firrtl.strictconnect %io_dataWriteBus_req_bits_data_data, %io_dataWriteBus_req_bits_data_data_9 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_waymask, %io_dataWriteBus_req_bits_waymask_10 : !firrtl.uint<4>
      firrtl.strictconnect %io_metaWriteBus_req_valid, %io_metaWriteBus_req_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_setIdx, %io_metaWriteBus_req_bits_setIdx_12 : !firrtl.uint<9>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_tag, %io_metaWriteBus_req_bits_data_tag_13 : !firrtl.uint<17>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_dirty, %io_metaWriteBus_req_bits_data_dirty_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_waymask, %io_metaWriteBus_req_bits_waymask_15 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_valid, %io_mem_req_valid_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_bits_addr, %io_mem_req_bits_addr_17 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_cmd, %io_mem_req_bits_cmd_18 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata, %io_mem_req_bits_wdata_19 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataReadRespToL1, %io_dataReadRespToL1_20 : !firrtl.uint<1>
      %metaWriteArb_io_in_0_valid, %metaWriteArb_io_in_0_bits_setIdx, %metaWriteArb_io_in_0_bits_data_tag, %metaWriteArb_io_in_0_bits_waymask, %metaWriteArb_io_in_1_valid, %metaWriteArb_io_in_1_bits_setIdx, %metaWriteArb_io_in_1_bits_data_tag, %metaWriteArb_io_in_1_bits_data_dirty, %metaWriteArb_io_in_1_bits_waymask, %metaWriteArb_io_out_valid, %metaWriteArb_io_out_bits_setIdx, %metaWriteArb_io_out_bits_data_tag, %metaWriteArb_io_out_bits_data_dirty, %metaWriteArb_io_out_bits_waymask = firrtl.instance metaWriteArb @Arbiter2_SRAMBundleAW_4(in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<9>, in io_in_0_bits_data_tag: !firrtl.uint<17>, in io_in_0_bits_waymask: !firrtl.uint<4>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<9>, in io_in_1_bits_data_tag: !firrtl.uint<17>, in io_in_1_bits_data_dirty: !firrtl.uint<1>, in io_in_1_bits_waymask: !firrtl.uint<4>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<9>, out io_out_bits_data_tag: !firrtl.uint<17>, out io_out_bits_data_dirty: !firrtl.uint<1>, out io_out_bits_waymask: !firrtl.uint<4>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<9>
      %2 = firrtl.wire : !firrtl.uint<17>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<9>
      %5 = firrtl.wire : !firrtl.uint<17>
      %6 = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<9>
      %9 = firrtl.wire : !firrtl.uint<17>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %metaWriteArb_io_in_0_valid, %0 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_setIdx, %1 : !firrtl.uint<9>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_data_tag, %2 : !firrtl.uint<17>
      firrtl.strictconnect %metaWriteArb_io_in_0_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %metaWriteArb_io_in_1_valid, %3 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_setIdx, %4 : !firrtl.uint<9>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_data_tag, %5 : !firrtl.uint<17>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_data_dirty, %6 : !firrtl.uint<1>
      firrtl.strictconnect %metaWriteArb_io_in_1_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %7, %metaWriteArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %8, %metaWriteArb_io_out_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %9, %metaWriteArb_io_out_bits_data_tag : !firrtl.uint<17>
      firrtl.strictconnect %10, %metaWriteArb_io_out_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %11, %metaWriteArb_io_out_bits_waymask : !firrtl.uint<4>
      %dataWriteArb_io_in_0_valid, %dataWriteArb_io_in_0_bits_setIdx, %dataWriteArb_io_in_0_bits_data_data, %dataWriteArb_io_in_0_bits_waymask, %dataWriteArb_io_in_1_valid, %dataWriteArb_io_in_1_bits_setIdx, %dataWriteArb_io_in_1_bits_data_data, %dataWriteArb_io_in_1_bits_waymask, %dataWriteArb_io_out_valid, %dataWriteArb_io_out_bits_setIdx, %dataWriteArb_io_out_bits_data_data, %dataWriteArb_io_out_bits_waymask = firrtl.instance dataWriteArb @Arbiter2_SRAMBundleAW_5(in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<12>, in io_in_0_bits_data_data: !firrtl.uint<64>, in io_in_0_bits_waymask: !firrtl.uint<4>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<12>, in io_in_1_bits_data_data: !firrtl.uint<64>, in io_in_1_bits_waymask: !firrtl.uint<4>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<12>, out io_out_bits_data_data: !firrtl.uint<64>, out io_out_bits_waymask: !firrtl.uint<4>)
      %12 = firrtl.wire : !firrtl.uint<1>
      %13 = firrtl.wire : !firrtl.uint<12>
      %14 = firrtl.wire : !firrtl.uint<64>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<12>
      %17 = firrtl.wire : !firrtl.uint<64>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<12>
      %20 = firrtl.wire : !firrtl.uint<64>
      %21 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %dataWriteArb_io_in_0_valid, %12 : !firrtl.uint<1>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_setIdx, %13 : !firrtl.uint<12>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_data_data, %14 : !firrtl.uint<64>
      firrtl.strictconnect %dataWriteArb_io_in_0_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %dataWriteArb_io_in_1_valid, %15 : !firrtl.uint<1>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_setIdx, %16 : !firrtl.uint<12>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_data_data, %17 : !firrtl.uint<64>
      firrtl.strictconnect %dataWriteArb_io_in_1_bits_waymask, %io_in_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %18, %dataWriteArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %19, %dataWriteArb_io_out_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %20, %dataWriteArb_io_out_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %21, %dataWriteArb_io_out_bits_waymask : !firrtl.uint<4>
      %addr_tag = firrtl.wire : !firrtl.uint<17>
      %addr_index = firrtl.wire : !firrtl.uint<9>
      %addr_wordIndex = firrtl.wire : !firrtl.uint<3>
      %_addr_T_1 = firrtl.bits %io_in_bits_req_addr 5 to 3 {name = "_addr_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<3>
      firrtl.strictconnect %addr_wordIndex, %_addr_T_1 : !firrtl.uint<3>
      %_addr_T_2 = firrtl.bits %io_in_bits_req_addr 14 to 6 {name = "_addr_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %addr_index, %_addr_T_2 : !firrtl.uint<9>
      %_addr_T_3 = firrtl.bits %io_in_bits_req_addr 31 to 15 {name = "_addr_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<17>
      firrtl.strictconnect %addr_tag, %_addr_T_3 : !firrtl.uint<17>
      %mmio = firrtl.and %io_in_valid, %io_in_bits_mmio {name = "mmio"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %hit = firrtl.and %io_in_valid, %io_in_bits_hit {name = "hit"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_miss_T = firrtl.not %io_in_bits_hit {name = "_miss_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %miss = firrtl.and %io_in_valid, %_miss_T {name = "miss"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_probe_T_1 = firrtl.eq %io_in_bits_req_cmd, %c8_ui4 {name = "_probe_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %probe = firrtl.and %io_in_valid, %_probe_T_1 {name = "probe"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_11 = firrtl.eq %io_in_bits_req_cmd, %c2_ui2 {name = "_io_out_valid_T_11"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %hitReadBurst = firrtl.and %hit, %_io_out_valid_T_11 {name = "hitReadBurst"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWay_T = firrtl.bits %io_in_bits_waymask 0 to 0 {name = "_dataHitWay_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_1 = firrtl.bits %io_in_bits_waymask 1 to 1 {name = "_dataHitWay_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_2 = firrtl.bits %io_in_bits_waymask 2 to 2 {name = "_dataHitWay_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_dataHitWay_T_3 = firrtl.bits %io_in_bits_waymask 3 to 3 {name = "_dataHitWay_T_3"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %meta_tag = firrtl.wire : !firrtl.uint<17>
      %meta_dirty = firrtl.wire : !firrtl.uint<1>
      %_meta_T_4 = firrtl.mux(%_dataHitWay_T, %io_in_bits_metas_0_dirty, %c0_ui1) {name = "_meta_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_5 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_metas_1_dirty, %c0_ui1) {name = "_meta_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_6 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_metas_2_dirty, %c0_ui1) {name = "_meta_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_7 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_metas_3_dirty, %c0_ui1) {name = "_meta_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_8 = firrtl.or %_meta_T_4, %_meta_T_5 {name = "_meta_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_9 = firrtl.or %_meta_T_8, %_meta_T_6 {name = "_meta_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_T_10 = firrtl.or %_meta_T_9, %_meta_T_7 {name = "_meta_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meta_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_meta_WIRE, %_meta_T_10 : !firrtl.uint<1>
      firrtl.strictconnect %meta_dirty, %_meta_WIRE : !firrtl.uint<1>
      %_meta_T_18 = firrtl.mux(%_dataHitWay_T, %io_in_bits_metas_0_tag, %c0_ui17) {name = "_meta_T_18"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_meta_T_19 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_metas_1_tag, %c0_ui17) {name = "_meta_T_19"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_meta_T_20 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_metas_2_tag, %c0_ui17) {name = "_meta_T_20"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_meta_T_21 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_metas_3_tag, %c0_ui17) {name = "_meta_T_21"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_meta_T_22 = firrtl.or %_meta_T_18, %_meta_T_19 {name = "_meta_T_22"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_meta_T_23 = firrtl.or %_meta_T_22, %_meta_T_20 {name = "_meta_T_23"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_meta_T_24 = firrtl.or %_meta_T_23, %_meta_T_21 {name = "_meta_T_24"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_meta_WIRE_2 = firrtl.wire : !firrtl.uint<17>
      firrtl.strictconnect %_meta_WIRE_2, %_meta_T_24 : !firrtl.uint<17>
      firrtl.strictconnect %meta_tag, %_meta_WIRE_2 : !firrtl.uint<17>
      %22 = firrtl.and %mmio, %hit : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.not %22 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %24, %23, "Assertion failed: MMIO request should not hit in cache\0A    at Cache.scala:265 assert(!(mmio && hit), \22MMIO request should not hit in cache\22)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %_useForwardData_T = firrtl.eq %io_in_bits_waymask, %io_in_bits_forwardData_waymask {name = "_useForwardData_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %useForwardData = firrtl.and %io_in_bits_isForwardData, %_useForwardData_T {name = "useForwardData"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataReadArray_WIRE_data = firrtl.wire : !firrtl.uint<64>
      %_dataReadArray_T_4 = firrtl.mux(%_dataHitWay_T, %io_in_bits_datas_0_data, %c0_ui64) {name = "_dataReadArray_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_5 = firrtl.mux(%_dataHitWay_T_1, %io_in_bits_datas_1_data, %c0_ui64) {name = "_dataReadArray_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_6 = firrtl.mux(%_dataHitWay_T_2, %io_in_bits_datas_2_data, %c0_ui64) {name = "_dataReadArray_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_7 = firrtl.mux(%_dataHitWay_T_3, %io_in_bits_datas_3_data, %c0_ui64) {name = "_dataReadArray_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_8 = firrtl.or %_dataReadArray_T_4, %_dataReadArray_T_5 {name = "_dataReadArray_T_8"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_9 = firrtl.or %_dataReadArray_T_8, %_dataReadArray_T_6 {name = "_dataReadArray_T_9"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_T_10 = firrtl.or %_dataReadArray_T_9, %_dataReadArray_T_7 {name = "_dataReadArray_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataReadArray_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_dataReadArray_WIRE_1, %_dataReadArray_T_10 : !firrtl.uint<64>
      firrtl.strictconnect %_dataReadArray_WIRE_data, %_dataReadArray_WIRE_1 : !firrtl.uint<64>
      %dataRead = firrtl.mux(%useForwardData, %io_in_bits_forwardData_data_data, %_dataReadArray_WIRE_data) {name = "dataRead"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %metaRefillWriteBus_x15 = firrtl.bits %io_in_bits_req_cmd 0 to 0 {name = "metaRefillWriteBus_x15"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_wordMask_T_3 = firrtl.bits %io_in_bits_req_wmask 0 to 0 {name = "_wordMask_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_4 = firrtl.bits %io_in_bits_req_wmask 1 to 1 {name = "_wordMask_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_5 = firrtl.bits %io_in_bits_req_wmask 2 to 2 {name = "_wordMask_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_6 = firrtl.bits %io_in_bits_req_wmask 3 to 3 {name = "_wordMask_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_7 = firrtl.bits %io_in_bits_req_wmask 4 to 4 {name = "_wordMask_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_8 = firrtl.bits %io_in_bits_req_wmask 5 to 5 {name = "_wordMask_T_8"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_9 = firrtl.bits %io_in_bits_req_wmask 6 to 6 {name = "_wordMask_T_9"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_10 = firrtl.bits %io_in_bits_req_wmask 7 to 7 {name = "_wordMask_T_10"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_wordMask_T_11 = firrtl.mux(%_wordMask_T_3, %c255_ui8, %c0_ui8) {name = "_wordMask_T_11"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_12 = firrtl.mux(%_wordMask_T_4, %c255_ui8, %c0_ui8) {name = "_wordMask_T_12"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_13 = firrtl.mux(%_wordMask_T_5, %c255_ui8, %c0_ui8) {name = "_wordMask_T_13"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_14 = firrtl.mux(%_wordMask_T_6, %c255_ui8, %c0_ui8) {name = "_wordMask_T_14"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_15 = firrtl.mux(%_wordMask_T_7, %c255_ui8, %c0_ui8) {name = "_wordMask_T_15"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_16 = firrtl.mux(%_wordMask_T_8, %c255_ui8, %c0_ui8) {name = "_wordMask_T_16"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_17 = firrtl.mux(%_wordMask_T_9, %c255_ui8, %c0_ui8) {name = "_wordMask_T_17"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_wordMask_T_18 = firrtl.mux(%_wordMask_T_10, %c255_ui8, %c0_ui8) {name = "_wordMask_T_18"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %wordMask_lo_lo = firrtl.cat %_wordMask_T_12, %_wordMask_T_11 {name = "wordMask_lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_lo_hi = firrtl.cat %_wordMask_T_14, %_wordMask_T_13 {name = "wordMask_lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_lo = firrtl.cat %wordMask_lo_hi, %wordMask_lo_lo {name = "wordMask_lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %wordMask_hi_lo = firrtl.cat %_wordMask_T_16, %_wordMask_T_15 {name = "wordMask_hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_hi_hi = firrtl.cat %_wordMask_T_18, %_wordMask_T_17 {name = "wordMask_hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %wordMask_hi = firrtl.cat %wordMask_hi_hi, %wordMask_hi_lo {name = "wordMask_hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %_wordMask_T_19 = firrtl.cat %wordMask_hi, %wordMask_lo {name = "_wordMask_T_19"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %wordMask = firrtl.mux(%metaRefillWriteBus_x15, %_wordMask_T_19, %c0_ui64) {name = "wordMask"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %writeL2BeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %_dataHitWriteBus_x3_T = firrtl.eq %io_in_bits_req_cmd, %c3_ui2 {name = "_dataHitWriteBus_x3_T"} : (!firrtl.uint<4>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T_1 = firrtl.eq %io_in_bits_req_cmd, %c7_ui3 {name = "_dataHitWriteBus_x3_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %25 = firrtl.or %_dataHitWriteBus_x3_T, %_dataHitWriteBus_x3_T_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.and %io_out_valid_1, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T = firrtl.add %writeL2BeatCnt_value, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_1 = firrtl.bits %_value_T 2 to 0 {name = "_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %27 = firrtl.mux(%26, %_value_T_1, %writeL2BeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %hitWrite = firrtl.and %hit, %metaRefillWriteBus_x15 {name = "hitWrite"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %dataHitWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %dataHitWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<12>
      %dataHitWriteBus_req_bits_data_data = firrtl.wire : !firrtl.uint<64>
      %dataHitWriteBus_x1_data = firrtl.wire : !firrtl.uint<64>
      %_dataHitWriteBus_x1_T = firrtl.and %io_in_bits_req_wdata, %wordMask {name = "_dataHitWriteBus_x1_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWriteBus_x1_T_1 = firrtl.not %wordMask {name = "_dataHitWriteBus_x1_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWriteBus_x1_T_2 = firrtl.and %dataRead, %_dataHitWriteBus_x1_T_1 {name = "_dataHitWriteBus_x1_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWriteBus_x1_T_3 = firrtl.or %_dataHitWriteBus_x1_T, %_dataHitWriteBus_x1_T_2 {name = "_dataHitWriteBus_x1_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataHitWriteBus_x1_data, %_dataHitWriteBus_x1_T_3 : !firrtl.uint<64>
      %_dataHitWriteBus_x3_T_2 = firrtl.or %_dataHitWriteBus_x3_T, %_dataHitWriteBus_x3_T_1 {name = "_dataHitWriteBus_x3_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataHitWriteBus_x3_T_3 = firrtl.mux(%_dataHitWriteBus_x3_T_2, %writeL2BeatCnt_value, %addr_wordIndex) {name = "_dataHitWriteBus_x3_T_3"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %dataHitWriteBus_x3 = firrtl.cat %addr_index, %_dataHitWriteBus_x3_T_3 {name = "dataHitWriteBus_x3"} : (!firrtl.uint<9>, !firrtl.uint<3>) -> !firrtl.uint<12>
      firrtl.strictconnect %dataHitWriteBus_req_bits_setIdx, %dataHitWriteBus_x3 : !firrtl.uint<12>
      firrtl.strictconnect %dataHitWriteBus_req_bits_data_data, %dataHitWriteBus_x1_data : !firrtl.uint<64>
      firrtl.strictconnect %dataHitWriteBus_req_valid, %hitWrite : !firrtl.uint<1>
      %metaHitWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %metaHitWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<9>
      %metaHitWriteBus_req_bits_data_tag = firrtl.wire : !firrtl.uint<17>
      %_metaHitWriteBus_x5_T = firrtl.not %meta_dirty {name = "_metaHitWriteBus_x5_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %metaHitWriteBus_x5 = firrtl.and %hitWrite, %_metaHitWriteBus_x5_T {name = "metaHitWriteBus_x5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_metaHitWriteBus_x6_WIRE_index = firrtl.wire : !firrtl.uint<9>
      %_metaHitWriteBus_x6_T_2 = firrtl.bits %io_in_bits_req_addr 14 to 6 {name = "_metaHitWriteBus_x6_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %_metaHitWriteBus_x6_WIRE_index, %_metaHitWriteBus_x6_T_2 : !firrtl.uint<9>
      %metaHitWriteBus_x8_tag = firrtl.wire : !firrtl.uint<17>
      firrtl.strictconnect %metaHitWriteBus_x8_tag, %meta_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaHitWriteBus_req_bits_setIdx, %_metaHitWriteBus_x6_WIRE_index : !firrtl.uint<9>
      firrtl.strictconnect %metaHitWriteBus_req_bits_data_tag, %metaHitWriteBus_x8_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaHitWriteBus_req_valid, %metaHitWriteBus_x5 : !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui4 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>
      %readBeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 8 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %writeBeatCnt_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 11 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %state2 = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 14 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %_io_mem_req_valid_T_1 = firrtl.eq %state, %c3_ui4 {name = "_io_mem_req_valid_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_2 = firrtl.eq %state, %c8_ui4 {name = "_io_dataReadRespToL1_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %28 = firrtl.or %_io_mem_req_valid_T_1, %_io_dataReadRespToL1_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.orr %state2 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %30 = firrtl.not %29 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.and %28, %30 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.mux(%_io_dataReadRespToL1_T_2, %readBeatCnt_value, %writeBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %33 = firrtl.cat %addr_index, %32 : (!firrtl.uint<9>, !firrtl.uint<3>) -> !firrtl.uint<12>
      firrtl.strictconnect %io_dataReadBus_req_bits_setIdx_6, %33 : !firrtl.uint<12>
      firrtl.strictconnect %io_dataReadBus_req_valid_5, %31 : !firrtl.uint<1>
      %_dataWay_T = firrtl.eq %state2, %c1_ui2 {name = "_dataWay_T"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %dataWay_0_data = firrtl.reg %clock {firrtl.random_init_start = 16 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_1_data = firrtl.reg %clock {firrtl.random_init_start = 80 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_2_data = firrtl.reg %clock {firrtl.random_init_start = 144 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %dataWay_3_data = firrtl.reg %clock {firrtl.random_init_start = 208 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %34 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_0_data, %dataWay_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_0_data, %34 : !firrtl.uint<64>
      %35 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_1_data, %dataWay_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_1_data, %35 : !firrtl.uint<64>
      %36 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_2_data, %dataWay_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_2_data, %36 : !firrtl.uint<64>
      %37 = firrtl.mux(%_dataWay_T, %io_dataReadBus_resp_data_3_data, %dataWay_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %dataWay_3_data, %37 : !firrtl.uint<64>
      %_dataHitWay_WIRE_data = firrtl.wire : !firrtl.uint<64>
      %_dataHitWay_T_4 = firrtl.mux(%_dataHitWay_T, %dataWay_0_data, %c0_ui64) {name = "_dataHitWay_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_5 = firrtl.mux(%_dataHitWay_T_1, %dataWay_1_data, %c0_ui64) {name = "_dataHitWay_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_6 = firrtl.mux(%_dataHitWay_T_2, %dataWay_2_data, %c0_ui64) {name = "_dataHitWay_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_7 = firrtl.mux(%_dataHitWay_T_3, %dataWay_3_data, %c0_ui64) {name = "_dataHitWay_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_8 = firrtl.or %_dataHitWay_T_4, %_dataHitWay_T_5 {name = "_dataHitWay_T_8"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_9 = firrtl.or %_dataHitWay_T_8, %_dataHitWay_T_6 {name = "_dataHitWay_T_9"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_T_10 = firrtl.or %_dataHitWay_T_9, %_dataHitWay_T_7 {name = "_dataHitWay_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataHitWay_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_dataHitWay_WIRE_1, %_dataHitWay_T_10 : !firrtl.uint<64>
      firrtl.strictconnect %_dataHitWay_WIRE_data, %_dataHitWay_WIRE_1 : !firrtl.uint<64>
      %38 = firrtl.orr %state2 : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %39 = firrtl.not %38 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.and %io_dataReadBus_req_ready, %io_dataReadBus_req_valid_5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.mux(%40, %c1_ui2, %state2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %42 = firrtl.eq %state2, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %43 = firrtl.eq %state2, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %44 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.or %44, %io_cohResp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %46 = firrtl.or %45, %hitReadBurst : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.and %43, %46 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.mux(%47, %c0_ui2, %state2) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %49 = firrtl.mux(%42, %c2_ui2, %48) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %50 = firrtl.mux(%39, %41, %49) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state2, %50 : !firrtl.uint<2>
      %_raddr_T = firrtl.bits %io_in_bits_req_addr 31 to 3 {name = "_raddr_T"} : (!firrtl.uint<32>) -> !firrtl.uint<29>
      %raddr = firrtl.cat %_raddr_T, %c0_ui3 {name = "raddr"} : (!firrtl.uint<29>, !firrtl.uint<3>) -> !firrtl.uint<32>
      %waddr_hi = firrtl.cat %meta_tag, %addr_index {name = "waddr_hi"} : (!firrtl.uint<17>, !firrtl.uint<9>) -> !firrtl.uint<26>
      %waddr = firrtl.cat %waddr_hi, %c0_ui6 {name = "waddr"} : (!firrtl.uint<26>, !firrtl.uint<6>) -> !firrtl.uint<32>
      %_io_mem_req_valid_T = firrtl.eq %state, %c1_ui4 {name = "_io_mem_req_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %wrap_3 = firrtl.andr %writeBeatCnt_value {name = "wrap_3"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_cmd_T_2 = firrtl.mux(%wrap_3, %c7_ui3, %c3_ui3) {name = "_cmd_T_2"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %cmd = firrtl.mux(%_io_mem_req_valid_T, %c2_ui3, %_cmd_T_2) {name = "cmd"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %51 = firrtl.mux(%_io_mem_req_valid_T, %raddr, %waddr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %io_mem_req_bits_addr_17, %51 : !firrtl.uint<32>
      %52 = firrtl.pad %cmd, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_cmd_18, %52 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_req_bits_wdata_19, %_dataHitWay_WIRE_data : !firrtl.uint<64>
      %_io_dataReadRespToL1_T_3 = firrtl.eq %state2, %c2_ui2 {name = "_io_dataReadRespToL1_T_3"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_3 = firrtl.and %_io_mem_req_valid_T_1, %_io_dataReadRespToL1_T_3 {name = "_io_mem_req_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_mem_req_valid_T_4 = firrtl.or %_io_mem_req_valid_T, %_io_mem_req_valid_T_3 {name = "_io_mem_req_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_mem_req_valid_16, %_io_mem_req_valid_T_4 : !firrtl.uint<1>
      %afterFirstRead = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 272 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %alreadyOutFire = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 273 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %53 = firrtl.mux(%io_out_valid_1, %c1_ui1, %alreadyOutFire) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_readingFirst_T = firrtl.not %afterFirstRead {name = "_readingFirst_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_readingFirst_T_2 = firrtl.and %_readingFirst_T, %io_mem_resp_valid {name = "_readingFirst_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_8 = firrtl.eq %state, %c2_ui4 {name = "_io_out_valid_T_8"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %readingFirst = firrtl.and %_readingFirst_T_2, %_io_out_valid_T_8 {name = "readingFirst"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_inRdataRegDemand_T = firrtl.mux(%mmio, %c0_ui64, %io_mem_resp_bits_rdata) {name = "_inRdataRegDemand_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_inRdataRegDemand_T_1 = firrtl.eq %state, %c6_ui4 {name = "_inRdataRegDemand_T_1"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_inRdataRegDemand_T_2 = firrtl.mux(%mmio, %_inRdataRegDemand_T_1, %readingFirst) {name = "_inRdataRegDemand_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %inRdataRegDemand = firrtl.reg %clock {firrtl.random_init_start = 274 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %54 = firrtl.mux(%_inRdataRegDemand_T_2, %_inRdataRegDemand_T, %inRdataRegDemand) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %inRdataRegDemand, %54 : !firrtl.uint<64>
      %55 = firrtl.orr %state : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T = firrtl.not %55 {name = "_io_dataReadRespToL1_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_cohResp_valid_T_1 = firrtl.and %_io_dataReadRespToL1_T, %probe {name = "_io_cohResp_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_cohResp_valid_T_4 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_io_cohResp_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_cohResp_valid_T_5 = firrtl.or %_io_cohResp_valid_T_1, %_io_cohResp_valid_T_4 {name = "_io_cohResp_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_cohResp_valid, %_io_cohResp_valid_T_5 : !firrtl.uint<1>
      %_releaseLast_T_2 = firrtl.and %_io_dataReadRespToL1_T_2, %io_cohResp_valid {name = "_releaseLast_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %releaseLast_c_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 338 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %releaseLast = firrtl.wire : !firrtl.uint<1>
      %releaseLast_wrap_wrap = firrtl.andr %releaseLast_c_value {name = "releaseLast_wrap_wrap"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_releaseLast_wrap_value_T = firrtl.add %releaseLast_c_value, %c1_ui1 {name = "_releaseLast_wrap_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_releaseLast_wrap_value_T_1 = firrtl.bits %_releaseLast_wrap_value_T 2 to 0 {name = "_releaseLast_wrap_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %56 = firrtl.mux(%_releaseLast_T_2, %_releaseLast_wrap_value_T_1, %releaseLast_c_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %releaseLast_c_value, %56 : !firrtl.uint<3>
      %57 = firrtl.mux(%_releaseLast_T_2, %releaseLast_wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %releaseLast, %57 : !firrtl.uint<1>
      %respToL1Fire = firrtl.and %hitReadBurst, %_io_dataReadRespToL1_T_3 {name = "respToL1Fire"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_3 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_respToL1Last_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_4 = firrtl.or %_io_dataReadRespToL1_T, %_respToL1Last_T_3 {name = "_respToL1Last_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_respToL1Last_T_5 = firrtl.and %_respToL1Last_T_4, %hitReadBurst {name = "_respToL1Last_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %respToL1Last_c_value = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 341 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %respToL1Last = firrtl.wire : !firrtl.uint<1>
      %respToL1Last_wrap_wrap = firrtl.andr %respToL1Last_c_value {name = "respToL1Last_wrap_wrap"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_respToL1Last_wrap_value_T = firrtl.add %respToL1Last_c_value, %c1_ui1 {name = "_respToL1Last_wrap_value_T"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_respToL1Last_wrap_value_T_1 = firrtl.bits %_respToL1Last_wrap_value_T 2 to 0 {name = "_respToL1Last_wrap_value_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %58 = firrtl.mux(%_respToL1Last_T_5, %_respToL1Last_wrap_value_T_1, %respToL1Last_c_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %respToL1Last_c_value, %58 : !firrtl.uint<3>
      %59 = firrtl.mux(%_respToL1Last_T_5, %respToL1Last_wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %respToL1Last, %59 : !firrtl.uint<1>
      %60 = firrtl.orr %state : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %61 = firrtl.not %60 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %62 = firrtl.mux(%61, %c0_ui1, %53) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %alreadyOutFire, %62 : !firrtl.uint<1>
      %_state_T = firrtl.mux(%hit, %c8_ui4, %c0_ui4) {name = "_state_T"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %63 = firrtl.mux(%io_cohResp_valid, %_state_T, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %64 = firrtl.mux(%io_cohResp_valid, %addr_wordIndex, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_value_T_2 = firrtl.andr %addr_wordIndex {name = "_value_T_2"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_value_T_3 = firrtl.add %addr_wordIndex, %c1_ui1 {name = "_value_T_3"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_4 = firrtl.bits %_value_T_3 2 to 0 {name = "_value_T_4"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %_value_T_5 = firrtl.mux(%_value_T_2, %c0_ui3, %_value_T_4) {name = "_value_T_5"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %65 = firrtl.mux(%hitReadBurst, %_value_T_5, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %66 = firrtl.mux(%probe, %64, %65) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %67 = firrtl.or %miss, %mmio : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_state_T_3 = firrtl.mux(%meta_dirty, %c3_ui4, %c1_ui4) {name = "_state_T_3"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_state_T_4 = firrtl.mux(%mmio, %c5_ui4, %_state_T_3) {name = "_state_T_4"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %68 = firrtl.mux(%67, %_state_T_4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %69 = firrtl.mux(%hitReadBurst, %c8_ui4, %68) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %70 = firrtl.mux(%probe, %63, %69) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %71 = firrtl.eq %state, %c5_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %72 = firrtl.eq %state, %c6_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %73 = firrtl.eq %state, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %74 = firrtl.or %io_cohResp_valid, %respToL1Fire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_6 = firrtl.add %readBeatCnt_value, %c1_ui1 {name = "_value_T_6"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_7 = firrtl.bits %_value_T_6 2 to 0 {name = "_value_T_7"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %75 = firrtl.mux(%74, %_value_T_7, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %76 = firrtl.and %probe, %io_cohResp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %77 = firrtl.and %76, %releaseLast : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %78 = firrtl.and %respToL1Fire, %respToL1Last : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %79 = firrtl.or %77, %78 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %80 = firrtl.mux(%79, %c0_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %81 = firrtl.eq %state, %c1_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %82 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %83 = firrtl.mux(%82, %c2_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %84 = firrtl.mux(%82, %addr_wordIndex, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %85 = firrtl.eq %state, %c2_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %86 = firrtl.and %85, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %87 = firrtl.mux(%86, %c1_ui1, %afterFirstRead) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %88 = firrtl.or %73, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %89 = firrtl.or %72, %88 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %90 = firrtl.or %71, %89 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %91 = firrtl.mux(%90, %afterFirstRead, %87) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %92 = firrtl.mux(%61, %c0_ui1, %91) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %afterFirstRead, %92 : !firrtl.uint<1>
      %_value_T_8 = firrtl.add %readBeatCnt_value, %c1_ui1 {name = "_value_T_8"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_9 = firrtl.bits %_value_T_8 2 to 0 {name = "_value_T_9"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %93 = firrtl.and %85, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %94 = firrtl.mux(%93, %_value_T_9, %readBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %95 = firrtl.mux(%81, %84, %94) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %96 = firrtl.mux(%73, %75, %95) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %97 = firrtl.or %71, %72 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %98 = firrtl.mux(%97, %readBeatCnt_value, %96) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %99 = firrtl.mux(%61, %66, %98) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %readBeatCnt_value, %99 : !firrtl.uint<3>
      %100 = firrtl.and %io_mem_resp_valid, %_dataHitWriteBus_x3_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %101 = firrtl.and %85, %100 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %102 = firrtl.mux(%101, %c0_ui3, %27) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %103 = firrtl.or %73, %81 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %104 = firrtl.or %72, %103 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %105 = firrtl.or %71, %104 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %106 = firrtl.or %61, %105 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %107 = firrtl.mux(%106, %27, %102) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %writeL2BeatCnt_value, %107 : !firrtl.uint<3>
      %108 = firrtl.eq %io_mem_resp_bits_cmd, %c6_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %109 = firrtl.and %io_mem_resp_valid, %108 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %110 = firrtl.mux(%109, %c7_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %111 = firrtl.eq %state, %c3_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %112 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_10 = firrtl.add %writeBeatCnt_value, %c1_ui1 {name = "_value_T_10"} : (!firrtl.uint<3>, !firrtl.uint<1>) -> !firrtl.uint<4>
      %_value_T_11 = firrtl.bits %_value_T_10 2 to 0 {name = "_value_T_11"} : (!firrtl.uint<4>) -> !firrtl.uint<3>
      %113 = firrtl.and %111, %112 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %114 = firrtl.mux(%113, %_value_T_11, %writeBeatCnt_value) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %115 = firrtl.or %81, %85 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %116 = firrtl.or %73, %115 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %117 = firrtl.or %72, %116 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %118 = firrtl.or %71, %117 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %119 = firrtl.or %61, %118 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %120 = firrtl.mux(%119, %writeBeatCnt_value, %114) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %writeBeatCnt_value, %120 : !firrtl.uint<3>
      %121 = firrtl.eq %io_mem_req_bits_cmd_18, %c7_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %122 = firrtl.and %121, %112 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %123 = firrtl.mux(%122, %c4_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %124 = firrtl.eq %state, %c4_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %125 = firrtl.mux(%io_mem_resp_valid, %c1_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %126 = firrtl.eq %state, %c7_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %127 = firrtl.or %io_out_valid_1, %alreadyOutFire : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %128 = firrtl.and %126, %127 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %129 = firrtl.mux(%128, %c0_ui4, %state) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %130 = firrtl.mux(%124, %125, %129) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %131 = firrtl.mux(%111, %123, %130) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %132 = firrtl.mux(%85, %110, %131) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %133 = firrtl.mux(%81, %83, %132) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %134 = firrtl.mux(%73, %80, %133) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %135 = firrtl.or %71, %72 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %136 = firrtl.mux(%135, %state, %134) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %137 = firrtl.mux(%61, %70, %136) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %state, %137 : !firrtl.uint<4>
      %138 = firrtl.and %readingFirst, %metaRefillWriteBus_x15 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dataRefill_T = firrtl.mux(%138, %_wordMask_T_19, %c0_ui64) {name = "_dataRefill_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataRefill_T_1 = firrtl.and %io_in_bits_req_wdata, %_dataRefill_T {name = "_dataRefill_T_1"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataRefill_T_2 = firrtl.not %_dataRefill_T {name = "_dataRefill_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_dataRefill_T_3 = firrtl.and %io_mem_resp_bits_rdata, %_dataRefill_T_2 {name = "_dataRefill_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %dataRefill = firrtl.or %_dataRefill_T_1, %_dataRefill_T_3 {name = "dataRefill"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %dataRefillWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %dataRefillWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<12>
      %dataRefillWriteBus_req_bits_data_data = firrtl.wire : !firrtl.uint<64>
      %dataRefillWriteBus_x9 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid {name = "dataRefillWriteBus_x9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %dataRefillWriteBus_x10 = firrtl.cat %addr_index, %readBeatCnt_value {name = "dataRefillWriteBus_x10"} : (!firrtl.uint<9>, !firrtl.uint<3>) -> !firrtl.uint<12>
      %dataRefillWriteBus_x11_data = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %dataRefillWriteBus_x11_data, %dataRefill : !firrtl.uint<64>
      firrtl.strictconnect %dataRefillWriteBus_req_bits_setIdx, %dataRefillWriteBus_x10 : !firrtl.uint<12>
      firrtl.strictconnect %dataRefillWriteBus_req_bits_data_data, %dataRefillWriteBus_x11_data : !firrtl.uint<64>
      firrtl.strictconnect %dataRefillWriteBus_req_valid, %dataRefillWriteBus_x9 : !firrtl.uint<1>
      firrtl.strictconnect %12, %dataHitWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %13, %dataHitWriteBus_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %14, %dataHitWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %15, %dataRefillWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %16, %dataRefillWriteBus_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %17, %dataRefillWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_setIdx_8, %19 : !firrtl.uint<12>
      firrtl.strictconnect %io_dataWriteBus_req_bits_data_data_9, %20 : !firrtl.uint<64>
      firrtl.strictconnect %io_dataWriteBus_req_bits_waymask_10, %21 : !firrtl.uint<4>
      firrtl.strictconnect %io_dataWriteBus_req_valid_7, %18 : !firrtl.uint<1>
      %metaRefillWriteBus_req_valid = firrtl.wire : !firrtl.uint<1>
      %metaRefillWriteBus_req_bits_setIdx = firrtl.wire : !firrtl.uint<9>
      %metaRefillWriteBus_req_bits_data_tag = firrtl.wire : !firrtl.uint<17>
      %metaRefillWriteBus_req_bits_data_dirty = firrtl.wire : !firrtl.uint<1>
      %_metaRefillWriteBus_T_2 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid {name = "_metaRefillWriteBus_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T = firrtl.eq %io_mem_resp_bits_cmd, %c6_ui3 {name = "_io_out_bits_cmd_T"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_metaRefillWriteBus_T_4 = firrtl.and %_metaRefillWriteBus_T_2, %_io_out_bits_cmd_T {name = "_metaRefillWriteBus_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %metaRefillWriteBus_qual4_tag = firrtl.wire : !firrtl.uint<17>
      %metaRefillWriteBus_qual4_dirty = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %metaRefillWriteBus_qual4_tag, %addr_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaRefillWriteBus_qual4_dirty, %metaRefillWriteBus_x15 : !firrtl.uint<1>
      %_metaRefillWriteBus_WIRE_index = firrtl.wire : !firrtl.uint<9>
      %_metaRefillWriteBus_T_7 = firrtl.bits %io_in_bits_req_addr 14 to 6 {name = "_metaRefillWriteBus_T_7"} : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %_metaRefillWriteBus_WIRE_index, %_metaRefillWriteBus_T_7 : !firrtl.uint<9>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_setIdx, %_metaRefillWriteBus_WIRE_index : !firrtl.uint<9>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_data_tag, %metaRefillWriteBus_qual4_tag : !firrtl.uint<17>
      firrtl.strictconnect %metaRefillWriteBus_req_bits_data_dirty, %metaRefillWriteBus_qual4_dirty : !firrtl.uint<1>
      firrtl.strictconnect %metaRefillWriteBus_req_valid, %_metaRefillWriteBus_T_4 : !firrtl.uint<1>
      firrtl.strictconnect %0, %metaHitWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %1, %metaHitWriteBus_req_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %2, %metaHitWriteBus_req_bits_data_tag : !firrtl.uint<17>
      firrtl.strictconnect %3, %metaRefillWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %4, %metaRefillWriteBus_req_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %5, %metaRefillWriteBus_req_bits_data_tag : !firrtl.uint<17>
      firrtl.strictconnect %6, %metaRefillWriteBus_req_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_setIdx_12, %8 : !firrtl.uint<9>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_tag_13, %9 : !firrtl.uint<17>
      firrtl.strictconnect %io_metaWriteBus_req_bits_data_dirty_14, %10 : !firrtl.uint<1>
      firrtl.strictconnect %io_metaWriteBus_req_bits_waymask_15, %11 : !firrtl.uint<4>
      firrtl.strictconnect %io_metaWriteBus_req_valid_11, %7 : !firrtl.uint<1>
      %139 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %140 = firrtl.and %139, %_io_out_valid_T_11 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_1 = firrtl.mux(%_io_out_bits_cmd_T, %c6_ui3, %c2_ui3) {name = "_io_out_bits_cmd_T_1"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %141 = firrtl.pad %_io_out_bits_cmd_T_1, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %142 = firrtl.or %_dataHitWriteBus_x3_T_1, %_dataHitWriteBus_x3_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_rdata_T = firrtl.mux(%hit, %dataRead, %inRdataRegDemand) {name = "_io_out_bits_rdata_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %143 = firrtl.and %hitReadBurst, %_io_dataReadRespToL1_T_2 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_bits_cmd_T_2 = firrtl.mux(%respToL1Last, %c6_ui3, %c2_ui3) {name = "_io_out_bits_cmd_T_2"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %144 = firrtl.pad %_io_out_bits_cmd_T_2, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      %_io_out_bits_rdata_T_1 = firrtl.mux(%hit, %dataRead, %inRdataRegDemand) {name = "_io_out_bits_rdata_T_1"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %145 = firrtl.mux(%143, %_dataHitWay_WIRE_data, %_io_out_bits_rdata_T_1) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %146 = firrtl.mux(%142, %_io_out_bits_rdata_T, %145) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %147 = firrtl.mux(%140, %dataRefill, %146) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_out_bits_rdata_3, %147 : !firrtl.uint<64>
      %148 = firrtl.mux(%143, %144, %io_in_bits_req_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %149 = firrtl.mux(%140, %141, %148) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_out_bits_cmd_2, %149 : !firrtl.uint<4>
      %_io_out_valid_T_1 = firrtl.bits %io_in_bits_req_cmd 1 to 1 {name = "_io_out_valid_T_1"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_valid_T_3 = firrtl.not %hit {name = "_io_out_valid_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_9 = firrtl.eq %state, %c7_ui4 {name = "_io_isFinish_T_9"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_valid_T_5 = firrtl.and %_io_out_valid_T_3, %_io_isFinish_T_9 {name = "_io_out_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_6 = firrtl.or %hit, %_io_out_valid_T_5 {name = "_io_out_valid_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_7 = firrtl.and %metaRefillWriteBus_x15, %_io_out_valid_T_6 {name = "_io_out_valid_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_10 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid {name = "_io_out_valid_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_12 = firrtl.and %_io_out_valid_T_10, %_io_out_valid_T_11 {name = "_io_out_valid_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_13 = firrtl.mux(%_io_out_valid_T_7, %c1_ui1, %_io_out_valid_T_12) {name = "_io_out_valid_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_14 = firrtl.and %respToL1Fire, %respToL1Last {name = "_io_out_valid_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_16 = firrtl.and %_io_out_valid_T_14, %_io_dataReadRespToL1_T_2 {name = "_io_out_valid_T_16"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_17 = firrtl.or %_io_out_valid_T_13, %_io_out_valid_T_16 {name = "_io_out_valid_T_17"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_19 = firrtl.or %metaRefillWriteBus_x15, %mmio {name = "_io_out_valid_T_19"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_21 = firrtl.not %alreadyOutFire {name = "_io_out_valid_T_21"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_22 = firrtl.and %afterFirstRead, %_io_out_valid_T_21 {name = "_io_out_valid_T_22"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_23 = firrtl.mux(%_io_out_valid_T_19, %_io_isFinish_T_9, %_io_out_valid_T_22) {name = "_io_out_valid_T_23"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_24 = firrtl.mux(%hit, %c1_ui1, %_io_out_valid_T_23) {name = "_io_out_valid_T_24"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_25 = firrtl.mux(%probe, %c0_ui1, %_io_out_valid_T_24) {name = "_io_out_valid_T_25"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_26 = firrtl.mux(%_io_out_valid_T_1, %_io_out_valid_T_17, %_io_out_valid_T_25) {name = "_io_out_valid_T_26"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_valid_T_27 = firrtl.and %io_in_valid, %_io_out_valid_T_26 {name = "_io_out_valid_T_27"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_27 : !firrtl.uint<1>
      %_io_isFinish_T_3 = firrtl.and %_io_dataReadRespToL1_T_2, %releaseLast {name = "_io_isFinish_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_4 = firrtl.mux(%miss, %_io_dataReadRespToL1_T, %_io_isFinish_T_3) {name = "_io_isFinish_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_5 = firrtl.and %io_cohResp_valid, %_io_isFinish_T_4 {name = "_io_isFinish_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_7 = firrtl.or %hit, %metaRefillWriteBus_x15 {name = "_io_isFinish_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_11 = firrtl.or %io_out_valid_1, %alreadyOutFire {name = "_io_isFinish_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_12 = firrtl.and %_io_isFinish_T_9, %_io_isFinish_T_11 {name = "_io_isFinish_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_13 = firrtl.mux(%_io_isFinish_T_7, %io_out_valid_1, %_io_isFinish_T_12) {name = "_io_isFinish_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_isFinish_T_14 = firrtl.mux(%probe, %_io_isFinish_T_5, %_io_isFinish_T_13) {name = "_io_isFinish_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_isFinish_4, %_io_isFinish_T_14 : !firrtl.uint<1>
      %_io_in_ready_T_1 = firrtl.not %hitReadBurst {name = "_io_in_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_2 = firrtl.and %_io_dataReadRespToL1_T, %_io_in_ready_T_1 {name = "_io_in_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_4 = firrtl.not %miss {name = "_io_in_ready_T_4"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_5 = firrtl.and %_io_in_ready_T_2, %_io_in_ready_T_4 {name = "_io_in_ready_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_6 = firrtl.not %probe {name = "_io_in_ready_T_6"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ready_T_7 = firrtl.and %_io_in_ready_T_5, %_io_in_ready_T_6 {name = "_io_in_ready_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ready_0, %_io_in_ready_T_7 : !firrtl.uint<1>
      %_io_dataReadRespToL1_T_4 = firrtl.and %_io_dataReadRespToL1_T_2, %_io_dataReadRespToL1_T_3 {name = "_io_dataReadRespToL1_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_5 = firrtl.or %_io_dataReadRespToL1_T, %_io_dataReadRespToL1_T_4 {name = "_io_dataReadRespToL1_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_dataReadRespToL1_T_6 = firrtl.and %hitReadBurst, %_io_dataReadRespToL1_T_5 {name = "_io_dataReadRespToL1_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_dataReadRespToL1_20, %_io_dataReadRespToL1_T_6 : !firrtl.uint<1>
      %150 = firrtl.and %metaHitWriteBus_req_valid, %metaRefillWriteBus_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %151 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %152 = firrtl.not %150 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %152, %151, "Assertion failed\0A    at Cache.scala:461 assert(!(metaHitWriteBus.req.valid && metaRefillWriteBus.req.valid))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %153 = firrtl.and %dataHitWriteBus_req_valid, %dataRefillWriteBus_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %154 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %155 = firrtl.not %153 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %155, %154, "Assertion failed\0A    at Cache.scala:462 assert(!(dataHitWriteBus.req.valid && dataRefillWriteBus.req.valid))\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %156 = firrtl.wire : !firrtl.uint<9>
      %157 = firrtl.bits %io_in_bits_req_addr 14 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %156, %157 : !firrtl.uint<9>
      %lo = firrtl.cat %io_in_bits_datas_1_data, %io_in_bits_datas_0_data {name = "lo"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %hi = firrtl.cat %io_in_bits_datas_3_data, %io_in_bits_datas_2_data {name = "hi"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %158 = firrtl.cat %hi, %lo : (!firrtl.uint<128>, !firrtl.uint<128>) -> !firrtl.uint<256>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %159 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %160 = firrtl.and %c_control_logEnable, %159 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %160, "[%d] CacheStage3_2: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %161 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %162 = firrtl.and %c_control_logEnable, %161 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %162, " metaread idx %x waymask %b metas %x%x:%x %x%x:%x %x%x:%x %x%x:%x %x\0A" {name = "printf_5"} (%156, %io_in_bits_waymask, %io_in_bits_metas_0_valid, %io_in_bits_metas_0_dirty, %io_in_bits_metas_0_tag, %io_in_bits_metas_1_valid, %io_in_bits_metas_1_dirty, %io_in_bits_metas_1_tag, %io_in_bits_metas_2_valid, %io_in_bits_metas_2_dirty, %io_in_bits_metas_2_tag, %io_in_bits_metas_3_valid, %io_in_bits_metas_3_dirty, %io_in_bits_metas_3_tag, %158) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<256>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 344 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %163 = firrtl.and %io_metaWriteBus_req_valid_11, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %164 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %165 = firrtl.and %163, %164 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %165, "[%d] CacheStage3_2: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %166 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %167 = firrtl.and %163, %166 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %167, "%d: [l2cache S3]: metawrite idx %x wmask %b meta %x%x:%x\0A" {name = "printf_7"} (%c, %io_metaWriteBus_req_bits_setIdx_12, %io_metaWriteBus_req_bits_waymask_15, %c1_ui1, %io_metaWriteBus_req_bits_data_dirty_14, %io_metaWriteBus_req_bits_data_tag_13) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<9>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<17>
      %168 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %169 = firrtl.and %c_control_logEnable, %168 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %169, "[%d] CacheStage3_2: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %170 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %171 = firrtl.and %c_control_logEnable, %170 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %171, " in.ready = %d, in.valid = %d, hit = %x, state = %d, addr = %x cmd:%d probe:%d isFinish:%d\0A" {name = "printf_9"} (%io_in_ready_0, %io_in_valid, %hit, %state, %io_in_bits_req_addr, %io_in_bits_req_cmd, %probe, %io_isFinish_4) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>
      %172 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %173 = firrtl.and %c_control_logEnable, %172 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %173, "[%d] CacheStage3_2: " {name = "printf_10"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %174 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %175 = firrtl.and %c_control_logEnable, %174 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %175, " out.valid:%d rdata:%x cmd:%d user:%x id:%x \0A" {name = "printf_11"} (%io_out_valid_1, %io_out_bits_rdata_3, %io_out_bits_cmd_2, %c0_ui1, %c0_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<1>, !firrtl.uint<1>
      %176 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %177 = firrtl.and %c_control_logEnable, %176 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %177, "[%d] CacheStage3_2: " {name = "printf_12"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %178 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %179 = firrtl.and %c_control_logEnable, %178 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %179, " DHW: (%d, %d), data:%x setIdx:%x MHW:(%d, %d)\0A" {name = "printf_13"} (%dataHitWriteBus_req_valid, %c1_ui1, %dataHitWriteBus_req_bits_data_data, %dataHitWriteBus_req_bits_setIdx, %metaHitWriteBus_req_valid, %c1_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<12>, !firrtl.uint<1>, !firrtl.uint<1>
      %180 = firrtl.cat %hi, %lo : (!firrtl.uint<128>, !firrtl.uint<128>) -> !firrtl.uint<256>
      %181 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %182 = firrtl.and %c_control_logEnable, %181 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %182, "[%d] CacheStage3_2: " {name = "printf_14"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %183 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %184 = firrtl.and %c_control_logEnable, %183 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %184, " DreadCache: %x \0A" {name = "printf_15"} (%180) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<256>
      %185 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %186 = firrtl.and %c_control_logEnable, %185 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %186, "[%d] CacheStage3_2: " {name = "printf_16"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %187 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %188 = firrtl.and %c_control_logEnable, %187 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %188, " useFD:%d isFD:%d FD:%x DreadArray:%x dataRead:%x inwaymask:%x FDwaymask:%x \0A" {name = "printf_17"} (%useForwardData, %io_in_bits_isForwardData, %io_in_bits_forwardData_data_data, %_dataReadArray_WIRE_data, %dataRead, %io_in_bits_waymask, %io_in_bits_forwardData_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<4>
      %189 = firrtl.and %io_dataWriteBus_req_valid_7, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %190 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %191 = firrtl.and %189, %190 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %191, "[%d] CacheStage3_2: " {name = "printf_18"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %192 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %193 = firrtl.and %189, %192 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %193, "[WB] waymask: %b data:%x setIdx:%x\0A" {name = "printf_19"} (%io_dataWriteBus_req_bits_waymask_10, %io_dataWriteBus_req_bits_data_data_9, %io_dataWriteBus_req_bits_setIdx_8) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<64>, !firrtl.uint<12>
      %194 = firrtl.and %io_mem_req_ready, %io_mem_req_valid_16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %195 = firrtl.and %_io_mem_req_valid_T_1, %194 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %196 = firrtl.wire : !firrtl.uint<9>
      %197 = firrtl.bits %io_in_bits_req_addr 14 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %196, %197 : !firrtl.uint<9>
      %198 = firrtl.and %195, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %199 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %200 = firrtl.and %198, %199 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %200, "[%d] CacheStage3_2: " {name = "printf_20"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %201 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %202 = firrtl.and %198, %201 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %202, "[COUTW] cnt %x addr %x data %x cmd %x size %x wmask %x tag %x idx %x waymask %b \0A" {name = "printf_21"} (%writeBeatCnt_value, %io_mem_req_bits_addr_17, %io_mem_req_bits_wdata_19, %io_mem_req_bits_cmd_18, %c3_ui3, %c255_ui8, %addr_tag, %196, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<32>, !firrtl.uint<64>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<17>, !firrtl.uint<9>, !firrtl.uint<4>
      %203 = firrtl.and %_io_mem_req_valid_T, %194 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %204 = firrtl.wire : !firrtl.uint<9>
      %205 = firrtl.bits %io_in_bits_req_addr 14 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %204, %205 : !firrtl.uint<9>
      %206 = firrtl.and %203, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %207 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %208 = firrtl.and %206, %207 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %208, "[%d] CacheStage3_2: " {name = "printf_22"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %209 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %210 = firrtl.and %206, %209 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %210, "[COUTR] addr %x tag %x idx %x waymask %b \0A" {name = "printf_23"} (%io_mem_req_bits_addr_17, %addr_tag, %204, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<17>, !firrtl.uint<9>, !firrtl.uint<4>
      %211 = firrtl.and %_io_out_valid_T_8, %io_mem_resp_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %212 = firrtl.wire : !firrtl.uint<9>
      %213 = firrtl.bits %io_in_bits_req_addr 14 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<9>
      firrtl.strictconnect %212, %213 : !firrtl.uint<9>
      %214 = firrtl.and %211, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %215 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %216 = firrtl.and %214, %215 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %216, "[%d] CacheStage3_2: " {name = "printf_24"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %217 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %218 = firrtl.and %214, %217 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %218, "[COUTR] cnt %x data %x tag %x idx %x waymask %b \0A" {name = "printf_25"} (%readBeatCnt_value, %io_mem_resp_bits_rdata, %addr_tag, %212, %io_in_bits_waymask) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<64>, !firrtl.uint<17>, !firrtl.uint<9>, !firrtl.uint<4>
    }
    firrtl.module private @SRAMTemplate_5(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_r_req_ready: !firrtl.uint<1>, in %io_r_req_valid: !firrtl.uint<1>, in %io_r_req_bits_setIdx: !firrtl.uint<9>, out %io_r_resp_data_0_tag: !firrtl.uint<17>, out %io_r_resp_data_0_valid: !firrtl.uint<1>, out %io_r_resp_data_0_dirty: !firrtl.uint<1>, out %io_r_resp_data_1_tag: !firrtl.uint<17>, out %io_r_resp_data_1_valid: !firrtl.uint<1>, out %io_r_resp_data_1_dirty: !firrtl.uint<1>, out %io_r_resp_data_2_tag: !firrtl.uint<17>, out %io_r_resp_data_2_valid: !firrtl.uint<1>, out %io_r_resp_data_2_dirty: !firrtl.uint<1>, out %io_r_resp_data_3_tag: !firrtl.uint<17>, out %io_r_resp_data_3_valid: !firrtl.uint<1>, out %io_r_resp_data_3_dirty: !firrtl.uint<1>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<9>, in %io_w_req_bits_data_tag: !firrtl.uint<17>, in %io_w_req_bits_data_dirty: !firrtl.uint<1>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c0_ui19 = firrtl.constant 0 : !firrtl.uint<19> {name = "_wdataword_WIRE"}
      %c0_ui9 = firrtl.constant 0 : !firrtl.uint<9>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_r_req_ready_0 = firrtl.wire {name = "io_r_req_ready"} : !firrtl.uint<1>
      %io_r_resp_data_0_tag_1 = firrtl.wire {name = "io_r_resp_data_0_tag"} : !firrtl.uint<17>
      %io_r_resp_data_0_valid_2 = firrtl.wire {name = "io_r_resp_data_0_valid"} : !firrtl.uint<1>
      %io_r_resp_data_0_dirty_3 = firrtl.wire {name = "io_r_resp_data_0_dirty"} : !firrtl.uint<1>
      %io_r_resp_data_1_tag_4 = firrtl.wire {name = "io_r_resp_data_1_tag"} : !firrtl.uint<17>
      %io_r_resp_data_1_valid_5 = firrtl.wire {name = "io_r_resp_data_1_valid"} : !firrtl.uint<1>
      %io_r_resp_data_1_dirty_6 = firrtl.wire {name = "io_r_resp_data_1_dirty"} : !firrtl.uint<1>
      %io_r_resp_data_2_tag_7 = firrtl.wire {name = "io_r_resp_data_2_tag"} : !firrtl.uint<17>
      %io_r_resp_data_2_valid_8 = firrtl.wire {name = "io_r_resp_data_2_valid"} : !firrtl.uint<1>
      %io_r_resp_data_2_dirty_9 = firrtl.wire {name = "io_r_resp_data_2_dirty"} : !firrtl.uint<1>
      %io_r_resp_data_3_tag_10 = firrtl.wire {name = "io_r_resp_data_3_tag"} : !firrtl.uint<17>
      %io_r_resp_data_3_valid_11 = firrtl.wire {name = "io_r_resp_data_3_valid"} : !firrtl.uint<1>
      %io_r_resp_data_3_dirty_12 = firrtl.wire {name = "io_r_resp_data_3_dirty"} : !firrtl.uint<1>
      firrtl.strictconnect %io_r_req_ready, %io_r_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_tag, %io_r_resp_data_0_tag_1 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_0_valid, %io_r_resp_data_0_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_dirty, %io_r_resp_data_0_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_tag, %io_r_resp_data_1_tag_4 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_1_valid, %io_r_resp_data_1_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_dirty, %io_r_resp_data_1_dirty_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_tag, %io_r_resp_data_2_tag_7 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_2_valid, %io_r_resp_data_2_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_dirty, %io_r_resp_data_2_dirty_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_tag, %io_r_resp_data_3_tag_10 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_3_valid, %io_r_resp_data_3_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_dirty, %io_r_resp_data_3_dirty_12 : !firrtl.uint<1>
      %array_rw = firrtl.mem Undefined {depth = 512 : i64, name = "array", portNames = ["rw"], prefix = "", readLatency = 1 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %0 = firrtl.subfield %array_rw[addr] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %1 = firrtl.subfield %array_rw[en] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %2 = firrtl.subfield %array_rw[clk] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %3 = firrtl.subfield %array_rw[rdata] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %4 = firrtl.subfield %array_rw[wmode] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %5 = firrtl.subfield %array_rw[wdata] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %6 = firrtl.subfield %array_rw[wmask] : !firrtl.bundle<addr: uint<9>, en: uint<1>, clk: clock, rdata flip: uint<76>, wmode: uint<1>, wdata: uint<76>, wmask: uint<4>>
      %writeAddr = firrtl.wire : !firrtl.uint<9>
      %writeEnable = firrtl.wire : !firrtl.uint<1>
      %readEnable = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.mux(%writeEnable, %writeAddr, %io_r_req_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      firrtl.strictconnect %0, %7 : !firrtl.uint<9>
      %8 = firrtl.or %readEnable, %writeEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %1, %8 : !firrtl.uint<1>
      %array_MPORT_addr = firrtl.wire : !firrtl.uint<9>
      %array_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_data_0 = firrtl.wire : !firrtl.uint<19>
      %array_MPORT_data_1 = firrtl.wire : !firrtl.uint<19>
      %array_MPORT_data_2 = firrtl.wire : !firrtl.uint<19>
      %array_MPORT_data_3 = firrtl.wire : !firrtl.uint<19>
      %array_MPORT_mask_0 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_1 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_2 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_3 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %writeAddr, %array_MPORT_addr : !firrtl.uint<9>
      firrtl.strictconnect %writeEnable, %array_MPORT_en : !firrtl.uint<1>
      %9 = firrtl.cat %array_MPORT_data_1, %array_MPORT_data_0 : (!firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<38>
      %10 = firrtl.cat %array_MPORT_data_2, %9 : (!firrtl.uint<19>, !firrtl.uint<38>) -> !firrtl.uint<57>
      %11 = firrtl.cat %array_MPORT_data_3, %10 : (!firrtl.uint<19>, !firrtl.uint<57>) -> !firrtl.uint<76>
      firrtl.strictconnect %5, %11 : !firrtl.uint<76>
      %12 = firrtl.cat %array_MPORT_mask_1, %array_MPORT_mask_0 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %13 = firrtl.cat %array_MPORT_mask_2, %12 : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %14 = firrtl.cat %array_MPORT_mask_3, %13 : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %6, %14 : !firrtl.uint<4>
      %array_rdata_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_rdata_MPORT_data_0 = firrtl.wire : !firrtl.uint<19>
      %array_rdata_MPORT_data_1 = firrtl.wire : !firrtl.uint<19>
      %array_rdata_MPORT_data_2 = firrtl.wire : !firrtl.uint<19>
      %array_rdata_MPORT_data_3 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %readEnable, %array_rdata_MPORT_en : !firrtl.uint<1>
      firrtl.strictconnect %2, %clock : !firrtl.clock
      %15 = firrtl.bits %3 18 to 0 : (!firrtl.uint<76>) -> !firrtl.uint<19>
      %16 = firrtl.bits %3 37 to 19 : (!firrtl.uint<76>) -> !firrtl.uint<19>
      %17 = firrtl.bits %3 56 to 38 : (!firrtl.uint<76>) -> !firrtl.uint<19>
      %18 = firrtl.bits %3 75 to 57 : (!firrtl.uint<76>) -> !firrtl.uint<19>
      firrtl.strictconnect %array_rdata_MPORT_data_0, %15 : !firrtl.uint<19>
      firrtl.strictconnect %array_rdata_MPORT_data_1, %16 : !firrtl.uint<19>
      firrtl.strictconnect %array_rdata_MPORT_data_2, %17 : !firrtl.uint<19>
      firrtl.strictconnect %array_rdata_MPORT_data_3, %18 : !firrtl.uint<19>
      %resetState = firrtl.wire : !firrtl.uint<1>
      %resetSet = firrtl.wire : !firrtl.uint<9>
      %_resetState = firrtl.regreset %clock, %reset, %c1_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %_resetSet = firrtl.regreset %clock, %reset, %c0_ui9 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>
      %resetFinish = firrtl.wire : !firrtl.uint<1>
      %wrap_wrap = firrtl.andr %_resetSet {name = "wrap_wrap"} : (!firrtl.uint<9>) -> !firrtl.uint<1>
      %_wrap_value_T = firrtl.add %_resetSet, %c1_ui1 {name = "_wrap_value_T"} : (!firrtl.uint<9>, !firrtl.uint<1>) -> !firrtl.uint<10>
      %_wrap_value_T_1 = firrtl.bits %_wrap_value_T 8 to 0 {name = "_wrap_value_T_1"} : (!firrtl.uint<10>) -> !firrtl.uint<9>
      %19 = firrtl.mux(%_resetState, %_wrap_value_T_1, %_resetSet) : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      firrtl.strictconnect %_resetSet, %19 : !firrtl.uint<9>
      %20 = firrtl.mux(%_resetState, %wrap_wrap, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %resetFinish, %20 : !firrtl.uint<1>
      %21 = firrtl.mux(%resetFinish, %c0_ui1, %_resetState) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %_resetState, %21 : !firrtl.uint<1>
      firrtl.strictconnect %resetState, %_resetState : !firrtl.uint<1>
      firrtl.strictconnect %resetSet, %_resetSet : !firrtl.uint<9>
      %wen = firrtl.or %io_w_req_valid, %resetState {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_r_req_ready_T_1 = firrtl.not %wen {name = "_io_r_req_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %realRen = firrtl.and %io_r_req_valid, %_io_r_req_ready_T_1 {name = "realRen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %setIdx = firrtl.mux(%resetState, %resetSet, %io_w_req_bits_setIdx) {name = "setIdx"} : (!firrtl.uint<1>, !firrtl.uint<9>, !firrtl.uint<9>) -> !firrtl.uint<9>
      %wdataword_hi = firrtl.cat %io_w_req_bits_data_tag, %c1_ui1 {name = "wdataword_hi"} : (!firrtl.uint<17>, !firrtl.uint<1>) -> !firrtl.uint<18>
      %_wdataword_T = firrtl.cat %wdataword_hi, %io_w_req_bits_data_dirty {name = "_wdataword_T"} : (!firrtl.uint<18>, !firrtl.uint<1>) -> !firrtl.uint<19>
      %wdataword = firrtl.mux(%resetState, %c0_ui19, %_wdataword_T) {name = "wdataword"} : (!firrtl.uint<1>, !firrtl.uint<19>, !firrtl.uint<19>) -> !firrtl.uint<19>
      %waymask = firrtl.mux(%resetState, %c15_ui4, %io_w_req_bits_waymask) {name = "waymask"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %wdata_0 = firrtl.wire : !firrtl.uint<19>
      %wdata_1 = firrtl.wire : !firrtl.uint<19>
      %wdata_2 = firrtl.wire : !firrtl.uint<19>
      %wdata_3 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %wdata_0, %wdataword : !firrtl.uint<19>
      firrtl.strictconnect %wdata_1, %wdataword : !firrtl.uint<19>
      firrtl.strictconnect %wdata_2, %wdataword : !firrtl.uint<19>
      firrtl.strictconnect %wdata_3, %wdataword : !firrtl.uint<19>
      %22 = firrtl.bits %waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %23 = firrtl.bits %waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %24 = firrtl.bits %waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %25 = firrtl.bits %waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_addr, %setIdx : !firrtl.uint<9>
      firrtl.strictconnect %array_MPORT_en, %wen : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_0, %22 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_0, %wdata_0 : !firrtl.uint<19>
      firrtl.strictconnect %array_MPORT_mask_1, %23 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_1, %wdata_1 : !firrtl.uint<19>
      firrtl.strictconnect %array_MPORT_mask_2, %24 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_2, %wdata_2 : !firrtl.uint<19>
      firrtl.strictconnect %array_MPORT_mask_3, %25 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_data_3, %wdata_3 : !firrtl.uint<19>
      firrtl.strictconnect %array_rdata_MPORT_en, %realRen : !firrtl.uint<1>
      %rdata_0_tag = firrtl.wire : !firrtl.uint<17>
      %rdata_0_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_0_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_1 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %_rdata_WIRE_1, %array_rdata_MPORT_data_0 : !firrtl.uint<19>
      %_rdata_T = firrtl.bits %_rdata_WIRE_1 0 to 0 {name = "_rdata_T"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_0_dirty, %_rdata_T : !firrtl.uint<1>
      %_rdata_T_1 = firrtl.bits %_rdata_WIRE_1 1 to 1 {name = "_rdata_T_1"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_0_valid, %_rdata_T_1 : !firrtl.uint<1>
      %_rdata_T_2 = firrtl.bits %_rdata_WIRE_1 18 to 2 {name = "_rdata_T_2"} : (!firrtl.uint<19>) -> !firrtl.uint<17>
      firrtl.strictconnect %rdata_0_tag, %_rdata_T_2 : !firrtl.uint<17>
      %rdata_1_tag = firrtl.wire : !firrtl.uint<17>
      %rdata_1_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_1_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_2 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %_rdata_WIRE_2, %array_rdata_MPORT_data_1 : !firrtl.uint<19>
      %_rdata_T_3 = firrtl.bits %_rdata_WIRE_2 0 to 0 {name = "_rdata_T_3"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_1_dirty, %_rdata_T_3 : !firrtl.uint<1>
      %_rdata_T_4 = firrtl.bits %_rdata_WIRE_2 1 to 1 {name = "_rdata_T_4"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_1_valid, %_rdata_T_4 : !firrtl.uint<1>
      %_rdata_T_5 = firrtl.bits %_rdata_WIRE_2 18 to 2 {name = "_rdata_T_5"} : (!firrtl.uint<19>) -> !firrtl.uint<17>
      firrtl.strictconnect %rdata_1_tag, %_rdata_T_5 : !firrtl.uint<17>
      %rdata_2_tag = firrtl.wire : !firrtl.uint<17>
      %rdata_2_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_2_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_3 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %_rdata_WIRE_3, %array_rdata_MPORT_data_2 : !firrtl.uint<19>
      %_rdata_T_6 = firrtl.bits %_rdata_WIRE_3 0 to 0 {name = "_rdata_T_6"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_2_dirty, %_rdata_T_6 : !firrtl.uint<1>
      %_rdata_T_7 = firrtl.bits %_rdata_WIRE_3 1 to 1 {name = "_rdata_T_7"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_2_valid, %_rdata_T_7 : !firrtl.uint<1>
      %_rdata_T_8 = firrtl.bits %_rdata_WIRE_3 18 to 2 {name = "_rdata_T_8"} : (!firrtl.uint<19>) -> !firrtl.uint<17>
      firrtl.strictconnect %rdata_2_tag, %_rdata_T_8 : !firrtl.uint<17>
      %rdata_3_tag = firrtl.wire : !firrtl.uint<17>
      %rdata_3_valid = firrtl.wire : !firrtl.uint<1>
      %rdata_3_dirty = firrtl.wire : !firrtl.uint<1>
      %_rdata_WIRE_4 = firrtl.wire : !firrtl.uint<19>
      firrtl.strictconnect %_rdata_WIRE_4, %array_rdata_MPORT_data_3 : !firrtl.uint<19>
      %_rdata_T_9 = firrtl.bits %_rdata_WIRE_4 0 to 0 {name = "_rdata_T_9"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_3_dirty, %_rdata_T_9 : !firrtl.uint<1>
      %_rdata_T_10 = firrtl.bits %_rdata_WIRE_4 1 to 1 {name = "_rdata_T_10"} : (!firrtl.uint<19>) -> !firrtl.uint<1>
      firrtl.strictconnect %rdata_3_valid, %_rdata_T_10 : !firrtl.uint<1>
      %_rdata_T_11 = firrtl.bits %_rdata_WIRE_4 18 to 2 {name = "_rdata_T_11"} : (!firrtl.uint<19>) -> !firrtl.uint<17>
      firrtl.strictconnect %rdata_3_tag, %_rdata_T_11 : !firrtl.uint<17>
      %26 = firrtl.wire : !firrtl.uint<17>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<17>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<17>
      %33 = firrtl.wire : !firrtl.uint<1>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<17>
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %26, %rdata_0_tag : !firrtl.uint<17>
      firrtl.strictconnect %27, %rdata_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %28, %rdata_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %29, %rdata_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %30, %rdata_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %31, %rdata_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %32, %rdata_2_tag : !firrtl.uint<17>
      firrtl.strictconnect %33, %rdata_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %34, %rdata_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %35, %rdata_3_tag : !firrtl.uint<17>
      firrtl.strictconnect %36, %rdata_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %37, %rdata_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_tag_1, %26 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_0_valid_2, %27 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_dirty_3, %28 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_tag_4, %29 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_1_valid_5, %30 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_1_dirty_6, %31 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_tag_7, %32 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_2_valid_8, %33 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_2_dirty_9, %34 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_tag_10, %35 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_resp_data_3_valid_11, %36 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_3_dirty_12, %37 : !firrtl.uint<1>
      %_io_r_req_ready_T = firrtl.not %resetState {name = "_io_r_req_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_r_req_ready_T_2 = firrtl.and %_io_r_req_ready_T, %_io_r_req_ready_T_1 {name = "_io_r_req_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_r_req_ready_0, %_io_r_req_ready_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %4, %wen : !firrtl.uint<1>
    }
    firrtl.module private @Arbiter1_SRAMBundleA_2(out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<9>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<9>) {
      firrtl.strictconnect %io_in_0_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_in_0_bits_setIdx : !firrtl.uint<9>
    }
    firrtl.module private @SRAMTemplateWithArbiter_4(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_r_0_req_ready: !firrtl.uint<1>, in %io_r_0_req_valid: !firrtl.uint<1>, in %io_r_0_req_bits_setIdx: !firrtl.uint<9>, out %io_r_0_resp_data_0_tag: !firrtl.uint<17>, out %io_r_0_resp_data_0_valid: !firrtl.uint<1>, out %io_r_0_resp_data_0_dirty: !firrtl.uint<1>, out %io_r_0_resp_data_1_tag: !firrtl.uint<17>, out %io_r_0_resp_data_1_valid: !firrtl.uint<1>, out %io_r_0_resp_data_1_dirty: !firrtl.uint<1>, out %io_r_0_resp_data_2_tag: !firrtl.uint<17>, out %io_r_0_resp_data_2_valid: !firrtl.uint<1>, out %io_r_0_resp_data_2_dirty: !firrtl.uint<1>, out %io_r_0_resp_data_3_tag: !firrtl.uint<17>, out %io_r_0_resp_data_3_valid: !firrtl.uint<1>, out %io_r_0_resp_data_3_dirty: !firrtl.uint<1>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<9>, in %io_w_req_bits_data_tag: !firrtl.uint<17>, in %io_w_req_bits_data_dirty: !firrtl.uint<1>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %c0_ui17 = firrtl.constant 0 : !firrtl.uint<17>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_r_0_req_ready_0 = firrtl.wire {name = "io_r_0_req_ready"} : !firrtl.uint<1>
      %io_r_0_resp_data_0_tag_1 = firrtl.wire {name = "io_r_0_resp_data_0_tag"} : !firrtl.uint<17>
      %io_r_0_resp_data_0_valid_2 = firrtl.wire {name = "io_r_0_resp_data_0_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_0_dirty_3 = firrtl.wire {name = "io_r_0_resp_data_0_dirty"} : !firrtl.uint<1>
      %io_r_0_resp_data_1_tag_4 = firrtl.wire {name = "io_r_0_resp_data_1_tag"} : !firrtl.uint<17>
      %io_r_0_resp_data_1_valid_5 = firrtl.wire {name = "io_r_0_resp_data_1_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_1_dirty_6 = firrtl.wire {name = "io_r_0_resp_data_1_dirty"} : !firrtl.uint<1>
      %io_r_0_resp_data_2_tag_7 = firrtl.wire {name = "io_r_0_resp_data_2_tag"} : !firrtl.uint<17>
      %io_r_0_resp_data_2_valid_8 = firrtl.wire {name = "io_r_0_resp_data_2_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_2_dirty_9 = firrtl.wire {name = "io_r_0_resp_data_2_dirty"} : !firrtl.uint<1>
      %io_r_0_resp_data_3_tag_10 = firrtl.wire {name = "io_r_0_resp_data_3_tag"} : !firrtl.uint<17>
      %io_r_0_resp_data_3_valid_11 = firrtl.wire {name = "io_r_0_resp_data_3_valid"} : !firrtl.uint<1>
      %io_r_0_resp_data_3_dirty_12 = firrtl.wire {name = "io_r_0_resp_data_3_dirty"} : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_req_ready, %io_r_0_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_tag, %io_r_0_resp_data_0_tag_1 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_0_valid, %io_r_0_resp_data_0_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_dirty, %io_r_0_resp_data_0_dirty_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_tag, %io_r_0_resp_data_1_tag_4 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_1_valid, %io_r_0_resp_data_1_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_dirty, %io_r_0_resp_data_1_dirty_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_tag, %io_r_0_resp_data_2_tag_7 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_2_valid, %io_r_0_resp_data_2_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_dirty, %io_r_0_resp_data_2_dirty_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_tag, %io_r_0_resp_data_3_tag_10 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_3_valid, %io_r_0_resp_data_3_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_dirty, %io_r_0_resp_data_3_dirty_12 : !firrtl.uint<1>
      %ram_clock, %ram_reset, %ram_io_r_req_ready, %ram_io_r_req_valid, %ram_io_r_req_bits_setIdx, %ram_io_r_resp_data_0_tag, %ram_io_r_resp_data_0_valid, %ram_io_r_resp_data_0_dirty, %ram_io_r_resp_data_1_tag, %ram_io_r_resp_data_1_valid, %ram_io_r_resp_data_1_dirty, %ram_io_r_resp_data_2_tag, %ram_io_r_resp_data_2_valid, %ram_io_r_resp_data_2_dirty, %ram_io_r_resp_data_3_tag, %ram_io_r_resp_data_3_valid, %ram_io_r_resp_data_3_dirty, %ram_io_w_req_valid, %ram_io_w_req_bits_setIdx, %ram_io_w_req_bits_data_tag, %ram_io_w_req_bits_data_dirty, %ram_io_w_req_bits_waymask = firrtl.instance ram @SRAMTemplate_5(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_req_ready: !firrtl.uint<1>, in io_r_req_valid: !firrtl.uint<1>, in io_r_req_bits_setIdx: !firrtl.uint<9>, out io_r_resp_data_0_tag: !firrtl.uint<17>, out io_r_resp_data_0_valid: !firrtl.uint<1>, out io_r_resp_data_0_dirty: !firrtl.uint<1>, out io_r_resp_data_1_tag: !firrtl.uint<17>, out io_r_resp_data_1_valid: !firrtl.uint<1>, out io_r_resp_data_1_dirty: !firrtl.uint<1>, out io_r_resp_data_2_tag: !firrtl.uint<17>, out io_r_resp_data_2_valid: !firrtl.uint<1>, out io_r_resp_data_2_dirty: !firrtl.uint<1>, out io_r_resp_data_3_tag: !firrtl.uint<17>, out io_r_resp_data_3_valid: !firrtl.uint<1>, out io_r_resp_data_3_dirty: !firrtl.uint<1>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<9>, in io_w_req_bits_data_tag: !firrtl.uint<17>, in io_w_req_bits_data_dirty: !firrtl.uint<1>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<9>
      %3 = firrtl.wire : !firrtl.uint<17>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<17>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<17>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<17>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %ram_io_r_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_bits_setIdx, %2 : !firrtl.uint<9>
      firrtl.strictconnect %3, %ram_io_r_resp_data_0_tag : !firrtl.uint<17>
      firrtl.strictconnect %4, %ram_io_r_resp_data_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %5, %ram_io_r_resp_data_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %6, %ram_io_r_resp_data_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %7, %ram_io_r_resp_data_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %8, %ram_io_r_resp_data_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %9, %ram_io_r_resp_data_2_tag : !firrtl.uint<17>
      firrtl.strictconnect %10, %ram_io_r_resp_data_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %11, %ram_io_r_resp_data_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %12, %ram_io_r_resp_data_3_tag : !firrtl.uint<17>
      firrtl.strictconnect %13, %ram_io_r_resp_data_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %14, %ram_io_r_resp_data_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_valid, %io_w_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_bits_setIdx, %io_w_req_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %ram_io_w_req_bits_data_tag, %io_w_req_bits_data_tag : !firrtl.uint<17>
      firrtl.strictconnect %ram_io_w_req_bits_data_dirty, %io_w_req_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_bits_waymask, %io_w_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %ram_clock, %clock : !firrtl.clock
      firrtl.strictconnect %ram_reset, %reset : !firrtl.uint<1>
      %readArb_io_in_0_ready, %readArb_io_in_0_valid, %readArb_io_in_0_bits_setIdx, %readArb_io_out_ready, %readArb_io_out_valid, %readArb_io_out_bits_setIdx = firrtl.instance readArb @Arbiter1_SRAMBundleA_2(out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<9>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<9>)
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<9>
      firrtl.strictconnect %15, %readArb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_valid, %io_r_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_bits_setIdx, %io_r_0_req_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %readArb_io_out_ready, %16 : !firrtl.uint<1>
      firrtl.strictconnect %17, %readArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %18, %readArb_io_out_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %io_r_0_req_ready_0, %15 : !firrtl.uint<1>
      firrtl.strictconnect %16, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %17 : !firrtl.uint<1>
      firrtl.strictconnect %2, %18 : !firrtl.uint<9>
      %19 = firrtl.and %io_r_0_req_ready_0, %io_r_0_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG, %19 : !firrtl.uint<1>
      %r_0_tag = firrtl.regreset %clock, %reset, %c0_ui17 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %r_0_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 18 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_0_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 19 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_1_tag = firrtl.regreset %clock, %reset, %c0_ui17 {firrtl.random_init_start = 20 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %r_1_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 37 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_1_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 38 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_2_tag = firrtl.regreset %clock, %reset, %c0_ui17 {firrtl.random_init_start = 39 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %r_2_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 56 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_2_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 57 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_3_tag = firrtl.regreset %clock, %reset, %c0_ui17 {firrtl.random_init_start = 58 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %r_3_valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 75 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %r_3_dirty = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 76 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %20 = firrtl.mux(%REG, %3, %r_0_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %r_0_tag, %20 : !firrtl.uint<17>
      %21 = firrtl.mux(%REG, %4, %r_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_0_valid, %21 : !firrtl.uint<1>
      %22 = firrtl.mux(%REG, %5, %r_0_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_0_dirty, %22 : !firrtl.uint<1>
      %23 = firrtl.mux(%REG, %6, %r_1_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %r_1_tag, %23 : !firrtl.uint<17>
      %24 = firrtl.mux(%REG, %7, %r_1_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_1_valid, %24 : !firrtl.uint<1>
      %25 = firrtl.mux(%REG, %8, %r_1_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_1_dirty, %25 : !firrtl.uint<1>
      %26 = firrtl.mux(%REG, %9, %r_2_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %r_2_tag, %26 : !firrtl.uint<17>
      %27 = firrtl.mux(%REG, %10, %r_2_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_2_valid, %27 : !firrtl.uint<1>
      %28 = firrtl.mux(%REG, %11, %r_2_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_2_dirty, %28 : !firrtl.uint<1>
      %29 = firrtl.mux(%REG, %12, %r_3_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %r_3_tag, %29 : !firrtl.uint<17>
      %30 = firrtl.mux(%REG, %13, %r_3_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_3_valid, %30 : !firrtl.uint<1>
      %31 = firrtl.mux(%REG, %14, %r_3_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_3_dirty, %31 : !firrtl.uint<1>
      %32 = firrtl.mux(%REG, %3, %r_0_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %33 = firrtl.mux(%REG, %4, %r_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %34 = firrtl.mux(%REG, %5, %r_0_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.mux(%REG, %6, %r_1_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %36 = firrtl.mux(%REG, %7, %r_1_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.mux(%REG, %8, %r_1_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.mux(%REG, %9, %r_2_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %39 = firrtl.mux(%REG, %10, %r_2_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.mux(%REG, %11, %r_2_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.mux(%REG, %12, %r_3_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %42 = firrtl.mux(%REG, %13, %r_3_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.mux(%REG, %14, %r_3_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_tag_1, %32 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_0_valid_2, %33 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_dirty_3, %34 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_tag_4, %35 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_1_valid_5, %36 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_1_dirty_6, %37 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_tag_7, %38 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_2_valid_8, %39 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_2_dirty_9, %40 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_tag_10, %41 : !firrtl.uint<17>
      firrtl.strictconnect %io_r_0_resp_data_3_valid_11, %42 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_3_dirty_12, %43 : !firrtl.uint<1>
    }
    firrtl.module private @SRAMTemplate_6(in %clock: !firrtl.clock, out %io_r_req_ready: !firrtl.uint<1>, in %io_r_req_valid: !firrtl.uint<1>, in %io_r_req_bits_setIdx: !firrtl.uint<12>, out %io_r_resp_data_0_data: !firrtl.uint<64>, out %io_r_resp_data_1_data: !firrtl.uint<64>, out %io_r_resp_data_2_data: !firrtl.uint<64>, out %io_r_resp_data_3_data: !firrtl.uint<64>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<12>, in %io_w_req_bits_data_data: !firrtl.uint<64>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %io_r_req_ready_0 = firrtl.wire {name = "io_r_req_ready"} : !firrtl.uint<1>
      %io_r_resp_data_0_data_1 = firrtl.wire {name = "io_r_resp_data_0_data"} : !firrtl.uint<64>
      %io_r_resp_data_1_data_2 = firrtl.wire {name = "io_r_resp_data_1_data"} : !firrtl.uint<64>
      %io_r_resp_data_2_data_3 = firrtl.wire {name = "io_r_resp_data_2_data"} : !firrtl.uint<64>
      %io_r_resp_data_3_data_4 = firrtl.wire {name = "io_r_resp_data_3_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_r_req_ready, %io_r_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_resp_data_0_data, %io_r_resp_data_0_data_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_1_data, %io_r_resp_data_1_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_2_data, %io_r_resp_data_2_data_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_3_data, %io_r_resp_data_3_data_4 : !firrtl.uint<64>
      %array_rw = firrtl.mem Undefined {depth = 4096 : i64, name = "array", portNames = ["rw"], prefix = "", readLatency = 1 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %0 = firrtl.subfield %array_rw[addr] : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %1 = firrtl.subfield %array_rw[en] : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %2 = firrtl.subfield %array_rw[clk] : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %3 = firrtl.subfield %array_rw[rdata] : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %4 = firrtl.subfield %array_rw[wmode] : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %5 = firrtl.subfield %array_rw[wdata] : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %6 = firrtl.subfield %array_rw[wmask] : !firrtl.bundle<addr: uint<12>, en: uint<1>, clk: clock, rdata flip: uint<256>, wmode: uint<1>, wdata: uint<256>, wmask: uint<4>>
      %readEnable = firrtl.wire : !firrtl.uint<1>
      %7 = firrtl.mux(%io_w_req_valid, %io_w_req_bits_setIdx, %io_r_req_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      firrtl.strictconnect %0, %7 : !firrtl.uint<12>
      %8 = firrtl.or %readEnable, %io_w_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %1, %8 : !firrtl.uint<1>
      %array_MPORT_mask_0 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_1 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_2 = firrtl.wire : !firrtl.uint<1>
      %array_MPORT_mask_3 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.cat %io_w_req_bits_data_data, %io_w_req_bits_data_data : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<128>
      %10 = firrtl.cat %io_w_req_bits_data_data, %9 : (!firrtl.uint<64>, !firrtl.uint<128>) -> !firrtl.uint<192>
      %11 = firrtl.cat %io_w_req_bits_data_data, %10 : (!firrtl.uint<64>, !firrtl.uint<192>) -> !firrtl.uint<256>
      firrtl.strictconnect %5, %11 : !firrtl.uint<256>
      %12 = firrtl.cat %array_MPORT_mask_1, %array_MPORT_mask_0 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %13 = firrtl.cat %array_MPORT_mask_2, %12 : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %14 = firrtl.cat %array_MPORT_mask_3, %13 : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %6, %14 : !firrtl.uint<4>
      %array_rdata_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %array_rdata_MPORT_data_0 = firrtl.wire : !firrtl.uint<64>
      %array_rdata_MPORT_data_1 = firrtl.wire : !firrtl.uint<64>
      %array_rdata_MPORT_data_2 = firrtl.wire : !firrtl.uint<64>
      %array_rdata_MPORT_data_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %readEnable, %array_rdata_MPORT_en : !firrtl.uint<1>
      firrtl.strictconnect %2, %clock : !firrtl.clock
      %15 = firrtl.bits %3 63 to 0 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      %16 = firrtl.bits %3 127 to 64 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      %17 = firrtl.bits %3 191 to 128 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      %18 = firrtl.bits %3 255 to 192 : (!firrtl.uint<256>) -> !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_0, %15 : !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_1, %16 : !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_2, %17 : !firrtl.uint<64>
      firrtl.strictconnect %array_rdata_MPORT_data_3, %18 : !firrtl.uint<64>
      %_io_r_req_ready_T_2 = firrtl.not %io_w_req_valid {name = "_io_r_req_ready_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %realRen = firrtl.and %io_r_req_valid, %_io_r_req_ready_T_2 {name = "realRen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.bits %io_w_req_bits_waymask 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %20 = firrtl.bits %io_w_req_bits_waymask 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %21 = firrtl.bits %io_w_req_bits_waymask 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %22 = firrtl.bits %io_w_req_bits_waymask 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_0, %19 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_1, %20 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_2, %21 : !firrtl.uint<1>
      firrtl.strictconnect %array_MPORT_mask_3, %22 : !firrtl.uint<1>
      firrtl.strictconnect %array_rdata_MPORT_en, %realRen : !firrtl.uint<1>
      %rdata_0_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T, %array_rdata_MPORT_data_0 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_0_data, %_rdata_T : !firrtl.uint<64>
      %rdata_1_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T_1, %array_rdata_MPORT_data_1 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_1_data, %_rdata_T_1 : !firrtl.uint<64>
      %rdata_2_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T_2 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T_2, %array_rdata_MPORT_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_2_data, %_rdata_T_2 : !firrtl.uint<64>
      %rdata_3_data = firrtl.wire : !firrtl.uint<64>
      %_rdata_T_3 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T_3, %array_rdata_MPORT_data_3 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_3_data, %_rdata_T_3 : !firrtl.uint<64>
      %23 = firrtl.wire : !firrtl.uint<64>
      %24 = firrtl.wire : !firrtl.uint<64>
      %25 = firrtl.wire : !firrtl.uint<64>
      %26 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %23, %rdata_0_data : !firrtl.uint<64>
      firrtl.strictconnect %24, %rdata_1_data : !firrtl.uint<64>
      firrtl.strictconnect %25, %rdata_2_data : !firrtl.uint<64>
      firrtl.strictconnect %26, %rdata_3_data : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_0_data_1, %23 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_1_data_2, %24 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_2_data_3, %25 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_resp_data_3_data_4, %26 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_req_ready_0, %_io_r_req_ready_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %4, %io_w_req_valid : !firrtl.uint<1>
    }
    firrtl.module private @Arbiter2_SRAMBundleA_2(out %io_in_0_ready: !firrtl.uint<1>, in %io_in_0_valid: !firrtl.uint<1>, in %io_in_0_bits_setIdx: !firrtl.uint<12>, out %io_in_1_ready: !firrtl.uint<1>, in %io_in_1_valid: !firrtl.uint<1>, in %io_in_1_bits_setIdx: !firrtl.uint<12>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_setIdx: !firrtl.uint<12>) {
      %io_in_1_ready_0 = firrtl.wire {name = "io_in_1_ready"} : !firrtl.uint<1>
      %io_out_valid_1 = firrtl.wire {name = "io_out_valid"} : !firrtl.uint<1>
      %io_out_bits_setIdx_2 = firrtl.wire {name = "io_out_bits_setIdx"} : !firrtl.uint<12>
      firrtl.strictconnect %io_in_0_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready, %io_in_1_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_out_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_setIdx, %io_out_bits_setIdx_2 : !firrtl.uint<12>
      %0 = firrtl.mux(%io_in_0_valid, %io_in_0_bits_setIdx, %io_in_1_bits_setIdx) : (!firrtl.uint<1>, !firrtl.uint<12>, !firrtl.uint<12>) -> !firrtl.uint<12>
      firrtl.strictconnect %io_out_bits_setIdx_2, %0 : !firrtl.uint<12>
      %grant_1 = firrtl.not %io_in_0_valid {name = "grant_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_1_ready_T = firrtl.and %grant_1, %io_out_ready {name = "_io_in_1_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_1_ready_0, %_io_in_1_ready_T : !firrtl.uint<1>
      %_io_out_valid_T_1 = firrtl.or %io_in_0_valid, %io_in_1_valid {name = "_io_out_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid_1, %_io_out_valid_T_1 : !firrtl.uint<1>
    }
    firrtl.module private @SRAMTemplateWithArbiter_5(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_r_0_req_ready: !firrtl.uint<1>, in %io_r_0_req_valid: !firrtl.uint<1>, in %io_r_0_req_bits_setIdx: !firrtl.uint<12>, out %io_r_0_resp_data_0_data: !firrtl.uint<64>, out %io_r_0_resp_data_1_data: !firrtl.uint<64>, out %io_r_0_resp_data_2_data: !firrtl.uint<64>, out %io_r_0_resp_data_3_data: !firrtl.uint<64>, out %io_r_1_req_ready: !firrtl.uint<1>, in %io_r_1_req_valid: !firrtl.uint<1>, in %io_r_1_req_bits_setIdx: !firrtl.uint<12>, out %io_r_1_resp_data_0_data: !firrtl.uint<64>, out %io_r_1_resp_data_1_data: !firrtl.uint<64>, out %io_r_1_resp_data_2_data: !firrtl.uint<64>, out %io_r_1_resp_data_3_data: !firrtl.uint<64>, in %io_w_req_valid: !firrtl.uint<1>, in %io_w_req_bits_setIdx: !firrtl.uint<12>, in %io_w_req_bits_data_data: !firrtl.uint<64>, in %io_w_req_bits_waymask: !firrtl.uint<4>) {
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %io_r_0_req_ready_0 = firrtl.wire {name = "io_r_0_req_ready"} : !firrtl.uint<1>
      %io_r_0_resp_data_0_data_1 = firrtl.wire {name = "io_r_0_resp_data_0_data"} : !firrtl.uint<64>
      %io_r_0_resp_data_1_data_2 = firrtl.wire {name = "io_r_0_resp_data_1_data"} : !firrtl.uint<64>
      %io_r_0_resp_data_2_data_3 = firrtl.wire {name = "io_r_0_resp_data_2_data"} : !firrtl.uint<64>
      %io_r_0_resp_data_3_data_4 = firrtl.wire {name = "io_r_0_resp_data_3_data"} : !firrtl.uint<64>
      %io_r_1_req_ready_5 = firrtl.wire {name = "io_r_1_req_ready"} : !firrtl.uint<1>
      %io_r_1_resp_data_0_data_6 = firrtl.wire {name = "io_r_1_resp_data_0_data"} : !firrtl.uint<64>
      %io_r_1_resp_data_1_data_7 = firrtl.wire {name = "io_r_1_resp_data_1_data"} : !firrtl.uint<64>
      %io_r_1_resp_data_2_data_8 = firrtl.wire {name = "io_r_1_resp_data_2_data"} : !firrtl.uint<64>
      %io_r_1_resp_data_3_data_9 = firrtl.wire {name = "io_r_1_resp_data_3_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_req_ready, %io_r_0_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_0_resp_data_0_data, %io_r_0_resp_data_0_data_1 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_1_data, %io_r_0_resp_data_1_data_2 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_2_data, %io_r_0_resp_data_2_data_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_3_data, %io_r_0_resp_data_3_data_4 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_req_ready, %io_r_1_req_ready_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_1_resp_data_0_data, %io_r_1_resp_data_0_data_6 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_1_data, %io_r_1_resp_data_1_data_7 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_2_data, %io_r_1_resp_data_2_data_8 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_3_data, %io_r_1_resp_data_3_data_9 : !firrtl.uint<64>
      %ram_clock, %ram_io_r_req_ready, %ram_io_r_req_valid, %ram_io_r_req_bits_setIdx, %ram_io_r_resp_data_0_data, %ram_io_r_resp_data_1_data, %ram_io_r_resp_data_2_data, %ram_io_r_resp_data_3_data, %ram_io_w_req_valid, %ram_io_w_req_bits_setIdx, %ram_io_w_req_bits_data_data, %ram_io_w_req_bits_waymask = firrtl.instance ram @SRAMTemplate_6(in clock: !firrtl.clock, out io_r_req_ready: !firrtl.uint<1>, in io_r_req_valid: !firrtl.uint<1>, in io_r_req_bits_setIdx: !firrtl.uint<12>, out io_r_resp_data_0_data: !firrtl.uint<64>, out io_r_resp_data_1_data: !firrtl.uint<64>, out io_r_resp_data_2_data: !firrtl.uint<64>, out io_r_resp_data_3_data: !firrtl.uint<64>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<12>, in io_w_req_bits_data_data: !firrtl.uint<64>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<12>
      %3 = firrtl.wire : !firrtl.uint<64>
      %4 = firrtl.wire : !firrtl.uint<64>
      %5 = firrtl.wire : !firrtl.uint<64>
      %6 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %0, %ram_io_r_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_r_req_bits_setIdx, %2 : !firrtl.uint<12>
      firrtl.strictconnect %3, %ram_io_r_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %4, %ram_io_r_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %5, %ram_io_r_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %6, %ram_io_r_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %ram_io_w_req_valid, %io_w_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %ram_io_w_req_bits_setIdx, %io_w_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %ram_io_w_req_bits_data_data, %io_w_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %ram_io_w_req_bits_waymask, %io_w_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %ram_clock, %clock : !firrtl.clock
      %readArb_io_in_0_ready, %readArb_io_in_0_valid, %readArb_io_in_0_bits_setIdx, %readArb_io_in_1_ready, %readArb_io_in_1_valid, %readArb_io_in_1_bits_setIdx, %readArb_io_out_ready, %readArb_io_out_valid, %readArb_io_out_bits_setIdx = firrtl.instance readArb @Arbiter2_SRAMBundleA_2(out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_setIdx: !firrtl.uint<12>, out io_in_1_ready: !firrtl.uint<1>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_setIdx: !firrtl.uint<12>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_setIdx: !firrtl.uint<12>)
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<12>
      firrtl.strictconnect %7, %readArb_io_in_0_ready : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_valid, %io_r_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_0_bits_setIdx, %io_r_0_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %8, %readArb_io_in_1_ready : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_1_valid, %io_r_1_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %readArb_io_in_1_bits_setIdx, %io_r_1_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %readArb_io_out_ready, %9 : !firrtl.uint<1>
      firrtl.strictconnect %10, %readArb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %11, %readArb_io_out_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %io_r_0_req_ready_0, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_r_1_req_ready_5, %8 : !firrtl.uint<1>
      firrtl.strictconnect %9, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %10 : !firrtl.uint<1>
      firrtl.strictconnect %2, %11 : !firrtl.uint<12>
      %12 = firrtl.and %io_r_0_req_ready_0, %io_r_0_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG, %12 : !firrtl.uint<1>
      %r_0_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 65 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_2_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 129 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_3_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 193 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %13 = firrtl.mux(%REG, %3, %r_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_0_data, %13 : !firrtl.uint<64>
      %14 = firrtl.mux(%REG, %4, %r_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_data, %14 : !firrtl.uint<64>
      %15 = firrtl.mux(%REG, %5, %r_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_2_data, %15 : !firrtl.uint<64>
      %16 = firrtl.mux(%REG, %6, %r_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_3_data, %16 : !firrtl.uint<64>
      %17 = firrtl.mux(%REG, %3, %r_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %18 = firrtl.mux(%REG, %4, %r_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %19 = firrtl.mux(%REG, %5, %r_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %20 = firrtl.mux(%REG, %6, %r_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_0_data_1, %17 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_1_data_2, %18 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_2_data_3, %19 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_0_resp_data_3_data_4, %20 : !firrtl.uint<64>
      %21 = firrtl.and %io_r_1_req_ready_5, %io_r_1_req_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %REG_1 = firrtl.reg %clock {firrtl.random_init_start = 257 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %REG_1, %21 : !firrtl.uint<1>
      %r_1_0_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 258 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_1_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 322 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_2_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 386 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %r_1_3_data = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 450 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %22 = firrtl.mux(%REG_1, %3, %r_1_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_0_data, %22 : !firrtl.uint<64>
      %23 = firrtl.mux(%REG_1, %4, %r_1_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_1_data, %23 : !firrtl.uint<64>
      %24 = firrtl.mux(%REG_1, %5, %r_1_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_2_data, %24 : !firrtl.uint<64>
      %25 = firrtl.mux(%REG_1, %6, %r_1_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %r_1_3_data, %25 : !firrtl.uint<64>
      %26 = firrtl.mux(%REG_1, %3, %r_1_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %27 = firrtl.mux(%REG_1, %4, %r_1_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %28 = firrtl.mux(%REG_1, %5, %r_1_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %29 = firrtl.mux(%REG_1, %6, %r_1_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_0_data_6, %26 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_1_data_7, %27 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_2_data_8, %28 : !firrtl.uint<64>
      firrtl.strictconnect %io_r_1_resp_data_3_data_9, %29 : !firrtl.uint<64>
    }
    firrtl.module private @Cache_2(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_size: !firrtl.uint<3>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wmask: !firrtl.uint<8>, in %io_in_req_bits_wdata: !firrtl.uint<64>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_mem_req_ready: !firrtl.uint<1>, out %io_out_mem_req_valid: !firrtl.uint<1>, out %io_out_mem_req_bits_addr: !firrtl.uint<32>, out %io_out_mem_req_bits_cmd: !firrtl.uint<4>, out %io_out_mem_req_bits_wdata: !firrtl.uint<64>, in %io_out_mem_resp_valid: !firrtl.uint<1>, in %io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in %io_out_mem_resp_bits_rdata: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd_2 = firrtl.wire {name = "io_in_resp_bits_cmd"} : !firrtl.uint<4>
      %io_in_resp_bits_rdata_3 = firrtl.wire {name = "io_in_resp_bits_rdata"} : !firrtl.uint<64>
      %io_out_mem_req_valid_4 = firrtl.wire {name = "io_out_mem_req_valid"} : !firrtl.uint<1>
      %io_out_mem_req_bits_addr_5 = firrtl.wire {name = "io_out_mem_req_bits_addr"} : !firrtl.uint<32>
      %io_out_mem_req_bits_cmd_6 = firrtl.wire {name = "io_out_mem_req_bits_cmd"} : !firrtl.uint<4>
      %io_out_mem_req_bits_wdata_7 = firrtl.wire {name = "io_out_mem_req_bits_wdata"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_in_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_in_resp_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_valid, %io_out_mem_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_mem_req_bits_addr, %io_out_mem_req_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_cmd, %io_out_mem_req_bits_cmd_6 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_wdata, %io_out_mem_req_bits_wdata_7 : !firrtl.uint<64>
      %s1_clock, %s1_reset, %s1_io_in_ready, %s1_io_in_valid, %s1_io_in_bits_addr, %s1_io_in_bits_size, %s1_io_in_bits_cmd, %s1_io_in_bits_wmask, %s1_io_in_bits_wdata, %s1_io_out_ready, %s1_io_out_valid, %s1_io_out_bits_req_addr, %s1_io_out_bits_req_size, %s1_io_out_bits_req_cmd, %s1_io_out_bits_req_wmask, %s1_io_out_bits_req_wdata, %s1_io_metaReadBus_req_ready, %s1_io_metaReadBus_req_valid, %s1_io_metaReadBus_req_bits_setIdx, %s1_io_dataReadBus_req_ready, %s1_io_dataReadBus_req_valid, %s1_io_dataReadBus_req_bits_setIdx = firrtl.instance s1 @CacheStage1_2(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<32>, in io_in_bits_size: !firrtl.uint<3>, in io_in_bits_cmd: !firrtl.uint<4>, in io_in_bits_wmask: !firrtl.uint<8>, in io_in_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_req_addr: !firrtl.uint<32>, out io_out_bits_req_size: !firrtl.uint<3>, out io_out_bits_req_cmd: !firrtl.uint<4>, out io_out_bits_req_wmask: !firrtl.uint<8>, out io_out_bits_req_wdata: !firrtl.uint<64>, in io_metaReadBus_req_ready: !firrtl.uint<1>, out io_metaReadBus_req_valid: !firrtl.uint<1>, out io_metaReadBus_req_bits_setIdx: !firrtl.uint<9>, in io_dataReadBus_req_ready: !firrtl.uint<1>, out io_dataReadBus_req_valid: !firrtl.uint<1>, out io_dataReadBus_req_bits_setIdx: !firrtl.uint<12>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<32>
      %3 = firrtl.wire : !firrtl.uint<3>
      %4 = firrtl.wire : !firrtl.uint<4>
      %5 = firrtl.wire : !firrtl.uint<8>
      %6 = firrtl.wire : !firrtl.uint<64>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<32>
      %10 = firrtl.wire : !firrtl.uint<3>
      %11 = firrtl.wire : !firrtl.uint<4>
      %12 = firrtl.wire : !firrtl.uint<8>
      %13 = firrtl.wire : !firrtl.uint<64>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<9>
      %17 = firrtl.wire : !firrtl.uint<17>
      %18 = firrtl.wire : !firrtl.uint<1>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<17>
      %21 = firrtl.wire : !firrtl.uint<1>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<17>
      %24 = firrtl.wire : !firrtl.uint<1>
      %25 = firrtl.wire : !firrtl.uint<1>
      %26 = firrtl.wire : !firrtl.uint<17>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<1>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<12>
      %32 = firrtl.wire : !firrtl.uint<64>
      %33 = firrtl.wire : !firrtl.uint<64>
      %34 = firrtl.wire : !firrtl.uint<64>
      %35 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %0, %s1_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s1_io_in_valid, %1 : !firrtl.uint<1>
      firrtl.strictconnect %s1_io_in_bits_addr, %2 : !firrtl.uint<32>
      firrtl.strictconnect %s1_io_in_bits_size, %3 : !firrtl.uint<3>
      firrtl.strictconnect %s1_io_in_bits_cmd, %4 : !firrtl.uint<4>
      firrtl.strictconnect %s1_io_in_bits_wmask, %5 : !firrtl.uint<8>
      firrtl.strictconnect %s1_io_in_bits_wdata, %6 : !firrtl.uint<64>
      firrtl.strictconnect %s1_io_out_ready, %7 : !firrtl.uint<1>
      firrtl.strictconnect %8, %s1_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %9, %s1_io_out_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %10, %s1_io_out_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %11, %s1_io_out_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %12, %s1_io_out_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %13, %s1_io_out_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %s1_io_metaReadBus_req_ready, %14 : !firrtl.uint<1>
      firrtl.strictconnect %15, %s1_io_metaReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %16, %s1_io_metaReadBus_req_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %s1_io_dataReadBus_req_ready, %29 : !firrtl.uint<1>
      firrtl.strictconnect %30, %s1_io_dataReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %31, %s1_io_dataReadBus_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %s1_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s1_reset, %reset : !firrtl.uint<1>
      %s2_clock, %s2_reset, %s2_io_in_ready, %s2_io_in_valid, %s2_io_in_bits_req_addr, %s2_io_in_bits_req_size, %s2_io_in_bits_req_cmd, %s2_io_in_bits_req_wmask, %s2_io_in_bits_req_wdata, %s2_io_out_ready, %s2_io_out_valid, %s2_io_out_bits_req_addr, %s2_io_out_bits_req_size, %s2_io_out_bits_req_cmd, %s2_io_out_bits_req_wmask, %s2_io_out_bits_req_wdata, %s2_io_out_bits_metas_0_tag, %s2_io_out_bits_metas_0_valid, %s2_io_out_bits_metas_0_dirty, %s2_io_out_bits_metas_1_tag, %s2_io_out_bits_metas_1_valid, %s2_io_out_bits_metas_1_dirty, %s2_io_out_bits_metas_2_tag, %s2_io_out_bits_metas_2_valid, %s2_io_out_bits_metas_2_dirty, %s2_io_out_bits_metas_3_tag, %s2_io_out_bits_metas_3_valid, %s2_io_out_bits_metas_3_dirty, %s2_io_out_bits_datas_0_data, %s2_io_out_bits_datas_1_data, %s2_io_out_bits_datas_2_data, %s2_io_out_bits_datas_3_data, %s2_io_out_bits_hit, %s2_io_out_bits_waymask, %s2_io_out_bits_mmio, %s2_io_out_bits_isForwardData, %s2_io_out_bits_forwardData_data_data, %s2_io_out_bits_forwardData_waymask, %s2_io_metaReadResp_0_tag, %s2_io_metaReadResp_0_valid, %s2_io_metaReadResp_0_dirty, %s2_io_metaReadResp_1_tag, %s2_io_metaReadResp_1_valid, %s2_io_metaReadResp_1_dirty, %s2_io_metaReadResp_2_tag, %s2_io_metaReadResp_2_valid, %s2_io_metaReadResp_2_dirty, %s2_io_metaReadResp_3_tag, %s2_io_metaReadResp_3_valid, %s2_io_metaReadResp_3_dirty, %s2_io_dataReadResp_0_data, %s2_io_dataReadResp_1_data, %s2_io_dataReadResp_2_data, %s2_io_dataReadResp_3_data, %s2_io_metaWriteBus_req_valid, %s2_io_metaWriteBus_req_bits_setIdx, %s2_io_metaWriteBus_req_bits_data_tag, %s2_io_metaWriteBus_req_bits_data_dirty, %s2_io_metaWriteBus_req_bits_waymask, %s2_io_dataWriteBus_req_valid, %s2_io_dataWriteBus_req_bits_setIdx, %s2_io_dataWriteBus_req_bits_data_data, %s2_io_dataWriteBus_req_bits_waymask = firrtl.instance s2 @CacheStage2_2(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_req_addr: !firrtl.uint<32>, in io_in_bits_req_size: !firrtl.uint<3>, in io_in_bits_req_cmd: !firrtl.uint<4>, in io_in_bits_req_wmask: !firrtl.uint<8>, in io_in_bits_req_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_req_addr: !firrtl.uint<32>, out io_out_bits_req_size: !firrtl.uint<3>, out io_out_bits_req_cmd: !firrtl.uint<4>, out io_out_bits_req_wmask: !firrtl.uint<8>, out io_out_bits_req_wdata: !firrtl.uint<64>, out io_out_bits_metas_0_tag: !firrtl.uint<17>, out io_out_bits_metas_0_valid: !firrtl.uint<1>, out io_out_bits_metas_0_dirty: !firrtl.uint<1>, out io_out_bits_metas_1_tag: !firrtl.uint<17>, out io_out_bits_metas_1_valid: !firrtl.uint<1>, out io_out_bits_metas_1_dirty: !firrtl.uint<1>, out io_out_bits_metas_2_tag: !firrtl.uint<17>, out io_out_bits_metas_2_valid: !firrtl.uint<1>, out io_out_bits_metas_2_dirty: !firrtl.uint<1>, out io_out_bits_metas_3_tag: !firrtl.uint<17>, out io_out_bits_metas_3_valid: !firrtl.uint<1>, out io_out_bits_metas_3_dirty: !firrtl.uint<1>, out io_out_bits_datas_0_data: !firrtl.uint<64>, out io_out_bits_datas_1_data: !firrtl.uint<64>, out io_out_bits_datas_2_data: !firrtl.uint<64>, out io_out_bits_datas_3_data: !firrtl.uint<64>, out io_out_bits_hit: !firrtl.uint<1>, out io_out_bits_waymask: !firrtl.uint<4>, out io_out_bits_mmio: !firrtl.uint<1>, out io_out_bits_isForwardData: !firrtl.uint<1>, out io_out_bits_forwardData_data_data: !firrtl.uint<64>, out io_out_bits_forwardData_waymask: !firrtl.uint<4>, in io_metaReadResp_0_tag: !firrtl.uint<17>, in io_metaReadResp_0_valid: !firrtl.uint<1>, in io_metaReadResp_0_dirty: !firrtl.uint<1>, in io_metaReadResp_1_tag: !firrtl.uint<17>, in io_metaReadResp_1_valid: !firrtl.uint<1>, in io_metaReadResp_1_dirty: !firrtl.uint<1>, in io_metaReadResp_2_tag: !firrtl.uint<17>, in io_metaReadResp_2_valid: !firrtl.uint<1>, in io_metaReadResp_2_dirty: !firrtl.uint<1>, in io_metaReadResp_3_tag: !firrtl.uint<17>, in io_metaReadResp_3_valid: !firrtl.uint<1>, in io_metaReadResp_3_dirty: !firrtl.uint<1>, in io_dataReadResp_0_data: !firrtl.uint<64>, in io_dataReadResp_1_data: !firrtl.uint<64>, in io_dataReadResp_2_data: !firrtl.uint<64>, in io_dataReadResp_3_data: !firrtl.uint<64>, in io_metaWriteBus_req_valid: !firrtl.uint<1>, in io_metaWriteBus_req_bits_setIdx: !firrtl.uint<9>, in io_metaWriteBus_req_bits_data_tag: !firrtl.uint<17>, in io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, in io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in io_dataWriteBus_req_valid: !firrtl.uint<1>, in io_dataWriteBus_req_bits_setIdx: !firrtl.uint<12>, in io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, in io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>)
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<1>
      %38 = firrtl.wire : !firrtl.uint<32>
      %39 = firrtl.wire : !firrtl.uint<3>
      %40 = firrtl.wire : !firrtl.uint<4>
      %41 = firrtl.wire : !firrtl.uint<8>
      %42 = firrtl.wire : !firrtl.uint<64>
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<1>
      %45 = firrtl.wire : !firrtl.uint<32>
      %46 = firrtl.wire : !firrtl.uint<3>
      %47 = firrtl.wire : !firrtl.uint<4>
      %48 = firrtl.wire : !firrtl.uint<8>
      %49 = firrtl.wire : !firrtl.uint<64>
      %50 = firrtl.wire : !firrtl.uint<17>
      %51 = firrtl.wire : !firrtl.uint<1>
      %52 = firrtl.wire : !firrtl.uint<1>
      %53 = firrtl.wire : !firrtl.uint<17>
      %54 = firrtl.wire : !firrtl.uint<1>
      %55 = firrtl.wire : !firrtl.uint<1>
      %56 = firrtl.wire : !firrtl.uint<17>
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<1>
      %59 = firrtl.wire : !firrtl.uint<17>
      %60 = firrtl.wire : !firrtl.uint<1>
      %61 = firrtl.wire : !firrtl.uint<1>
      %62 = firrtl.wire : !firrtl.uint<64>
      %63 = firrtl.wire : !firrtl.uint<64>
      %64 = firrtl.wire : !firrtl.uint<64>
      %65 = firrtl.wire : !firrtl.uint<64>
      %66 = firrtl.wire : !firrtl.uint<1>
      %67 = firrtl.wire : !firrtl.uint<4>
      %68 = firrtl.wire : !firrtl.uint<1>
      %69 = firrtl.wire : !firrtl.uint<1>
      %70 = firrtl.wire : !firrtl.uint<64>
      %71 = firrtl.wire : !firrtl.uint<4>
      %72 = firrtl.wire : !firrtl.uint<17>
      %73 = firrtl.wire : !firrtl.uint<1>
      %74 = firrtl.wire : !firrtl.uint<1>
      %75 = firrtl.wire : !firrtl.uint<17>
      %76 = firrtl.wire : !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<1>
      %78 = firrtl.wire : !firrtl.uint<17>
      %79 = firrtl.wire : !firrtl.uint<1>
      %80 = firrtl.wire : !firrtl.uint<1>
      %81 = firrtl.wire : !firrtl.uint<17>
      %82 = firrtl.wire : !firrtl.uint<1>
      %83 = firrtl.wire : !firrtl.uint<1>
      %84 = firrtl.wire : !firrtl.uint<64>
      %85 = firrtl.wire : !firrtl.uint<64>
      %86 = firrtl.wire : !firrtl.uint<64>
      %87 = firrtl.wire : !firrtl.uint<64>
      %88 = firrtl.wire : !firrtl.uint<1>
      %89 = firrtl.wire : !firrtl.uint<9>
      %90 = firrtl.wire : !firrtl.uint<17>
      %91 = firrtl.wire : !firrtl.uint<1>
      %92 = firrtl.wire : !firrtl.uint<4>
      %93 = firrtl.wire : !firrtl.uint<1>
      %94 = firrtl.wire : !firrtl.uint<12>
      %95 = firrtl.wire : !firrtl.uint<64>
      %96 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %36, %s2_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_in_valid, %37 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_in_bits_req_addr, %38 : !firrtl.uint<32>
      firrtl.strictconnect %s2_io_in_bits_req_size, %39 : !firrtl.uint<3>
      firrtl.strictconnect %s2_io_in_bits_req_cmd, %40 : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_in_bits_req_wmask, %41 : !firrtl.uint<8>
      firrtl.strictconnect %s2_io_in_bits_req_wdata, %42 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_out_ready, %43 : !firrtl.uint<1>
      firrtl.strictconnect %44, %s2_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %45, %s2_io_out_bits_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %46, %s2_io_out_bits_req_size : !firrtl.uint<3>
      firrtl.strictconnect %47, %s2_io_out_bits_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %48, %s2_io_out_bits_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %49, %s2_io_out_bits_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %50, %s2_io_out_bits_metas_0_tag : !firrtl.uint<17>
      firrtl.strictconnect %51, %s2_io_out_bits_metas_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %52, %s2_io_out_bits_metas_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %53, %s2_io_out_bits_metas_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %54, %s2_io_out_bits_metas_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %55, %s2_io_out_bits_metas_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %56, %s2_io_out_bits_metas_2_tag : !firrtl.uint<17>
      firrtl.strictconnect %57, %s2_io_out_bits_metas_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %58, %s2_io_out_bits_metas_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %59, %s2_io_out_bits_metas_3_tag : !firrtl.uint<17>
      firrtl.strictconnect %60, %s2_io_out_bits_metas_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %61, %s2_io_out_bits_metas_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %62, %s2_io_out_bits_datas_0_data : !firrtl.uint<64>
      firrtl.strictconnect %63, %s2_io_out_bits_datas_1_data : !firrtl.uint<64>
      firrtl.strictconnect %64, %s2_io_out_bits_datas_2_data : !firrtl.uint<64>
      firrtl.strictconnect %65, %s2_io_out_bits_datas_3_data : !firrtl.uint<64>
      firrtl.strictconnect %66, %s2_io_out_bits_hit : !firrtl.uint<1>
      firrtl.strictconnect %67, %s2_io_out_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %68, %s2_io_out_bits_mmio : !firrtl.uint<1>
      firrtl.strictconnect %69, %s2_io_out_bits_isForwardData : !firrtl.uint<1>
      firrtl.strictconnect %70, %s2_io_out_bits_forwardData_data_data : !firrtl.uint<64>
      firrtl.strictconnect %71, %s2_io_out_bits_forwardData_waymask : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_metaReadResp_0_tag, %72 : !firrtl.uint<17>
      firrtl.strictconnect %s2_io_metaReadResp_0_valid, %73 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_0_dirty, %74 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_1_tag, %75 : !firrtl.uint<17>
      firrtl.strictconnect %s2_io_metaReadResp_1_valid, %76 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_1_dirty, %77 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_2_tag, %78 : !firrtl.uint<17>
      firrtl.strictconnect %s2_io_metaReadResp_2_valid, %79 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_2_dirty, %80 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_3_tag, %81 : !firrtl.uint<17>
      firrtl.strictconnect %s2_io_metaReadResp_3_valid, %82 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaReadResp_3_dirty, %83 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_dataReadResp_0_data, %84 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_1_data, %85 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_2_data, %86 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataReadResp_3_data, %87 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_metaWriteBus_req_valid, %88 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_setIdx, %89 : !firrtl.uint<9>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_data_tag, %90 : !firrtl.uint<17>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_data_dirty, %91 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_metaWriteBus_req_bits_waymask, %92 : !firrtl.uint<4>
      firrtl.strictconnect %s2_io_dataWriteBus_req_valid, %93 : !firrtl.uint<1>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_setIdx, %94 : !firrtl.uint<12>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_data_data, %95 : !firrtl.uint<64>
      firrtl.strictconnect %s2_io_dataWriteBus_req_bits_waymask, %96 : !firrtl.uint<4>
      firrtl.strictconnect %s2_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s2_reset, %reset : !firrtl.uint<1>
      %s3_clock, %s3_reset, %s3_io_in_ready, %s3_io_in_valid, %s3_io_in_bits_req_addr, %s3_io_in_bits_req_cmd, %s3_io_in_bits_req_wmask, %s3_io_in_bits_req_wdata, %s3_io_in_bits_metas_0_tag, %s3_io_in_bits_metas_0_valid, %s3_io_in_bits_metas_0_dirty, %s3_io_in_bits_metas_1_tag, %s3_io_in_bits_metas_1_valid, %s3_io_in_bits_metas_1_dirty, %s3_io_in_bits_metas_2_tag, %s3_io_in_bits_metas_2_valid, %s3_io_in_bits_metas_2_dirty, %s3_io_in_bits_metas_3_tag, %s3_io_in_bits_metas_3_valid, %s3_io_in_bits_metas_3_dirty, %s3_io_in_bits_datas_0_data, %s3_io_in_bits_datas_1_data, %s3_io_in_bits_datas_2_data, %s3_io_in_bits_datas_3_data, %s3_io_in_bits_hit, %s3_io_in_bits_waymask, %s3_io_in_bits_mmio, %s3_io_in_bits_isForwardData, %s3_io_in_bits_forwardData_data_data, %s3_io_in_bits_forwardData_waymask, %s3_io_out_valid, %s3_io_out_bits_cmd, %s3_io_out_bits_rdata, %s3_io_isFinish, %s3_io_dataReadBus_req_ready, %s3_io_dataReadBus_req_valid, %s3_io_dataReadBus_req_bits_setIdx, %s3_io_dataReadBus_resp_data_0_data, %s3_io_dataReadBus_resp_data_1_data, %s3_io_dataReadBus_resp_data_2_data, %s3_io_dataReadBus_resp_data_3_data, %s3_io_dataWriteBus_req_valid, %s3_io_dataWriteBus_req_bits_setIdx, %s3_io_dataWriteBus_req_bits_data_data, %s3_io_dataWriteBus_req_bits_waymask, %s3_io_metaWriteBus_req_valid, %s3_io_metaWriteBus_req_bits_setIdx, %s3_io_metaWriteBus_req_bits_data_tag, %s3_io_metaWriteBus_req_bits_data_dirty, %s3_io_metaWriteBus_req_bits_waymask, %s3_io_mem_req_ready, %s3_io_mem_req_valid, %s3_io_mem_req_bits_addr, %s3_io_mem_req_bits_cmd, %s3_io_mem_req_bits_wdata, %s3_io_mem_resp_valid, %s3_io_mem_resp_bits_cmd, %s3_io_mem_resp_bits_rdata, %s3_io_dataReadRespToL1 = firrtl.instance s3 @CacheStage3_2(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_req_addr: !firrtl.uint<32>, in io_in_bits_req_cmd: !firrtl.uint<4>, in io_in_bits_req_wmask: !firrtl.uint<8>, in io_in_bits_req_wdata: !firrtl.uint<64>, in io_in_bits_metas_0_tag: !firrtl.uint<17>, in io_in_bits_metas_0_valid: !firrtl.uint<1>, in io_in_bits_metas_0_dirty: !firrtl.uint<1>, in io_in_bits_metas_1_tag: !firrtl.uint<17>, in io_in_bits_metas_1_valid: !firrtl.uint<1>, in io_in_bits_metas_1_dirty: !firrtl.uint<1>, in io_in_bits_metas_2_tag: !firrtl.uint<17>, in io_in_bits_metas_2_valid: !firrtl.uint<1>, in io_in_bits_metas_2_dirty: !firrtl.uint<1>, in io_in_bits_metas_3_tag: !firrtl.uint<17>, in io_in_bits_metas_3_valid: !firrtl.uint<1>, in io_in_bits_metas_3_dirty: !firrtl.uint<1>, in io_in_bits_datas_0_data: !firrtl.uint<64>, in io_in_bits_datas_1_data: !firrtl.uint<64>, in io_in_bits_datas_2_data: !firrtl.uint<64>, in io_in_bits_datas_3_data: !firrtl.uint<64>, in io_in_bits_hit: !firrtl.uint<1>, in io_in_bits_waymask: !firrtl.uint<4>, in io_in_bits_mmio: !firrtl.uint<1>, in io_in_bits_isForwardData: !firrtl.uint<1>, in io_in_bits_forwardData_data_data: !firrtl.uint<64>, in io_in_bits_forwardData_waymask: !firrtl.uint<4>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_rdata: !firrtl.uint<64>, out io_isFinish: !firrtl.uint<1>, in io_dataReadBus_req_ready: !firrtl.uint<1>, out io_dataReadBus_req_valid: !firrtl.uint<1>, out io_dataReadBus_req_bits_setIdx: !firrtl.uint<12>, in io_dataReadBus_resp_data_0_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_1_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_2_data: !firrtl.uint<64>, in io_dataReadBus_resp_data_3_data: !firrtl.uint<64>, out io_dataWriteBus_req_valid: !firrtl.uint<1>, out io_dataWriteBus_req_bits_setIdx: !firrtl.uint<12>, out io_dataWriteBus_req_bits_data_data: !firrtl.uint<64>, out io_dataWriteBus_req_bits_waymask: !firrtl.uint<4>, out io_metaWriteBus_req_valid: !firrtl.uint<1>, out io_metaWriteBus_req_bits_setIdx: !firrtl.uint<9>, out io_metaWriteBus_req_bits_data_tag: !firrtl.uint<17>, out io_metaWriteBus_req_bits_data_dirty: !firrtl.uint<1>, out io_metaWriteBus_req_bits_waymask: !firrtl.uint<4>, in io_mem_req_ready: !firrtl.uint<1>, out io_mem_req_valid: !firrtl.uint<1>, out io_mem_req_bits_addr: !firrtl.uint<32>, out io_mem_req_bits_cmd: !firrtl.uint<4>, out io_mem_req_bits_wdata: !firrtl.uint<64>, in io_mem_resp_valid: !firrtl.uint<1>, in io_mem_resp_bits_cmd: !firrtl.uint<4>, in io_mem_resp_bits_rdata: !firrtl.uint<64>, out io_dataReadRespToL1: !firrtl.uint<1>)
      %97 = firrtl.wire : !firrtl.uint<1>
      %98 = firrtl.wire : !firrtl.uint<1>
      %99 = firrtl.wire : !firrtl.uint<32>
      %100 = firrtl.wire : !firrtl.uint<3>
      %101 = firrtl.wire : !firrtl.uint<4>
      %102 = firrtl.wire : !firrtl.uint<8>
      %103 = firrtl.wire : !firrtl.uint<64>
      %104 = firrtl.wire : !firrtl.uint<17>
      %105 = firrtl.wire : !firrtl.uint<1>
      %106 = firrtl.wire : !firrtl.uint<1>
      %107 = firrtl.wire : !firrtl.uint<17>
      %108 = firrtl.wire : !firrtl.uint<1>
      %109 = firrtl.wire : !firrtl.uint<1>
      %110 = firrtl.wire : !firrtl.uint<17>
      %111 = firrtl.wire : !firrtl.uint<1>
      %112 = firrtl.wire : !firrtl.uint<1>
      %113 = firrtl.wire : !firrtl.uint<17>
      %114 = firrtl.wire : !firrtl.uint<1>
      %115 = firrtl.wire : !firrtl.uint<1>
      %116 = firrtl.wire : !firrtl.uint<64>
      %117 = firrtl.wire : !firrtl.uint<64>
      %118 = firrtl.wire : !firrtl.uint<64>
      %119 = firrtl.wire : !firrtl.uint<64>
      %120 = firrtl.wire : !firrtl.uint<1>
      %121 = firrtl.wire : !firrtl.uint<4>
      %122 = firrtl.wire : !firrtl.uint<1>
      %123 = firrtl.wire : !firrtl.uint<1>
      %124 = firrtl.wire : !firrtl.uint<64>
      %125 = firrtl.wire : !firrtl.uint<4>
      %126 = firrtl.wire : !firrtl.uint<1>
      %127 = firrtl.wire : !firrtl.uint<4>
      %128 = firrtl.wire : !firrtl.uint<64>
      %129 = firrtl.wire : !firrtl.uint<1>
      %130 = firrtl.wire : !firrtl.uint<1>
      %131 = firrtl.wire : !firrtl.uint<1>
      %132 = firrtl.wire : !firrtl.uint<12>
      %133 = firrtl.wire : !firrtl.uint<64>
      %134 = firrtl.wire : !firrtl.uint<64>
      %135 = firrtl.wire : !firrtl.uint<64>
      %136 = firrtl.wire : !firrtl.uint<64>
      %137 = firrtl.wire : !firrtl.uint<1>
      %138 = firrtl.wire : !firrtl.uint<12>
      %139 = firrtl.wire : !firrtl.uint<64>
      %140 = firrtl.wire : !firrtl.uint<4>
      %141 = firrtl.wire : !firrtl.uint<1>
      %142 = firrtl.wire : !firrtl.uint<9>
      %143 = firrtl.wire : !firrtl.uint<17>
      %144 = firrtl.wire : !firrtl.uint<1>
      %145 = firrtl.wire : !firrtl.uint<4>
      %146 = firrtl.wire : !firrtl.uint<1>
      %147 = firrtl.wire : !firrtl.uint<32>
      %148 = firrtl.wire : !firrtl.uint<4>
      %149 = firrtl.wire : !firrtl.uint<64>
      %150 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %97, %s3_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_valid, %98 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_req_addr, %99 : !firrtl.uint<32>
      firrtl.strictconnect %s3_io_in_bits_req_cmd, %101 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_req_wmask, %102 : !firrtl.uint<8>
      firrtl.strictconnect %s3_io_in_bits_req_wdata, %103 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_metas_0_tag, %104 : !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_metas_0_valid, %105 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_0_dirty, %106 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_1_tag, %107 : !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_metas_1_valid, %108 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_1_dirty, %109 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_2_tag, %110 : !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_metas_2_valid, %111 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_2_dirty, %112 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_3_tag, %113 : !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_metas_3_valid, %114 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_metas_3_dirty, %115 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_datas_0_data, %116 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_1_data, %117 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_2_data, %118 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_datas_3_data, %119 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_hit, %120 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_waymask, %121 : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_mmio, %122 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_isForwardData, %123 : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_forwardData_data_data, %124 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_forwardData_waymask, %125 : !firrtl.uint<4>
      firrtl.strictconnect %126, %s3_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %127, %s3_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %128, %s3_io_out_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %129, %s3_io_isFinish : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_dataReadBus_req_ready, %130 : !firrtl.uint<1>
      firrtl.strictconnect %131, %s3_io_dataReadBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %132, %s3_io_dataReadBus_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_0_data, %133 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_1_data, %134 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_2_data, %135 : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_dataReadBus_resp_data_3_data, %136 : !firrtl.uint<64>
      firrtl.strictconnect %137, %s3_io_dataWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %138, %s3_io_dataWriteBus_req_bits_setIdx : !firrtl.uint<12>
      firrtl.strictconnect %139, %s3_io_dataWriteBus_req_bits_data_data : !firrtl.uint<64>
      firrtl.strictconnect %140, %s3_io_dataWriteBus_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %141, %s3_io_metaWriteBus_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %142, %s3_io_metaWriteBus_req_bits_setIdx : !firrtl.uint<9>
      firrtl.strictconnect %143, %s3_io_metaWriteBus_req_bits_data_tag : !firrtl.uint<17>
      firrtl.strictconnect %144, %s3_io_metaWriteBus_req_bits_data_dirty : !firrtl.uint<1>
      firrtl.strictconnect %145, %s3_io_metaWriteBus_req_bits_waymask : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_mem_req_ready, %io_out_mem_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %146, %s3_io_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %147, %s3_io_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %148, %s3_io_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %149, %s3_io_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %s3_io_mem_resp_valid, %io_out_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %s3_io_mem_resp_bits_cmd, %io_out_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %s3_io_mem_resp_bits_rdata, %io_out_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %150, %s3_io_dataReadRespToL1 : !firrtl.uint<1>
      firrtl.strictconnect %s3_clock, %clock : !firrtl.clock
      firrtl.strictconnect %s3_reset, %reset : !firrtl.uint<1>
      %metaArray_clock, %metaArray_reset, %metaArray_io_r_0_req_ready, %metaArray_io_r_0_req_valid, %metaArray_io_r_0_req_bits_setIdx, %metaArray_io_r_0_resp_data_0_tag, %metaArray_io_r_0_resp_data_0_valid, %metaArray_io_r_0_resp_data_0_dirty, %metaArray_io_r_0_resp_data_1_tag, %metaArray_io_r_0_resp_data_1_valid, %metaArray_io_r_0_resp_data_1_dirty, %metaArray_io_r_0_resp_data_2_tag, %metaArray_io_r_0_resp_data_2_valid, %metaArray_io_r_0_resp_data_2_dirty, %metaArray_io_r_0_resp_data_3_tag, %metaArray_io_r_0_resp_data_3_valid, %metaArray_io_r_0_resp_data_3_dirty, %metaArray_io_w_req_valid, %metaArray_io_w_req_bits_setIdx, %metaArray_io_w_req_bits_data_tag, %metaArray_io_w_req_bits_data_dirty, %metaArray_io_w_req_bits_waymask = firrtl.instance metaArray @SRAMTemplateWithArbiter_4(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_0_req_ready: !firrtl.uint<1>, in io_r_0_req_valid: !firrtl.uint<1>, in io_r_0_req_bits_setIdx: !firrtl.uint<9>, out io_r_0_resp_data_0_tag: !firrtl.uint<17>, out io_r_0_resp_data_0_valid: !firrtl.uint<1>, out io_r_0_resp_data_0_dirty: !firrtl.uint<1>, out io_r_0_resp_data_1_tag: !firrtl.uint<17>, out io_r_0_resp_data_1_valid: !firrtl.uint<1>, out io_r_0_resp_data_1_dirty: !firrtl.uint<1>, out io_r_0_resp_data_2_tag: !firrtl.uint<17>, out io_r_0_resp_data_2_valid: !firrtl.uint<1>, out io_r_0_resp_data_2_dirty: !firrtl.uint<1>, out io_r_0_resp_data_3_tag: !firrtl.uint<17>, out io_r_0_resp_data_3_valid: !firrtl.uint<1>, out io_r_0_resp_data_3_dirty: !firrtl.uint<1>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<9>, in io_w_req_bits_data_tag: !firrtl.uint<17>, in io_w_req_bits_data_dirty: !firrtl.uint<1>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %151 = firrtl.wire : !firrtl.uint<1>
      %152 = firrtl.wire : !firrtl.uint<1>
      %153 = firrtl.wire : !firrtl.uint<9>
      %154 = firrtl.wire : !firrtl.uint<17>
      %155 = firrtl.wire : !firrtl.uint<1>
      %156 = firrtl.wire : !firrtl.uint<1>
      %157 = firrtl.wire : !firrtl.uint<17>
      %158 = firrtl.wire : !firrtl.uint<1>
      %159 = firrtl.wire : !firrtl.uint<1>
      %160 = firrtl.wire : !firrtl.uint<17>
      %161 = firrtl.wire : !firrtl.uint<1>
      %162 = firrtl.wire : !firrtl.uint<1>
      %163 = firrtl.wire : !firrtl.uint<17>
      %164 = firrtl.wire : !firrtl.uint<1>
      %165 = firrtl.wire : !firrtl.uint<1>
      %166 = firrtl.wire : !firrtl.uint<1>
      %167 = firrtl.wire : !firrtl.uint<9>
      %168 = firrtl.wire : !firrtl.uint<17>
      %169 = firrtl.wire : !firrtl.uint<1>
      %170 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %151, %metaArray_io_r_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_r_0_req_valid, %152 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_r_0_req_bits_setIdx, %153 : !firrtl.uint<9>
      firrtl.strictconnect %154, %metaArray_io_r_0_resp_data_0_tag : !firrtl.uint<17>
      firrtl.strictconnect %155, %metaArray_io_r_0_resp_data_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %156, %metaArray_io_r_0_resp_data_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %157, %metaArray_io_r_0_resp_data_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %158, %metaArray_io_r_0_resp_data_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %159, %metaArray_io_r_0_resp_data_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %160, %metaArray_io_r_0_resp_data_2_tag : !firrtl.uint<17>
      firrtl.strictconnect %161, %metaArray_io_r_0_resp_data_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %162, %metaArray_io_r_0_resp_data_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %163, %metaArray_io_r_0_resp_data_3_tag : !firrtl.uint<17>
      firrtl.strictconnect %164, %metaArray_io_r_0_resp_data_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %165, %metaArray_io_r_0_resp_data_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_valid, %166 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_bits_setIdx, %167 : !firrtl.uint<9>
      firrtl.strictconnect %metaArray_io_w_req_bits_data_tag, %168 : !firrtl.uint<17>
      firrtl.strictconnect %metaArray_io_w_req_bits_data_dirty, %169 : !firrtl.uint<1>
      firrtl.strictconnect %metaArray_io_w_req_bits_waymask, %170 : !firrtl.uint<4>
      firrtl.strictconnect %metaArray_clock, %clock : !firrtl.clock
      firrtl.strictconnect %metaArray_reset, %reset : !firrtl.uint<1>
      %dataArray_clock, %dataArray_reset, %dataArray_io_r_0_req_ready, %dataArray_io_r_0_req_valid, %dataArray_io_r_0_req_bits_setIdx, %dataArray_io_r_0_resp_data_0_data, %dataArray_io_r_0_resp_data_1_data, %dataArray_io_r_0_resp_data_2_data, %dataArray_io_r_0_resp_data_3_data, %dataArray_io_r_1_req_ready, %dataArray_io_r_1_req_valid, %dataArray_io_r_1_req_bits_setIdx, %dataArray_io_r_1_resp_data_0_data, %dataArray_io_r_1_resp_data_1_data, %dataArray_io_r_1_resp_data_2_data, %dataArray_io_r_1_resp_data_3_data, %dataArray_io_w_req_valid, %dataArray_io_w_req_bits_setIdx, %dataArray_io_w_req_bits_data_data, %dataArray_io_w_req_bits_waymask = firrtl.instance dataArray @SRAMTemplateWithArbiter_5(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_r_0_req_ready: !firrtl.uint<1>, in io_r_0_req_valid: !firrtl.uint<1>, in io_r_0_req_bits_setIdx: !firrtl.uint<12>, out io_r_0_resp_data_0_data: !firrtl.uint<64>, out io_r_0_resp_data_1_data: !firrtl.uint<64>, out io_r_0_resp_data_2_data: !firrtl.uint<64>, out io_r_0_resp_data_3_data: !firrtl.uint<64>, out io_r_1_req_ready: !firrtl.uint<1>, in io_r_1_req_valid: !firrtl.uint<1>, in io_r_1_req_bits_setIdx: !firrtl.uint<12>, out io_r_1_resp_data_0_data: !firrtl.uint<64>, out io_r_1_resp_data_1_data: !firrtl.uint<64>, out io_r_1_resp_data_2_data: !firrtl.uint<64>, out io_r_1_resp_data_3_data: !firrtl.uint<64>, in io_w_req_valid: !firrtl.uint<1>, in io_w_req_bits_setIdx: !firrtl.uint<12>, in io_w_req_bits_data_data: !firrtl.uint<64>, in io_w_req_bits_waymask: !firrtl.uint<4>)
      %171 = firrtl.wire : !firrtl.uint<1>
      %172 = firrtl.wire : !firrtl.uint<1>
      %173 = firrtl.wire : !firrtl.uint<12>
      %174 = firrtl.wire : !firrtl.uint<64>
      %175 = firrtl.wire : !firrtl.uint<64>
      %176 = firrtl.wire : !firrtl.uint<64>
      %177 = firrtl.wire : !firrtl.uint<64>
      %178 = firrtl.wire : !firrtl.uint<1>
      %179 = firrtl.wire : !firrtl.uint<1>
      %180 = firrtl.wire : !firrtl.uint<12>
      %181 = firrtl.wire : !firrtl.uint<64>
      %182 = firrtl.wire : !firrtl.uint<64>
      %183 = firrtl.wire : !firrtl.uint<64>
      %184 = firrtl.wire : !firrtl.uint<64>
      %185 = firrtl.wire : !firrtl.uint<1>
      %186 = firrtl.wire : !firrtl.uint<12>
      %187 = firrtl.wire : !firrtl.uint<64>
      %188 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %171, %dataArray_io_r_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_0_req_valid, %172 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_0_req_bits_setIdx, %173 : !firrtl.uint<12>
      firrtl.strictconnect %174, %dataArray_io_r_0_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %175, %dataArray_io_r_0_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %176, %dataArray_io_r_0_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %177, %dataArray_io_r_0_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %178, %dataArray_io_r_1_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_1_req_valid, %179 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_r_1_req_bits_setIdx, %180 : !firrtl.uint<12>
      firrtl.strictconnect %181, %dataArray_io_r_1_resp_data_0_data : !firrtl.uint<64>
      firrtl.strictconnect %182, %dataArray_io_r_1_resp_data_1_data : !firrtl.uint<64>
      firrtl.strictconnect %183, %dataArray_io_r_1_resp_data_2_data : !firrtl.uint<64>
      firrtl.strictconnect %184, %dataArray_io_r_1_resp_data_3_data : !firrtl.uint<64>
      firrtl.strictconnect %dataArray_io_w_req_valid, %185 : !firrtl.uint<1>
      firrtl.strictconnect %dataArray_io_w_req_bits_setIdx, %186 : !firrtl.uint<12>
      firrtl.strictconnect %dataArray_io_w_req_bits_data_data, %187 : !firrtl.uint<64>
      firrtl.strictconnect %dataArray_io_w_req_bits_waymask, %188 : !firrtl.uint<4>
      firrtl.strictconnect %dataArray_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dataArray_reset, %reset : !firrtl.uint<1>
      %arb_io_in_0_ready, %arb_io_in_0_valid, %arb_io_in_0_bits_addr, %arb_io_in_0_bits_size, %arb_io_in_0_bits_cmd, %arb_io_in_0_bits_wmask, %arb_io_in_0_bits_wdata, %arb_io_in_1_ready, %arb_io_in_1_valid, %arb_io_in_1_bits_addr, %arb_io_in_1_bits_size, %arb_io_in_1_bits_cmd, %arb_io_in_1_bits_wmask, %arb_io_in_1_bits_wdata, %arb_io_out_ready, %arb_io_out_valid, %arb_io_out_bits_addr, %arb_io_out_bits_size, %arb_io_out_bits_cmd, %arb_io_out_bits_wmask, %arb_io_out_bits_wdata = firrtl.instance arb @Arbiter2_SimpleBusReqBundle(out io_in_0_ready: !firrtl.uint<1>, in io_in_0_valid: !firrtl.uint<1>, in io_in_0_bits_addr: !firrtl.uint<32>, in io_in_0_bits_size: !firrtl.uint<3>, in io_in_0_bits_cmd: !firrtl.uint<4>, in io_in_0_bits_wmask: !firrtl.uint<8>, in io_in_0_bits_wdata: !firrtl.uint<64>, out io_in_1_ready: !firrtl.uint<1>, in io_in_1_valid: !firrtl.uint<1>, in io_in_1_bits_addr: !firrtl.uint<32>, in io_in_1_bits_size: !firrtl.uint<3>, in io_in_1_bits_cmd: !firrtl.uint<4>, in io_in_1_bits_wmask: !firrtl.uint<8>, in io_in_1_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_size: !firrtl.uint<3>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_wmask: !firrtl.uint<8>, out io_out_bits_wdata: !firrtl.uint<64>)
      %189 = firrtl.wire : !firrtl.uint<1>
      %190 = firrtl.wire : !firrtl.uint<1>
      %191 = firrtl.wire : !firrtl.uint<1>
      %192 = firrtl.wire : !firrtl.uint<32>
      %193 = firrtl.wire : !firrtl.uint<3>
      %194 = firrtl.wire : !firrtl.uint<4>
      %195 = firrtl.wire : !firrtl.uint<8>
      %196 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %arb_io_in_0_valid, %c0_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_0_bits_addr, %c0_ui32 : !firrtl.uint<32>
      firrtl.strictconnect %arb_io_in_0_bits_size, %c0_ui3 : !firrtl.uint<3>
      firrtl.strictconnect %arb_io_in_0_bits_cmd, %c0_ui4 : !firrtl.uint<4>
      firrtl.strictconnect %arb_io_in_0_bits_wmask, %c0_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %arb_io_in_0_bits_wdata, %c0_ui64 : !firrtl.uint<64>
      firrtl.strictconnect %189, %arb_io_in_1_ready : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_1_valid, %io_in_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %arb_io_in_1_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %arb_io_in_1_bits_size, %io_in_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %arb_io_in_1_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %arb_io_in_1_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %arb_io_in_1_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %arb_io_out_ready, %190 : !firrtl.uint<1>
      firrtl.strictconnect %191, %arb_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %192, %arb_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %193, %arb_io_out_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %194, %arb_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %195, %arb_io_out_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %196, %arb_io_out_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_in_req_ready_0, %189 : !firrtl.uint<1>
      firrtl.strictconnect %190, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %191 : !firrtl.uint<1>
      firrtl.strictconnect %2, %192 : !firrtl.uint<32>
      firrtl.strictconnect %3, %193 : !firrtl.uint<3>
      firrtl.strictconnect %4, %194 : !firrtl.uint<4>
      firrtl.strictconnect %5, %195 : !firrtl.uint<8>
      firrtl.strictconnect %6, %196 : !firrtl.uint<64>
      %197 = firrtl.and %43, %44 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %valid = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %198 = firrtl.mux(%197, %c0_ui1, %valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_s2_io_in_bits_T = firrtl.and %8, %36 {name = "_s2_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %199 = firrtl.mux(%_s2_io_in_bits_T, %c1_ui1, %198) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid, %199 : !firrtl.uint<1>
      firrtl.strictconnect %7, %36 : !firrtl.uint<1>
      %s2_io_in_bits_r_req_addr = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %s2_io_in_bits_r_req_size = firrtl.reg %clock {firrtl.random_init_start = 33 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %s2_io_in_bits_r_req_cmd = firrtl.reg %clock {firrtl.random_init_start = 36 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s2_io_in_bits_r_req_wmask = firrtl.reg %clock {firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %s2_io_in_bits_r_req_wdata = firrtl.reg %clock {firrtl.random_init_start = 48 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %200 = firrtl.mux(%_s2_io_in_bits_T, %9, %s2_io_in_bits_r_req_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %s2_io_in_bits_r_req_addr, %200 : !firrtl.uint<32>
      %201 = firrtl.mux(%_s2_io_in_bits_T, %10, %s2_io_in_bits_r_req_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %s2_io_in_bits_r_req_size, %201 : !firrtl.uint<3>
      %202 = firrtl.mux(%_s2_io_in_bits_T, %11, %s2_io_in_bits_r_req_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s2_io_in_bits_r_req_cmd, %202 : !firrtl.uint<4>
      %203 = firrtl.mux(%_s2_io_in_bits_T, %12, %s2_io_in_bits_r_req_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %s2_io_in_bits_r_req_wmask, %203 : !firrtl.uint<8>
      %204 = firrtl.mux(%_s2_io_in_bits_T, %13, %s2_io_in_bits_r_req_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s2_io_in_bits_r_req_wdata, %204 : !firrtl.uint<64>
      firrtl.strictconnect %42, %s2_io_in_bits_r_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %41, %s2_io_in_bits_r_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %40, %s2_io_in_bits_r_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %39, %s2_io_in_bits_r_req_size : !firrtl.uint<3>
      firrtl.strictconnect %38, %s2_io_in_bits_r_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %37, %valid : !firrtl.uint<1>
      %valid_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 112 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %205 = firrtl.mux(%129, %c0_ui1, %valid_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_s3_io_in_bits_T = firrtl.and %44, %97 {name = "_s3_io_in_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %206 = firrtl.mux(%_s3_io_in_bits_T, %c1_ui1, %205) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %valid_1, %206 : !firrtl.uint<1>
      firrtl.strictconnect %43, %97 : !firrtl.uint<1>
      %s3_io_in_bits_r_req_addr = firrtl.reg %clock {firrtl.random_init_start = 113 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %s3_io_in_bits_r_req_size = firrtl.reg %clock {firrtl.random_init_start = 145 : ui64} : !firrtl.clock, !firrtl.uint<3>
      %s3_io_in_bits_r_req_cmd = firrtl.reg %clock {firrtl.random_init_start = 148 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s3_io_in_bits_r_req_wmask = firrtl.reg %clock {firrtl.random_init_start = 152 : ui64} : !firrtl.clock, !firrtl.uint<8>
      %s3_io_in_bits_r_req_wdata = firrtl.reg %clock {firrtl.random_init_start = 160 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_metas_0_tag = firrtl.reg %clock {firrtl.random_init_start = 224 : ui64} : !firrtl.clock, !firrtl.uint<17>
      %s3_io_in_bits_r_metas_0_valid = firrtl.reg %clock {firrtl.random_init_start = 241 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_0_dirty = firrtl.reg %clock {firrtl.random_init_start = 242 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_1_tag = firrtl.reg %clock {firrtl.random_init_start = 243 : ui64} : !firrtl.clock, !firrtl.uint<17>
      %s3_io_in_bits_r_metas_1_valid = firrtl.reg %clock {firrtl.random_init_start = 260 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_1_dirty = firrtl.reg %clock {firrtl.random_init_start = 261 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_2_tag = firrtl.reg %clock {firrtl.random_init_start = 262 : ui64} : !firrtl.clock, !firrtl.uint<17>
      %s3_io_in_bits_r_metas_2_valid = firrtl.reg %clock {firrtl.random_init_start = 279 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_2_dirty = firrtl.reg %clock {firrtl.random_init_start = 280 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_3_tag = firrtl.reg %clock {firrtl.random_init_start = 281 : ui64} : !firrtl.clock, !firrtl.uint<17>
      %s3_io_in_bits_r_metas_3_valid = firrtl.reg %clock {firrtl.random_init_start = 298 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_metas_3_dirty = firrtl.reg %clock {firrtl.random_init_start = 299 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_datas_0_data = firrtl.reg %clock {firrtl.random_init_start = 300 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_1_data = firrtl.reg %clock {firrtl.random_init_start = 364 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_2_data = firrtl.reg %clock {firrtl.random_init_start = 428 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_datas_3_data = firrtl.reg %clock {firrtl.random_init_start = 492 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_hit = firrtl.reg %clock {firrtl.random_init_start = 556 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_waymask = firrtl.reg %clock {firrtl.random_init_start = 557 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %s3_io_in_bits_r_mmio = firrtl.reg %clock {firrtl.random_init_start = 561 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_isForwardData = firrtl.reg %clock {firrtl.random_init_start = 562 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %s3_io_in_bits_r_forwardData_data_data = firrtl.reg %clock {firrtl.random_init_start = 575 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %s3_io_in_bits_r_forwardData_waymask = firrtl.reg %clock {firrtl.random_init_start = 639 : ui64} : !firrtl.clock, !firrtl.uint<4>
      %207 = firrtl.mux(%_s3_io_in_bits_T, %45, %s3_io_in_bits_r_req_addr) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %s3_io_in_bits_r_req_addr, %207 : !firrtl.uint<32>
      %208 = firrtl.mux(%_s3_io_in_bits_T, %46, %s3_io_in_bits_r_req_size) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %s3_io_in_bits_r_req_size, %208 : !firrtl.uint<3>
      %209 = firrtl.mux(%_s3_io_in_bits_T, %47, %s3_io_in_bits_r_req_cmd) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_req_cmd, %209 : !firrtl.uint<4>
      %210 = firrtl.mux(%_s3_io_in_bits_T, %48, %s3_io_in_bits_r_req_wmask) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %s3_io_in_bits_r_req_wmask, %210 : !firrtl.uint<8>
      %211 = firrtl.mux(%_s3_io_in_bits_T, %49, %s3_io_in_bits_r_req_wdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_req_wdata, %211 : !firrtl.uint<64>
      %212 = firrtl.mux(%_s3_io_in_bits_T, %50, %s3_io_in_bits_r_metas_0_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_tag, %212 : !firrtl.uint<17>
      %213 = firrtl.mux(%_s3_io_in_bits_T, %51, %s3_io_in_bits_r_metas_0_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_valid, %213 : !firrtl.uint<1>
      %214 = firrtl.mux(%_s3_io_in_bits_T, %52, %s3_io_in_bits_r_metas_0_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_0_dirty, %214 : !firrtl.uint<1>
      %215 = firrtl.mux(%_s3_io_in_bits_T, %53, %s3_io_in_bits_r_metas_1_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_tag, %215 : !firrtl.uint<17>
      %216 = firrtl.mux(%_s3_io_in_bits_T, %54, %s3_io_in_bits_r_metas_1_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_valid, %216 : !firrtl.uint<1>
      %217 = firrtl.mux(%_s3_io_in_bits_T, %55, %s3_io_in_bits_r_metas_1_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_1_dirty, %217 : !firrtl.uint<1>
      %218 = firrtl.mux(%_s3_io_in_bits_T, %56, %s3_io_in_bits_r_metas_2_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_tag, %218 : !firrtl.uint<17>
      %219 = firrtl.mux(%_s3_io_in_bits_T, %57, %s3_io_in_bits_r_metas_2_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_valid, %219 : !firrtl.uint<1>
      %220 = firrtl.mux(%_s3_io_in_bits_T, %58, %s3_io_in_bits_r_metas_2_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_2_dirty, %220 : !firrtl.uint<1>
      %221 = firrtl.mux(%_s3_io_in_bits_T, %59, %s3_io_in_bits_r_metas_3_tag) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_tag, %221 : !firrtl.uint<17>
      %222 = firrtl.mux(%_s3_io_in_bits_T, %60, %s3_io_in_bits_r_metas_3_valid) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_valid, %222 : !firrtl.uint<1>
      %223 = firrtl.mux(%_s3_io_in_bits_T, %61, %s3_io_in_bits_r_metas_3_dirty) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_metas_3_dirty, %223 : !firrtl.uint<1>
      %224 = firrtl.mux(%_s3_io_in_bits_T, %62, %s3_io_in_bits_r_datas_0_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_0_data, %224 : !firrtl.uint<64>
      %225 = firrtl.mux(%_s3_io_in_bits_T, %63, %s3_io_in_bits_r_datas_1_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_1_data, %225 : !firrtl.uint<64>
      %226 = firrtl.mux(%_s3_io_in_bits_T, %64, %s3_io_in_bits_r_datas_2_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_2_data, %226 : !firrtl.uint<64>
      %227 = firrtl.mux(%_s3_io_in_bits_T, %65, %s3_io_in_bits_r_datas_3_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_datas_3_data, %227 : !firrtl.uint<64>
      %228 = firrtl.mux(%_s3_io_in_bits_T, %66, %s3_io_in_bits_r_hit) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_hit, %228 : !firrtl.uint<1>
      %229 = firrtl.mux(%_s3_io_in_bits_T, %67, %s3_io_in_bits_r_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_waymask, %229 : !firrtl.uint<4>
      %230 = firrtl.mux(%_s3_io_in_bits_T, %68, %s3_io_in_bits_r_mmio) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_mmio, %230 : !firrtl.uint<1>
      %231 = firrtl.mux(%_s3_io_in_bits_T, %69, %s3_io_in_bits_r_isForwardData) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %s3_io_in_bits_r_isForwardData, %231 : !firrtl.uint<1>
      %232 = firrtl.mux(%_s3_io_in_bits_T, %70, %s3_io_in_bits_r_forwardData_data_data) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %s3_io_in_bits_r_forwardData_data_data, %232 : !firrtl.uint<64>
      %233 = firrtl.mux(%_s3_io_in_bits_T, %71, %s3_io_in_bits_r_forwardData_waymask) : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      firrtl.strictconnect %s3_io_in_bits_r_forwardData_waymask, %233 : !firrtl.uint<4>
      firrtl.strictconnect %125, %s3_io_in_bits_r_forwardData_waymask : !firrtl.uint<4>
      firrtl.strictconnect %124, %s3_io_in_bits_r_forwardData_data_data : !firrtl.uint<64>
      firrtl.strictconnect %123, %s3_io_in_bits_r_isForwardData : !firrtl.uint<1>
      firrtl.strictconnect %122, %s3_io_in_bits_r_mmio : !firrtl.uint<1>
      firrtl.strictconnect %121, %s3_io_in_bits_r_waymask : !firrtl.uint<4>
      firrtl.strictconnect %120, %s3_io_in_bits_r_hit : !firrtl.uint<1>
      firrtl.strictconnect %116, %s3_io_in_bits_r_datas_0_data : !firrtl.uint<64>
      firrtl.strictconnect %117, %s3_io_in_bits_r_datas_1_data : !firrtl.uint<64>
      firrtl.strictconnect %118, %s3_io_in_bits_r_datas_2_data : !firrtl.uint<64>
      firrtl.strictconnect %119, %s3_io_in_bits_r_datas_3_data : !firrtl.uint<64>
      firrtl.strictconnect %106, %s3_io_in_bits_r_metas_0_dirty : !firrtl.uint<1>
      firrtl.strictconnect %105, %s3_io_in_bits_r_metas_0_valid : !firrtl.uint<1>
      firrtl.strictconnect %104, %s3_io_in_bits_r_metas_0_tag : !firrtl.uint<17>
      firrtl.strictconnect %109, %s3_io_in_bits_r_metas_1_dirty : !firrtl.uint<1>
      firrtl.strictconnect %108, %s3_io_in_bits_r_metas_1_valid : !firrtl.uint<1>
      firrtl.strictconnect %107, %s3_io_in_bits_r_metas_1_tag : !firrtl.uint<17>
      firrtl.strictconnect %112, %s3_io_in_bits_r_metas_2_dirty : !firrtl.uint<1>
      firrtl.strictconnect %111, %s3_io_in_bits_r_metas_2_valid : !firrtl.uint<1>
      firrtl.strictconnect %110, %s3_io_in_bits_r_metas_2_tag : !firrtl.uint<17>
      firrtl.strictconnect %115, %s3_io_in_bits_r_metas_3_dirty : !firrtl.uint<1>
      firrtl.strictconnect %114, %s3_io_in_bits_r_metas_3_valid : !firrtl.uint<1>
      firrtl.strictconnect %113, %s3_io_in_bits_r_metas_3_tag : !firrtl.uint<17>
      firrtl.strictconnect %103, %s3_io_in_bits_r_req_wdata : !firrtl.uint<64>
      firrtl.strictconnect %102, %s3_io_in_bits_r_req_wmask : !firrtl.uint<8>
      firrtl.strictconnect %101, %s3_io_in_bits_r_req_cmd : !firrtl.uint<4>
      firrtl.strictconnect %100, %s3_io_in_bits_r_req_size : !firrtl.uint<3>
      firrtl.strictconnect %99, %s3_io_in_bits_r_req_addr : !firrtl.uint<32>
      firrtl.strictconnect %98, %valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd_2, %127 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata_3, %128 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_bits_addr_5, %147 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_mem_req_bits_cmd_6, %148 : !firrtl.uint<4>
      firrtl.strictconnect %io_out_mem_req_bits_wdata_7, %149 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_mem_req_valid_4, %146 : !firrtl.uint<1>
      %_io_in_resp_valid_T = firrtl.eq %127, %c4_ui3 {name = "_io_in_resp_valid_T"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_1 = firrtl.and %126, %_io_in_resp_valid_T {name = "_io_in_resp_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_2 = firrtl.or %126, %150 {name = "_io_in_resp_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_3 = firrtl.mux(%_io_in_resp_valid_T_1, %c0_ui1, %_io_in_resp_valid_T_2) {name = "_io_in_resp_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %_io_in_resp_valid_T_3 : !firrtl.uint<1>
      firrtl.strictconnect %14, %151 : !firrtl.uint<1>
      firrtl.strictconnect %152, %15 : !firrtl.uint<1>
      firrtl.strictconnect %153, %16 : !firrtl.uint<9>
      firrtl.strictconnect %17, %154 : !firrtl.uint<17>
      firrtl.strictconnect %18, %155 : !firrtl.uint<1>
      firrtl.strictconnect %19, %156 : !firrtl.uint<1>
      firrtl.strictconnect %20, %157 : !firrtl.uint<17>
      firrtl.strictconnect %21, %158 : !firrtl.uint<1>
      firrtl.strictconnect %22, %159 : !firrtl.uint<1>
      firrtl.strictconnect %23, %160 : !firrtl.uint<17>
      firrtl.strictconnect %24, %161 : !firrtl.uint<1>
      firrtl.strictconnect %25, %162 : !firrtl.uint<1>
      firrtl.strictconnect %26, %163 : !firrtl.uint<17>
      firrtl.strictconnect %27, %164 : !firrtl.uint<1>
      firrtl.strictconnect %28, %165 : !firrtl.uint<1>
      firrtl.strictconnect %29, %171 : !firrtl.uint<1>
      firrtl.strictconnect %172, %30 : !firrtl.uint<1>
      firrtl.strictconnect %173, %31 : !firrtl.uint<12>
      firrtl.strictconnect %32, %174 : !firrtl.uint<64>
      firrtl.strictconnect %33, %175 : !firrtl.uint<64>
      firrtl.strictconnect %34, %176 : !firrtl.uint<64>
      firrtl.strictconnect %35, %177 : !firrtl.uint<64>
      firrtl.strictconnect %130, %178 : !firrtl.uint<1>
      firrtl.strictconnect %179, %131 : !firrtl.uint<1>
      firrtl.strictconnect %180, %132 : !firrtl.uint<12>
      firrtl.strictconnect %133, %181 : !firrtl.uint<64>
      firrtl.strictconnect %134, %182 : !firrtl.uint<64>
      firrtl.strictconnect %135, %183 : !firrtl.uint<64>
      firrtl.strictconnect %136, %184 : !firrtl.uint<64>
      firrtl.strictconnect %166, %141 : !firrtl.uint<1>
      firrtl.strictconnect %167, %142 : !firrtl.uint<9>
      firrtl.strictconnect %168, %143 : !firrtl.uint<17>
      firrtl.strictconnect %169, %144 : !firrtl.uint<1>
      firrtl.strictconnect %170, %145 : !firrtl.uint<4>
      firrtl.strictconnect %185, %137 : !firrtl.uint<1>
      firrtl.strictconnect %186, %138 : !firrtl.uint<12>
      firrtl.strictconnect %187, %139 : !firrtl.uint<64>
      firrtl.strictconnect %188, %140 : !firrtl.uint<4>
      firrtl.strictconnect %74, %19 : !firrtl.uint<1>
      firrtl.strictconnect %73, %18 : !firrtl.uint<1>
      firrtl.strictconnect %72, %17 : !firrtl.uint<17>
      firrtl.strictconnect %77, %22 : !firrtl.uint<1>
      firrtl.strictconnect %76, %21 : !firrtl.uint<1>
      firrtl.strictconnect %75, %20 : !firrtl.uint<17>
      firrtl.strictconnect %80, %25 : !firrtl.uint<1>
      firrtl.strictconnect %79, %24 : !firrtl.uint<1>
      firrtl.strictconnect %78, %23 : !firrtl.uint<17>
      firrtl.strictconnect %83, %28 : !firrtl.uint<1>
      firrtl.strictconnect %82, %27 : !firrtl.uint<1>
      firrtl.strictconnect %81, %26 : !firrtl.uint<17>
      firrtl.strictconnect %84, %32 : !firrtl.uint<64>
      firrtl.strictconnect %85, %33 : !firrtl.uint<64>
      firrtl.strictconnect %86, %34 : !firrtl.uint<64>
      firrtl.strictconnect %87, %35 : !firrtl.uint<64>
      firrtl.strictconnect %96, %140 : !firrtl.uint<4>
      firrtl.strictconnect %95, %139 : !firrtl.uint<64>
      firrtl.strictconnect %94, %138 : !firrtl.uint<12>
      firrtl.strictconnect %93, %137 : !firrtl.uint<1>
      firrtl.strictconnect %92, %145 : !firrtl.uint<4>
      firrtl.strictconnect %91, %144 : !firrtl.uint<1>
      firrtl.strictconnect %90, %143 : !firrtl.uint<17>
      firrtl.strictconnect %89, %142 : !firrtl.uint<9>
      firrtl.strictconnect %88, %141 : !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %c_control_timer = firrtl.wire : !firrtl.uint<64>
      %c_control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %c_control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      firrtl.strictconnect %c_control_timer, %LogPerfHelper_timer : !firrtl.uint<64>
      %234 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %235 = firrtl.and %c_control_logEnable, %234 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %235, "[%d] Cache_2: " {name = "printf"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %236 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %237 = firrtl.and %c_control_logEnable, %236 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %237, "InReq(%d, %d) InResp(%d, %d) \0A" {name = "printf_1"} (%io_in_req_valid, %io_in_req_ready_0, %io_in_resp_valid_1, %c1_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %238 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %239 = firrtl.and %c_control_logEnable, %238 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %239, "[%d] Cache_2: " {name = "printf_2"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %240 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %241 = firrtl.and %c_control_logEnable, %240 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %241, "{IN s1:(%d,%d), s2:(%d,%d), s3:(%d,%d)} {OUT s1:(%d,%d), s2:(%d,%d), s3:(%d,%d)}\0A" {name = "printf_3"} (%1, %0, %37, %36, %98, %97, %8, %7, %44, %43, %126, %c1_ui1) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %242 = firrtl.and %1, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %243 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %244 = firrtl.and %242, %243 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %244, "[%d] Cache_2: " {name = "printf_4"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %245 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %246 = firrtl.and %242, %245 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %246, "[l2cache.S1]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_5"} (%2, %4, %3, %5, %6) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %247 = firrtl.and %37, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %248 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %249 = firrtl.and %247, %248 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %249, "[%d] Cache_2: " {name = "printf_6"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %250 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %251 = firrtl.and %247, %250 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %251, "[l2cache.S2]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_7"} (%38, %40, %39, %41, %42) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %252 = firrtl.and %98, %c_control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %253 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %254 = firrtl.and %252, %253 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %254, "[%d] Cache_2: " {name = "printf_8"} (%c_control_timer) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>
      %255 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %256 = firrtl.and %252, %255 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %256, "[l2cache.S3]: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_9"} (%99, %101, %100, %102, %103) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
    }
    firrtl.module private @SimpleBusAddressMapper(out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wdata: !firrtl.uint<64>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_req_ready: !firrtl.uint<1>, out %io_out_req_valid: !firrtl.uint<1>, out %io_out_req_bits_addr: !firrtl.uint<32>, out %io_out_req_bits_cmd: !firrtl.uint<4>, out %io_out_req_bits_wdata: !firrtl.uint<64>, in %io_out_resp_valid: !firrtl.uint<1>, in %io_out_resp_bits_cmd: !firrtl.uint<4>, in %io_out_resp_bits_rdata: !firrtl.uint<64>) {
      firrtl.strictconnect %io_in_req_ready, %io_out_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_out_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_out_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_out_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_req_valid, %io_in_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
    }
    firrtl.module private @SimpleBus2AXI4Converter(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wdata: !firrtl.uint<64>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_aw_ready: !firrtl.uint<1>, out %io_out_aw_valid: !firrtl.uint<1>, out %io_out_aw_bits_addr: !firrtl.uint<32>, out %io_out_aw_bits_len: !firrtl.uint<8>, in %io_out_w_ready: !firrtl.uint<1>, out %io_out_w_valid: !firrtl.uint<1>, out %io_out_w_bits_data: !firrtl.uint<64>, out %io_out_w_bits_last: !firrtl.uint<1>, in %io_out_b_valid: !firrtl.uint<1>, in %io_out_ar_ready: !firrtl.uint<1>, out %io_out_ar_valid: !firrtl.uint<1>, out %io_out_ar_bits_addr: !firrtl.uint<32>, out %io_out_ar_bits_len: !firrtl.uint<8>, in %io_out_r_valid: !firrtl.uint<1>, in %io_out_r_bits_data: !firrtl.uint<64>, in %io_out_r_bits_last: !firrtl.uint<1>) {
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_out_ar_bits_id"}
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c6_ui3 = firrtl.constant 6 : !firrtl.uint<3>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd_2 = firrtl.wire {name = "io_in_resp_bits_cmd"} : !firrtl.uint<4>
      %io_out_aw_valid_3 = firrtl.wire {name = "io_out_aw_valid"} : !firrtl.uint<1>
      %io_out_aw_bits_len_4 = firrtl.wire {name = "io_out_aw_bits_len"} : !firrtl.uint<8>
      %io_out_w_valid_5 = firrtl.wire {name = "io_out_w_valid"} : !firrtl.uint<1>
      %io_out_w_bits_last_6 = firrtl.wire {name = "io_out_w_bits_last"} : !firrtl.uint<1>
      %io_out_ar_valid_7 = firrtl.wire {name = "io_out_ar_valid"} : !firrtl.uint<1>
      %io_out_ar_bits_len_8 = firrtl.wire {name = "io_out_ar_bits_len"} : !firrtl.uint<8>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_in_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_out_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_aw_valid, %io_out_aw_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_aw_bits_len, %io_out_aw_bits_len_4 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_w_valid, %io_out_w_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_w_bits_data, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_w_bits_last, %io_out_w_bits_last_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_valid, %io_out_ar_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_ar_bits_len, %io_out_ar_bits_len_8 : !firrtl.uint<8>
      %_io_out_ar_bits_len_T = firrtl.bits %io_in_req_bits_cmd 1 to 1 {name = "_io_out_ar_bits_len_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %wlast = firrtl.wire : !firrtl.uint<1>
      %_io_out_ar_bits_len_T_1 = firrtl.mux(%_io_out_ar_bits_len_T, %c7_ui3, %c0_ui3) {name = "_io_out_ar_bits_len_T_1"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %0 = firrtl.pad %_io_out_ar_bits_len_T_1, 8 : (!firrtl.uint<3>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_out_ar_bits_len_8, %0 : !firrtl.uint<8>
      %_io_out_w_bits_last_T = firrtl.eq %io_in_req_bits_cmd, %c7_ui3 {name = "_io_out_w_bits_last_T"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_out_w_bits_last_T_1 = firrtl.eq %io_in_req_bits_cmd, %c1_ui1 {name = "_io_out_w_bits_last_T_1"} : (!firrtl.uint<4>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_w_bits_last_T_2 = firrtl.or %_io_out_w_bits_last_T, %_io_out_w_bits_last_T_1 {name = "_io_out_w_bits_last_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_w_bits_last_6, %_io_out_w_bits_last_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %wlast, %io_out_w_bits_last_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_bits_len_4, %io_out_ar_bits_len_8 : !firrtl.uint<8>
      %_io_in_resp_bits_cmd_T = firrtl.mux(%io_out_r_bits_last, %c6_ui3, %c0_ui3) {name = "_io_in_resp_bits_cmd_T"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %1 = firrtl.pad %_io_in_resp_bits_cmd_T, 4 : (!firrtl.uint<3>) -> !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_cmd_2, %1 : !firrtl.uint<4>
      %wSend = firrtl.wire : !firrtl.uint<1>
      %_wSend_T = firrtl.and %io_out_aw_ready, %io_out_aw_valid_3 {name = "_wSend_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %awAck = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_wSend_T, %c1_ui1, %awAck) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%wSend, %c0_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %awAck, %3 : !firrtl.uint<1>
      %_wSend_T_1 = firrtl.and %io_out_w_ready, %io_out_w_valid_5 {name = "_wSend_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wAck_T_1 = firrtl.and %_wSend_T_1, %wlast {name = "_wAck_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %wAck = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_wAck_T_1, %c1_ui1, %wAck) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%wSend, %c0_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wAck, %5 : !firrtl.uint<1>
      %_wSend_T_2 = firrtl.and %_wSend_T, %_wSend_T_1 {name = "_wSend_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wSend_T_3 = firrtl.and %_wSend_T_2, %wlast {name = "_wSend_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wSend_T_4 = firrtl.and %awAck, %wAck {name = "_wSend_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wSend_T_5 = firrtl.or %_wSend_T_3, %_wSend_T_4 {name = "_wSend_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wSend, %_wSend_T_5 : !firrtl.uint<1>
      %_io_in_req_ready_T = firrtl.bits %io_in_req_bits_cmd 0 to 0 {name = "_io_in_req_ready_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_wen_T_1 = firrtl.and %io_in_req_ready_0, %io_in_req_valid {name = "_wen_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %wen = firrtl.reg %clock {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %6 = firrtl.mux(%_wen_T_1, %_io_in_req_ready_T, %wen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wen, %6 : !firrtl.uint<1>
      %_io_out_ar_valid_T_1 = firrtl.not %_io_in_req_ready_T {name = "_io_out_ar_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_2 = firrtl.bits %io_in_req_bits_cmd 3 to 3 {name = "_io_out_ar_valid_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_3 = firrtl.not %_io_out_ar_valid_T_2 {name = "_io_out_ar_valid_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_4 = firrtl.and %_io_out_ar_valid_T_1, %_io_out_ar_valid_T_3 {name = "_io_out_ar_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_5 = firrtl.and %io_in_req_valid, %_io_out_ar_valid_T_4 {name = "_io_out_ar_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_valid_7, %_io_out_ar_valid_T_5 : !firrtl.uint<1>
      %_io_out_aw_valid_T_1 = firrtl.and %io_in_req_valid, %_io_in_req_ready_T {name = "_io_out_aw_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_aw_valid_T_2 = firrtl.not %awAck {name = "_io_out_aw_valid_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_aw_valid_T_3 = firrtl.and %_io_out_aw_valid_T_1, %_io_out_aw_valid_T_2 {name = "_io_out_aw_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_valid_3, %_io_out_aw_valid_T_3 : !firrtl.uint<1>
      %_io_out_w_valid_T_1 = firrtl.and %io_in_req_valid, %_io_in_req_ready_T {name = "_io_out_w_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_1 = firrtl.not %wAck {name = "_io_in_req_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_w_valid_T_3 = firrtl.and %_io_out_w_valid_T_1, %_io_in_req_ready_T_1 {name = "_io_out_w_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_w_valid_5, %_io_out_w_valid_T_3 : !firrtl.uint<1>
      %_io_in_req_ready_T_2 = firrtl.and %_io_in_req_ready_T_1, %io_out_w_ready {name = "_io_in_req_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_3 = firrtl.mux(%_io_in_req_ready_T, %_io_in_req_ready_T_2, %io_out_ar_ready) {name = "_io_in_req_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready_0, %_io_in_req_ready_T_3 : !firrtl.uint<1>
      %_io_in_resp_valid_T = firrtl.mux(%wen, %io_out_b_valid, %io_out_r_valid) {name = "_io_in_resp_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %_io_in_resp_valid_T : !firrtl.uint<1>
    }
    firrtl.module private @SimpleBusCrossbar1toN(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_size: !firrtl.uint<3>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wmask: !firrtl.uint<8>, in %io_in_req_bits_wdata: !firrtl.uint<64>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_0_req_ready: !firrtl.uint<1>, out %io_out_0_req_valid: !firrtl.uint<1>, out %io_out_0_req_bits_addr: !firrtl.uint<32>, out %io_out_0_req_bits_cmd: !firrtl.uint<4>, out %io_out_0_req_bits_wmask: !firrtl.uint<8>, out %io_out_0_req_bits_wdata: !firrtl.uint<64>, out %io_out_0_resp_ready: !firrtl.uint<1>, in %io_out_0_resp_valid: !firrtl.uint<1>, in %io_out_0_resp_bits_rdata: !firrtl.uint<64>, in %io_out_1_req_ready: !firrtl.uint<1>, out %io_out_1_req_valid: !firrtl.uint<1>, out %io_out_1_req_bits_addr: !firrtl.uint<32>, out %io_out_1_req_bits_cmd: !firrtl.uint<4>, out %io_out_1_req_bits_wmask: !firrtl.uint<8>, out %io_out_1_req_bits_wdata: !firrtl.uint<64>, out %io_out_1_resp_ready: !firrtl.uint<1>, in %io_out_1_resp_valid: !firrtl.uint<1>, in %io_out_1_resp_bits_rdata: !firrtl.uint<64>, in %io_out_2_req_ready: !firrtl.uint<1>, out %io_out_2_req_valid: !firrtl.uint<1>, out %io_out_2_req_bits_addr: !firrtl.uint<32>, out %io_out_2_req_bits_size: !firrtl.uint<3>, out %io_out_2_req_bits_cmd: !firrtl.uint<4>, out %io_out_2_req_bits_wmask: !firrtl.uint<8>, out %io_out_2_req_bits_wdata: !firrtl.uint<64>, out %io_out_2_resp_ready: !firrtl.uint<1>, in %io_out_2_resp_valid: !firrtl.uint<1>, in %io_out_2_resp_bits_cmd: !firrtl.uint<4>, in %io_out_2_resp_bits_rdata: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "_outSelRespVec_WIRE_2"}
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3>
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c2147483648_ui32 = firrtl.constant 2147483648 : !firrtl.uint<32>
      %c1073741824_ui31 = firrtl.constant 1073741824 : !firrtl.uint<31>
      %c1006632960_ui30 = firrtl.constant 1006632960 : !firrtl.uint<30>
      %c939589632_ui30 = firrtl.constant 939589632 : !firrtl.uint<30>
      %c939524096_ui30 = firrtl.constant 939524096 : !firrtl.uint<30>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd_2 = firrtl.wire {name = "io_in_resp_bits_cmd"} : !firrtl.uint<4>
      %io_in_resp_bits_rdata_3 = firrtl.wire {name = "io_in_resp_bits_rdata"} : !firrtl.uint<64>
      %io_out_0_req_valid_4 = firrtl.wire {name = "io_out_0_req_valid"} : !firrtl.uint<1>
      %io_out_0_resp_ready_5 = firrtl.wire {name = "io_out_0_resp_ready"} : !firrtl.uint<1>
      %io_out_1_req_valid_6 = firrtl.wire {name = "io_out_1_req_valid"} : !firrtl.uint<1>
      %io_out_1_resp_ready_7 = firrtl.wire {name = "io_out_1_resp_ready"} : !firrtl.uint<1>
      %io_out_2_req_valid_8 = firrtl.wire {name = "io_out_2_req_valid"} : !firrtl.uint<1>
      %io_out_2_resp_ready_9 = firrtl.wire {name = "io_out_2_resp_ready"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_in_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_in_resp_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_req_valid, %io_out_0_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_0_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_0_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_0_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_resp_ready, %io_out_0_resp_ready_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_req_valid, %io_out_1_req_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_1_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_1_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_1_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_1_resp_ready, %io_out_1_resp_ready_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_req_valid, %io_out_2_req_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_2_req_bits_size, %io_in_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %io_out_2_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_2_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_2_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_2_resp_ready, %io_out_2_resp_ready_9 : !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %_outMatchVec_T = firrtl.geq %io_in_req_bits_addr, %c939524096_ui30 {name = "_outMatchVec_T"} : (!firrtl.uint<32>, !firrtl.uint<30>) -> !firrtl.uint<1>
      %_outMatchVec_T_1 = firrtl.lt %io_in_req_bits_addr, %c939589632_ui30 {name = "_outMatchVec_T_1"} : (!firrtl.uint<32>, !firrtl.uint<30>) -> !firrtl.uint<1>
      %_outMatchVec_T_2 = firrtl.and %_outMatchVec_T, %_outMatchVec_T_1 {name = "_outMatchVec_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_3 = firrtl.geq %io_in_req_bits_addr, %c1006632960_ui30 {name = "_outMatchVec_T_3"} : (!firrtl.uint<32>, !firrtl.uint<30>) -> !firrtl.uint<1>
      %_outMatchVec_T_4 = firrtl.lt %io_in_req_bits_addr, %c1073741824_ui31 {name = "_outMatchVec_T_4"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_5 = firrtl.and %_outMatchVec_T_3, %_outMatchVec_T_4 {name = "_outMatchVec_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_6 = firrtl.geq %io_in_req_bits_addr, %c1073741824_ui31 {name = "_outMatchVec_T_6"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_7 = firrtl.lt %io_in_req_bits_addr, %c2147483648_ui32 {name = "_outMatchVec_T_7"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<1>
      %_outMatchVec_T_8 = firrtl.and %_outMatchVec_T_6, %_outMatchVec_T_7 {name = "_outMatchVec_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %outMatchVec_0 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_1 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_2 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_0, %_outMatchVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_1, %_outMatchVec_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_2, %_outMatchVec_T_8 : !firrtl.uint<1>
      %_outSelVec_enc_T = firrtl.mux(%outMatchVec_2, %c4_ui3, %c0_ui3) {name = "_outSelVec_enc_T"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_outSelVec_enc_T_1 = firrtl.mux(%outMatchVec_1, %c2_ui3, %_outSelVec_enc_T) {name = "_outSelVec_enc_T_1"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %outSelVec_enc = firrtl.mux(%outMatchVec_0, %c1_ui3, %_outSelVec_enc_T_1) {name = "outSelVec_enc"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_outSelVec_T = firrtl.bits %outSelVec_enc 0 to 0 {name = "_outSelVec_T"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_outSelVec_T_1 = firrtl.bits %outSelVec_enc 1 to 1 {name = "_outSelVec_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_outSelVec_T_2 = firrtl.bits %outSelVec_enc 2 to 2 {name = "_outSelVec_T_2"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %outSelVec_0 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_1 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_2 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_0, %_outSelVec_T : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_1, %_outSelVec_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_2, %_outSelVec_T_2 : !firrtl.uint<1>
      %_outSelRespVec_T = firrtl.and %io_in_req_ready_0, %io_in_req_valid {name = "_outSelRespVec_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_2_req_valid_T_1 = firrtl.not %0 {name = "_io_out_2_req_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_outSelRespVec_T_2 = firrtl.and %_outSelRespVec_T, %_io_out_2_req_valid_T_1 {name = "_outSelRespVec_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %outSelRespVec_0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %1 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_0, %outSelRespVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_0, %1 : !firrtl.uint<1>
      %2 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_1, %outSelRespVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_1, %2 : !firrtl.uint<1>
      %3 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_2, %outSelRespVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_2, %3 : !firrtl.uint<1>
      %reqInvalidAddr_hi = firrtl.cat %outSelVec_2, %outSelVec_1 {name = "reqInvalidAddr_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %_reqInvalidAddr_T = firrtl.cat %reqInvalidAddr_hi, %outSelVec_0 {name = "_reqInvalidAddr_T"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %_reqInvalidAddr_T_1 = firrtl.orr %_reqInvalidAddr_T {name = "_reqInvalidAddr_T_1"} : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %_reqInvalidAddr_T_2 = firrtl.not %_reqInvalidAddr_T_1 {name = "_reqInvalidAddr_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %reqInvalidAddr = firrtl.and %io_in_req_valid, %_reqInvalidAddr_T_2 {name = "reqInvalidAddr"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      %4 = firrtl.and %reqInvalidAddr, %control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %5 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.and %4, %5 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %6, "crossbar access bad addr %x, time %d\0A" {name = "printf"} (%io_in_req_bits_addr, %c) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<64>
      %7 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %8 = firrtl.not %reqInvalidAddr : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %8, %7, "Assertion failed: address decode error, bad addr = 0x%x\0A\0A    at Crossbar.scala:49 assert(!reqInvalidAddr, \22address decode error, bad addr = 0x%%%%x\\n\22, addr)\0A"(%io_in_req_bits_addr) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %9 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %10 = firrtl.not %9 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %11 = firrtl.mux(%_outSelRespVec_T, %c1_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %12 = firrtl.mux(%reqInvalidAddr, %c2_ui2, %11) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %13 = firrtl.eq %state, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %14 = firrtl.mux(%io_in_resp_valid_1, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %15 = firrtl.eq %state, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %16 = firrtl.and %15, %io_in_resp_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.mux(%16, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %18 = firrtl.mux(%13, %14, %17) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %19 = firrtl.mux(%10, %12, %18) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state, %19 : !firrtl.uint<2>
      %_io_in_req_ready_T = firrtl.mux(%outSelVec_0, %io_out_0_req_ready, %c0_ui1) {name = "_io_in_req_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_1 = firrtl.mux(%outSelVec_1, %io_out_1_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_2 = firrtl.mux(%outSelVec_2, %io_out_2_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_3 = firrtl.or %_io_in_req_ready_T, %_io_in_req_ready_T_1 {name = "_io_in_req_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_4 = firrtl.or %_io_in_req_ready_T_3, %_io_in_req_ready_T_2 {name = "_io_in_req_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_io_in_req_ready_WIRE, %_io_in_req_ready_T_4 : !firrtl.uint<1>
      %_io_in_req_ready_T_5 = firrtl.or %_io_in_req_ready_WIRE, %reqInvalidAddr {name = "_io_in_req_ready_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready_0, %_io_in_req_ready_T_5 : !firrtl.uint<1>
      %_io_out_0_req_valid_T = firrtl.and %outSelVec_0, %io_in_req_valid {name = "_io_out_0_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_0_req_valid_T_2 = firrtl.and %_io_out_0_req_valid_T, %_io_out_2_req_valid_T_1 {name = "_io_out_0_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_req_valid_4, %_io_out_0_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_1_req_valid_T = firrtl.and %outSelVec_1, %io_in_req_valid {name = "_io_out_1_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_1_req_valid_T_2 = firrtl.and %_io_out_1_req_valid_T, %_io_out_2_req_valid_T_1 {name = "_io_out_1_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_req_valid_6, %_io_out_1_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_2_req_valid_T = firrtl.and %outSelVec_2, %io_in_req_valid {name = "_io_out_2_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_2_req_valid_T_2 = firrtl.and %_io_out_2_req_valid_T, %_io_out_2_req_valid_T_1 {name = "_io_out_2_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_req_valid_8, %_io_out_2_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_2_resp_ready_T_1 = firrtl.eq %state, %c1_ui2 {name = "_io_out_2_resp_ready_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_0_resp_ready_T_2 = firrtl.and %outSelRespVec_0, %_io_out_2_resp_ready_T_1 {name = "_io_out_0_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_resp_ready_5, %_io_out_0_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_1_resp_ready_T_2 = firrtl.and %outSelRespVec_1, %_io_out_2_resp_ready_T_1 {name = "_io_out_1_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_resp_ready_7, %_io_out_1_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_2_resp_ready_T_2 = firrtl.and %outSelRespVec_2, %_io_out_2_resp_ready_T_1 {name = "_io_out_2_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_resp_ready_9, %_io_out_2_resp_ready_T_2 : !firrtl.uint<1>
      %_io_in_resp_valid_T = firrtl.mux(%outSelRespVec_0, %io_out_0_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_1 = firrtl.mux(%outSelRespVec_1, %io_out_1_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_2 = firrtl.mux(%outSelRespVec_2, %io_out_2_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_3 = firrtl.or %_io_in_resp_valid_T, %_io_in_resp_valid_T_1 {name = "_io_in_resp_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_4 = firrtl.or %_io_in_resp_valid_T_3, %_io_in_resp_valid_T_2 {name = "_io_in_resp_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_io_in_resp_valid_WIRE, %_io_in_resp_valid_T_4 : !firrtl.uint<1>
      %_io_in_resp_valid_T_5 = firrtl.eq %state, %c2_ui2 {name = "_io_in_resp_valid_T_5"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_6 = firrtl.or %_io_in_resp_valid_WIRE, %_io_in_resp_valid_T_5 {name = "_io_in_resp_valid_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %_io_in_resp_valid_T_6 : !firrtl.uint<1>
      %_io_in_resp_bits_WIRE_cmd = firrtl.wire : !firrtl.uint<4>
      %_io_in_resp_bits_WIRE_rdata = firrtl.wire : !firrtl.uint<64>
      %_io_in_resp_bits_T = firrtl.mux(%outSelRespVec_0, %io_out_0_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_1 = firrtl.mux(%outSelRespVec_1, %io_out_1_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_1"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_2 = firrtl.mux(%outSelRespVec_2, %io_out_2_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_2"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_3 = firrtl.or %_io_in_resp_bits_T, %_io_in_resp_bits_T_1 {name = "_io_in_resp_bits_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_4 = firrtl.or %_io_in_resp_bits_T_3, %_io_in_resp_bits_T_2 {name = "_io_in_resp_bits_T_4"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_1, %_io_in_resp_bits_T_4 : !firrtl.uint<64>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_rdata, %_io_in_resp_bits_WIRE_1 : !firrtl.uint<64>
      %_io_in_resp_bits_T_5 = firrtl.mux(%outSelRespVec_0, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_5"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_6 = firrtl.mux(%outSelRespVec_1, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_6"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_7 = firrtl.mux(%outSelRespVec_2, %io_out_2_resp_bits_cmd, %c0_ui4) {name = "_io_in_resp_bits_T_7"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_8 = firrtl.or %_io_in_resp_bits_T_5, %_io_in_resp_bits_T_6 {name = "_io_in_resp_bits_T_8"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_9 = firrtl.or %_io_in_resp_bits_T_8, %_io_in_resp_bits_T_7 {name = "_io_in_resp_bits_T_9"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_WIRE_2 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_2, %_io_in_resp_bits_T_9 : !firrtl.uint<4>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_cmd, %_io_in_resp_bits_WIRE_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_cmd_2, %_io_in_resp_bits_WIRE_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata_3, %_io_in_resp_bits_WIRE_rdata : !firrtl.uint<64>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      %20 = firrtl.and %control_1_logEnable, %_outSelRespVec_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %c_1 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 69 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T_2 = firrtl.add %c_1, %c1_ui1 {name = "_c_T_2"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_3 = firrtl.bits %_c_T_2 63 to 0 {name = "_c_T_3"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c_1, %_c_T_3 : !firrtl.uint<64>
      %21 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %20, %21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %22, "%d: xbar: outSelVec = Vec(%d, %d, %d), outSel.req: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_2"} (%c_1, %outSelVec_0, %outSelVec_1, %outSelVec_2, %io_in_req_bits_addr, %io_in_req_bits_cmd, %io_in_req_bits_size, %io_in_req_bits_wmask, %io_in_req_bits_wdata) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %23 = firrtl.and %control_1_logEnable, %io_in_resp_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %c_2 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 133 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T_4 = firrtl.add %c_2, %c1_ui1 {name = "_c_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_5 = firrtl.bits %_c_T_4 63 to 0 {name = "_c_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c_2, %_c_T_5 : !firrtl.uint<64>
      %24 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.and %23, %24 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %25, "%d: xbar: outSelVec = Vec(%d, %d, %d), outSel.resp: rdata = %x, cmd = %d\0A" {name = "printf_3"} (%c_2, %outSelVec_0, %outSelVec_1, %outSelVec_2, %io_in_resp_bits_rdata_3, %io_in_resp_bits_cmd_2) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>
    }
    firrtl.module private @AXI4CLINT(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, out %io_extra_mtip: !firrtl.uint<1> [{class = "firrtl.transforms.DontTouchAnnotation"}], out %io_extra_msip: !firrtl.uint<1> [{class = "firrtl.transforms.DontTouchAnnotation"}], in %isWFI__bore: !firrtl.uint<1>, out %io_extra_msip__bore: !firrtl.uint<1>, out %io_extra_mtip__bore: !firrtl.uint<1>) {
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui16 = firrtl.constant 0 : !firrtl.uint<16>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c16384_ui15 = firrtl.constant 16384 : !firrtl.uint<15>
      %c32776_ui16 = firrtl.constant 32776 : !firrtl.uint<16>
      %c49144_ui16 = firrtl.constant 49144 : !firrtl.uint<16>
      %c32768_ui16 = firrtl.constant 32768 : !firrtl.uint<16>
      %c100000_ui17 = firrtl.constant 100000 : !firrtl.uint<17>
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64>
      %c10000_ui64 = firrtl.constant 10000 : !firrtl.uint<64>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_extra_mtip_6 = firrtl.wire {name = "io_extra_mtip"} : !firrtl.uint<1>
      %io_extra_msip_7 = firrtl.wire {name = "io_extra_msip"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_mtip, %io_extra_mtip_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_msip, %io_extra_msip_7 : !firrtl.uint<1>
      %_fullMask_T = firrtl.bits %io_in_w_bits_strb 0 to 0 {name = "_fullMask_T"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_1 = firrtl.bits %io_in_w_bits_strb 1 to 1 {name = "_fullMask_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_2 = firrtl.bits %io_in_w_bits_strb 2 to 2 {name = "_fullMask_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_3 = firrtl.bits %io_in_w_bits_strb 3 to 3 {name = "_fullMask_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_4 = firrtl.bits %io_in_w_bits_strb 4 to 4 {name = "_fullMask_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_5 = firrtl.bits %io_in_w_bits_strb 5 to 5 {name = "_fullMask_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_6 = firrtl.bits %io_in_w_bits_strb 6 to 6 {name = "_fullMask_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_7 = firrtl.bits %io_in_w_bits_strb 7 to 7 {name = "_fullMask_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_io_in_r_valid_T = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_io_in_r_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_3 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_io_in_r_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_io_in_r_valid_T, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_io_in_r_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_io_in_r_valid_T, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %mtime = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %mtimecmp = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 69 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %msip = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 133 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %freq_reg = firrtl.regreset %clock, %reset, %c10000_ui64 {firrtl.random_init_start = 197 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %freq = firrtl.bits %freq_reg 15 to 0 {name = "freq"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %inc_reg = firrtl.regreset %clock, %reset, %c1_ui64 {firrtl.random_init_start = 261 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %inc = firrtl.bits %inc_reg 15 to 0 {name = "inc"} : (!firrtl.uint<64>) -> !firrtl.uint<16>
      %cnt = firrtl.regreset %clock, %reset, %c0_ui16 {firrtl.random_init_start = 325 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>
      %_nextCnt_T = firrtl.add %cnt, %c1_ui1 {name = "_nextCnt_T"} : (!firrtl.uint<16>, !firrtl.uint<1>) -> !firrtl.uint<17>
      %nextCnt = firrtl.bits %_nextCnt_T 15 to 0 {name = "nextCnt"} : (!firrtl.uint<17>) -> !firrtl.uint<16>
      %_cnt_T = firrtl.lt %nextCnt, %freq {name = "_cnt_T"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_cnt_T_1 = firrtl.mux(%_cnt_T, %nextCnt, %c0_ui16) {name = "_cnt_T_1"} : (!firrtl.uint<1>, !firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<16>
      firrtl.strictconnect %cnt, %_cnt_T_1 : !firrtl.uint<16>
      %tick = firrtl.eq %nextCnt, %freq {name = "tick"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_mtime_T = firrtl.add %mtime, %inc {name = "_mtime_T"} : (!firrtl.uint<64>, !firrtl.uint<16>) -> !firrtl.uint<65>
      %_mtime_T_1 = firrtl.bits %_mtime_T 63 to 0 {name = "_mtime_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %8 = firrtl.mux(%tick, %_mtime_T_1, %mtime) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mtime_T_2 = firrtl.add %mtime, %c100000_ui17 {name = "_mtime_T_2"} : (!firrtl.uint<64>, !firrtl.uint<17>) -> !firrtl.uint<65>
      %_mtime_T_3 = firrtl.bits %_mtime_T_2 63 to 0 {name = "_mtime_T_3"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      %9 = firrtl.mux(%isWFI__bore, %_mtime_T_3, %8) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %10 = firrtl.bits %io_in_ar_bits_addr 15 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<16>
      %11 = firrtl.bits %io_in_aw_bits_addr 15 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<16>
      %12 = firrtl.mux(%_fullMask_T, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %13 = firrtl.mux(%_fullMask_T_1, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %14 = firrtl.mux(%_fullMask_T_2, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %15 = firrtl.mux(%_fullMask_T_3, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %16 = firrtl.mux(%_fullMask_T_4, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %17 = firrtl.mux(%_fullMask_T_5, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %18 = firrtl.mux(%_fullMask_T_6, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %19 = firrtl.mux(%_fullMask_T_7, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %lo_lo = firrtl.cat %13, %12 {name = "lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo_hi = firrtl.cat %15, %14 {name = "lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo = firrtl.cat %lo_hi, %lo_lo {name = "lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %hi_lo = firrtl.cat %17, %16 {name = "hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi_hi = firrtl.cat %19, %18 {name = "hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi = firrtl.cat %hi_hi, %hi_lo {name = "hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %20 = firrtl.cat %hi, %lo : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %21 = firrtl.orr %10 : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T = firrtl.not %21 {name = "_io_in_r_bits_data_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_1 = firrtl.eq %10, %c32768_ui16 {name = "_io_in_r_bits_data_T_1"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_2 = firrtl.eq %10, %c49144_ui16 {name = "_io_in_r_bits_data_T_2"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_3 = firrtl.eq %10, %c32776_ui16 {name = "_io_in_r_bits_data_T_3"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_4 = firrtl.eq %10, %c16384_ui15 {name = "_io_in_r_bits_data_T_4"} : (!firrtl.uint<16>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_5 = firrtl.mux(%_io_in_r_bits_data_T, %msip, %c0_ui64) {name = "_io_in_r_bits_data_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_6 = firrtl.mux(%_io_in_r_bits_data_T_1, %freq_reg, %c0_ui64) {name = "_io_in_r_bits_data_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_7 = firrtl.mux(%_io_in_r_bits_data_T_2, %mtime, %c0_ui64) {name = "_io_in_r_bits_data_T_7"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_8 = firrtl.mux(%_io_in_r_bits_data_T_3, %inc_reg, %c0_ui64) {name = "_io_in_r_bits_data_T_8"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_9 = firrtl.mux(%_io_in_r_bits_data_T_4, %mtimecmp, %c0_ui64) {name = "_io_in_r_bits_data_T_9"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_10 = firrtl.or %_io_in_r_bits_data_T_5, %_io_in_r_bits_data_T_6 {name = "_io_in_r_bits_data_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_11 = firrtl.or %_io_in_r_bits_data_T_10, %_io_in_r_bits_data_T_7 {name = "_io_in_r_bits_data_T_11"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_12 = firrtl.or %_io_in_r_bits_data_T_11, %_io_in_r_bits_data_T_8 {name = "_io_in_r_bits_data_T_12"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_T_13 = firrtl.or %_io_in_r_bits_data_T_12, %_io_in_r_bits_data_T_9 {name = "_io_in_r_bits_data_T_13"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_r_bits_data_WIRE = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_io_in_r_bits_data_WIRE, %_io_in_r_bits_data_T_13 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %_io_in_r_bits_data_WIRE : !firrtl.uint<64>
      %22 = firrtl.orr %11 : (!firrtl.uint<16>) -> !firrtl.uint<1>
      %23 = firrtl.not %22 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.and %_io_in_b_valid_T_1, %23 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_msip_T = firrtl.and %io_in_w_bits_data, %20 {name = "_msip_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_msip_T_1 = firrtl.not %20 {name = "_msip_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_msip_T_2 = firrtl.and %msip, %_msip_T_1 {name = "_msip_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_msip_T_3 = firrtl.or %_msip_T, %_msip_T_2 {name = "_msip_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %25 = firrtl.mux(%24, %_msip_T_3, %msip) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %msip, %25 : !firrtl.uint<64>
      %26 = firrtl.eq %11, %c32768_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %27 = firrtl.and %_io_in_b_valid_T_1, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_freq_reg_T = firrtl.and %io_in_w_bits_data, %20 {name = "_freq_reg_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_freq_reg_T_1 = firrtl.not %20 {name = "_freq_reg_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_freq_reg_T_2 = firrtl.and %freq_reg, %_freq_reg_T_1 {name = "_freq_reg_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_freq_reg_T_3 = firrtl.or %_freq_reg_T, %_freq_reg_T_2 {name = "_freq_reg_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %28 = firrtl.mux(%27, %_freq_reg_T_3, %freq_reg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %freq_reg, %28 : !firrtl.uint<64>
      %29 = firrtl.eq %11, %c49144_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %30 = firrtl.and %_io_in_b_valid_T_1, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mtime_T_4 = firrtl.and %io_in_w_bits_data, %20 {name = "_mtime_T_4"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mtime_T_5 = firrtl.not %20 {name = "_mtime_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_mtime_T_6 = firrtl.and %mtime, %_mtime_T_5 {name = "_mtime_T_6"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mtime_T_7 = firrtl.or %_mtime_T_4, %_mtime_T_6 {name = "_mtime_T_7"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %31 = firrtl.mux(%30, %_mtime_T_7, %9) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mtime, %31 : !firrtl.uint<64>
      %32 = firrtl.eq %11, %c32776_ui16 : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %33 = firrtl.and %_io_in_b_valid_T_1, %32 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_inc_reg_T = firrtl.and %io_in_w_bits_data, %20 {name = "_inc_reg_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_inc_reg_T_1 = firrtl.not %20 {name = "_inc_reg_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_inc_reg_T_2 = firrtl.and %inc_reg, %_inc_reg_T_1 {name = "_inc_reg_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_inc_reg_T_3 = firrtl.or %_inc_reg_T, %_inc_reg_T_2 {name = "_inc_reg_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %34 = firrtl.mux(%33, %_inc_reg_T_3, %inc_reg) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %inc_reg, %34 : !firrtl.uint<64>
      %35 = firrtl.eq %11, %c16384_ui15 : (!firrtl.uint<16>, !firrtl.uint<15>) -> !firrtl.uint<1>
      %36 = firrtl.and %_io_in_b_valid_T_1, %35 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_mtimecmp_T = firrtl.and %io_in_w_bits_data, %20 {name = "_mtimecmp_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mtimecmp_T_1 = firrtl.not %20 {name = "_mtimecmp_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<64>
      %_mtimecmp_T_2 = firrtl.and %mtimecmp, %_mtimecmp_T_1 {name = "_mtimecmp_T_2"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_mtimecmp_T_3 = firrtl.or %_mtimecmp_T, %_mtimecmp_T_2 {name = "_mtimecmp_T_3"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %37 = firrtl.mux(%36, %_mtimecmp_T_3, %mtimecmp) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %mtimecmp, %37 : !firrtl.uint<64>
      %_io_extra_mtip_T = firrtl.geq %mtime, %mtimecmp {name = "_io_extra_mtip_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<1>
      %io_extra_mtip_REG = firrtl.reg %clock {firrtl.random_init_start = 341 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %io_extra_mtip_REG, %_io_extra_mtip_T : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_mtip_6, %io_extra_mtip_REG : !firrtl.uint<1>
      %_io_extra_msip_T = firrtl.orr %msip {name = "_io_extra_msip_T"} : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %io_extra_msip_REG = firrtl.reg %clock {firrtl.random_init_start = 342 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %io_extra_msip_REG, %_io_extra_msip_T : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_msip_7, %io_extra_msip_REG : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_msip__bore, %io_extra_msip_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_mtip__bore, %io_extra_mtip_6 : !firrtl.uint<1>
    }
    firrtl.module private @SimpleBus2AXI4Converter_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wmask: !firrtl.uint<8>, in %io_in_req_bits_wdata: !firrtl.uint<64>, in %io_in_resp_ready: !firrtl.uint<1>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_aw_ready: !firrtl.uint<1>, out %io_out_aw_valid: !firrtl.uint<1>, out %io_out_aw_bits_addr: !firrtl.uint<32>, in %io_out_w_ready: !firrtl.uint<1>, out %io_out_w_valid: !firrtl.uint<1>, out %io_out_w_bits_data: !firrtl.uint<64>, out %io_out_w_bits_strb: !firrtl.uint<8>, out %io_out_b_ready: !firrtl.uint<1>, in %io_out_b_valid: !firrtl.uint<1>, in %io_out_ar_ready: !firrtl.uint<1>, out %io_out_ar_valid: !firrtl.uint<1>, out %io_out_ar_bits_addr: !firrtl.uint<32>, out %io_out_r_ready: !firrtl.uint<1>, in %io_out_r_valid: !firrtl.uint<1>, in %io_out_r_bits_data: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "wlast"}
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_out_aw_valid_2 = firrtl.wire {name = "io_out_aw_valid"} : !firrtl.uint<1>
      %io_out_w_valid_3 = firrtl.wire {name = "io_out_w_valid"} : !firrtl.uint<1>
      %io_out_ar_valid_4 = firrtl.wire {name = "io_out_ar_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_out_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_aw_valid, %io_out_aw_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_w_valid, %io_out_w_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_w_bits_data, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_w_bits_strb, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_b_ready, %io_in_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_valid, %io_out_ar_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_r_ready, %io_in_resp_ready : !firrtl.uint<1>
      %_toAXI4Lite_T = firrtl.bits %io_in_req_bits_cmd 1 to 1 {name = "_toAXI4Lite_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_toAXI4Lite_T_1 = firrtl.and %io_in_req_valid, %_toAXI4Lite_T {name = "_toAXI4Lite_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.not %_toAXI4Lite_T_1 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %1, %0, "Assertion failed\0A    at ToAXI4.scala:153 assert(toAXI4Lite || toAXI4)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %wSend = firrtl.wire : !firrtl.uint<1>
      %_wSend_T = firrtl.and %io_out_aw_ready, %io_out_aw_valid_2 {name = "_wSend_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %awAck = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_wSend_T, %c1_ui1, %awAck) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%wSend, %c0_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %awAck, %3 : !firrtl.uint<1>
      %_wSend_T_1 = firrtl.and %io_out_w_ready, %io_out_w_valid_3 {name = "_wSend_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %wAck = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_wSend_T_1, %c1_ui1, %wAck) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%wSend, %c0_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wAck, %5 : !firrtl.uint<1>
      %_wSend_T_3 = firrtl.and %_wSend_T, %_wSend_T_1 {name = "_wSend_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wSend_T_4 = firrtl.and %awAck, %wAck {name = "_wSend_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wSend_T_5 = firrtl.or %_wSend_T_3, %_wSend_T_4 {name = "_wSend_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wSend, %_wSend_T_5 : !firrtl.uint<1>
      %_io_in_req_ready_T = firrtl.bits %io_in_req_bits_cmd 0 to 0 {name = "_io_in_req_ready_T"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_wen_T_1 = firrtl.and %io_in_req_ready_0, %io_in_req_valid {name = "_wen_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %wen = firrtl.reg %clock {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>
      %6 = firrtl.mux(%_wen_T_1, %_io_in_req_ready_T, %wen) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wen, %6 : !firrtl.uint<1>
      %_io_out_ar_valid_T_1 = firrtl.not %_io_in_req_ready_T {name = "_io_out_ar_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_2 = firrtl.bits %io_in_req_bits_cmd 3 to 3 {name = "_io_out_ar_valid_T_2"} : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_3 = firrtl.not %_io_out_ar_valid_T_2 {name = "_io_out_ar_valid_T_3"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_4 = firrtl.and %_io_out_ar_valid_T_1, %_io_out_ar_valid_T_3 {name = "_io_out_ar_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_ar_valid_T_5 = firrtl.and %io_in_req_valid, %_io_out_ar_valid_T_4 {name = "_io_out_ar_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_valid_4, %_io_out_ar_valid_T_5 : !firrtl.uint<1>
      %_io_out_aw_valid_T_1 = firrtl.and %io_in_req_valid, %_io_in_req_ready_T {name = "_io_out_aw_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_aw_valid_T_2 = firrtl.not %awAck {name = "_io_out_aw_valid_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_aw_valid_T_3 = firrtl.and %_io_out_aw_valid_T_1, %_io_out_aw_valid_T_2 {name = "_io_out_aw_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_valid_2, %_io_out_aw_valid_T_3 : !firrtl.uint<1>
      %_io_out_w_valid_T_1 = firrtl.and %io_in_req_valid, %_io_in_req_ready_T {name = "_io_out_w_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_1 = firrtl.not %wAck {name = "_io_in_req_ready_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_w_valid_T_3 = firrtl.and %_io_out_w_valid_T_1, %_io_in_req_ready_T_1 {name = "_io_out_w_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_w_valid_3, %_io_out_w_valid_T_3 : !firrtl.uint<1>
      %_io_in_req_ready_T_2 = firrtl.and %_io_in_req_ready_T_1, %io_out_w_ready {name = "_io_in_req_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_3 = firrtl.mux(%_io_in_req_ready_T, %_io_in_req_ready_T_2, %io_out_ar_ready) {name = "_io_in_req_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready_0, %_io_in_req_ready_T_3 : !firrtl.uint<1>
      %_io_in_resp_valid_T = firrtl.mux(%wen, %io_out_b_valid, %io_out_r_valid) {name = "_io_in_resp_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %_io_in_resp_valid_T : !firrtl.uint<1>
    }
    firrtl.module private @AXI4PLIC(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, in %io_extra_intrVec: !firrtl.uint<1>, out %io_extra_meip_0: !firrtl.uint<1> [{class = "firrtl.transforms.DontTouchAnnotation"}], out %io_extra_meip_0__bore: !firrtl.uint<1>) {
      %c0_ui16 = firrtl.constant 0 : !firrtl.uint<16>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c0_ui5 = firrtl.constant 0 : !firrtl.uint<5>
      %c1_ui5 = firrtl.constant 1 : !firrtl.uint<5>
      %c2_ui5 = firrtl.constant 2 : !firrtl.uint<5>
      %c3_ui5 = firrtl.constant 3 : !firrtl.uint<5>
      %c4_ui5 = firrtl.constant 4 : !firrtl.uint<5>
      %c5_ui5 = firrtl.constant 5 : !firrtl.uint<5>
      %c6_ui5 = firrtl.constant 6 : !firrtl.uint<5>
      %c7_ui5 = firrtl.constant 7 : !firrtl.uint<5>
      %c8_ui5 = firrtl.constant 8 : !firrtl.uint<5>
      %c9_ui5 = firrtl.constant 9 : !firrtl.uint<5>
      %c10_ui5 = firrtl.constant 10 : !firrtl.uint<5>
      %c11_ui5 = firrtl.constant 11 : !firrtl.uint<5>
      %c12_ui5 = firrtl.constant 12 : !firrtl.uint<5>
      %c13_ui5 = firrtl.constant 13 : !firrtl.uint<5>
      %c14_ui5 = firrtl.constant 14 : !firrtl.uint<5>
      %c15_ui5 = firrtl.constant 15 : !firrtl.uint<5>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "_inHandle_WIRE_1"}
      %c2097152_ui22 = firrtl.constant 2097152 : !firrtl.uint<22>
      %c8192_ui14 = firrtl.constant 8192 : !firrtl.uint<14>
      %c4096_ui13 = firrtl.constant 4096 : !firrtl.uint<13>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c16_ui5 = firrtl.constant 16 : !firrtl.uint<5>
      %c17_ui5 = firrtl.constant 17 : !firrtl.uint<5>
      %c18_ui5 = firrtl.constant 18 : !firrtl.uint<5>
      %c19_ui5 = firrtl.constant 19 : !firrtl.uint<5>
      %c20_ui5 = firrtl.constant 20 : !firrtl.uint<5>
      %c21_ui5 = firrtl.constant 21 : !firrtl.uint<5>
      %c22_ui5 = firrtl.constant 22 : !firrtl.uint<5>
      %c23_ui5 = firrtl.constant 23 : !firrtl.uint<5>
      %c24_ui5 = firrtl.constant 24 : !firrtl.uint<5>
      %c25_ui5 = firrtl.constant 25 : !firrtl.uint<5>
      %c26_ui5 = firrtl.constant 26 : !firrtl.uint<5>
      %c27_ui5 = firrtl.constant 27 : !firrtl.uint<5>
      %c28_ui5 = firrtl.constant 28 : !firrtl.uint<5>
      %c29_ui5 = firrtl.constant 29 : !firrtl.uint<5>
      %c31_ui5 = firrtl.constant 31 : !firrtl.uint<5>
      %c30_ui5 = firrtl.constant 30 : !firrtl.uint<5>
      %c2097156_ui22 = firrtl.constant 2097156 : !firrtl.uint<22>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_extra_meip_0_6 = firrtl.wire {name = "io_extra_meip_0"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_meip_0, %io_extra_meip_0_6 : !firrtl.uint<1>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_io_in_r_valid_T = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_io_in_r_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_claimCompletionMap_T = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_claimCompletionMap_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_claimCompletionMap_T, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_io_in_r_valid_T, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_io_in_r_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_io_in_r_valid_T, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_claimCompletionMap_T, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %priority_0 = firrtl.reg %clock {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %pending_0_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 38 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %pendingMap_lo_lo_lo_lo = firrtl.cat %pending_0_1, %c0_ui1 {name = "pendingMap_lo_lo_lo_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %pendingMap_lo_lo_lo = firrtl.cat %c0_ui2, %pendingMap_lo_lo_lo_lo {name = "pendingMap_lo_lo_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %pendingMap_lo_lo = firrtl.cat %c0_ui4, %pendingMap_lo_lo_lo {name = "pendingMap_lo_lo"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %pendingMap_lo = firrtl.cat %c0_ui8, %pendingMap_lo_lo {name = "pendingMap_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %pendingMap_0_2_1 = firrtl.cat %c0_ui16, %pendingMap_lo {name = "pendingMap_0_2_1"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %enable_0_0 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 69 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %threshold_0 = firrtl.reg %clock {firrtl.random_init_start = 101 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %inHandle_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 134 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %claimCompletion_0 = firrtl.reg %clock {firrtl.random_init_start = 135 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %_claimCompletionMap_T_1 = firrtl.bits %io_in_ar_bits_addr 25 to 0 {name = "_claimCompletionMap_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<26>
      %_claimCompletionMap_T_2 = firrtl.eq %_claimCompletionMap_T_1, %c2097156_ui22 {name = "_claimCompletionMap_T_2"} : (!firrtl.uint<26>, !firrtl.uint<22>) -> !firrtl.uint<1>
      %_claimCompletionMap_T_3 = firrtl.and %_claimCompletionMap_T, %_claimCompletionMap_T_2 {name = "_claimCompletionMap_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_claimCompletionMap_T_4 = firrtl.bits %claimCompletion_0 0 to 0 {name = "_claimCompletionMap_T_4"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %8 = firrtl.and %_claimCompletionMap_T_3, %_claimCompletionMap_T_4 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %9 = firrtl.mux(%8, %c1_ui1, %inHandle_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.mux(%io_extra_intrVec, %c1_ui1, %pending_0_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %11 = firrtl.mux(%inHandle_1, %c0_ui1, %10) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %pending_0_1, %11 : !firrtl.uint<1>
      %pendingVec_lo_lo_lo = firrtl.cat %c0_ui2, %pendingMap_lo_lo_lo_lo {name = "pendingVec_lo_lo_lo"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %pendingVec_lo_lo = firrtl.cat %c0_ui4, %pendingVec_lo_lo_lo {name = "pendingVec_lo_lo"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<8>
      %pendingVec_lo = firrtl.cat %c0_ui8, %pendingVec_lo_lo {name = "pendingVec_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %pendingVec = firrtl.cat %c0_ui16, %pendingVec_lo {name = "pendingVec"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %takenVec = firrtl.and %pendingVec, %enable_0_0 {name = "takenVec"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %12 = firrtl.orr %takenVec : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T = firrtl.not %12 {name = "_claimCompletion_0_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %13 = firrtl.bits %pendingVec 0 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %14 = firrtl.bits %enable_0_0 0 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_1 = firrtl.and %13, %14 {name = "_claimCompletion_0_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.bits %pendingVec 1 to 1 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %16 = firrtl.bits %enable_0_0 1 to 1 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_2 = firrtl.and %15, %16 {name = "_claimCompletion_0_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.bits %pendingVec 2 to 2 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %18 = firrtl.bits %enable_0_0 2 to 2 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_3 = firrtl.and %17, %18 {name = "_claimCompletion_0_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.bits %pendingVec 3 to 3 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %20 = firrtl.bits %enable_0_0 3 to 3 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_4 = firrtl.and %19, %20 {name = "_claimCompletion_0_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.bits %pendingVec 4 to 4 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %22 = firrtl.bits %enable_0_0 4 to 4 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_5 = firrtl.and %21, %22 {name = "_claimCompletion_0_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.bits %pendingVec 5 to 5 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %24 = firrtl.bits %enable_0_0 5 to 5 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_6 = firrtl.and %23, %24 {name = "_claimCompletion_0_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %25 = firrtl.bits %pendingVec 6 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %26 = firrtl.bits %enable_0_0 6 to 6 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_7 = firrtl.and %25, %26 {name = "_claimCompletion_0_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %27 = firrtl.bits %pendingVec 7 to 7 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %28 = firrtl.bits %enable_0_0 7 to 7 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_8 = firrtl.and %27, %28 {name = "_claimCompletion_0_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.bits %pendingVec 8 to 8 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %30 = firrtl.bits %enable_0_0 8 to 8 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_9 = firrtl.and %29, %30 {name = "_claimCompletion_0_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.bits %pendingVec 9 to 9 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %32 = firrtl.bits %enable_0_0 9 to 9 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_10 = firrtl.and %31, %32 {name = "_claimCompletion_0_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.bits %pendingVec 10 to 10 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %34 = firrtl.bits %enable_0_0 10 to 10 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_11 = firrtl.and %33, %34 {name = "_claimCompletion_0_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %35 = firrtl.bits %pendingVec 11 to 11 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %36 = firrtl.bits %enable_0_0 11 to 11 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_12 = firrtl.and %35, %36 {name = "_claimCompletion_0_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %37 = firrtl.bits %pendingVec 12 to 12 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %38 = firrtl.bits %enable_0_0 12 to 12 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_13 = firrtl.and %37, %38 {name = "_claimCompletion_0_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %39 = firrtl.bits %pendingVec 13 to 13 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %40 = firrtl.bits %enable_0_0 13 to 13 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_14 = firrtl.and %39, %40 {name = "_claimCompletion_0_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %41 = firrtl.bits %pendingVec 14 to 14 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %42 = firrtl.bits %enable_0_0 14 to 14 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_15 = firrtl.and %41, %42 {name = "_claimCompletion_0_T_15"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %43 = firrtl.bits %pendingVec 15 to 15 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %44 = firrtl.bits %enable_0_0 15 to 15 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_16 = firrtl.and %43, %44 {name = "_claimCompletion_0_T_16"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %45 = firrtl.bits %pendingVec 16 to 16 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %46 = firrtl.bits %enable_0_0 16 to 16 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_17 = firrtl.and %45, %46 {name = "_claimCompletion_0_T_17"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %47 = firrtl.bits %pendingVec 17 to 17 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %48 = firrtl.bits %enable_0_0 17 to 17 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_18 = firrtl.and %47, %48 {name = "_claimCompletion_0_T_18"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.bits %pendingVec 18 to 18 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %50 = firrtl.bits %enable_0_0 18 to 18 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_19 = firrtl.and %49, %50 {name = "_claimCompletion_0_T_19"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.bits %pendingVec 19 to 19 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %52 = firrtl.bits %enable_0_0 19 to 19 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_20 = firrtl.and %51, %52 {name = "_claimCompletion_0_T_20"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %53 = firrtl.bits %pendingVec 20 to 20 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %54 = firrtl.bits %enable_0_0 20 to 20 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_21 = firrtl.and %53, %54 {name = "_claimCompletion_0_T_21"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %55 = firrtl.bits %pendingVec 21 to 21 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %56 = firrtl.bits %enable_0_0 21 to 21 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_22 = firrtl.and %55, %56 {name = "_claimCompletion_0_T_22"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %57 = firrtl.bits %pendingVec 22 to 22 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %58 = firrtl.bits %enable_0_0 22 to 22 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_23 = firrtl.and %57, %58 {name = "_claimCompletion_0_T_23"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %59 = firrtl.bits %pendingVec 23 to 23 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %60 = firrtl.bits %enable_0_0 23 to 23 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_24 = firrtl.and %59, %60 {name = "_claimCompletion_0_T_24"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %61 = firrtl.bits %pendingVec 24 to 24 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %62 = firrtl.bits %enable_0_0 24 to 24 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_25 = firrtl.and %61, %62 {name = "_claimCompletion_0_T_25"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %63 = firrtl.bits %pendingVec 25 to 25 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %64 = firrtl.bits %enable_0_0 25 to 25 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_26 = firrtl.and %63, %64 {name = "_claimCompletion_0_T_26"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %65 = firrtl.bits %pendingVec 26 to 26 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %66 = firrtl.bits %enable_0_0 26 to 26 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_27 = firrtl.and %65, %66 {name = "_claimCompletion_0_T_27"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %67 = firrtl.bits %pendingVec 27 to 27 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %68 = firrtl.bits %enable_0_0 27 to 27 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_28 = firrtl.and %67, %68 {name = "_claimCompletion_0_T_28"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %69 = firrtl.bits %pendingVec 28 to 28 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %70 = firrtl.bits %enable_0_0 28 to 28 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_29 = firrtl.and %69, %70 {name = "_claimCompletion_0_T_29"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %71 = firrtl.bits %pendingVec 29 to 29 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %72 = firrtl.bits %enable_0_0 29 to 29 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_30 = firrtl.and %71, %72 {name = "_claimCompletion_0_T_30"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %73 = firrtl.bits %pendingVec 30 to 30 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %74 = firrtl.bits %enable_0_0 30 to 30 : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_31 = firrtl.and %73, %74 {name = "_claimCompletion_0_T_31"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_33 = firrtl.mux(%_claimCompletion_0_T_31, %c30_ui5, %c31_ui5) {name = "_claimCompletion_0_T_33"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_34 = firrtl.mux(%_claimCompletion_0_T_30, %c29_ui5, %_claimCompletion_0_T_33) {name = "_claimCompletion_0_T_34"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_35 = firrtl.mux(%_claimCompletion_0_T_29, %c28_ui5, %_claimCompletion_0_T_34) {name = "_claimCompletion_0_T_35"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_36 = firrtl.mux(%_claimCompletion_0_T_28, %c27_ui5, %_claimCompletion_0_T_35) {name = "_claimCompletion_0_T_36"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_37 = firrtl.mux(%_claimCompletion_0_T_27, %c26_ui5, %_claimCompletion_0_T_36) {name = "_claimCompletion_0_T_37"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_38 = firrtl.mux(%_claimCompletion_0_T_26, %c25_ui5, %_claimCompletion_0_T_37) {name = "_claimCompletion_0_T_38"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_39 = firrtl.mux(%_claimCompletion_0_T_25, %c24_ui5, %_claimCompletion_0_T_38) {name = "_claimCompletion_0_T_39"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_40 = firrtl.mux(%_claimCompletion_0_T_24, %c23_ui5, %_claimCompletion_0_T_39) {name = "_claimCompletion_0_T_40"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_41 = firrtl.mux(%_claimCompletion_0_T_23, %c22_ui5, %_claimCompletion_0_T_40) {name = "_claimCompletion_0_T_41"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_42 = firrtl.mux(%_claimCompletion_0_T_22, %c21_ui5, %_claimCompletion_0_T_41) {name = "_claimCompletion_0_T_42"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_43 = firrtl.mux(%_claimCompletion_0_T_21, %c20_ui5, %_claimCompletion_0_T_42) {name = "_claimCompletion_0_T_43"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_44 = firrtl.mux(%_claimCompletion_0_T_20, %c19_ui5, %_claimCompletion_0_T_43) {name = "_claimCompletion_0_T_44"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_45 = firrtl.mux(%_claimCompletion_0_T_19, %c18_ui5, %_claimCompletion_0_T_44) {name = "_claimCompletion_0_T_45"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_46 = firrtl.mux(%_claimCompletion_0_T_18, %c17_ui5, %_claimCompletion_0_T_45) {name = "_claimCompletion_0_T_46"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_47 = firrtl.mux(%_claimCompletion_0_T_17, %c16_ui5, %_claimCompletion_0_T_46) {name = "_claimCompletion_0_T_47"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_48 = firrtl.mux(%_claimCompletion_0_T_16, %c15_ui5, %_claimCompletion_0_T_47) {name = "_claimCompletion_0_T_48"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_49 = firrtl.mux(%_claimCompletion_0_T_15, %c14_ui5, %_claimCompletion_0_T_48) {name = "_claimCompletion_0_T_49"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_50 = firrtl.mux(%_claimCompletion_0_T_14, %c13_ui5, %_claimCompletion_0_T_49) {name = "_claimCompletion_0_T_50"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_51 = firrtl.mux(%_claimCompletion_0_T_13, %c12_ui5, %_claimCompletion_0_T_50) {name = "_claimCompletion_0_T_51"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_52 = firrtl.mux(%_claimCompletion_0_T_12, %c11_ui5, %_claimCompletion_0_T_51) {name = "_claimCompletion_0_T_52"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_53 = firrtl.mux(%_claimCompletion_0_T_11, %c10_ui5, %_claimCompletion_0_T_52) {name = "_claimCompletion_0_T_53"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_54 = firrtl.mux(%_claimCompletion_0_T_10, %c9_ui5, %_claimCompletion_0_T_53) {name = "_claimCompletion_0_T_54"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_55 = firrtl.mux(%_claimCompletion_0_T_9, %c8_ui5, %_claimCompletion_0_T_54) {name = "_claimCompletion_0_T_55"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_56 = firrtl.mux(%_claimCompletion_0_T_8, %c7_ui5, %_claimCompletion_0_T_55) {name = "_claimCompletion_0_T_56"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_57 = firrtl.mux(%_claimCompletion_0_T_7, %c6_ui5, %_claimCompletion_0_T_56) {name = "_claimCompletion_0_T_57"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_58 = firrtl.mux(%_claimCompletion_0_T_6, %c5_ui5, %_claimCompletion_0_T_57) {name = "_claimCompletion_0_T_58"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_59 = firrtl.mux(%_claimCompletion_0_T_5, %c4_ui5, %_claimCompletion_0_T_58) {name = "_claimCompletion_0_T_59"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_60 = firrtl.mux(%_claimCompletion_0_T_4, %c3_ui5, %_claimCompletion_0_T_59) {name = "_claimCompletion_0_T_60"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_61 = firrtl.mux(%_claimCompletion_0_T_3, %c2_ui5, %_claimCompletion_0_T_60) {name = "_claimCompletion_0_T_61"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %_claimCompletion_0_T_62 = firrtl.mux(%_claimCompletion_0_T_2, %c1_ui5, %_claimCompletion_0_T_61) {name = "_claimCompletion_0_T_62"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %75 = firrtl.or %_claimCompletion_0_T, %_claimCompletion_0_T_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_64 = firrtl.mux(%75, %c0_ui5, %_claimCompletion_0_T_62) {name = "_claimCompletion_0_T_64"} : (!firrtl.uint<1>, !firrtl.uint<5>, !firrtl.uint<5>) -> !firrtl.uint<5>
      %76 = firrtl.pad %_claimCompletion_0_T_64, 32 : (!firrtl.uint<5>) -> !firrtl.uint<32>
      %rdata = firrtl.wire : !firrtl.uint<32>
      %77 = firrtl.bits %io_in_aw_bits_addr 25 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<26>
      %78 = firrtl.bits %io_in_w_bits_data 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %79 = firrtl.bits %io_in_aw_bits_addr 2 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<3>
      %80 = firrtl.dshr %io_in_w_bits_strb, %79 : (!firrtl.uint<8>, !firrtl.uint<3>) -> !firrtl.uint<8>
      %81 = firrtl.bits %80 0 to 0 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %82 = firrtl.bits %80 1 to 1 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %83 = firrtl.bits %80 2 to 2 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %84 = firrtl.bits %80 3 to 3 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %85 = firrtl.bits %80 4 to 4 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %86 = firrtl.bits %80 5 to 5 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %87 = firrtl.bits %80 6 to 6 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %88 = firrtl.bits %80 7 to 7 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %89 = firrtl.mux(%81, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %90 = firrtl.mux(%82, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %91 = firrtl.mux(%83, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %92 = firrtl.mux(%84, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %93 = firrtl.mux(%85, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %94 = firrtl.mux(%86, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %95 = firrtl.mux(%87, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %96 = firrtl.mux(%88, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %lo_lo = firrtl.cat %90, %89 {name = "lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo_hi = firrtl.cat %92, %91 {name = "lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo = firrtl.cat %lo_hi, %lo_lo {name = "lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %hi_lo = firrtl.cat %94, %93 {name = "hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi_hi = firrtl.cat %96, %95 {name = "hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi = firrtl.cat %hi_hi, %hi_lo {name = "hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %97 = firrtl.cat %hi, %lo : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %98 = firrtl.bits %97 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_rdata_T = firrtl.eq %_claimCompletionMap_T_1, %c4096_ui13 {name = "_rdata_T"} : (!firrtl.uint<26>, !firrtl.uint<13>) -> !firrtl.uint<1>
      %_rdata_T_1 = firrtl.eq %_claimCompletionMap_T_1, %c8192_ui14 {name = "_rdata_T_1"} : (!firrtl.uint<26>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %_rdata_T_2 = firrtl.eq %_claimCompletionMap_T_1, %c2097156_ui22 {name = "_rdata_T_2"} : (!firrtl.uint<26>, !firrtl.uint<22>) -> !firrtl.uint<1>
      %_rdata_T_3 = firrtl.eq %_claimCompletionMap_T_1, %c4_ui3 {name = "_rdata_T_3"} : (!firrtl.uint<26>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdata_T_4 = firrtl.eq %_claimCompletionMap_T_1, %c2097152_ui22 {name = "_rdata_T_4"} : (!firrtl.uint<26>, !firrtl.uint<22>) -> !firrtl.uint<1>
      %_rdata_T_5 = firrtl.mux(%_rdata_T, %pendingMap_0_2_1, %c0_ui32) {name = "_rdata_T_5"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_6 = firrtl.mux(%_rdata_T_1, %enable_0_0, %c0_ui32) {name = "_rdata_T_6"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_7 = firrtl.mux(%_rdata_T_2, %claimCompletion_0, %c0_ui32) {name = "_rdata_T_7"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_8 = firrtl.mux(%_rdata_T_3, %priority_0, %c0_ui32) {name = "_rdata_T_8"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_9 = firrtl.mux(%_rdata_T_4, %threshold_0, %c0_ui32) {name = "_rdata_T_9"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_10 = firrtl.or %_rdata_T_5, %_rdata_T_6 {name = "_rdata_T_10"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_11 = firrtl.or %_rdata_T_10, %_rdata_T_7 {name = "_rdata_T_11"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_12 = firrtl.or %_rdata_T_11, %_rdata_T_8 {name = "_rdata_T_12"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_13 = firrtl.or %_rdata_T_12, %_rdata_T_9 {name = "_rdata_T_13"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_WIRE = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %_rdata_WIRE, %_rdata_T_13 : !firrtl.uint<32>
      firrtl.strictconnect %rdata, %_rdata_WIRE : !firrtl.uint<32>
      %99 = firrtl.eq %77, %c8192_ui14 : (!firrtl.uint<26>, !firrtl.uint<14>) -> !firrtl.uint<1>
      %100 = firrtl.and %_io_in_b_valid_T_1, %99 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_enable_0_0_T = firrtl.and %78, %98 {name = "_enable_0_0_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_enable_0_0_T_1 = firrtl.not %98 {name = "_enable_0_0_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_enable_0_0_T_2 = firrtl.and %enable_0_0, %_enable_0_0_T_1 {name = "_enable_0_0_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_enable_0_0_T_3 = firrtl.or %_enable_0_0_T, %_enable_0_0_T_2 {name = "_enable_0_0_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %101 = firrtl.mux(%100, %_enable_0_0_T_3, %enable_0_0) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %enable_0_0, %101 : !firrtl.uint<32>
      %102 = firrtl.eq %77, %c2097156_ui22 : (!firrtl.uint<26>, !firrtl.uint<22>) -> !firrtl.uint<1>
      %103 = firrtl.and %_io_in_b_valid_T_1, %102 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_claimCompletion_0_T_65 = firrtl.and %78, %98 {name = "_claimCompletion_0_T_65"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_claimCompletion_0_T_66 = firrtl.not %98 {name = "_claimCompletion_0_T_66"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_claimCompletion_0_T_67 = firrtl.and %claimCompletion_0, %_claimCompletion_0_T_66 {name = "_claimCompletion_0_T_67"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_claimCompletion_0_T_69 = firrtl.or %_claimCompletion_0_T_65, %_claimCompletion_0_T_67 {name = "_claimCompletion_0_T_69"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_claimCompletion_0_T_70 = firrtl.bits %_claimCompletion_0_T_69 0 to 0 {name = "_claimCompletion_0_T_70"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %104 = firrtl.and %103, %_claimCompletion_0_T_70 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %105 = firrtl.mux(%104, %c0_ui1, %9) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %inHandle_1, %105 : !firrtl.uint<1>
      %106 = firrtl.mux(%103, %c0_ui32, %76) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %claimCompletion_0, %106 : !firrtl.uint<32>
      %107 = firrtl.eq %77, %c4_ui3 : (!firrtl.uint<26>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %108 = firrtl.and %_io_in_b_valid_T_1, %107 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_priority_0_T = firrtl.and %78, %98 {name = "_priority_0_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_priority_0_T_1 = firrtl.not %98 {name = "_priority_0_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_priority_0_T_2 = firrtl.and %priority_0, %_priority_0_T_1 {name = "_priority_0_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_priority_0_T_3 = firrtl.or %_priority_0_T, %_priority_0_T_2 {name = "_priority_0_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %109 = firrtl.mux(%108, %_priority_0_T_3, %priority_0) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %priority_0, %109 : !firrtl.uint<32>
      %110 = firrtl.eq %77, %c2097152_ui22 : (!firrtl.uint<26>, !firrtl.uint<22>) -> !firrtl.uint<1>
      %111 = firrtl.and %_io_in_b_valid_T_1, %110 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_threshold_0_T = firrtl.and %78, %98 {name = "_threshold_0_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_threshold_0_T_1 = firrtl.not %98 {name = "_threshold_0_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_threshold_0_T_2 = firrtl.and %threshold_0, %_threshold_0_T_1 {name = "_threshold_0_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_threshold_0_T_3 = firrtl.or %_threshold_0_T, %_threshold_0_T_2 {name = "_threshold_0_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %112 = firrtl.mux(%111, %_threshold_0_T_3, %threshold_0) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %threshold_0, %112 : !firrtl.uint<32>
      %_io_in_r_bits_data_T = firrtl.cat %rdata, %rdata {name = "_io_in_r_bits_data_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %_io_in_r_bits_data_T : !firrtl.uint<64>
      %_io_extra_meip_0_T = firrtl.orr %claimCompletion_0 {name = "_io_extra_meip_0_T"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_extra_meip_0_6, %_io_extra_meip_0_T : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_meip_0__bore, %io_extra_meip_0_6 : !firrtl.uint<1>
    }
    firrtl.module private @NutShell(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %io_mem_aw_ready: !firrtl.uint<1>, out %io_mem_aw_valid: !firrtl.uint<1>, out %io_mem_aw_bits_addr: !firrtl.uint<32>, out %io_mem_aw_bits_len: !firrtl.uint<8>, in %io_mem_w_ready: !firrtl.uint<1>, out %io_mem_w_valid: !firrtl.uint<1>, out %io_mem_w_bits_data: !firrtl.uint<64>, out %io_mem_w_bits_last: !firrtl.uint<1>, in %io_mem_b_valid: !firrtl.uint<1>, in %io_mem_ar_ready: !firrtl.uint<1>, out %io_mem_ar_valid: !firrtl.uint<1>, out %io_mem_ar_bits_addr: !firrtl.uint<32>, out %io_mem_ar_bits_len: !firrtl.uint<8>, in %io_mem_r_valid: !firrtl.uint<1>, in %io_mem_r_bits_data: !firrtl.uint<64>, in %io_mem_r_bits_last: !firrtl.uint<1>, in %io_mmio_req_ready: !firrtl.uint<1>, out %io_mmio_req_valid: !firrtl.uint<1>, out %io_mmio_req_bits_addr: !firrtl.uint<32>, out %io_mmio_req_bits_size: !firrtl.uint<3>, out %io_mmio_req_bits_cmd: !firrtl.uint<4>, out %io_mmio_req_bits_wmask: !firrtl.uint<8>, out %io_mmio_req_bits_wdata: !firrtl.uint<64>, out %io_mmio_resp_ready: !firrtl.uint<1>, in %io_mmio_resp_valid: !firrtl.uint<1>, in %io_mmio_resp_bits_cmd: !firrtl.uint<4>, in %io_mmio_resp_bits_rdata: !firrtl.uint<64>, out %io_frontend_aw_ready: !firrtl.uint<1>, in %io_frontend_aw_valid: !firrtl.uint<1>, in %io_frontend_aw_bits_addr: !firrtl.uint<32>, out %io_frontend_w_ready: !firrtl.uint<1>, in %io_frontend_w_valid: !firrtl.uint<1>, in %io_frontend_w_bits_data: !firrtl.uint<64>, in %io_frontend_w_bits_strb: !firrtl.uint<8>, in %io_frontend_b_ready: !firrtl.uint<1>, out %io_frontend_b_valid: !firrtl.uint<1>, out %io_frontend_ar_ready: !firrtl.uint<1>, in %io_frontend_ar_valid: !firrtl.uint<1>, in %io_frontend_ar_bits_addr: !firrtl.uint<32>, in %io_frontend_r_ready: !firrtl.uint<1>, out %io_frontend_r_valid: !firrtl.uint<1>, out %io_frontend_r_bits_data: !firrtl.uint<64>, in %io_meip: !firrtl.uint<1>) {
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %io_mem_aw_valid_0 = firrtl.wire {name = "io_mem_aw_valid"} : !firrtl.uint<1>
      %io_mem_aw_bits_addr_1 = firrtl.wire {name = "io_mem_aw_bits_addr"} : !firrtl.uint<32>
      %io_mem_aw_bits_len_2 = firrtl.wire {name = "io_mem_aw_bits_len"} : !firrtl.uint<8>
      %io_mem_w_valid_3 = firrtl.wire {name = "io_mem_w_valid"} : !firrtl.uint<1>
      %io_mem_w_bits_data_4 = firrtl.wire {name = "io_mem_w_bits_data"} : !firrtl.uint<64>
      %io_mem_w_bits_last_5 = firrtl.wire {name = "io_mem_w_bits_last"} : !firrtl.uint<1>
      %io_mem_ar_valid_6 = firrtl.wire {name = "io_mem_ar_valid"} : !firrtl.uint<1>
      %io_mem_ar_bits_addr_7 = firrtl.wire {name = "io_mem_ar_bits_addr"} : !firrtl.uint<32>
      %io_mem_ar_bits_len_8 = firrtl.wire {name = "io_mem_ar_bits_len"} : !firrtl.uint<8>
      %io_mmio_req_valid_9 = firrtl.wire {name = "io_mmio_req_valid"} : !firrtl.uint<1>
      %io_mmio_req_bits_addr_10 = firrtl.wire {name = "io_mmio_req_bits_addr"} : !firrtl.uint<32>
      %io_mmio_req_bits_size_11 = firrtl.wire {name = "io_mmio_req_bits_size"} : !firrtl.uint<3>
      %io_mmio_req_bits_cmd_12 = firrtl.wire {name = "io_mmio_req_bits_cmd"} : !firrtl.uint<4>
      %io_mmio_req_bits_wmask_13 = firrtl.wire {name = "io_mmio_req_bits_wmask"} : !firrtl.uint<8>
      %io_mmio_req_bits_wdata_14 = firrtl.wire {name = "io_mmio_req_bits_wdata"} : !firrtl.uint<64>
      %io_mmio_resp_ready_15 = firrtl.wire {name = "io_mmio_resp_ready"} : !firrtl.uint<1>
      %io_frontend_aw_ready_16 = firrtl.wire {name = "io_frontend_aw_ready"} : !firrtl.uint<1>
      %io_frontend_w_ready_17 = firrtl.wire {name = "io_frontend_w_ready"} : !firrtl.uint<1>
      %io_frontend_b_valid_18 = firrtl.wire {name = "io_frontend_b_valid"} : !firrtl.uint<1>
      %io_frontend_ar_ready_19 = firrtl.wire {name = "io_frontend_ar_ready"} : !firrtl.uint<1>
      %io_frontend_r_valid_20 = firrtl.wire {name = "io_frontend_r_valid"} : !firrtl.uint<1>
      %io_frontend_r_bits_data_21 = firrtl.wire {name = "io_frontend_r_bits_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_aw_valid, %io_mem_aw_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_aw_bits_addr, %io_mem_aw_bits_addr_1 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_aw_bits_len, %io_mem_aw_bits_len_2 : !firrtl.uint<8>
      firrtl.strictconnect %io_mem_w_valid, %io_mem_w_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_w_bits_data, %io_mem_w_bits_data_4 : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_w_bits_last, %io_mem_w_bits_last_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_ar_valid, %io_mem_ar_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_ar_bits_addr, %io_mem_ar_bits_addr_7 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_ar_bits_len, %io_mem_ar_bits_len_8 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_valid, %io_mmio_req_valid_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr, %io_mmio_req_bits_addr_10 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size, %io_mmio_req_bits_size_11 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd, %io_mmio_req_bits_cmd_12 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask, %io_mmio_req_bits_wmask_13 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata, %io_mmio_req_bits_wdata_14 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_resp_ready, %io_mmio_resp_ready_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_aw_ready, %io_frontend_aw_ready_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_w_ready, %io_frontend_w_ready_17 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_b_valid, %io_frontend_b_valid_18 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_ar_ready, %io_frontend_ar_ready_19 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_r_valid, %io_frontend_r_valid_20 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_r_bits_data, %io_frontend_r_bits_data_21 : !firrtl.uint<64>
      %nutcore_clock, %nutcore_reset, %nutcore_io_imem_mem_req_ready, %nutcore_io_imem_mem_req_valid, %nutcore_io_imem_mem_req_bits_addr, %nutcore_io_imem_mem_req_bits_cmd, %nutcore_io_imem_mem_req_bits_wdata, %nutcore_io_imem_mem_resp_valid, %nutcore_io_imem_mem_resp_bits_cmd, %nutcore_io_imem_mem_resp_bits_rdata, %nutcore_io_dmem_mem_req_ready, %nutcore_io_dmem_mem_req_valid, %nutcore_io_dmem_mem_req_bits_addr, %nutcore_io_dmem_mem_req_bits_cmd, %nutcore_io_dmem_mem_req_bits_wdata, %nutcore_io_dmem_mem_resp_valid, %nutcore_io_dmem_mem_resp_bits_cmd, %nutcore_io_dmem_mem_resp_bits_rdata, %nutcore_io_dmem_coh_req_ready, %nutcore_io_dmem_coh_req_valid, %nutcore_io_dmem_coh_req_bits_addr, %nutcore_io_dmem_coh_req_bits_wdata, %nutcore_io_dmem_coh_resp_valid, %nutcore_io_dmem_coh_resp_bits_cmd, %nutcore_io_dmem_coh_resp_bits_rdata, %nutcore_io_mmio_req_ready, %nutcore_io_mmio_req_valid, %nutcore_io_mmio_req_bits_addr, %nutcore_io_mmio_req_bits_size, %nutcore_io_mmio_req_bits_cmd, %nutcore_io_mmio_req_bits_wmask, %nutcore_io_mmio_req_bits_wdata, %nutcore_io_mmio_resp_valid, %nutcore_io_mmio_resp_bits_cmd, %nutcore_io_mmio_resp_bits_rdata, %nutcore_io_frontend_req_ready, %nutcore_io_frontend_req_valid, %nutcore_io_frontend_req_bits_addr, %nutcore_io_frontend_req_bits_size, %nutcore_io_frontend_req_bits_cmd, %nutcore_io_frontend_req_bits_wmask, %nutcore_io_frontend_req_bits_wdata, %nutcore_io_frontend_resp_ready, %nutcore_io_frontend_resp_valid, %nutcore_io_frontend_resp_bits_cmd, %nutcore_io_frontend_resp_bits_rdata, %nutcore_frontend_idu__WIRE__bore, %nutcore_backend_exu_csr_msip__bore, %nutcore_backend_exu_csr_meip__bore, %nutcore_backend_exu_csr_mtip__bore = firrtl.instance nutcore @NutCore(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_imem_mem_req_ready: !firrtl.uint<1>, out io_imem_mem_req_valid: !firrtl.uint<1>, out io_imem_mem_req_bits_addr: !firrtl.uint<32>, out io_imem_mem_req_bits_cmd: !firrtl.uint<4>, out io_imem_mem_req_bits_wdata: !firrtl.uint<64>, in io_imem_mem_resp_valid: !firrtl.uint<1>, in io_imem_mem_resp_bits_cmd: !firrtl.uint<4>, in io_imem_mem_resp_bits_rdata: !firrtl.uint<64>, in io_dmem_mem_req_ready: !firrtl.uint<1>, out io_dmem_mem_req_valid: !firrtl.uint<1>, out io_dmem_mem_req_bits_addr: !firrtl.uint<32>, out io_dmem_mem_req_bits_cmd: !firrtl.uint<4>, out io_dmem_mem_req_bits_wdata: !firrtl.uint<64>, in io_dmem_mem_resp_valid: !firrtl.uint<1>, in io_dmem_mem_resp_bits_cmd: !firrtl.uint<4>, in io_dmem_mem_resp_bits_rdata: !firrtl.uint<64>, out io_dmem_coh_req_ready: !firrtl.uint<1>, in io_dmem_coh_req_valid: !firrtl.uint<1>, in io_dmem_coh_req_bits_addr: !firrtl.uint<32>, in io_dmem_coh_req_bits_wdata: !firrtl.uint<64>, out io_dmem_coh_resp_valid: !firrtl.uint<1>, out io_dmem_coh_resp_bits_cmd: !firrtl.uint<4>, out io_dmem_coh_resp_bits_rdata: !firrtl.uint<64>, in io_mmio_req_ready: !firrtl.uint<1>, out io_mmio_req_valid: !firrtl.uint<1>, out io_mmio_req_bits_addr: !firrtl.uint<32>, out io_mmio_req_bits_size: !firrtl.uint<3>, out io_mmio_req_bits_cmd: !firrtl.uint<4>, out io_mmio_req_bits_wmask: !firrtl.uint<8>, out io_mmio_req_bits_wdata: !firrtl.uint<64>, in io_mmio_resp_valid: !firrtl.uint<1>, in io_mmio_resp_bits_cmd: !firrtl.uint<4>, in io_mmio_resp_bits_rdata: !firrtl.uint<64>, out io_frontend_req_ready: !firrtl.uint<1>, in io_frontend_req_valid: !firrtl.uint<1>, in io_frontend_req_bits_addr: !firrtl.uint<32>, in io_frontend_req_bits_size: !firrtl.uint<3>, in io_frontend_req_bits_cmd: !firrtl.uint<4>, in io_frontend_req_bits_wmask: !firrtl.uint<8>, in io_frontend_req_bits_wdata: !firrtl.uint<64>, in io_frontend_resp_ready: !firrtl.uint<1>, out io_frontend_resp_valid: !firrtl.uint<1>, out io_frontend_resp_bits_cmd: !firrtl.uint<4>, out io_frontend_resp_bits_rdata: !firrtl.uint<64>, out frontend_idu__WIRE__bore: !firrtl.uint<1>, in backend_exu_csr_msip__bore: !firrtl.uint<1>, in backend_exu_csr_meip__bore: !firrtl.uint<1>, in backend_exu_csr_mtip__bore: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<32>
      %3 = firrtl.wire : !firrtl.uint<4>
      %4 = firrtl.wire : !firrtl.uint<64>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<4>
      %7 = firrtl.wire : !firrtl.uint<64>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<32>
      %11 = firrtl.wire : !firrtl.uint<4>
      %12 = firrtl.wire : !firrtl.uint<64>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<4>
      %15 = firrtl.wire : !firrtl.uint<64>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<32>
      %19 = firrtl.wire : !firrtl.uint<64>
      %20 = firrtl.wire : !firrtl.uint<1>
      %21 = firrtl.wire : !firrtl.uint<4>
      %22 = firrtl.wire : !firrtl.uint<64>
      %23 = firrtl.wire : !firrtl.uint<1>
      %24 = firrtl.wire : !firrtl.uint<1>
      %25 = firrtl.wire : !firrtl.uint<32>
      %26 = firrtl.wire : !firrtl.uint<3>
      %27 = firrtl.wire : !firrtl.uint<4>
      %28 = firrtl.wire : !firrtl.uint<8>
      %29 = firrtl.wire : !firrtl.uint<64>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<4>
      %32 = firrtl.wire : !firrtl.uint<64>
      %33 = firrtl.wire : !firrtl.uint<1>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<32>
      %36 = firrtl.wire : !firrtl.uint<3>
      %37 = firrtl.wire : !firrtl.uint<4>
      %38 = firrtl.wire : !firrtl.uint<8>
      %39 = firrtl.wire : !firrtl.uint<64>
      %40 = firrtl.wire : !firrtl.uint<1>
      %41 = firrtl.wire : !firrtl.uint<1>
      %42 = firrtl.wire : !firrtl.uint<4>
      %43 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_io_imem_mem_req_ready, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %nutcore_io_imem_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %2, %nutcore_io_imem_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %3, %nutcore_io_imem_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %4, %nutcore_io_imem_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_io_imem_mem_resp_valid, %5 : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_io_imem_mem_resp_bits_cmd, %6 : !firrtl.uint<4>
      firrtl.strictconnect %nutcore_io_imem_mem_resp_bits_rdata, %7 : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_io_dmem_mem_req_ready, %8 : !firrtl.uint<1>
      firrtl.strictconnect %9, %nutcore_io_dmem_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %10, %nutcore_io_dmem_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %11, %nutcore_io_dmem_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %12, %nutcore_io_dmem_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_io_dmem_mem_resp_valid, %13 : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_io_dmem_mem_resp_bits_cmd, %14 : !firrtl.uint<4>
      firrtl.strictconnect %nutcore_io_dmem_mem_resp_bits_rdata, %15 : !firrtl.uint<64>
      firrtl.strictconnect %16, %nutcore_io_dmem_coh_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_io_dmem_coh_req_valid, %17 : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_io_dmem_coh_req_bits_addr, %18 : !firrtl.uint<32>
      firrtl.strictconnect %nutcore_io_dmem_coh_req_bits_wdata, %19 : !firrtl.uint<64>
      firrtl.strictconnect %20, %nutcore_io_dmem_coh_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %21, %nutcore_io_dmem_coh_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %22, %nutcore_io_dmem_coh_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_io_mmio_req_ready, %23 : !firrtl.uint<1>
      firrtl.strictconnect %24, %nutcore_io_mmio_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %25, %nutcore_io_mmio_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %26, %nutcore_io_mmio_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %27, %nutcore_io_mmio_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %28, %nutcore_io_mmio_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %29, %nutcore_io_mmio_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_io_mmio_resp_valid, %30 : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_io_mmio_resp_bits_cmd, %31 : !firrtl.uint<4>
      firrtl.strictconnect %nutcore_io_mmio_resp_bits_rdata, %32 : !firrtl.uint<64>
      firrtl.strictconnect %33, %nutcore_io_frontend_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_io_frontend_req_valid, %34 : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_io_frontend_req_bits_addr, %35 : !firrtl.uint<32>
      firrtl.strictconnect %nutcore_io_frontend_req_bits_size, %36 : !firrtl.uint<3>
      firrtl.strictconnect %nutcore_io_frontend_req_bits_cmd, %37 : !firrtl.uint<4>
      firrtl.strictconnect %nutcore_io_frontend_req_bits_wmask, %38 : !firrtl.uint<8>
      firrtl.strictconnect %nutcore_io_frontend_req_bits_wdata, %39 : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_io_frontend_resp_ready, %40 : !firrtl.uint<1>
      firrtl.strictconnect %41, %nutcore_io_frontend_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %42, %nutcore_io_frontend_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %43, %nutcore_io_frontend_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %nutcore_clock, %clock : !firrtl.clock
      firrtl.strictconnect %nutcore_reset, %reset : !firrtl.uint<1>
      %cohMg_clock, %cohMg_reset, %cohMg_io_in_req_ready, %cohMg_io_in_req_valid, %cohMg_io_in_req_bits_addr, %cohMg_io_in_req_bits_cmd, %cohMg_io_in_req_bits_wdata, %cohMg_io_in_resp_valid, %cohMg_io_in_resp_bits_cmd, %cohMg_io_in_resp_bits_rdata, %cohMg_io_out_mem_req_ready, %cohMg_io_out_mem_req_valid, %cohMg_io_out_mem_req_bits_addr, %cohMg_io_out_mem_req_bits_cmd, %cohMg_io_out_mem_req_bits_wdata, %cohMg_io_out_mem_resp_valid, %cohMg_io_out_mem_resp_bits_cmd, %cohMg_io_out_mem_resp_bits_rdata, %cohMg_io_out_coh_req_ready, %cohMg_io_out_coh_req_valid, %cohMg_io_out_coh_req_bits_addr, %cohMg_io_out_coh_req_bits_wdata, %cohMg_io_out_coh_resp_valid, %cohMg_io_out_coh_resp_bits_cmd, %cohMg_io_out_coh_resp_bits_rdata = firrtl.instance cohMg @CoherenceManager(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wdata: !firrtl.uint<64>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_mem_req_ready: !firrtl.uint<1>, out io_out_mem_req_valid: !firrtl.uint<1>, out io_out_mem_req_bits_addr: !firrtl.uint<32>, out io_out_mem_req_bits_cmd: !firrtl.uint<4>, out io_out_mem_req_bits_wdata: !firrtl.uint<64>, in io_out_mem_resp_valid: !firrtl.uint<1>, in io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in io_out_mem_resp_bits_rdata: !firrtl.uint<64>, in io_out_coh_req_ready: !firrtl.uint<1>, out io_out_coh_req_valid: !firrtl.uint<1>, out io_out_coh_req_bits_addr: !firrtl.uint<32>, out io_out_coh_req_bits_wdata: !firrtl.uint<64>, in io_out_coh_resp_valid: !firrtl.uint<1>, in io_out_coh_resp_bits_cmd: !firrtl.uint<4>, in io_out_coh_resp_bits_rdata: !firrtl.uint<64>)
      %44 = firrtl.wire : !firrtl.uint<1>
      %45 = firrtl.wire : !firrtl.uint<1>
      %46 = firrtl.wire : !firrtl.uint<32>
      %47 = firrtl.wire : !firrtl.uint<4>
      %48 = firrtl.wire : !firrtl.uint<64>
      %49 = firrtl.wire : !firrtl.uint<1>
      %50 = firrtl.wire : !firrtl.uint<4>
      %51 = firrtl.wire : !firrtl.uint<64>
      %52 = firrtl.wire : !firrtl.uint<1>
      %53 = firrtl.wire : !firrtl.uint<1>
      %54 = firrtl.wire : !firrtl.uint<32>
      %55 = firrtl.wire : !firrtl.uint<4>
      %56 = firrtl.wire : !firrtl.uint<64>
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<4>
      %59 = firrtl.wire : !firrtl.uint<64>
      %60 = firrtl.wire : !firrtl.uint<1>
      %61 = firrtl.wire : !firrtl.uint<1>
      %62 = firrtl.wire : !firrtl.uint<32>
      %63 = firrtl.wire : !firrtl.uint<64>
      %64 = firrtl.wire : !firrtl.uint<1>
      %65 = firrtl.wire : !firrtl.uint<4>
      %66 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %44, %cohMg_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %cohMg_io_in_req_valid, %45 : !firrtl.uint<1>
      firrtl.strictconnect %cohMg_io_in_req_bits_addr, %46 : !firrtl.uint<32>
      firrtl.strictconnect %cohMg_io_in_req_bits_cmd, %47 : !firrtl.uint<4>
      firrtl.strictconnect %cohMg_io_in_req_bits_wdata, %48 : !firrtl.uint<64>
      firrtl.strictconnect %49, %cohMg_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %50, %cohMg_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %51, %cohMg_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %cohMg_io_out_mem_req_ready, %52 : !firrtl.uint<1>
      firrtl.strictconnect %53, %cohMg_io_out_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %54, %cohMg_io_out_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %55, %cohMg_io_out_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %56, %cohMg_io_out_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %cohMg_io_out_mem_resp_valid, %57 : !firrtl.uint<1>
      firrtl.strictconnect %cohMg_io_out_mem_resp_bits_cmd, %58 : !firrtl.uint<4>
      firrtl.strictconnect %cohMg_io_out_mem_resp_bits_rdata, %59 : !firrtl.uint<64>
      firrtl.strictconnect %cohMg_io_out_coh_req_ready, %60 : !firrtl.uint<1>
      firrtl.strictconnect %61, %cohMg_io_out_coh_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %62, %cohMg_io_out_coh_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %63, %cohMg_io_out_coh_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %cohMg_io_out_coh_resp_valid, %64 : !firrtl.uint<1>
      firrtl.strictconnect %cohMg_io_out_coh_resp_bits_cmd, %65 : !firrtl.uint<4>
      firrtl.strictconnect %cohMg_io_out_coh_resp_bits_rdata, %66 : !firrtl.uint<64>
      firrtl.strictconnect %cohMg_clock, %clock : !firrtl.clock
      firrtl.strictconnect %cohMg_reset, %reset : !firrtl.uint<1>
      %xbar_clock, %xbar_reset, %xbar_io_in_0_req_ready, %xbar_io_in_0_req_valid, %xbar_io_in_0_req_bits_addr, %xbar_io_in_0_req_bits_size, %xbar_io_in_0_req_bits_cmd, %xbar_io_in_0_req_bits_wmask, %xbar_io_in_0_req_bits_wdata, %xbar_io_in_0_resp_valid, %xbar_io_in_0_resp_bits_cmd, %xbar_io_in_0_resp_bits_rdata, %xbar_io_in_1_req_ready, %xbar_io_in_1_req_valid, %xbar_io_in_1_req_bits_addr, %xbar_io_in_1_req_bits_size, %xbar_io_in_1_req_bits_cmd, %xbar_io_in_1_req_bits_wmask, %xbar_io_in_1_req_bits_wdata, %xbar_io_in_1_resp_valid, %xbar_io_in_1_resp_bits_cmd, %xbar_io_in_1_resp_bits_rdata, %xbar_io_out_req_ready, %xbar_io_out_req_valid, %xbar_io_out_req_bits_addr, %xbar_io_out_req_bits_size, %xbar_io_out_req_bits_cmd, %xbar_io_out_req_bits_wmask, %xbar_io_out_req_bits_wdata, %xbar_io_out_resp_valid, %xbar_io_out_resp_bits_cmd, %xbar_io_out_resp_bits_rdata = firrtl.instance xbar @SimpleBusCrossbarNto1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_0_req_ready: !firrtl.uint<1>, in io_in_0_req_valid: !firrtl.uint<1>, in io_in_0_req_bits_addr: !firrtl.uint<32>, in io_in_0_req_bits_size: !firrtl.uint<3>, in io_in_0_req_bits_cmd: !firrtl.uint<4>, in io_in_0_req_bits_wmask: !firrtl.uint<8>, in io_in_0_req_bits_wdata: !firrtl.uint<64>, out io_in_0_resp_valid: !firrtl.uint<1>, out io_in_0_resp_bits_cmd: !firrtl.uint<4>, out io_in_0_resp_bits_rdata: !firrtl.uint<64>, out io_in_1_req_ready: !firrtl.uint<1>, in io_in_1_req_valid: !firrtl.uint<1>, in io_in_1_req_bits_addr: !firrtl.uint<32>, in io_in_1_req_bits_size: !firrtl.uint<3>, in io_in_1_req_bits_cmd: !firrtl.uint<4>, in io_in_1_req_bits_wmask: !firrtl.uint<8>, in io_in_1_req_bits_wdata: !firrtl.uint<64>, out io_in_1_resp_valid: !firrtl.uint<1>, out io_in_1_resp_bits_cmd: !firrtl.uint<4>, out io_in_1_resp_bits_rdata: !firrtl.uint<64>, in io_out_req_ready: !firrtl.uint<1>, out io_out_req_valid: !firrtl.uint<1>, out io_out_req_bits_addr: !firrtl.uint<32>, out io_out_req_bits_size: !firrtl.uint<3>, out io_out_req_bits_cmd: !firrtl.uint<4>, out io_out_req_bits_wmask: !firrtl.uint<8>, out io_out_req_bits_wdata: !firrtl.uint<64>, in io_out_resp_valid: !firrtl.uint<1>, in io_out_resp_bits_cmd: !firrtl.uint<4>, in io_out_resp_bits_rdata: !firrtl.uint<64>)
      %67 = firrtl.wire : !firrtl.uint<1>
      %68 = firrtl.wire : !firrtl.uint<1>
      %69 = firrtl.wire : !firrtl.uint<32>
      %70 = firrtl.wire : !firrtl.uint<4>
      %71 = firrtl.wire : !firrtl.uint<64>
      %72 = firrtl.wire : !firrtl.uint<1>
      %73 = firrtl.wire : !firrtl.uint<4>
      %74 = firrtl.wire : !firrtl.uint<64>
      %75 = firrtl.wire : !firrtl.uint<1>
      %76 = firrtl.wire : !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<32>
      %78 = firrtl.wire : !firrtl.uint<4>
      %79 = firrtl.wire : !firrtl.uint<64>
      %80 = firrtl.wire : !firrtl.uint<1>
      %81 = firrtl.wire : !firrtl.uint<4>
      %82 = firrtl.wire : !firrtl.uint<64>
      %83 = firrtl.wire : !firrtl.uint<1>
      %84 = firrtl.wire : !firrtl.uint<1>
      %85 = firrtl.wire : !firrtl.uint<32>
      %86 = firrtl.wire : !firrtl.uint<3>
      %87 = firrtl.wire : !firrtl.uint<4>
      %88 = firrtl.wire : !firrtl.uint<8>
      %89 = firrtl.wire : !firrtl.uint<64>
      %90 = firrtl.wire : !firrtl.uint<1>
      %91 = firrtl.wire : !firrtl.uint<4>
      %92 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %67, %xbar_io_in_0_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_in_0_req_valid, %68 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_in_0_req_bits_addr, %69 : !firrtl.uint<32>
      firrtl.strictconnect %xbar_io_in_0_req_bits_size, %c3_ui3 : !firrtl.uint<3>
      firrtl.strictconnect %xbar_io_in_0_req_bits_cmd, %70 : !firrtl.uint<4>
      firrtl.strictconnect %xbar_io_in_0_req_bits_wmask, %c255_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %xbar_io_in_0_req_bits_wdata, %71 : !firrtl.uint<64>
      firrtl.strictconnect %72, %xbar_io_in_0_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %73, %xbar_io_in_0_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %74, %xbar_io_in_0_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %75, %xbar_io_in_1_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_in_1_req_valid, %76 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_in_1_req_bits_addr, %77 : !firrtl.uint<32>
      firrtl.strictconnect %xbar_io_in_1_req_bits_size, %c3_ui3 : !firrtl.uint<3>
      firrtl.strictconnect %xbar_io_in_1_req_bits_cmd, %78 : !firrtl.uint<4>
      firrtl.strictconnect %xbar_io_in_1_req_bits_wmask, %c255_ui8 : !firrtl.uint<8>
      firrtl.strictconnect %xbar_io_in_1_req_bits_wdata, %79 : !firrtl.uint<64>
      firrtl.strictconnect %80, %xbar_io_in_1_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %81, %xbar_io_in_1_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %82, %xbar_io_in_1_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_req_ready, %83 : !firrtl.uint<1>
      firrtl.strictconnect %84, %xbar_io_out_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %85, %xbar_io_out_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %86, %xbar_io_out_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %87, %xbar_io_out_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %88, %xbar_io_out_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %89, %xbar_io_out_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_resp_valid, %90 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_resp_bits_cmd, %91 : !firrtl.uint<4>
      firrtl.strictconnect %xbar_io_out_resp_bits_rdata, %92 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_clock, %clock : !firrtl.clock
      firrtl.strictconnect %xbar_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %0, %44 : !firrtl.uint<1>
      firrtl.strictconnect %45, %1 : !firrtl.uint<1>
      firrtl.strictconnect %46, %2 : !firrtl.uint<32>
      firrtl.strictconnect %47, %3 : !firrtl.uint<4>
      firrtl.strictconnect %48, %4 : !firrtl.uint<64>
      firrtl.strictconnect %5, %49 : !firrtl.uint<1>
      firrtl.strictconnect %6, %50 : !firrtl.uint<4>
      firrtl.strictconnect %7, %51 : !firrtl.uint<64>
      firrtl.strictconnect %60, %16 : !firrtl.uint<1>
      firrtl.strictconnect %17, %61 : !firrtl.uint<1>
      firrtl.strictconnect %18, %62 : !firrtl.uint<32>
      firrtl.strictconnect %19, %63 : !firrtl.uint<64>
      firrtl.strictconnect %64, %20 : !firrtl.uint<1>
      firrtl.strictconnect %65, %21 : !firrtl.uint<4>
      firrtl.strictconnect %66, %22 : !firrtl.uint<64>
      firrtl.strictconnect %52, %67 : !firrtl.uint<1>
      firrtl.strictconnect %68, %53 : !firrtl.uint<1>
      firrtl.strictconnect %69, %54 : !firrtl.uint<32>
      firrtl.strictconnect %70, %55 : !firrtl.uint<4>
      firrtl.strictconnect %71, %56 : !firrtl.uint<64>
      firrtl.strictconnect %57, %72 : !firrtl.uint<1>
      firrtl.strictconnect %58, %73 : !firrtl.uint<4>
      firrtl.strictconnect %59, %74 : !firrtl.uint<64>
      firrtl.strictconnect %8, %75 : !firrtl.uint<1>
      firrtl.strictconnect %76, %9 : !firrtl.uint<1>
      firrtl.strictconnect %77, %10 : !firrtl.uint<32>
      firrtl.strictconnect %78, %11 : !firrtl.uint<4>
      firrtl.strictconnect %79, %12 : !firrtl.uint<64>
      firrtl.strictconnect %13, %80 : !firrtl.uint<1>
      firrtl.strictconnect %14, %81 : !firrtl.uint<4>
      firrtl.strictconnect %15, %82 : !firrtl.uint<64>
      %axi2sb_clock, %axi2sb_reset, %axi2sb_io_in_aw_ready, %axi2sb_io_in_aw_valid, %axi2sb_io_in_aw_bits_addr, %axi2sb_io_in_w_ready, %axi2sb_io_in_w_valid, %axi2sb_io_in_w_bits_data, %axi2sb_io_in_w_bits_strb, %axi2sb_io_in_b_ready, %axi2sb_io_in_b_valid, %axi2sb_io_in_ar_ready, %axi2sb_io_in_ar_valid, %axi2sb_io_in_ar_bits_addr, %axi2sb_io_in_r_ready, %axi2sb_io_in_r_valid, %axi2sb_io_in_r_bits_data, %axi2sb_io_out_req_ready, %axi2sb_io_out_req_valid, %axi2sb_io_out_req_bits_addr, %axi2sb_io_out_req_bits_size, %axi2sb_io_out_req_bits_cmd, %axi2sb_io_out_req_bits_wmask, %axi2sb_io_out_req_bits_wdata, %axi2sb_io_out_resp_ready, %axi2sb_io_out_resp_valid, %axi2sb_io_out_resp_bits_cmd, %axi2sb_io_out_resp_bits_rdata = firrtl.instance axi2sb @AXI42SimpleBusConverter(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, in io_out_req_ready: !firrtl.uint<1>, out io_out_req_valid: !firrtl.uint<1>, out io_out_req_bits_addr: !firrtl.uint<32>, out io_out_req_bits_size: !firrtl.uint<3>, out io_out_req_bits_cmd: !firrtl.uint<4>, out io_out_req_bits_wmask: !firrtl.uint<8>, out io_out_req_bits_wdata: !firrtl.uint<64>, out io_out_resp_ready: !firrtl.uint<1>, in io_out_resp_valid: !firrtl.uint<1>, in io_out_resp_bits_cmd: !firrtl.uint<4>, in io_out_resp_bits_rdata: !firrtl.uint<64>)
      %93 = firrtl.wire : !firrtl.uint<1>
      %94 = firrtl.wire : !firrtl.uint<1>
      %95 = firrtl.wire : !firrtl.uint<1>
      %96 = firrtl.wire : !firrtl.uint<1>
      %97 = firrtl.wire : !firrtl.uint<1>
      %98 = firrtl.wire : !firrtl.uint<64>
      %99 = firrtl.wire : !firrtl.uint<1>
      %100 = firrtl.wire : !firrtl.uint<1>
      %101 = firrtl.wire : !firrtl.uint<32>
      %102 = firrtl.wire : !firrtl.uint<3>
      %103 = firrtl.wire : !firrtl.uint<4>
      %104 = firrtl.wire : !firrtl.uint<8>
      %105 = firrtl.wire : !firrtl.uint<64>
      %106 = firrtl.wire : !firrtl.uint<1>
      %107 = firrtl.wire : !firrtl.uint<1>
      %108 = firrtl.wire : !firrtl.uint<4>
      %109 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %93, %axi2sb_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_in_aw_valid, %io_frontend_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_in_aw_bits_addr, %io_frontend_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %94, %axi2sb_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_in_w_valid, %io_frontend_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_in_w_bits_data, %io_frontend_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %axi2sb_io_in_w_bits_strb, %io_frontend_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %axi2sb_io_in_b_ready, %io_frontend_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %95, %axi2sb_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %96, %axi2sb_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_in_ar_valid, %io_frontend_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_in_ar_bits_addr, %io_frontend_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %axi2sb_io_in_r_ready, %io_frontend_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %97, %axi2sb_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %98, %axi2sb_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %axi2sb_io_out_req_ready, %99 : !firrtl.uint<1>
      firrtl.strictconnect %100, %axi2sb_io_out_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %101, %axi2sb_io_out_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %102, %axi2sb_io_out_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %103, %axi2sb_io_out_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %104, %axi2sb_io_out_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %105, %axi2sb_io_out_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %106, %axi2sb_io_out_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_out_resp_valid, %107 : !firrtl.uint<1>
      firrtl.strictconnect %axi2sb_io_out_resp_bits_cmd, %108 : !firrtl.uint<4>
      firrtl.strictconnect %axi2sb_io_out_resp_bits_rdata, %109 : !firrtl.uint<64>
      firrtl.strictconnect %axi2sb_clock, %clock : !firrtl.clock
      firrtl.strictconnect %axi2sb_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_aw_ready_16, %93 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_w_ready_17, %94 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_b_valid_18, %95 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_ar_ready_19, %96 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_r_valid_20, %97 : !firrtl.uint<1>
      firrtl.strictconnect %io_frontend_r_bits_data_21, %98 : !firrtl.uint<64>
      firrtl.strictconnect %99, %33 : !firrtl.uint<1>
      firrtl.strictconnect %34, %100 : !firrtl.uint<1>
      firrtl.strictconnect %35, %101 : !firrtl.uint<32>
      firrtl.strictconnect %36, %102 : !firrtl.uint<3>
      firrtl.strictconnect %37, %103 : !firrtl.uint<4>
      firrtl.strictconnect %38, %104 : !firrtl.uint<8>
      firrtl.strictconnect %39, %105 : !firrtl.uint<64>
      firrtl.strictconnect %40, %106 : !firrtl.uint<1>
      firrtl.strictconnect %107, %41 : !firrtl.uint<1>
      firrtl.strictconnect %108, %42 : !firrtl.uint<4>
      firrtl.strictconnect %109, %43 : !firrtl.uint<64>
      %mem_l2cacheOut_mem_req_ready = firrtl.wire : !firrtl.uint<1>
      %mem_l2cacheOut_mem_req_valid = firrtl.wire : !firrtl.uint<1>
      %mem_l2cacheOut_mem_req_bits_addr = firrtl.wire : !firrtl.uint<32>
      %mem_l2cacheOut_mem_req_bits_cmd = firrtl.wire : !firrtl.uint<4>
      %mem_l2cacheOut_mem_req_bits_wdata = firrtl.wire : !firrtl.uint<64>
      %mem_l2cacheOut_mem_resp_valid = firrtl.wire : !firrtl.uint<1>
      %mem_l2cacheOut_mem_resp_bits_cmd = firrtl.wire : !firrtl.uint<4>
      %mem_l2cacheOut_mem_resp_bits_rdata = firrtl.wire : !firrtl.uint<64>
      %mem_l2cacheIn_prefetcher_clock, %mem_l2cacheIn_prefetcher_reset, %mem_l2cacheIn_prefetcher_io_in_ready, %mem_l2cacheIn_prefetcher_io_in_valid, %mem_l2cacheIn_prefetcher_io_in_bits_addr, %mem_l2cacheIn_prefetcher_io_in_bits_size, %mem_l2cacheIn_prefetcher_io_in_bits_cmd, %mem_l2cacheIn_prefetcher_io_in_bits_wmask, %mem_l2cacheIn_prefetcher_io_in_bits_wdata, %mem_l2cacheIn_prefetcher_io_out_ready, %mem_l2cacheIn_prefetcher_io_out_valid, %mem_l2cacheIn_prefetcher_io_out_bits_addr, %mem_l2cacheIn_prefetcher_io_out_bits_size, %mem_l2cacheIn_prefetcher_io_out_bits_cmd, %mem_l2cacheIn_prefetcher_io_out_bits_wmask, %mem_l2cacheIn_prefetcher_io_out_bits_wdata = firrtl.instance mem_l2cacheIn_prefetcher @Prefetcher(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<32>, in io_in_bits_size: !firrtl.uint<3>, in io_in_bits_cmd: !firrtl.uint<4>, in io_in_bits_wmask: !firrtl.uint<8>, in io_in_bits_wdata: !firrtl.uint<64>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_size: !firrtl.uint<3>, out io_out_bits_cmd: !firrtl.uint<4>, out io_out_bits_wmask: !firrtl.uint<8>, out io_out_bits_wdata: !firrtl.uint<64>)
      %110 = firrtl.wire : !firrtl.uint<1>
      %111 = firrtl.wire : !firrtl.uint<1>
      %112 = firrtl.wire : !firrtl.uint<32>
      %113 = firrtl.wire : !firrtl.uint<3>
      %114 = firrtl.wire : !firrtl.uint<4>
      %115 = firrtl.wire : !firrtl.uint<8>
      %116 = firrtl.wire : !firrtl.uint<64>
      %117 = firrtl.wire : !firrtl.uint<1>
      %118 = firrtl.wire : !firrtl.uint<1>
      %119 = firrtl.wire : !firrtl.uint<32>
      %120 = firrtl.wire : !firrtl.uint<3>
      %121 = firrtl.wire : !firrtl.uint<4>
      %122 = firrtl.wire : !firrtl.uint<8>
      %123 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %110, %mem_l2cacheIn_prefetcher_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_io_in_valid, %111 : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_io_in_bits_addr, %112 : !firrtl.uint<32>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_io_in_bits_size, %113 : !firrtl.uint<3>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_io_in_bits_cmd, %114 : !firrtl.uint<4>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_io_in_bits_wmask, %115 : !firrtl.uint<8>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_io_in_bits_wdata, %116 : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_io_out_ready, %117 : !firrtl.uint<1>
      firrtl.strictconnect %118, %mem_l2cacheIn_prefetcher_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %119, %mem_l2cacheIn_prefetcher_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %120, %mem_l2cacheIn_prefetcher_io_out_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %121, %mem_l2cacheIn_prefetcher_io_out_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %122, %mem_l2cacheIn_prefetcher_io_out_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %123, %mem_l2cacheIn_prefetcher_io_out_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mem_l2cacheIn_prefetcher_reset, %reset : !firrtl.uint<1>
      %mem_l2cacheIn_req_ready = firrtl.wire : !firrtl.uint<1>
      %mem_l2cacheIn_req_valid = firrtl.wire : !firrtl.uint<1>
      %mem_l2cacheIn_req_bits_addr = firrtl.wire : !firrtl.uint<32>
      %mem_l2cacheIn_req_bits_size = firrtl.wire : !firrtl.uint<3>
      %mem_l2cacheIn_req_bits_cmd = firrtl.wire : !firrtl.uint<4>
      %mem_l2cacheIn_req_bits_wmask = firrtl.wire : !firrtl.uint<8>
      %mem_l2cacheIn_req_bits_wdata = firrtl.wire : !firrtl.uint<64>
      %mem_l2cacheIn_resp_valid = firrtl.wire : !firrtl.uint<1>
      %mem_l2cacheIn_resp_bits_cmd = firrtl.wire : !firrtl.uint<4>
      %mem_l2cacheIn_resp_bits_rdata = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %83, %110 : !firrtl.uint<1>
      firrtl.strictconnect %111, %84 : !firrtl.uint<1>
      firrtl.strictconnect %112, %85 : !firrtl.uint<32>
      firrtl.strictconnect %113, %86 : !firrtl.uint<3>
      firrtl.strictconnect %114, %87 : !firrtl.uint<4>
      firrtl.strictconnect %115, %88 : !firrtl.uint<8>
      firrtl.strictconnect %116, %89 : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheIn_req_bits_addr, %119 : !firrtl.uint<32>
      firrtl.strictconnect %mem_l2cacheIn_req_bits_size, %120 : !firrtl.uint<3>
      firrtl.strictconnect %mem_l2cacheIn_req_bits_cmd, %121 : !firrtl.uint<4>
      firrtl.strictconnect %mem_l2cacheIn_req_bits_wmask, %122 : !firrtl.uint<8>
      firrtl.strictconnect %mem_l2cacheIn_req_bits_wdata, %123 : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheIn_req_valid, %118 : !firrtl.uint<1>
      firrtl.strictconnect %117, %mem_l2cacheIn_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %90, %mem_l2cacheIn_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %91, %mem_l2cacheIn_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %92, %mem_l2cacheIn_resp_bits_rdata : !firrtl.uint<64>
      %mem_l2cacheOut_cache_clock, %mem_l2cacheOut_cache_reset, %mem_l2cacheOut_cache_io_in_req_ready, %mem_l2cacheOut_cache_io_in_req_valid, %mem_l2cacheOut_cache_io_in_req_bits_addr, %mem_l2cacheOut_cache_io_in_req_bits_size, %mem_l2cacheOut_cache_io_in_req_bits_cmd, %mem_l2cacheOut_cache_io_in_req_bits_wmask, %mem_l2cacheOut_cache_io_in_req_bits_wdata, %mem_l2cacheOut_cache_io_in_resp_valid, %mem_l2cacheOut_cache_io_in_resp_bits_cmd, %mem_l2cacheOut_cache_io_in_resp_bits_rdata, %mem_l2cacheOut_cache_io_out_mem_req_ready, %mem_l2cacheOut_cache_io_out_mem_req_valid, %mem_l2cacheOut_cache_io_out_mem_req_bits_addr, %mem_l2cacheOut_cache_io_out_mem_req_bits_cmd, %mem_l2cacheOut_cache_io_out_mem_req_bits_wdata, %mem_l2cacheOut_cache_io_out_mem_resp_valid, %mem_l2cacheOut_cache_io_out_mem_resp_bits_cmd, %mem_l2cacheOut_cache_io_out_mem_resp_bits_rdata = firrtl.instance mem_l2cacheOut_cache @Cache_2(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_size: !firrtl.uint<3>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_mem_req_ready: !firrtl.uint<1>, out io_out_mem_req_valid: !firrtl.uint<1>, out io_out_mem_req_bits_addr: !firrtl.uint<32>, out io_out_mem_req_bits_cmd: !firrtl.uint<4>, out io_out_mem_req_bits_wdata: !firrtl.uint<64>, in io_out_mem_resp_valid: !firrtl.uint<1>, in io_out_mem_resp_bits_cmd: !firrtl.uint<4>, in io_out_mem_resp_bits_rdata: !firrtl.uint<64>)
      %124 = firrtl.wire : !firrtl.uint<1>
      %125 = firrtl.wire : !firrtl.uint<1>
      %126 = firrtl.wire : !firrtl.uint<32>
      %127 = firrtl.wire : !firrtl.uint<3>
      %128 = firrtl.wire : !firrtl.uint<4>
      %129 = firrtl.wire : !firrtl.uint<8>
      %130 = firrtl.wire : !firrtl.uint<64>
      %131 = firrtl.wire : !firrtl.uint<1>
      %132 = firrtl.wire : !firrtl.uint<4>
      %133 = firrtl.wire : !firrtl.uint<64>
      %134 = firrtl.wire : !firrtl.uint<1>
      %135 = firrtl.wire : !firrtl.uint<1>
      %136 = firrtl.wire : !firrtl.uint<32>
      %137 = firrtl.wire : !firrtl.uint<4>
      %138 = firrtl.wire : !firrtl.uint<64>
      %139 = firrtl.wire : !firrtl.uint<1>
      %140 = firrtl.wire : !firrtl.uint<4>
      %141 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %124, %mem_l2cacheOut_cache_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_in_req_valid, %125 : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_in_req_bits_addr, %126 : !firrtl.uint<32>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_in_req_bits_size, %127 : !firrtl.uint<3>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_in_req_bits_cmd, %128 : !firrtl.uint<4>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_in_req_bits_wmask, %129 : !firrtl.uint<8>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_in_req_bits_wdata, %130 : !firrtl.uint<64>
      firrtl.strictconnect %131, %mem_l2cacheOut_cache_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %132, %mem_l2cacheOut_cache_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %133, %mem_l2cacheOut_cache_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_out_mem_req_ready, %134 : !firrtl.uint<1>
      firrtl.strictconnect %135, %mem_l2cacheOut_cache_io_out_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %136, %mem_l2cacheOut_cache_io_out_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %137, %mem_l2cacheOut_cache_io_out_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %138, %mem_l2cacheOut_cache_io_out_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_out_mem_resp_valid, %139 : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_out_mem_resp_bits_cmd, %140 : !firrtl.uint<4>
      firrtl.strictconnect %mem_l2cacheOut_cache_io_out_mem_resp_bits_rdata, %141 : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheOut_cache_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mem_l2cacheOut_cache_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheIn_req_ready, %124 : !firrtl.uint<1>
      firrtl.strictconnect %125, %mem_l2cacheIn_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %126, %mem_l2cacheIn_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %127, %mem_l2cacheIn_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %128, %mem_l2cacheIn_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %129, %mem_l2cacheIn_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %130, %mem_l2cacheIn_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheIn_resp_valid, %131 : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheIn_resp_bits_cmd, %132 : !firrtl.uint<4>
      firrtl.strictconnect %mem_l2cacheIn_resp_bits_rdata, %133 : !firrtl.uint<64>
      firrtl.strictconnect %139, %mem_l2cacheOut_mem_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %140, %mem_l2cacheOut_mem_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %141, %mem_l2cacheOut_mem_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheOut_mem_req_bits_addr, %136 : !firrtl.uint<32>
      firrtl.strictconnect %mem_l2cacheOut_mem_req_bits_cmd, %137 : !firrtl.uint<4>
      firrtl.strictconnect %mem_l2cacheOut_mem_req_bits_wdata, %138 : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheOut_mem_req_valid, %135 : !firrtl.uint<1>
      firrtl.strictconnect %134, %mem_l2cacheOut_mem_req_ready : !firrtl.uint<1>
      %memAddrMap_io_in_req_ready, %memAddrMap_io_in_req_valid, %memAddrMap_io_in_req_bits_addr, %memAddrMap_io_in_req_bits_cmd, %memAddrMap_io_in_req_bits_wdata, %memAddrMap_io_in_resp_valid, %memAddrMap_io_in_resp_bits_cmd, %memAddrMap_io_in_resp_bits_rdata, %memAddrMap_io_out_req_ready, %memAddrMap_io_out_req_valid, %memAddrMap_io_out_req_bits_addr, %memAddrMap_io_out_req_bits_cmd, %memAddrMap_io_out_req_bits_wdata, %memAddrMap_io_out_resp_valid, %memAddrMap_io_out_resp_bits_cmd, %memAddrMap_io_out_resp_bits_rdata = firrtl.instance memAddrMap @SimpleBusAddressMapper(out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wdata: !firrtl.uint<64>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_req_ready: !firrtl.uint<1>, out io_out_req_valid: !firrtl.uint<1>, out io_out_req_bits_addr: !firrtl.uint<32>, out io_out_req_bits_cmd: !firrtl.uint<4>, out io_out_req_bits_wdata: !firrtl.uint<64>, in io_out_resp_valid: !firrtl.uint<1>, in io_out_resp_bits_cmd: !firrtl.uint<4>, in io_out_resp_bits_rdata: !firrtl.uint<64>)
      %142 = firrtl.wire : !firrtl.uint<1>
      %143 = firrtl.wire : !firrtl.uint<1>
      %144 = firrtl.wire : !firrtl.uint<32>
      %145 = firrtl.wire : !firrtl.uint<4>
      %146 = firrtl.wire : !firrtl.uint<64>
      %147 = firrtl.wire : !firrtl.uint<1>
      %148 = firrtl.wire : !firrtl.uint<4>
      %149 = firrtl.wire : !firrtl.uint<64>
      %150 = firrtl.wire : !firrtl.uint<1>
      %151 = firrtl.wire : !firrtl.uint<1>
      %152 = firrtl.wire : !firrtl.uint<32>
      %153 = firrtl.wire : !firrtl.uint<4>
      %154 = firrtl.wire : !firrtl.uint<64>
      %155 = firrtl.wire : !firrtl.uint<1>
      %156 = firrtl.wire : !firrtl.uint<4>
      %157 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %142, %memAddrMap_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %memAddrMap_io_in_req_valid, %143 : !firrtl.uint<1>
      firrtl.strictconnect %memAddrMap_io_in_req_bits_addr, %144 : !firrtl.uint<32>
      firrtl.strictconnect %memAddrMap_io_in_req_bits_cmd, %145 : !firrtl.uint<4>
      firrtl.strictconnect %memAddrMap_io_in_req_bits_wdata, %146 : !firrtl.uint<64>
      firrtl.strictconnect %147, %memAddrMap_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %148, %memAddrMap_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %149, %memAddrMap_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %memAddrMap_io_out_req_ready, %150 : !firrtl.uint<1>
      firrtl.strictconnect %151, %memAddrMap_io_out_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %152, %memAddrMap_io_out_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %153, %memAddrMap_io_out_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %154, %memAddrMap_io_out_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %memAddrMap_io_out_resp_valid, %155 : !firrtl.uint<1>
      firrtl.strictconnect %memAddrMap_io_out_resp_bits_cmd, %156 : !firrtl.uint<4>
      firrtl.strictconnect %memAddrMap_io_out_resp_bits_rdata, %157 : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheOut_mem_req_ready, %142 : !firrtl.uint<1>
      firrtl.strictconnect %143, %mem_l2cacheOut_mem_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %144, %mem_l2cacheOut_mem_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %145, %mem_l2cacheOut_mem_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %146, %mem_l2cacheOut_mem_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %mem_l2cacheOut_mem_resp_valid, %147 : !firrtl.uint<1>
      firrtl.strictconnect %mem_l2cacheOut_mem_resp_bits_cmd, %148 : !firrtl.uint<4>
      firrtl.strictconnect %mem_l2cacheOut_mem_resp_bits_rdata, %149 : !firrtl.uint<64>
      %io_mem_bridge_clock, %io_mem_bridge_reset, %io_mem_bridge_io_in_req_ready, %io_mem_bridge_io_in_req_valid, %io_mem_bridge_io_in_req_bits_addr, %io_mem_bridge_io_in_req_bits_cmd, %io_mem_bridge_io_in_req_bits_wdata, %io_mem_bridge_io_in_resp_valid, %io_mem_bridge_io_in_resp_bits_cmd, %io_mem_bridge_io_in_resp_bits_rdata, %io_mem_bridge_io_out_aw_ready, %io_mem_bridge_io_out_aw_valid, %io_mem_bridge_io_out_aw_bits_addr, %io_mem_bridge_io_out_aw_bits_len, %io_mem_bridge_io_out_w_ready, %io_mem_bridge_io_out_w_valid, %io_mem_bridge_io_out_w_bits_data, %io_mem_bridge_io_out_w_bits_last, %io_mem_bridge_io_out_b_valid, %io_mem_bridge_io_out_ar_ready, %io_mem_bridge_io_out_ar_valid, %io_mem_bridge_io_out_ar_bits_addr, %io_mem_bridge_io_out_ar_bits_len, %io_mem_bridge_io_out_r_valid, %io_mem_bridge_io_out_r_bits_data, %io_mem_bridge_io_out_r_bits_last = firrtl.instance io_mem_bridge @SimpleBus2AXI4Converter(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wdata: !firrtl.uint<64>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, out io_out_aw_bits_len: !firrtl.uint<8>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_last: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_ar_bits_len: !firrtl.uint<8>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>, in io_out_r_bits_last: !firrtl.uint<1>)
      %158 = firrtl.wire : !firrtl.uint<1>
      %159 = firrtl.wire : !firrtl.uint<1>
      %160 = firrtl.wire : !firrtl.uint<32>
      %161 = firrtl.wire : !firrtl.uint<4>
      %162 = firrtl.wire : !firrtl.uint<64>
      %163 = firrtl.wire : !firrtl.uint<1>
      %164 = firrtl.wire : !firrtl.uint<4>
      %165 = firrtl.wire : !firrtl.uint<64>
      %166 = firrtl.wire : !firrtl.uint<1>
      %167 = firrtl.wire : !firrtl.uint<32>
      %168 = firrtl.wire : !firrtl.uint<8>
      %169 = firrtl.wire : !firrtl.uint<1>
      %170 = firrtl.wire : !firrtl.uint<64>
      %171 = firrtl.wire : !firrtl.uint<1>
      %172 = firrtl.wire : !firrtl.uint<1>
      %173 = firrtl.wire : !firrtl.uint<32>
      %174 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %158, %io_mem_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_bridge_io_in_req_valid, %159 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_bridge_io_in_req_bits_addr, %160 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_bridge_io_in_req_bits_cmd, %161 : !firrtl.uint<4>
      firrtl.strictconnect %io_mem_bridge_io_in_req_bits_wdata, %162 : !firrtl.uint<64>
      firrtl.strictconnect %163, %io_mem_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %164, %io_mem_bridge_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %165, %io_mem_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_bridge_io_out_aw_ready, %io_mem_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %166, %io_mem_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %167, %io_mem_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %168, %io_mem_bridge_io_out_aw_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %io_mem_bridge_io_out_w_ready, %io_mem_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %169, %io_mem_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %170, %io_mem_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %171, %io_mem_bridge_io_out_w_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_bridge_io_out_b_valid, %io_mem_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_bridge_io_out_ar_ready, %io_mem_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %172, %io_mem_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %173, %io_mem_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %174, %io_mem_bridge_io_out_ar_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %io_mem_bridge_io_out_r_valid, %io_mem_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_bridge_io_out_r_bits_data, %io_mem_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_bridge_io_out_r_bits_last, %io_mem_r_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %io_mem_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %150, %158 : !firrtl.uint<1>
      firrtl.strictconnect %159, %151 : !firrtl.uint<1>
      firrtl.strictconnect %160, %152 : !firrtl.uint<32>
      firrtl.strictconnect %161, %153 : !firrtl.uint<4>
      firrtl.strictconnect %162, %154 : !firrtl.uint<64>
      firrtl.strictconnect %155, %163 : !firrtl.uint<1>
      firrtl.strictconnect %156, %164 : !firrtl.uint<4>
      firrtl.strictconnect %157, %165 : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_ar_bits_addr_7, %173 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_ar_bits_len_8, %174 : !firrtl.uint<8>
      firrtl.strictconnect %io_mem_ar_valid_6, %172 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_w_bits_data_4, %170 : !firrtl.uint<64>
      firrtl.strictconnect %io_mem_w_bits_last_5, %171 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_w_valid_3, %169 : !firrtl.uint<1>
      firrtl.strictconnect %io_mem_aw_bits_addr_1, %167 : !firrtl.uint<32>
      firrtl.strictconnect %io_mem_aw_bits_len_2, %168 : !firrtl.uint<8>
      firrtl.strictconnect %io_mem_aw_valid_0, %166 : !firrtl.uint<1>
      %mmioXbar_clock, %mmioXbar_reset, %mmioXbar_io_in_req_ready, %mmioXbar_io_in_req_valid, %mmioXbar_io_in_req_bits_addr, %mmioXbar_io_in_req_bits_size, %mmioXbar_io_in_req_bits_cmd, %mmioXbar_io_in_req_bits_wmask, %mmioXbar_io_in_req_bits_wdata, %mmioXbar_io_in_resp_valid, %mmioXbar_io_in_resp_bits_cmd, %mmioXbar_io_in_resp_bits_rdata, %mmioXbar_io_out_0_req_ready, %mmioXbar_io_out_0_req_valid, %mmioXbar_io_out_0_req_bits_addr, %mmioXbar_io_out_0_req_bits_cmd, %mmioXbar_io_out_0_req_bits_wmask, %mmioXbar_io_out_0_req_bits_wdata, %mmioXbar_io_out_0_resp_ready, %mmioXbar_io_out_0_resp_valid, %mmioXbar_io_out_0_resp_bits_rdata, %mmioXbar_io_out_1_req_ready, %mmioXbar_io_out_1_req_valid, %mmioXbar_io_out_1_req_bits_addr, %mmioXbar_io_out_1_req_bits_cmd, %mmioXbar_io_out_1_req_bits_wmask, %mmioXbar_io_out_1_req_bits_wdata, %mmioXbar_io_out_1_resp_ready, %mmioXbar_io_out_1_resp_valid, %mmioXbar_io_out_1_resp_bits_rdata, %mmioXbar_io_out_2_req_ready, %mmioXbar_io_out_2_req_valid, %mmioXbar_io_out_2_req_bits_addr, %mmioXbar_io_out_2_req_bits_size, %mmioXbar_io_out_2_req_bits_cmd, %mmioXbar_io_out_2_req_bits_wmask, %mmioXbar_io_out_2_req_bits_wdata, %mmioXbar_io_out_2_resp_ready, %mmioXbar_io_out_2_resp_valid, %mmioXbar_io_out_2_resp_bits_cmd, %mmioXbar_io_out_2_resp_bits_rdata = firrtl.instance mmioXbar @SimpleBusCrossbar1toN(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_size: !firrtl.uint<3>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_0_req_ready: !firrtl.uint<1>, out io_out_0_req_valid: !firrtl.uint<1>, out io_out_0_req_bits_addr: !firrtl.uint<32>, out io_out_0_req_bits_cmd: !firrtl.uint<4>, out io_out_0_req_bits_wmask: !firrtl.uint<8>, out io_out_0_req_bits_wdata: !firrtl.uint<64>, out io_out_0_resp_ready: !firrtl.uint<1>, in io_out_0_resp_valid: !firrtl.uint<1>, in io_out_0_resp_bits_rdata: !firrtl.uint<64>, in io_out_1_req_ready: !firrtl.uint<1>, out io_out_1_req_valid: !firrtl.uint<1>, out io_out_1_req_bits_addr: !firrtl.uint<32>, out io_out_1_req_bits_cmd: !firrtl.uint<4>, out io_out_1_req_bits_wmask: !firrtl.uint<8>, out io_out_1_req_bits_wdata: !firrtl.uint<64>, out io_out_1_resp_ready: !firrtl.uint<1>, in io_out_1_resp_valid: !firrtl.uint<1>, in io_out_1_resp_bits_rdata: !firrtl.uint<64>, in io_out_2_req_ready: !firrtl.uint<1>, out io_out_2_req_valid: !firrtl.uint<1>, out io_out_2_req_bits_addr: !firrtl.uint<32>, out io_out_2_req_bits_size: !firrtl.uint<3>, out io_out_2_req_bits_cmd: !firrtl.uint<4>, out io_out_2_req_bits_wmask: !firrtl.uint<8>, out io_out_2_req_bits_wdata: !firrtl.uint<64>, out io_out_2_resp_ready: !firrtl.uint<1>, in io_out_2_resp_valid: !firrtl.uint<1>, in io_out_2_resp_bits_cmd: !firrtl.uint<4>, in io_out_2_resp_bits_rdata: !firrtl.uint<64>)
      %175 = firrtl.wire : !firrtl.uint<1>
      %176 = firrtl.wire : !firrtl.uint<1>
      %177 = firrtl.wire : !firrtl.uint<32>
      %178 = firrtl.wire : !firrtl.uint<3>
      %179 = firrtl.wire : !firrtl.uint<4>
      %180 = firrtl.wire : !firrtl.uint<8>
      %181 = firrtl.wire : !firrtl.uint<64>
      %182 = firrtl.wire : !firrtl.uint<1>
      %183 = firrtl.wire : !firrtl.uint<4>
      %184 = firrtl.wire : !firrtl.uint<64>
      %185 = firrtl.wire : !firrtl.uint<1>
      %186 = firrtl.wire : !firrtl.uint<1>
      %187 = firrtl.wire : !firrtl.uint<32>
      %188 = firrtl.wire : !firrtl.uint<4>
      %189 = firrtl.wire : !firrtl.uint<8>
      %190 = firrtl.wire : !firrtl.uint<64>
      %191 = firrtl.wire : !firrtl.uint<1>
      %192 = firrtl.wire : !firrtl.uint<1>
      %193 = firrtl.wire : !firrtl.uint<64>
      %194 = firrtl.wire : !firrtl.uint<1>
      %195 = firrtl.wire : !firrtl.uint<1>
      %196 = firrtl.wire : !firrtl.uint<32>
      %197 = firrtl.wire : !firrtl.uint<4>
      %198 = firrtl.wire : !firrtl.uint<8>
      %199 = firrtl.wire : !firrtl.uint<64>
      %200 = firrtl.wire : !firrtl.uint<1>
      %201 = firrtl.wire : !firrtl.uint<1>
      %202 = firrtl.wire : !firrtl.uint<64>
      %203 = firrtl.wire : !firrtl.uint<1>
      %204 = firrtl.wire : !firrtl.uint<32>
      %205 = firrtl.wire : !firrtl.uint<3>
      %206 = firrtl.wire : !firrtl.uint<4>
      %207 = firrtl.wire : !firrtl.uint<8>
      %208 = firrtl.wire : !firrtl.uint<64>
      %209 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %175, %mmioXbar_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_in_req_valid, %176 : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_in_req_bits_addr, %177 : !firrtl.uint<32>
      firrtl.strictconnect %mmioXbar_io_in_req_bits_size, %178 : !firrtl.uint<3>
      firrtl.strictconnect %mmioXbar_io_in_req_bits_cmd, %179 : !firrtl.uint<4>
      firrtl.strictconnect %mmioXbar_io_in_req_bits_wmask, %180 : !firrtl.uint<8>
      firrtl.strictconnect %mmioXbar_io_in_req_bits_wdata, %181 : !firrtl.uint<64>
      firrtl.strictconnect %182, %mmioXbar_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %183, %mmioXbar_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %184, %mmioXbar_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %mmioXbar_io_out_0_req_ready, %185 : !firrtl.uint<1>
      firrtl.strictconnect %186, %mmioXbar_io_out_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %187, %mmioXbar_io_out_0_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %188, %mmioXbar_io_out_0_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %189, %mmioXbar_io_out_0_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %190, %mmioXbar_io_out_0_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %191, %mmioXbar_io_out_0_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_out_0_resp_valid, %192 : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_out_0_resp_bits_rdata, %193 : !firrtl.uint<64>
      firrtl.strictconnect %mmioXbar_io_out_1_req_ready, %194 : !firrtl.uint<1>
      firrtl.strictconnect %195, %mmioXbar_io_out_1_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %196, %mmioXbar_io_out_1_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %197, %mmioXbar_io_out_1_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %198, %mmioXbar_io_out_1_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %199, %mmioXbar_io_out_1_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %200, %mmioXbar_io_out_1_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_out_1_resp_valid, %201 : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_out_1_resp_bits_rdata, %202 : !firrtl.uint<64>
      firrtl.strictconnect %mmioXbar_io_out_2_req_ready, %io_mmio_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %203, %mmioXbar_io_out_2_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %204, %mmioXbar_io_out_2_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %205, %mmioXbar_io_out_2_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %206, %mmioXbar_io_out_2_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %207, %mmioXbar_io_out_2_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %208, %mmioXbar_io_out_2_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %209, %mmioXbar_io_out_2_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_out_2_resp_valid, %io_mmio_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %mmioXbar_io_out_2_resp_bits_cmd, %io_mmio_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %mmioXbar_io_out_2_resp_bits_rdata, %io_mmio_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %mmioXbar_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mmioXbar_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %23, %175 : !firrtl.uint<1>
      firrtl.strictconnect %176, %24 : !firrtl.uint<1>
      firrtl.strictconnect %177, %25 : !firrtl.uint<32>
      firrtl.strictconnect %178, %26 : !firrtl.uint<3>
      firrtl.strictconnect %179, %27 : !firrtl.uint<4>
      firrtl.strictconnect %180, %28 : !firrtl.uint<8>
      firrtl.strictconnect %181, %29 : !firrtl.uint<64>
      firrtl.strictconnect %30, %182 : !firrtl.uint<1>
      firrtl.strictconnect %31, %183 : !firrtl.uint<4>
      firrtl.strictconnect %32, %184 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_resp_ready_15, %209 : !firrtl.uint<1>
      firrtl.strictconnect %io_mmio_req_bits_addr_10, %204 : !firrtl.uint<32>
      firrtl.strictconnect %io_mmio_req_bits_size_11, %205 : !firrtl.uint<3>
      firrtl.strictconnect %io_mmio_req_bits_cmd_12, %206 : !firrtl.uint<4>
      firrtl.strictconnect %io_mmio_req_bits_wmask_13, %207 : !firrtl.uint<8>
      firrtl.strictconnect %io_mmio_req_bits_wdata_14, %208 : !firrtl.uint<64>
      firrtl.strictconnect %io_mmio_req_valid_9, %203 : !firrtl.uint<1>
      %clint_clock, %clint_reset, %clint_io_in_aw_ready, %clint_io_in_aw_valid, %clint_io_in_aw_bits_addr, %clint_io_in_w_ready, %clint_io_in_w_valid, %clint_io_in_w_bits_data, %clint_io_in_w_bits_strb, %clint_io_in_b_ready, %clint_io_in_b_valid, %clint_io_in_ar_ready, %clint_io_in_ar_valid, %clint_io_in_ar_bits_addr, %clint_io_in_r_ready, %clint_io_in_r_valid, %clint_io_in_r_bits_data, %clint_io_extra_mtip, %clint_io_extra_msip, %clint_isWFI__bore, %clint_io_extra_msip__bore, %clint_io_extra_mtip__bore = firrtl.instance clint @AXI4CLINT(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, out io_extra_mtip: !firrtl.uint<1>, out io_extra_msip: !firrtl.uint<1>, in isWFI__bore: !firrtl.uint<1>, out io_extra_msip__bore: !firrtl.uint<1>, out io_extra_mtip__bore: !firrtl.uint<1>)
      %210 = firrtl.wire : !firrtl.uint<1>
      %211 = firrtl.wire : !firrtl.uint<1>
      %212 = firrtl.wire : !firrtl.uint<32>
      %213 = firrtl.wire : !firrtl.uint<1>
      %214 = firrtl.wire : !firrtl.uint<1>
      %215 = firrtl.wire : !firrtl.uint<64>
      %216 = firrtl.wire : !firrtl.uint<8>
      %217 = firrtl.wire : !firrtl.uint<1>
      %218 = firrtl.wire : !firrtl.uint<1>
      %219 = firrtl.wire : !firrtl.uint<1>
      %220 = firrtl.wire : !firrtl.uint<1>
      %221 = firrtl.wire : !firrtl.uint<32>
      %222 = firrtl.wire : !firrtl.uint<1>
      %223 = firrtl.wire : !firrtl.uint<1>
      %224 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %210, %clint_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_aw_valid, %211 : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_aw_bits_addr, %212 : !firrtl.uint<32>
      firrtl.strictconnect %213, %clint_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_w_valid, %214 : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_w_bits_data, %215 : !firrtl.uint<64>
      firrtl.strictconnect %clint_io_in_w_bits_strb, %216 : !firrtl.uint<8>
      firrtl.strictconnect %clint_io_in_b_ready, %217 : !firrtl.uint<1>
      firrtl.strictconnect %218, %clint_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %219, %clint_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_ar_valid, %220 : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_ar_bits_addr, %221 : !firrtl.uint<32>
      firrtl.strictconnect %clint_io_in_r_ready, %222 : !firrtl.uint<1>
      firrtl.strictconnect %223, %clint_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %224, %clint_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %clint_clock, %clock : !firrtl.clock
      firrtl.strictconnect %clint_reset, %reset : !firrtl.uint<1>
      %clint_io_in_bridge_clock, %clint_io_in_bridge_reset, %clint_io_in_bridge_io_in_req_ready, %clint_io_in_bridge_io_in_req_valid, %clint_io_in_bridge_io_in_req_bits_addr, %clint_io_in_bridge_io_in_req_bits_cmd, %clint_io_in_bridge_io_in_req_bits_wmask, %clint_io_in_bridge_io_in_req_bits_wdata, %clint_io_in_bridge_io_in_resp_ready, %clint_io_in_bridge_io_in_resp_valid, %clint_io_in_bridge_io_in_resp_bits_rdata, %clint_io_in_bridge_io_out_aw_ready, %clint_io_in_bridge_io_out_aw_valid, %clint_io_in_bridge_io_out_aw_bits_addr, %clint_io_in_bridge_io_out_w_ready, %clint_io_in_bridge_io_out_w_valid, %clint_io_in_bridge_io_out_w_bits_data, %clint_io_in_bridge_io_out_w_bits_strb, %clint_io_in_bridge_io_out_b_ready, %clint_io_in_bridge_io_out_b_valid, %clint_io_in_bridge_io_out_ar_ready, %clint_io_in_bridge_io_out_ar_valid, %clint_io_in_bridge_io_out_ar_bits_addr, %clint_io_in_bridge_io_out_r_ready, %clint_io_in_bridge_io_out_r_valid, %clint_io_in_bridge_io_out_r_bits_data = firrtl.instance clint_io_in_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %225 = firrtl.wire : !firrtl.uint<1>
      %226 = firrtl.wire : !firrtl.uint<1>
      %227 = firrtl.wire : !firrtl.uint<32>
      %228 = firrtl.wire : !firrtl.uint<4>
      %229 = firrtl.wire : !firrtl.uint<8>
      %230 = firrtl.wire : !firrtl.uint<64>
      %231 = firrtl.wire : !firrtl.uint<1>
      %232 = firrtl.wire : !firrtl.uint<1>
      %233 = firrtl.wire : !firrtl.uint<64>
      %234 = firrtl.wire : !firrtl.uint<1>
      %235 = firrtl.wire : !firrtl.uint<1>
      %236 = firrtl.wire : !firrtl.uint<32>
      %237 = firrtl.wire : !firrtl.uint<1>
      %238 = firrtl.wire : !firrtl.uint<1>
      %239 = firrtl.wire : !firrtl.uint<64>
      %240 = firrtl.wire : !firrtl.uint<8>
      %241 = firrtl.wire : !firrtl.uint<1>
      %242 = firrtl.wire : !firrtl.uint<1>
      %243 = firrtl.wire : !firrtl.uint<1>
      %244 = firrtl.wire : !firrtl.uint<1>
      %245 = firrtl.wire : !firrtl.uint<32>
      %246 = firrtl.wire : !firrtl.uint<1>
      %247 = firrtl.wire : !firrtl.uint<1>
      %248 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %225, %clint_io_in_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_bridge_io_in_req_valid, %226 : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_bridge_io_in_req_bits_addr, %227 : !firrtl.uint<32>
      firrtl.strictconnect %clint_io_in_bridge_io_in_req_bits_cmd, %228 : !firrtl.uint<4>
      firrtl.strictconnect %clint_io_in_bridge_io_in_req_bits_wmask, %229 : !firrtl.uint<8>
      firrtl.strictconnect %clint_io_in_bridge_io_in_req_bits_wdata, %230 : !firrtl.uint<64>
      firrtl.strictconnect %clint_io_in_bridge_io_in_resp_ready, %231 : !firrtl.uint<1>
      firrtl.strictconnect %232, %clint_io_in_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %233, %clint_io_in_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %clint_io_in_bridge_io_out_aw_ready, %234 : !firrtl.uint<1>
      firrtl.strictconnect %235, %clint_io_in_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %236, %clint_io_in_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %clint_io_in_bridge_io_out_w_ready, %237 : !firrtl.uint<1>
      firrtl.strictconnect %238, %clint_io_in_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %239, %clint_io_in_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %240, %clint_io_in_bridge_io_out_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %241, %clint_io_in_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_bridge_io_out_b_valid, %242 : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_bridge_io_out_ar_ready, %243 : !firrtl.uint<1>
      firrtl.strictconnect %244, %clint_io_in_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %245, %clint_io_in_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %246, %clint_io_in_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_bridge_io_out_r_valid, %247 : !firrtl.uint<1>
      firrtl.strictconnect %clint_io_in_bridge_io_out_r_bits_data, %248 : !firrtl.uint<64>
      firrtl.strictconnect %clint_io_in_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %clint_io_in_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %185, %225 : !firrtl.uint<1>
      firrtl.strictconnect %226, %186 : !firrtl.uint<1>
      firrtl.strictconnect %227, %187 : !firrtl.uint<32>
      firrtl.strictconnect %228, %188 : !firrtl.uint<4>
      firrtl.strictconnect %229, %189 : !firrtl.uint<8>
      firrtl.strictconnect %230, %190 : !firrtl.uint<64>
      firrtl.strictconnect %231, %191 : !firrtl.uint<1>
      firrtl.strictconnect %192, %232 : !firrtl.uint<1>
      firrtl.strictconnect %193, %233 : !firrtl.uint<64>
      firrtl.strictconnect %234, %210 : !firrtl.uint<1>
      firrtl.strictconnect %211, %235 : !firrtl.uint<1>
      firrtl.strictconnect %212, %236 : !firrtl.uint<32>
      firrtl.strictconnect %237, %213 : !firrtl.uint<1>
      firrtl.strictconnect %214, %238 : !firrtl.uint<1>
      firrtl.strictconnect %215, %239 : !firrtl.uint<64>
      firrtl.strictconnect %216, %240 : !firrtl.uint<8>
      firrtl.strictconnect %217, %241 : !firrtl.uint<1>
      firrtl.strictconnect %242, %218 : !firrtl.uint<1>
      firrtl.strictconnect %243, %219 : !firrtl.uint<1>
      firrtl.strictconnect %220, %244 : !firrtl.uint<1>
      firrtl.strictconnect %221, %245 : !firrtl.uint<32>
      firrtl.strictconnect %222, %246 : !firrtl.uint<1>
      firrtl.strictconnect %247, %223 : !firrtl.uint<1>
      firrtl.strictconnect %248, %224 : !firrtl.uint<64>
      %plic_clock, %plic_reset, %plic_io_in_aw_ready, %plic_io_in_aw_valid, %plic_io_in_aw_bits_addr, %plic_io_in_w_ready, %plic_io_in_w_valid, %plic_io_in_w_bits_data, %plic_io_in_w_bits_strb, %plic_io_in_b_ready, %plic_io_in_b_valid, %plic_io_in_ar_ready, %plic_io_in_ar_valid, %plic_io_in_ar_bits_addr, %plic_io_in_r_ready, %plic_io_in_r_valid, %plic_io_in_r_bits_data, %plic_io_extra_intrVec, %plic_io_extra_meip_0, %plic_io_extra_meip_0__bore = firrtl.instance plic @AXI4PLIC(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, in io_extra_intrVec: !firrtl.uint<1>, out io_extra_meip_0: !firrtl.uint<1>, out io_extra_meip_0__bore: !firrtl.uint<1>)
      %249 = firrtl.wire : !firrtl.uint<1>
      %250 = firrtl.wire : !firrtl.uint<1>
      %251 = firrtl.wire : !firrtl.uint<32>
      %252 = firrtl.wire : !firrtl.uint<1>
      %253 = firrtl.wire : !firrtl.uint<1>
      %254 = firrtl.wire : !firrtl.uint<64>
      %255 = firrtl.wire : !firrtl.uint<8>
      %256 = firrtl.wire : !firrtl.uint<1>
      %257 = firrtl.wire : !firrtl.uint<1>
      %258 = firrtl.wire : !firrtl.uint<1>
      %259 = firrtl.wire : !firrtl.uint<1>
      %260 = firrtl.wire : !firrtl.uint<32>
      %261 = firrtl.wire : !firrtl.uint<1>
      %262 = firrtl.wire : !firrtl.uint<1>
      %263 = firrtl.wire : !firrtl.uint<64>
      %264 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %249, %plic_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_aw_valid, %250 : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_aw_bits_addr, %251 : !firrtl.uint<32>
      firrtl.strictconnect %252, %plic_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_w_valid, %253 : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_w_bits_data, %254 : !firrtl.uint<64>
      firrtl.strictconnect %plic_io_in_w_bits_strb, %255 : !firrtl.uint<8>
      firrtl.strictconnect %plic_io_in_b_ready, %256 : !firrtl.uint<1>
      firrtl.strictconnect %257, %plic_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %258, %plic_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_ar_valid, %259 : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_ar_bits_addr, %260 : !firrtl.uint<32>
      firrtl.strictconnect %plic_io_in_r_ready, %261 : !firrtl.uint<1>
      firrtl.strictconnect %262, %plic_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %263, %plic_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %plic_io_extra_intrVec, %264 : !firrtl.uint<1>
      firrtl.strictconnect %plic_clock, %clock : !firrtl.clock
      firrtl.strictconnect %plic_reset, %reset : !firrtl.uint<1>
      %plic_io_in_bridge_clock, %plic_io_in_bridge_reset, %plic_io_in_bridge_io_in_req_ready, %plic_io_in_bridge_io_in_req_valid, %plic_io_in_bridge_io_in_req_bits_addr, %plic_io_in_bridge_io_in_req_bits_cmd, %plic_io_in_bridge_io_in_req_bits_wmask, %plic_io_in_bridge_io_in_req_bits_wdata, %plic_io_in_bridge_io_in_resp_ready, %plic_io_in_bridge_io_in_resp_valid, %plic_io_in_bridge_io_in_resp_bits_rdata, %plic_io_in_bridge_io_out_aw_ready, %plic_io_in_bridge_io_out_aw_valid, %plic_io_in_bridge_io_out_aw_bits_addr, %plic_io_in_bridge_io_out_w_ready, %plic_io_in_bridge_io_out_w_valid, %plic_io_in_bridge_io_out_w_bits_data, %plic_io_in_bridge_io_out_w_bits_strb, %plic_io_in_bridge_io_out_b_ready, %plic_io_in_bridge_io_out_b_valid, %plic_io_in_bridge_io_out_ar_ready, %plic_io_in_bridge_io_out_ar_valid, %plic_io_in_bridge_io_out_ar_bits_addr, %plic_io_in_bridge_io_out_r_ready, %plic_io_in_bridge_io_out_r_valid, %plic_io_in_bridge_io_out_r_bits_data = firrtl.instance plic_io_in_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %265 = firrtl.wire : !firrtl.uint<1>
      %266 = firrtl.wire : !firrtl.uint<1>
      %267 = firrtl.wire : !firrtl.uint<32>
      %268 = firrtl.wire : !firrtl.uint<4>
      %269 = firrtl.wire : !firrtl.uint<8>
      %270 = firrtl.wire : !firrtl.uint<64>
      %271 = firrtl.wire : !firrtl.uint<1>
      %272 = firrtl.wire : !firrtl.uint<1>
      %273 = firrtl.wire : !firrtl.uint<64>
      %274 = firrtl.wire : !firrtl.uint<1>
      %275 = firrtl.wire : !firrtl.uint<1>
      %276 = firrtl.wire : !firrtl.uint<32>
      %277 = firrtl.wire : !firrtl.uint<1>
      %278 = firrtl.wire : !firrtl.uint<1>
      %279 = firrtl.wire : !firrtl.uint<64>
      %280 = firrtl.wire : !firrtl.uint<8>
      %281 = firrtl.wire : !firrtl.uint<1>
      %282 = firrtl.wire : !firrtl.uint<1>
      %283 = firrtl.wire : !firrtl.uint<1>
      %284 = firrtl.wire : !firrtl.uint<1>
      %285 = firrtl.wire : !firrtl.uint<32>
      %286 = firrtl.wire : !firrtl.uint<1>
      %287 = firrtl.wire : !firrtl.uint<1>
      %288 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %265, %plic_io_in_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_bridge_io_in_req_valid, %266 : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_bridge_io_in_req_bits_addr, %267 : !firrtl.uint<32>
      firrtl.strictconnect %plic_io_in_bridge_io_in_req_bits_cmd, %268 : !firrtl.uint<4>
      firrtl.strictconnect %plic_io_in_bridge_io_in_req_bits_wmask, %269 : !firrtl.uint<8>
      firrtl.strictconnect %plic_io_in_bridge_io_in_req_bits_wdata, %270 : !firrtl.uint<64>
      firrtl.strictconnect %plic_io_in_bridge_io_in_resp_ready, %271 : !firrtl.uint<1>
      firrtl.strictconnect %272, %plic_io_in_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %273, %plic_io_in_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %plic_io_in_bridge_io_out_aw_ready, %274 : !firrtl.uint<1>
      firrtl.strictconnect %275, %plic_io_in_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %276, %plic_io_in_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %plic_io_in_bridge_io_out_w_ready, %277 : !firrtl.uint<1>
      firrtl.strictconnect %278, %plic_io_in_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %279, %plic_io_in_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %280, %plic_io_in_bridge_io_out_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %281, %plic_io_in_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_bridge_io_out_b_valid, %282 : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_bridge_io_out_ar_ready, %283 : !firrtl.uint<1>
      firrtl.strictconnect %284, %plic_io_in_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %285, %plic_io_in_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %286, %plic_io_in_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_bridge_io_out_r_valid, %287 : !firrtl.uint<1>
      firrtl.strictconnect %plic_io_in_bridge_io_out_r_bits_data, %288 : !firrtl.uint<64>
      firrtl.strictconnect %plic_io_in_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %plic_io_in_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %194, %265 : !firrtl.uint<1>
      firrtl.strictconnect %266, %195 : !firrtl.uint<1>
      firrtl.strictconnect %267, %196 : !firrtl.uint<32>
      firrtl.strictconnect %268, %197 : !firrtl.uint<4>
      firrtl.strictconnect %269, %198 : !firrtl.uint<8>
      firrtl.strictconnect %270, %199 : !firrtl.uint<64>
      firrtl.strictconnect %271, %200 : !firrtl.uint<1>
      firrtl.strictconnect %201, %272 : !firrtl.uint<1>
      firrtl.strictconnect %202, %273 : !firrtl.uint<64>
      firrtl.strictconnect %274, %249 : !firrtl.uint<1>
      firrtl.strictconnect %250, %275 : !firrtl.uint<1>
      firrtl.strictconnect %251, %276 : !firrtl.uint<32>
      firrtl.strictconnect %277, %252 : !firrtl.uint<1>
      firrtl.strictconnect %253, %278 : !firrtl.uint<1>
      firrtl.strictconnect %254, %279 : !firrtl.uint<64>
      firrtl.strictconnect %255, %280 : !firrtl.uint<8>
      firrtl.strictconnect %256, %281 : !firrtl.uint<1>
      firrtl.strictconnect %282, %257 : !firrtl.uint<1>
      firrtl.strictconnect %283, %258 : !firrtl.uint<1>
      firrtl.strictconnect %259, %284 : !firrtl.uint<1>
      firrtl.strictconnect %260, %285 : !firrtl.uint<32>
      firrtl.strictconnect %261, %286 : !firrtl.uint<1>
      firrtl.strictconnect %287, %262 : !firrtl.uint<1>
      firrtl.strictconnect %288, %263 : !firrtl.uint<64>
      %plic_io_extra_intrVec_REG = firrtl.reg %clock {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %plic_io_extra_intrVec_REG, %io_meip : !firrtl.uint<1>
      %plic_io_extra_intrVec_REG_1 = firrtl.reg %clock {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %plic_io_extra_intrVec_REG_1, %plic_io_extra_intrVec_REG : !firrtl.uint<1>
      firrtl.strictconnect %264, %plic_io_extra_intrVec_REG_1 : !firrtl.uint<1>
      firrtl.strictconnect %clint_isWFI__bore, %nutcore_frontend_idu__WIRE__bore : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_backend_exu_csr_msip__bore, %clint_io_extra_msip__bore : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_backend_exu_csr_mtip__bore, %clint_io_extra_mtip__bore : !firrtl.uint<1>
      firrtl.strictconnect %nutcore_backend_exu_csr_meip__bore, %plic_io_extra_meip_0__bore : !firrtl.uint<1>
    }
    firrtl.extmodule private @MemRWHelper(in r_enable: !firrtl.uint<1>, in r_index: !firrtl.uint<64>, out r_data: !firrtl.uint<64>, in w_enable: !firrtl.uint<1>, in w_index: !firrtl.uint<64>, in w_data: !firrtl.uint<64>, in w_mask: !firrtl.uint<64>, in clock: !firrtl.clock) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "MemRWHelper"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "MemRWHelper"}
    firrtl.module private @DifftestMem1P(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, in %read_valid: !firrtl.uint<1>, in %read_index: !firrtl.uint<64>, out %read_data_0: !firrtl.uint<64>, in %write_valid: !firrtl.uint<1>, in %write_index: !firrtl.uint<64>, in %write_data_0: !firrtl.uint<64>) {
      %c18446744073709551615_ui64 = firrtl.constant 18446744073709551615 : !firrtl.uint<64>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %read_data_0_0 = firrtl.wire {name = "read_data_0"} : !firrtl.uint<64>
      firrtl.strictconnect %read_data_0, %read_data_0_0 : !firrtl.uint<64>
      %helper_0_r_enable, %helper_0_r_index, %helper_0_r_data, %helper_0_w_enable, %helper_0_w_index, %helper_0_w_data, %helper_0_w_mask, %helper_0_clock = firrtl.instance helper_0 @MemRWHelper(in r_enable: !firrtl.uint<1>, in r_index: !firrtl.uint<64>, out r_data: !firrtl.uint<64>, in w_enable: !firrtl.uint<1>, in w_index: !firrtl.uint<64>, in w_data: !firrtl.uint<64>, in w_mask: !firrtl.uint<64>, in clock: !firrtl.clock)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<64>
      %2 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %helper_0_r_enable, %0 : !firrtl.uint<1>
      firrtl.strictconnect %helper_0_r_index, %1 : !firrtl.uint<64>
      firrtl.strictconnect %2, %helper_0_r_data : !firrtl.uint<64>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %helper_0_w_enable, %3 : !firrtl.uint<1>
      firrtl.strictconnect %helper_0_w_index, %4 : !firrtl.uint<64>
      firrtl.strictconnect %helper_0_w_data, %write_data_0 : !firrtl.uint<64>
      firrtl.strictconnect %helper_0_w_mask, %c18446744073709551615_ui64 : !firrtl.uint<64>
      %5 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %6 = firrtl.and %5, %read_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mul %read_index, %c1_ui1 : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      firrtl.strictconnect %0, %6 : !firrtl.uint<1>
      %8 = firrtl.bits %7 63 to 0 : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %1, %8 : !firrtl.uint<64>
      firrtl.strictconnect %read_data_0_0, %2 : !firrtl.uint<64>
      firrtl.strictconnect %helper_0_clock, %clock : !firrtl.clock
      %9 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.and %9, %write_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %11 = firrtl.mul %write_index, %c1_ui1 : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      firrtl.strictconnect %3, %10 : !firrtl.uint<1>
      %12 = firrtl.bits %11 63 to 0 : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %4, %12 : !firrtl.uint<64>
      %13 = firrtl.not %read_valid : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.not %write_valid : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.or %13, %14 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %15, %16, "Assertion failed: read and write come at the same cycle\0A    at Mem.scala:263 assert(!read.valid || !write.valid, \22read and write come at the same cycle\22)\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
    }
    firrtl.module private @AXI4RAM(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_last: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_ar_bits_len: !firrtl.uint<8>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, out %io_in_r_bits_last: !firrtl.uint<1>) {
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2> {name = "io_in_r_bits_resp"}
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32> {name = "_waddr_WIRE"}
      %c0_ui39 = firrtl.constant 0 : !firrtl.uint<39> {name = "_raddr_WIRE"}
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8> {name = "_len_WIRE"}
      %c16777216_ui25 = firrtl.constant 16777216 : !firrtl.uint<25>
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c7_ui3 = firrtl.constant 7 : !firrtl.uint<3>
      %c3_ui2 = firrtl.constant 3 : !firrtl.uint<2>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_r_valid_3 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_4 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_in_r_bits_last_5 = firrtl.wire {name = "io_in_r_bits_last"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_4 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_last, %io_in_r_bits_last_5 : !firrtl.uint<1>
      %raddr = firrtl.wire : !firrtl.uint<39>
      %ren = firrtl.wire : !firrtl.uint<1>
      %c_value = firrtl.regreset %clock, %reset, %c0_ui8 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>
      %readBeatCnt = firrtl.regreset %clock, %reset, %c0_ui8 {firrtl.random_init_start = 8 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>
      %len_r = firrtl.regreset %clock, %reset, %c0_ui8 {firrtl.random_init_start = 16 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>
      %0 = firrtl.mux(%io_in_ar_valid, %io_in_ar_bits_len, %len_r) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %len_r, %0 : !firrtl.uint<8>
      %len = firrtl.mux(%io_in_ar_valid, %io_in_ar_bits_len, %len_r) {name = "len"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %burst_r = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 24 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %1 = firrtl.mux(%io_in_ar_valid, %c2_ui2, %burst_r) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %burst_r, %1 : !firrtl.uint<2>
      %burst = firrtl.mux(%io_in_ar_valid, %c2_ui2, %burst_r) {name = "burst"} : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %_wrapAddr_WIRE = firrtl.wire : !firrtl.uint<32>
      %2 = firrtl.pad %io_in_ar_bits_len, 32 : (!firrtl.uint<8>) -> !firrtl.uint<32>
      firrtl.strictconnect %_wrapAddr_WIRE, %2 : !firrtl.uint<32>
      %_wrapAddr_T = firrtl.shl %_wrapAddr_WIRE, 3 {name = "_wrapAddr_T"} : (!firrtl.uint<32>) -> !firrtl.uint<35>
      %3 = firrtl.pad %_wrapAddr_T, 39 : (!firrtl.uint<35>) -> !firrtl.uint<39>
      %_wrapAddr_T_1 = firrtl.not %3 {name = "_wrapAddr_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<39>
      %4 = firrtl.bits %_wrapAddr_T_1 31 to 0 : (!firrtl.uint<39>) -> !firrtl.uint<32>
      %5 = firrtl.and %4, %io_in_ar_bits_addr : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %wrapAddr = firrtl.pad %5, 39 {name = "wrapAddr"} : (!firrtl.uint<32>) -> !firrtl.uint<39>
      %raddr_r = firrtl.regreset %clock, %reset, %c0_ui39 {firrtl.random_init_start = 26 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>
      %6 = firrtl.mux(%io_in_ar_valid, %wrapAddr, %raddr_r) : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %raddr_r, %6 : !firrtl.uint<39>
      %_raddr_T_1 = firrtl.mux(%io_in_ar_valid, %wrapAddr, %raddr_r) {name = "_raddr_T_1"} : (!firrtl.uint<1>, !firrtl.uint<39>, !firrtl.uint<39>) -> !firrtl.uint<39>
      firrtl.strictconnect %raddr, %_raddr_T_1 : !firrtl.uint<39>
      %_io_in_r_bits_last_T = firrtl.eq %c_value, %len {name = "_io_in_r_bits_last_T"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_last_5, %_io_in_r_bits_last_T : !firrtl.uint<1>
      %_value_T = firrtl.add %readBeatCnt, %c1_ui1 {name = "_value_T"} : (!firrtl.uint<8>, !firrtl.uint<1>) -> !firrtl.uint<9>
      %_value_T_1 = firrtl.bits %_value_T 7 to 0 {name = "_value_T_1"} : (!firrtl.uint<9>) -> !firrtl.uint<8>
      %7 = firrtl.eq %burst, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %8 = firrtl.eq %readBeatCnt, %len : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<1>
      %9 = firrtl.and %7, %8 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.mux(%9, %c0_ui8, %_value_T_1) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %11 = firrtl.mux(%ren, %10, %readBeatCnt) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_value_T_2 = firrtl.add %c_value, %c1_ui1 {name = "_value_T_2"} : (!firrtl.uint<8>, !firrtl.uint<1>) -> !firrtl.uint<9>
      %_value_T_3 = firrtl.bits %_value_T_2 7 to 0 {name = "_value_T_3"} : (!firrtl.uint<9>) -> !firrtl.uint<8>
      %12 = firrtl.mux(%io_in_r_bits_last_5, %c0_ui8, %_value_T_3) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %13 = firrtl.mux(%io_in_r_valid_3, %12, %c_value) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %c_value, %13 : !firrtl.uint<8>
      %14 = firrtl.bits %io_in_ar_bits_addr 31 to 3 : (!firrtl.uint<32>) -> !firrtl.uint<29>
      %15 = firrtl.pad %14, 32 : (!firrtl.uint<29>) -> !firrtl.uint<32>
      %16 = firrtl.bits %15 7 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<8>
      %17 = firrtl.and %16, %io_in_ar_bits_len : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %18 = firrtl.mux(%io_in_ar_valid, %17, %11) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %readBeatCnt, %18 : !firrtl.uint<8>
      %19 = firrtl.orr %io_in_ar_bits_len : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %20 = firrtl.and %io_in_ar_valid, %19 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %21 = firrtl.eq %io_in_ar_bits_len, %c1_ui1 : (!firrtl.uint<8>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.eq %io_in_ar_bits_len, %c3_ui2 : (!firrtl.uint<8>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %23 = firrtl.or %21, %22 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.eq %io_in_ar_bits_len, %c7_ui3 : (!firrtl.uint<8>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %25 = firrtl.or %23, %24 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.eq %io_in_ar_bits_len, %c15_ui4 : (!firrtl.uint<8>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %27 = firrtl.or %25, %26 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %29 = firrtl.and %20, %28 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %27, %29, "Assertion failed\0A    at AXI4Slave.scala:59 assert(axi4.ar.bits.len === 1.U || axi4.ar.bits.len === 3.U ||\0A" : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %_r_busy_T_2 = firrtl.and %io_in_r_valid_3, %io_in_r_bits_last_5 {name = "_r_busy_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 65 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %30 = firrtl.mux(%_r_busy_T_2, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %31 = firrtl.mux(%io_in_ar_valid, %c1_ui1, %30) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %31 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 66 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %io_in_ar_valid : !firrtl.uint<1>
      %_ren_T_2 = firrtl.not %io_in_r_bits_last_5 {name = "_ren_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_ren_T_3 = firrtl.and %io_in_r_valid_3, %_ren_T_2 {name = "_ren_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_ren_T_4 = firrtl.or %ren_REG, %_ren_T_3 {name = "_ren_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %ren, %_ren_T_4 : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %io_in_ar_valid, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 67 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %32 = firrtl.mux(%io_in_r_valid_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %33 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %32) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %33 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_3, %io_in_r_valid_r : !firrtl.uint<1>
      %waddr = firrtl.wire : !firrtl.uint<32>
      %writeBeatCnt = firrtl.regreset %clock, %reset, %c0_ui8 {firrtl.random_init_start = 68 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>
      %_io_in_b_bits_user_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_io_in_b_bits_user_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %waddr_r = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 76 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %34 = firrtl.mux(%_io_in_b_bits_user_T, %io_in_aw_bits_addr, %waddr_r) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %waddr_r, %34 : !firrtl.uint<32>
      %_waddr_T_1 = firrtl.mux(%_io_in_b_bits_user_T, %io_in_aw_bits_addr, %waddr_r) {name = "_waddr_T_1"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %waddr, %_waddr_T_1 : !firrtl.uint<32>
      %_wen_T = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_wen_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_value_T_6 = firrtl.add %writeBeatCnt, %c1_ui1 {name = "_value_T_6"} : (!firrtl.uint<8>, !firrtl.uint<1>) -> !firrtl.uint<9>
      %_value_T_7 = firrtl.bits %_value_T_6 7 to 0 {name = "_value_T_7"} : (!firrtl.uint<9>) -> !firrtl.uint<8>
      %35 = firrtl.mux(%io_in_w_bits_last, %c0_ui8, %_value_T_7) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %36 = firrtl.mux(%_wen_T, %35, %writeBeatCnt) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      firrtl.strictconnect %writeBeatCnt, %36 : !firrtl.uint<8>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 108 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %37 = firrtl.mux(%io_in_b_valid_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %38 = firrtl.mux(%_io_in_b_bits_user_T, %c1_ui1, %37) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %38 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %_wen_T, %io_in_w_bits_last {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 109 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %39 = firrtl.mux(%io_in_b_valid_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %40 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %39) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %40 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %41 = firrtl.bits %waddr 26 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<27>
      %_wIdx_T = firrtl.pad %41, 32 {name = "_wIdx_T"} : (!firrtl.uint<27>) -> !firrtl.uint<32>
      %_wIdx_T_1 = firrtl.bits %_wIdx_T 31 to 3 {name = "_wIdx_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<29>
      %_wIdx_T_2 = firrtl.add %_wIdx_T_1, %writeBeatCnt {name = "_wIdx_T_2"} : (!firrtl.uint<29>, !firrtl.uint<8>) -> !firrtl.uint<30>
      %wIdx = firrtl.bits %_wIdx_T_2 28 to 0 {name = "wIdx"} : (!firrtl.uint<30>) -> !firrtl.uint<29>
      %42 = firrtl.bits %raddr 26 to 0 : (!firrtl.uint<39>) -> !firrtl.uint<27>
      %_rIdx_T = firrtl.pad %42, 39 {name = "_rIdx_T"} : (!firrtl.uint<27>) -> !firrtl.uint<39>
      %_rIdx_T_1 = firrtl.bits %_rIdx_T 38 to 3 {name = "_rIdx_T_1"} : (!firrtl.uint<39>) -> !firrtl.uint<36>
      %_rIdx_T_2 = firrtl.add %_rIdx_T_1, %readBeatCnt {name = "_rIdx_T_2"} : (!firrtl.uint<36>, !firrtl.uint<8>) -> !firrtl.uint<37>
      %rIdx = firrtl.bits %_rIdx_T_2 35 to 0 {name = "rIdx"} : (!firrtl.uint<37>) -> !firrtl.uint<36>
      %_wen_T_1 = firrtl.lt %wIdx, %c16777216_ui25 {name = "_wen_T_1"} : (!firrtl.uint<29>, !firrtl.uint<25>) -> !firrtl.uint<1>
      %wen = firrtl.and %_wen_T, %_wen_T_1 {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %rdata_mem_clock, %rdata_mem_reset, %rdata_mem_read_valid, %rdata_mem_read_index, %rdata_mem_read_data_0, %rdata_mem_write_valid, %rdata_mem_write_index, %rdata_mem_write_data_0 = firrtl.instance rdata_mem @DifftestMem1P(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in read_valid: !firrtl.uint<1>, in read_index: !firrtl.uint<64>, out read_data_0: !firrtl.uint<64>, in write_valid: !firrtl.uint<1>, in write_index: !firrtl.uint<64>, in write_data_0: !firrtl.uint<64>)
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<64>
      %45 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %rdata_mem_read_valid, %43 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_read_index, %44 : !firrtl.uint<64>
      firrtl.strictconnect %45, %rdata_mem_read_data_0 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_mem_clock, %clock : !firrtl.clock
      firrtl.strictconnect %rdata_mem_reset, %reset : !firrtl.uint<1>
      %_rdata_WIRE_0 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_1 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_3 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_4 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_5 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_6 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_7 = firrtl.wire : !firrtl.uint<8>
      %_rdata_T = firrtl.bits %io_in_w_bits_data 7 to 0 {name = "_rdata_T"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_0, %_rdata_T : !firrtl.uint<8>
      %_rdata_T_1 = firrtl.bits %io_in_w_bits_data 15 to 8 {name = "_rdata_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_1, %_rdata_T_1 : !firrtl.uint<8>
      %_rdata_T_2 = firrtl.bits %io_in_w_bits_data 23 to 16 {name = "_rdata_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2, %_rdata_T_2 : !firrtl.uint<8>
      %_rdata_T_3 = firrtl.bits %io_in_w_bits_data 31 to 24 {name = "_rdata_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_3, %_rdata_T_3 : !firrtl.uint<8>
      %_rdata_T_4 = firrtl.bits %io_in_w_bits_data 39 to 32 {name = "_rdata_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_4, %_rdata_T_4 : !firrtl.uint<8>
      %_rdata_T_5 = firrtl.bits %io_in_w_bits_data 47 to 40 {name = "_rdata_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_5, %_rdata_T_5 : !firrtl.uint<8>
      %_rdata_T_6 = firrtl.bits %io_in_w_bits_data 55 to 48 {name = "_rdata_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_6, %_rdata_T_6 : !firrtl.uint<8>
      %_rdata_T_7 = firrtl.bits %io_in_w_bits_data 63 to 56 {name = "_rdata_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_7, %_rdata_T_7 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_write_valid, %wen : !firrtl.uint<1>
      %46 = firrtl.pad %wIdx, 64 : (!firrtl.uint<29>) -> !firrtl.uint<64>
      firrtl.strictconnect %rdata_mem_write_index, %46 : !firrtl.uint<64>
      %_rdata_WIRE_2_0 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2_1 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2_2 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2_3 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2_4 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2_5 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2_6 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_2_7 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_0, %_rdata_WIRE_0 : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_1, %_rdata_WIRE_1 : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_2, %_rdata_WIRE_2 : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_3, %_rdata_WIRE_3 : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_4, %_rdata_WIRE_4 : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_5, %_rdata_WIRE_5 : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_6, %_rdata_WIRE_6 : !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_2_7, %_rdata_WIRE_7 : !firrtl.uint<8>
      %_rdata_WIRE_3_0 = firrtl.wire : !firrtl.uint<64>
      %rdata_lo_lo = firrtl.cat %_rdata_WIRE_2_1, %_rdata_WIRE_2_0 {name = "rdata_lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_lo_hi = firrtl.cat %_rdata_WIRE_2_3, %_rdata_WIRE_2_2 {name = "rdata_lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_lo = firrtl.cat %rdata_lo_hi, %rdata_lo_lo {name = "rdata_lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %rdata_hi_lo = firrtl.cat %_rdata_WIRE_2_5, %_rdata_WIRE_2_4 {name = "rdata_hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_hi_hi = firrtl.cat %_rdata_WIRE_2_7, %_rdata_WIRE_2_6 {name = "rdata_hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_hi = firrtl.cat %rdata_hi_hi, %rdata_hi_lo {name = "rdata_hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %_rdata_T_16 = firrtl.cat %rdata_hi, %rdata_lo {name = "_rdata_T_16"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %_rdata_T_17 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_T_17, %_rdata_T_16 : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_WIRE_3_0, %_rdata_T_17 : !firrtl.uint<64>
      firrtl.strictconnect %rdata_mem_write_data_0, %_rdata_WIRE_3_0 : !firrtl.uint<64>
      firrtl.strictconnect %43, %ren : !firrtl.uint<1>
      %47 = firrtl.pad %rIdx, 64 : (!firrtl.uint<36>) -> !firrtl.uint<64>
      firrtl.strictconnect %44, %47 : !firrtl.uint<64>
      %rdata_REG = firrtl.reg %clock {firrtl.random_init_start = 114 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %rdata_REG, %ren : !firrtl.uint<1>
      %rdata_REG_1 = firrtl.reg %clock {firrtl.random_init_start = 115 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %rdata_REG_1, %ren : !firrtl.uint<1>
      %rdata_r_0 = firrtl.reg %clock {firrtl.random_init_start = 116 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %48 = firrtl.mux(%rdata_REG_1, %45, %rdata_r_0) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %rdata_r_0, %48 : !firrtl.uint<64>
      %_rdata_T_28_0 = firrtl.mux(%rdata_REG, %45, %rdata_r_0) {name = "_rdata_T_28_0"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_rdata_WIRE_8_0 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_8_1 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_8_2 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_8_3 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_8_4 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_8_5 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_8_6 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_8_7 = firrtl.wire : !firrtl.uint<8>
      %_rdata_WIRE_9 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_rdata_WIRE_9, %_rdata_T_28_0 : !firrtl.uint<64>
      %_rdata_T_29 = firrtl.bits %_rdata_WIRE_9 7 to 0 {name = "_rdata_T_29"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_0, %_rdata_T_29 : !firrtl.uint<8>
      %_rdata_T_30 = firrtl.bits %_rdata_WIRE_9 15 to 8 {name = "_rdata_T_30"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_1, %_rdata_T_30 : !firrtl.uint<8>
      %_rdata_T_31 = firrtl.bits %_rdata_WIRE_9 23 to 16 {name = "_rdata_T_31"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_2, %_rdata_T_31 : !firrtl.uint<8>
      %_rdata_T_32 = firrtl.bits %_rdata_WIRE_9 31 to 24 {name = "_rdata_T_32"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_3, %_rdata_T_32 : !firrtl.uint<8>
      %_rdata_T_33 = firrtl.bits %_rdata_WIRE_9 39 to 32 {name = "_rdata_T_33"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_4, %_rdata_T_33 : !firrtl.uint<8>
      %_rdata_T_34 = firrtl.bits %_rdata_WIRE_9 47 to 40 {name = "_rdata_T_34"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_5, %_rdata_T_34 : !firrtl.uint<8>
      %_rdata_T_35 = firrtl.bits %_rdata_WIRE_9 55 to 48 {name = "_rdata_T_35"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_6, %_rdata_T_35 : !firrtl.uint<8>
      %_rdata_T_36 = firrtl.bits %_rdata_WIRE_9 63 to 56 {name = "_rdata_T_36"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %_rdata_WIRE_8_7, %_rdata_T_36 : !firrtl.uint<8>
      %rdata_lo_lo_2 = firrtl.cat %_rdata_WIRE_8_1, %_rdata_WIRE_8_0 {name = "rdata_lo_lo_2"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_lo_hi_2 = firrtl.cat %_rdata_WIRE_8_3, %_rdata_WIRE_8_2 {name = "rdata_lo_hi_2"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_lo_2 = firrtl.cat %rdata_lo_hi_2, %rdata_lo_lo_2 {name = "rdata_lo_2"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %rdata_hi_lo_2 = firrtl.cat %_rdata_WIRE_8_5, %_rdata_WIRE_8_4 {name = "rdata_hi_lo_2"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_hi_hi_2 = firrtl.cat %_rdata_WIRE_8_7, %_rdata_WIRE_8_6 {name = "rdata_hi_hi_2"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_hi_2 = firrtl.cat %rdata_hi_hi_2, %rdata_hi_lo_2 {name = "rdata_hi_2"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %rdata = firrtl.cat %rdata_hi_2, %rdata_lo_2 {name = "rdata"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_4, %rdata : !firrtl.uint<64>
    }
    firrtl.module private @LatencyPipe(out %io_in_ready: !firrtl.uint<1>, in %io_in_valid: !firrtl.uint<1>, in %io_in_bits_addr: !firrtl.uint<32>, in %io_in_bits_len: !firrtl.uint<8>, in %io_out_ready: !firrtl.uint<1>, out %io_out_valid: !firrtl.uint<1>, out %io_out_bits_addr: !firrtl.uint<32>, out %io_out_bits_len: !firrtl.uint<8>) {
      firrtl.strictconnect %io_in_ready, %io_out_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_valid, %io_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_bits_addr, %io_in_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_bits_len, %io_in_bits_len : !firrtl.uint<8>
    }
    firrtl.module private @AXI4Delayer(out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, in %io_in_aw_bits_len: !firrtl.uint<8>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_last: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_ar_bits_len: !firrtl.uint<8>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, out %io_in_r_bits_last: !firrtl.uint<1>, in %io_out_aw_ready: !firrtl.uint<1>, out %io_out_aw_valid: !firrtl.uint<1>, out %io_out_aw_bits_addr: !firrtl.uint<32>, in %io_out_w_ready: !firrtl.uint<1>, out %io_out_w_valid: !firrtl.uint<1>, out %io_out_w_bits_data: !firrtl.uint<64>, out %io_out_w_bits_last: !firrtl.uint<1>, in %io_out_b_valid: !firrtl.uint<1>, out %io_out_ar_valid: !firrtl.uint<1>, out %io_out_ar_bits_addr: !firrtl.uint<32>, out %io_out_ar_bits_len: !firrtl.uint<8>, in %io_out_r_valid: !firrtl.uint<1>, in %io_out_r_bits_data: !firrtl.uint<64>, in %io_out_r_bits_last: !firrtl.uint<1>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_ar_ready_1 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_out_aw_valid_2 = firrtl.wire {name = "io_out_aw_valid"} : !firrtl.uint<1>
      %io_out_aw_bits_addr_3 = firrtl.wire {name = "io_out_aw_bits_addr"} : !firrtl.uint<32>
      %io_out_ar_valid_4 = firrtl.wire {name = "io_out_ar_valid"} : !firrtl.uint<1>
      %io_out_ar_bits_addr_5 = firrtl.wire {name = "io_out_ar_bits_addr"} : !firrtl.uint<32>
      %io_out_ar_bits_len_6 = firrtl.wire {name = "io_out_ar_bits_len"} : !firrtl.uint<8>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_out_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_out_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_out_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_out_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_last, %io_out_r_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_valid, %io_out_aw_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_bits_addr, %io_out_aw_bits_addr_3 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_w_valid, %io_in_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_w_bits_data, %io_in_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %io_out_w_bits_last, %io_in_w_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_valid, %io_out_ar_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_bits_addr, %io_out_ar_bits_addr_5 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_ar_bits_len, %io_out_ar_bits_len_6 : !firrtl.uint<8>
      %io_out_ar_pipe_io_in_ready, %io_out_ar_pipe_io_in_valid, %io_out_ar_pipe_io_in_bits_addr, %io_out_ar_pipe_io_in_bits_len, %io_out_ar_pipe_io_out_ready, %io_out_ar_pipe_io_out_valid, %io_out_ar_pipe_io_out_bits_addr, %io_out_ar_pipe_io_out_bits_len = firrtl.instance io_out_ar_pipe @LatencyPipe(out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<32>, in io_in_bits_len: !firrtl.uint<8>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_len: !firrtl.uint<8>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<32>
      %3 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %0, %io_out_ar_pipe_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_pipe_io_in_valid, %io_in_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_pipe_io_in_bits_addr, %io_in_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_ar_pipe_io_in_bits_len, %io_in_ar_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %io_out_ar_pipe_io_out_ready, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %1, %io_out_ar_pipe_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %2, %io_out_ar_pipe_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %3, %io_out_ar_pipe_io_out_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %io_in_ar_ready_1, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_ar_bits_addr_5, %2 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_ar_bits_len_6, %3 : !firrtl.uint<8>
      firrtl.strictconnect %io_out_ar_valid_4, %1 : !firrtl.uint<1>
      %io_out_aw_pipe_io_in_ready, %io_out_aw_pipe_io_in_valid, %io_out_aw_pipe_io_in_bits_addr, %io_out_aw_pipe_io_in_bits_len, %io_out_aw_pipe_io_out_ready, %io_out_aw_pipe_io_out_valid, %io_out_aw_pipe_io_out_bits_addr, %io_out_aw_pipe_io_out_bits_len = firrtl.instance io_out_aw_pipe @LatencyPipe(out io_in_ready: !firrtl.uint<1>, in io_in_valid: !firrtl.uint<1>, in io_in_bits_addr: !firrtl.uint<32>, in io_in_bits_len: !firrtl.uint<8>, in io_out_ready: !firrtl.uint<1>, out io_out_valid: !firrtl.uint<1>, out io_out_bits_addr: !firrtl.uint<32>, out io_out_bits_len: !firrtl.uint<8>)
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %4, %io_out_aw_pipe_io_in_ready : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_pipe_io_in_valid, %io_in_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_pipe_io_in_bits_addr, %io_in_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_aw_pipe_io_in_bits_len, %io_in_aw_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %io_out_aw_pipe_io_out_ready, %io_out_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %5, %io_out_aw_pipe_io_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %6, %io_out_aw_pipe_io_out_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_in_aw_ready_0, %4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_aw_bits_addr_3, %6 : !firrtl.uint<32>
      firrtl.strictconnect %io_out_aw_valid_2, %5 : !firrtl.uint<1>
    }
    firrtl.module private @SimpleBusCrossbar1toN_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_req_ready: !firrtl.uint<1>, in %io_in_req_valid: !firrtl.uint<1>, in %io_in_req_bits_addr: !firrtl.uint<32>, in %io_in_req_bits_size: !firrtl.uint<3>, in %io_in_req_bits_cmd: !firrtl.uint<4>, in %io_in_req_bits_wmask: !firrtl.uint<8>, in %io_in_req_bits_wdata: !firrtl.uint<64>, in %io_in_resp_ready: !firrtl.uint<1>, out %io_in_resp_valid: !firrtl.uint<1>, out %io_in_resp_bits_cmd: !firrtl.uint<4>, out %io_in_resp_bits_rdata: !firrtl.uint<64>, in %io_out_0_req_ready: !firrtl.uint<1>, out %io_out_0_req_valid: !firrtl.uint<1>, out %io_out_0_req_bits_addr: !firrtl.uint<32>, out %io_out_0_req_bits_cmd: !firrtl.uint<4>, out %io_out_0_req_bits_wmask: !firrtl.uint<8>, out %io_out_0_req_bits_wdata: !firrtl.uint<64>, out %io_out_0_resp_ready: !firrtl.uint<1>, in %io_out_0_resp_valid: !firrtl.uint<1>, in %io_out_0_resp_bits_rdata: !firrtl.uint<64>, in %io_out_1_req_ready: !firrtl.uint<1>, out %io_out_1_req_valid: !firrtl.uint<1>, out %io_out_1_req_bits_addr: !firrtl.uint<32>, out %io_out_1_req_bits_cmd: !firrtl.uint<4>, out %io_out_1_req_bits_wmask: !firrtl.uint<8>, out %io_out_1_req_bits_wdata: !firrtl.uint<64>, out %io_out_1_resp_ready: !firrtl.uint<1>, in %io_out_1_resp_valid: !firrtl.uint<1>, in %io_out_1_resp_bits_rdata: !firrtl.uint<64>, in %io_out_2_req_ready: !firrtl.uint<1>, out %io_out_2_req_valid: !firrtl.uint<1>, out %io_out_2_req_bits_addr: !firrtl.uint<32>, out %io_out_2_req_bits_cmd: !firrtl.uint<4>, out %io_out_2_req_bits_wmask: !firrtl.uint<8>, out %io_out_2_req_bits_wdata: !firrtl.uint<64>, out %io_out_2_resp_ready: !firrtl.uint<1>, in %io_out_2_resp_valid: !firrtl.uint<1>, in %io_out_2_resp_bits_rdata: !firrtl.uint<64>, in %io_out_3_req_ready: !firrtl.uint<1>, out %io_out_3_req_valid: !firrtl.uint<1>, out %io_out_3_req_bits_addr: !firrtl.uint<32>, out %io_out_3_req_bits_cmd: !firrtl.uint<4>, out %io_out_3_req_bits_wmask: !firrtl.uint<8>, out %io_out_3_req_bits_wdata: !firrtl.uint<64>, out %io_out_3_resp_ready: !firrtl.uint<1>, in %io_out_3_resp_valid: !firrtl.uint<1>, in %io_out_3_resp_bits_rdata: !firrtl.uint<64>, in %io_out_4_req_ready: !firrtl.uint<1>, out %io_out_4_req_valid: !firrtl.uint<1>, out %io_out_4_req_bits_addr: !firrtl.uint<32>, out %io_out_4_req_bits_cmd: !firrtl.uint<4>, out %io_out_4_req_bits_wmask: !firrtl.uint<8>, out %io_out_4_req_bits_wdata: !firrtl.uint<64>, out %io_out_4_resp_ready: !firrtl.uint<1>, in %io_out_4_resp_valid: !firrtl.uint<1>, in %io_out_4_resp_bits_rdata: !firrtl.uint<64>, in %io_out_5_req_ready: !firrtl.uint<1>, out %io_out_5_req_valid: !firrtl.uint<1>, out %io_out_5_req_bits_addr: !firrtl.uint<32>, out %io_out_5_req_bits_cmd: !firrtl.uint<4>, out %io_out_5_req_bits_wmask: !firrtl.uint<8>, out %io_out_5_req_bits_wdata: !firrtl.uint<64>, out %io_out_5_resp_ready: !firrtl.uint<1>, in %io_out_5_resp_valid: !firrtl.uint<1>, in %io_out_5_resp_bits_rdata: !firrtl.uint<64>, in %io_out_6_req_ready: !firrtl.uint<1>, out %io_out_6_req_valid: !firrtl.uint<1>, out %io_out_6_req_bits_addr: !firrtl.uint<32>, out %io_out_6_req_bits_cmd: !firrtl.uint<4>, out %io_out_6_req_bits_wmask: !firrtl.uint<8>, out %io_out_6_req_bits_wdata: !firrtl.uint<64>, out %io_out_6_resp_ready: !firrtl.uint<1>, in %io_out_6_resp_valid: !firrtl.uint<1>, in %io_out_6_resp_bits_rdata: !firrtl.uint<64>) {
      %c6_ui4 = firrtl.constant 6 : !firrtl.uint<4>
      %c0_ui4 = firrtl.constant 0 : !firrtl.uint<4>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "_outSelRespVec_WIRE_6"}
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c1_ui2 = firrtl.constant 1 : !firrtl.uint<2>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c1_ui7 = firrtl.constant 1 : !firrtl.uint<7>
      %c2_ui7 = firrtl.constant 2 : !firrtl.uint<7>
      %c4_ui7 = firrtl.constant 4 : !firrtl.uint<7>
      %c8_ui7 = firrtl.constant 8 : !firrtl.uint<7>
      %c16_ui7 = firrtl.constant 16 : !firrtl.uint<7>
      %c32_ui7 = firrtl.constant 32 : !firrtl.uint<7>
      %c0_ui7 = firrtl.constant 0 : !firrtl.uint<7>
      %c64_ui7 = firrtl.constant 64 : !firrtl.uint<7>
      %c1073762304_ui31 = firrtl.constant 1073762304 : !firrtl.uint<31>
      %c1073758208_ui31 = firrtl.constant 1073758208 : !firrtl.uint<31>
      %c1073754112_ui31 = firrtl.constant 1073754112 : !firrtl.uint<31>
      %c1073750016_ui31 = firrtl.constant 1073750016 : !firrtl.uint<31>
      %c1073741824_ui31 = firrtl.constant 1073741824 : !firrtl.uint<31>
      %c1073745928_ui31 = firrtl.constant 1073745928 : !firrtl.uint<31>
      %c1073745920_ui31 = firrtl.constant 1073745920 : !firrtl.uint<31>
      %c1346371584_ui31 = firrtl.constant 1346371584 : !firrtl.uint<31>
      %c1342177280_ui31 = firrtl.constant 1342177280 : !firrtl.uint<31>
      %c1080033296_ui31 = firrtl.constant 1080033296 : !firrtl.uint<31>
      %c1080033280_ui31 = firrtl.constant 1080033280 : !firrtl.uint<31>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2>
      %io_in_req_ready_0 = firrtl.wire {name = "io_in_req_ready"} : !firrtl.uint<1>
      %io_in_resp_valid_1 = firrtl.wire {name = "io_in_resp_valid"} : !firrtl.uint<1>
      %io_in_resp_bits_cmd_2 = firrtl.wire {name = "io_in_resp_bits_cmd"} : !firrtl.uint<4>
      %io_in_resp_bits_rdata_3 = firrtl.wire {name = "io_in_resp_bits_rdata"} : !firrtl.uint<64>
      %io_out_0_req_valid_4 = firrtl.wire {name = "io_out_0_req_valid"} : !firrtl.uint<1>
      %io_out_0_resp_ready_5 = firrtl.wire {name = "io_out_0_resp_ready"} : !firrtl.uint<1>
      %io_out_1_req_valid_6 = firrtl.wire {name = "io_out_1_req_valid"} : !firrtl.uint<1>
      %io_out_1_resp_ready_7 = firrtl.wire {name = "io_out_1_resp_ready"} : !firrtl.uint<1>
      %io_out_2_req_valid_8 = firrtl.wire {name = "io_out_2_req_valid"} : !firrtl.uint<1>
      %io_out_2_resp_ready_9 = firrtl.wire {name = "io_out_2_resp_ready"} : !firrtl.uint<1>
      %io_out_3_req_valid_10 = firrtl.wire {name = "io_out_3_req_valid"} : !firrtl.uint<1>
      %io_out_3_resp_ready_11 = firrtl.wire {name = "io_out_3_resp_ready"} : !firrtl.uint<1>
      %io_out_4_req_valid_12 = firrtl.wire {name = "io_out_4_req_valid"} : !firrtl.uint<1>
      %io_out_4_resp_ready_13 = firrtl.wire {name = "io_out_4_resp_ready"} : !firrtl.uint<1>
      %io_out_5_req_valid_14 = firrtl.wire {name = "io_out_5_req_valid"} : !firrtl.uint<1>
      %io_out_5_resp_ready_15 = firrtl.wire {name = "io_out_5_resp_ready"} : !firrtl.uint<1>
      %io_out_6_req_valid_16 = firrtl.wire {name = "io_out_6_req_valid"} : !firrtl.uint<1>
      %io_out_6_resp_ready_17 = firrtl.wire {name = "io_out_6_resp_ready"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready, %io_in_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid, %io_in_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_bits_cmd, %io_in_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata, %io_in_resp_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_req_valid, %io_out_0_req_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_0_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_0_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_0_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_0_resp_ready, %io_out_0_resp_ready_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_req_valid, %io_out_1_req_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_1_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_1_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_1_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_1_resp_ready, %io_out_1_resp_ready_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_req_valid, %io_out_2_req_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_2_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_2_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_2_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_2_resp_ready, %io_out_2_resp_ready_9 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_3_req_valid, %io_out_3_req_valid_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_3_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_3_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_3_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_3_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_3_resp_ready, %io_out_3_resp_ready_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_4_req_valid, %io_out_4_req_valid_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_4_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_4_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_4_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_4_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_4_resp_ready, %io_out_4_resp_ready_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_5_req_valid, %io_out_5_req_valid_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_5_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_5_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_5_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_5_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_5_resp_ready, %io_out_5_resp_ready_15 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_6_req_valid, %io_out_6_req_valid_16 : !firrtl.uint<1>
      firrtl.strictconnect %io_out_6_req_bits_addr, %io_in_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %io_out_6_req_bits_cmd, %io_in_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_out_6_req_bits_wmask, %io_in_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %io_out_6_req_bits_wdata, %io_in_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %io_out_6_resp_ready, %io_out_6_resp_ready_17 : !firrtl.uint<1>
      %state = firrtl.regreset %clock, %reset, %c0_ui2 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>
      %_outMatchVec_T = firrtl.geq %io_in_req_bits_addr, %c1080033280_ui31 {name = "_outMatchVec_T"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_1 = firrtl.lt %io_in_req_bits_addr, %c1080033296_ui31 {name = "_outMatchVec_T_1"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_2 = firrtl.and %_outMatchVec_T, %_outMatchVec_T_1 {name = "_outMatchVec_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_3 = firrtl.geq %io_in_req_bits_addr, %c1342177280_ui31 {name = "_outMatchVec_T_3"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_4 = firrtl.lt %io_in_req_bits_addr, %c1346371584_ui31 {name = "_outMatchVec_T_4"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_5 = firrtl.and %_outMatchVec_T_3, %_outMatchVec_T_4 {name = "_outMatchVec_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_6 = firrtl.geq %io_in_req_bits_addr, %c1073745920_ui31 {name = "_outMatchVec_T_6"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_7 = firrtl.lt %io_in_req_bits_addr, %c1073745928_ui31 {name = "_outMatchVec_T_7"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_8 = firrtl.and %_outMatchVec_T_6, %_outMatchVec_T_7 {name = "_outMatchVec_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_9 = firrtl.geq %io_in_req_bits_addr, %c1073741824_ui31 {name = "_outMatchVec_T_9"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_10 = firrtl.lt %io_in_req_bits_addr, %c1073745920_ui31 {name = "_outMatchVec_T_10"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_11 = firrtl.and %_outMatchVec_T_9, %_outMatchVec_T_10 {name = "_outMatchVec_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_12 = firrtl.geq %io_in_req_bits_addr, %c1073750016_ui31 {name = "_outMatchVec_T_12"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_13 = firrtl.lt %io_in_req_bits_addr, %c1073754112_ui31 {name = "_outMatchVec_T_13"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_14 = firrtl.and %_outMatchVec_T_12, %_outMatchVec_T_13 {name = "_outMatchVec_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_15 = firrtl.geq %io_in_req_bits_addr, %c1073758208_ui31 {name = "_outMatchVec_T_15"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_16 = firrtl.lt %io_in_req_bits_addr, %c1073762304_ui31 {name = "_outMatchVec_T_16"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_17 = firrtl.and %_outMatchVec_T_15, %_outMatchVec_T_16 {name = "_outMatchVec_T_17"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_outMatchVec_T_18 = firrtl.geq %io_in_req_bits_addr, %c1073754112_ui31 {name = "_outMatchVec_T_18"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_19 = firrtl.lt %io_in_req_bits_addr, %c1073758208_ui31 {name = "_outMatchVec_T_19"} : (!firrtl.uint<32>, !firrtl.uint<31>) -> !firrtl.uint<1>
      %_outMatchVec_T_20 = firrtl.and %_outMatchVec_T_18, %_outMatchVec_T_19 {name = "_outMatchVec_T_20"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %outMatchVec_0 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_1 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_2 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_3 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_4 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_5 = firrtl.wire : !firrtl.uint<1>
      %outMatchVec_6 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_0, %_outMatchVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_1, %_outMatchVec_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_2, %_outMatchVec_T_8 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_3, %_outMatchVec_T_11 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_4, %_outMatchVec_T_14 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_5, %_outMatchVec_T_17 : !firrtl.uint<1>
      firrtl.strictconnect %outMatchVec_6, %_outMatchVec_T_20 : !firrtl.uint<1>
      %_outSelVec_enc_T = firrtl.mux(%outMatchVec_6, %c64_ui7, %c0_ui7) {name = "_outSelVec_enc_T"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_outSelVec_enc_T_1 = firrtl.mux(%outMatchVec_5, %c32_ui7, %_outSelVec_enc_T) {name = "_outSelVec_enc_T_1"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_outSelVec_enc_T_2 = firrtl.mux(%outMatchVec_4, %c16_ui7, %_outSelVec_enc_T_1) {name = "_outSelVec_enc_T_2"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_outSelVec_enc_T_3 = firrtl.mux(%outMatchVec_3, %c8_ui7, %_outSelVec_enc_T_2) {name = "_outSelVec_enc_T_3"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_outSelVec_enc_T_4 = firrtl.mux(%outMatchVec_2, %c4_ui7, %_outSelVec_enc_T_3) {name = "_outSelVec_enc_T_4"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_outSelVec_enc_T_5 = firrtl.mux(%outMatchVec_1, %c2_ui7, %_outSelVec_enc_T_4) {name = "_outSelVec_enc_T_5"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %outSelVec_enc = firrtl.mux(%outMatchVec_0, %c1_ui7, %_outSelVec_enc_T_5) {name = "outSelVec_enc"} : (!firrtl.uint<1>, !firrtl.uint<7>, !firrtl.uint<7>) -> !firrtl.uint<7>
      %_outSelVec_T = firrtl.bits %outSelVec_enc 0 to 0 {name = "_outSelVec_T"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_outSelVec_T_1 = firrtl.bits %outSelVec_enc 1 to 1 {name = "_outSelVec_T_1"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_outSelVec_T_2 = firrtl.bits %outSelVec_enc 2 to 2 {name = "_outSelVec_T_2"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_outSelVec_T_3 = firrtl.bits %outSelVec_enc 3 to 3 {name = "_outSelVec_T_3"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_outSelVec_T_4 = firrtl.bits %outSelVec_enc 4 to 4 {name = "_outSelVec_T_4"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_outSelVec_T_5 = firrtl.bits %outSelVec_enc 5 to 5 {name = "_outSelVec_T_5"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_outSelVec_T_6 = firrtl.bits %outSelVec_enc 6 to 6 {name = "_outSelVec_T_6"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %outSelVec_0 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_1 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_2 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_3 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_4 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_5 = firrtl.wire : !firrtl.uint<1>
      %outSelVec_6 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_0, %_outSelVec_T : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_1, %_outSelVec_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_2, %_outSelVec_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_3, %_outSelVec_T_3 : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_4, %_outSelVec_T_4 : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_5, %_outSelVec_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %outSelVec_6, %_outSelVec_T_6 : !firrtl.uint<1>
      %_outSelRespVec_T = firrtl.and %io_in_req_ready_0, %io_in_req_valid {name = "_outSelRespVec_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %0 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_6_req_valid_T_1 = firrtl.not %0 {name = "_io_out_6_req_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_outSelRespVec_T_2 = firrtl.and %_outSelRespVec_T, %_io_out_6_req_valid_T_1 {name = "_outSelRespVec_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %outSelRespVec_0 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_1 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_2 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_3 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_4 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 6 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_5 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 7 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %outSelRespVec_6 = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 8 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %1 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_0, %outSelRespVec_0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_0, %1 : !firrtl.uint<1>
      %2 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_1, %outSelRespVec_1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_1, %2 : !firrtl.uint<1>
      %3 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_2, %outSelRespVec_2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_2, %3 : !firrtl.uint<1>
      %4 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_3, %outSelRespVec_3) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_3, %4 : !firrtl.uint<1>
      %5 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_4, %outSelRespVec_4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_4, %5 : !firrtl.uint<1>
      %6 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_5, %outSelRespVec_5) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_5, %6 : !firrtl.uint<1>
      %7 = firrtl.mux(%_outSelRespVec_T_2, %outSelVec_6, %outSelRespVec_6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %outSelRespVec_6, %7 : !firrtl.uint<1>
      %reqInvalidAddr_lo_hi = firrtl.cat %outSelVec_2, %outSelVec_1 {name = "reqInvalidAddr_lo_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %reqInvalidAddr_lo = firrtl.cat %reqInvalidAddr_lo_hi, %outSelVec_0 {name = "reqInvalidAddr_lo"} : (!firrtl.uint<2>, !firrtl.uint<1>) -> !firrtl.uint<3>
      %reqInvalidAddr_hi_lo = firrtl.cat %outSelVec_4, %outSelVec_3 {name = "reqInvalidAddr_hi_lo"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %reqInvalidAddr_hi_hi = firrtl.cat %outSelVec_6, %outSelVec_5 {name = "reqInvalidAddr_hi_hi"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %reqInvalidAddr_hi = firrtl.cat %reqInvalidAddr_hi_hi, %reqInvalidAddr_hi_lo {name = "reqInvalidAddr_hi"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<4>
      %_reqInvalidAddr_T = firrtl.cat %reqInvalidAddr_hi, %reqInvalidAddr_lo {name = "_reqInvalidAddr_T"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<7>
      %_reqInvalidAddr_T_1 = firrtl.orr %_reqInvalidAddr_T {name = "_reqInvalidAddr_T_1"} : (!firrtl.uint<7>) -> !firrtl.uint<1>
      %_reqInvalidAddr_T_2 = firrtl.not %_reqInvalidAddr_T_1 {name = "_reqInvalidAddr_T_2"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %reqInvalidAddr = firrtl.and %io_in_req_valid, %_reqInvalidAddr_T_2 {name = "reqInvalidAddr"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %LogPerfHelper_timer, %LogPerfHelper_logEnable, %LogPerfHelper_clean, %LogPerfHelper_dump = firrtl.instance LogPerfHelper sym @sym @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %control_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %control_logEnable, %LogPerfHelper_logEnable : !firrtl.uint<1>
      %8 = firrtl.and %reqInvalidAddr, %control_logEnable : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %c = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 9 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T = firrtl.add %c, %c1_ui1 {name = "_c_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_1 = firrtl.bits %_c_T 63 to 0 {name = "_c_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c, %_c_T_1 : !firrtl.uint<64>
      %9 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.and %8, %9 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %10, "crossbar access bad addr %x, time %d\0A" {name = "printf"} (%io_in_req_bits_addr, %c) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<64>
      %11 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.not %reqInvalidAddr : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.assert %clock, %12, %11, "Assertion failed: address decode error, bad addr = 0x%x\0A\0A    at Crossbar.scala:49 assert(!reqInvalidAddr, \22address decode error, bad addr = 0x%%%%x\\n\22, addr)\0A"(%io_in_req_bits_addr) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>  {eventControl = 0 : i32, format = "ifElseFatal", isConcurrent = true, name = "chisel3_builtin"}
      %13 = firrtl.orr %state : (!firrtl.uint<2>) -> !firrtl.uint<1>
      %14 = firrtl.not %13 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.mux(%_outSelRespVec_T, %c1_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %16 = firrtl.mux(%reqInvalidAddr, %c2_ui2, %15) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %17 = firrtl.eq %state, %c1_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %18 = firrtl.and %io_in_resp_ready, %io_in_resp_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %19 = firrtl.mux(%18, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %20 = firrtl.eq %state, %c2_ui2 : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %21 = firrtl.and %io_in_resp_ready, %io_in_resp_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.and %20, %21 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.mux(%22, %c0_ui2, %state) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %24 = firrtl.mux(%17, %19, %23) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      %25 = firrtl.mux(%14, %16, %24) : (!firrtl.uint<1>, !firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<2>
      firrtl.strictconnect %state, %25 : !firrtl.uint<2>
      %_io_in_req_ready_T = firrtl.mux(%outSelVec_0, %io_out_0_req_ready, %c0_ui1) {name = "_io_in_req_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_1 = firrtl.mux(%outSelVec_1, %io_out_1_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_2 = firrtl.mux(%outSelVec_2, %io_out_2_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_3 = firrtl.mux(%outSelVec_3, %io_out_3_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_4 = firrtl.mux(%outSelVec_4, %io_out_4_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_5 = firrtl.mux(%outSelVec_5, %io_out_5_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_6 = firrtl.mux(%outSelVec_6, %io_out_6_req_ready, %c0_ui1) {name = "_io_in_req_ready_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_7 = firrtl.or %_io_in_req_ready_T, %_io_in_req_ready_T_1 {name = "_io_in_req_ready_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_8 = firrtl.or %_io_in_req_ready_T_7, %_io_in_req_ready_T_2 {name = "_io_in_req_ready_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_9 = firrtl.or %_io_in_req_ready_T_8, %_io_in_req_ready_T_3 {name = "_io_in_req_ready_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_10 = firrtl.or %_io_in_req_ready_T_9, %_io_in_req_ready_T_4 {name = "_io_in_req_ready_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_11 = firrtl.or %_io_in_req_ready_T_10, %_io_in_req_ready_T_5 {name = "_io_in_req_ready_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_T_12 = firrtl.or %_io_in_req_ready_T_11, %_io_in_req_ready_T_6 {name = "_io_in_req_ready_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_req_ready_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_io_in_req_ready_WIRE, %_io_in_req_ready_T_12 : !firrtl.uint<1>
      %_io_in_req_ready_T_13 = firrtl.or %_io_in_req_ready_WIRE, %reqInvalidAddr {name = "_io_in_req_ready_T_13"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_req_ready_0, %_io_in_req_ready_T_13 : !firrtl.uint<1>
      %_io_out_0_req_valid_T = firrtl.and %outSelVec_0, %io_in_req_valid {name = "_io_out_0_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_0_req_valid_T_2 = firrtl.and %_io_out_0_req_valid_T, %_io_out_6_req_valid_T_1 {name = "_io_out_0_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_req_valid_4, %_io_out_0_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_1_req_valid_T = firrtl.and %outSelVec_1, %io_in_req_valid {name = "_io_out_1_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_1_req_valid_T_2 = firrtl.and %_io_out_1_req_valid_T, %_io_out_6_req_valid_T_1 {name = "_io_out_1_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_req_valid_6, %_io_out_1_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_2_req_valid_T = firrtl.and %outSelVec_2, %io_in_req_valid {name = "_io_out_2_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_2_req_valid_T_2 = firrtl.and %_io_out_2_req_valid_T, %_io_out_6_req_valid_T_1 {name = "_io_out_2_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_req_valid_8, %_io_out_2_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_3_req_valid_T = firrtl.and %outSelVec_3, %io_in_req_valid {name = "_io_out_3_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_3_req_valid_T_2 = firrtl.and %_io_out_3_req_valid_T, %_io_out_6_req_valid_T_1 {name = "_io_out_3_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_3_req_valid_10, %_io_out_3_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_4_req_valid_T = firrtl.and %outSelVec_4, %io_in_req_valid {name = "_io_out_4_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_4_req_valid_T_2 = firrtl.and %_io_out_4_req_valid_T, %_io_out_6_req_valid_T_1 {name = "_io_out_4_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_4_req_valid_12, %_io_out_4_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_5_req_valid_T = firrtl.and %outSelVec_5, %io_in_req_valid {name = "_io_out_5_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_5_req_valid_T_2 = firrtl.and %_io_out_5_req_valid_T, %_io_out_6_req_valid_T_1 {name = "_io_out_5_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_5_req_valid_14, %_io_out_5_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_6_req_valid_T = firrtl.and %outSelVec_6, %io_in_req_valid {name = "_io_out_6_req_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_6_req_valid_T_2 = firrtl.and %_io_out_6_req_valid_T, %_io_out_6_req_valid_T_1 {name = "_io_out_6_req_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_6_req_valid_16, %_io_out_6_req_valid_T_2 : !firrtl.uint<1>
      %_io_out_0_resp_ready_T = firrtl.and %outSelRespVec_0, %io_in_resp_ready {name = "_io_out_0_resp_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_6_resp_ready_T_1 = firrtl.eq %state, %c1_ui2 {name = "_io_out_6_resp_ready_T_1"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_out_0_resp_ready_T_2 = firrtl.and %_io_out_0_resp_ready_T, %_io_out_6_resp_ready_T_1 {name = "_io_out_0_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_0_resp_ready_5, %_io_out_0_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_1_resp_ready_T = firrtl.and %outSelRespVec_1, %io_in_resp_ready {name = "_io_out_1_resp_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_1_resp_ready_T_2 = firrtl.and %_io_out_1_resp_ready_T, %_io_out_6_resp_ready_T_1 {name = "_io_out_1_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_1_resp_ready_7, %_io_out_1_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_2_resp_ready_T = firrtl.and %outSelRespVec_2, %io_in_resp_ready {name = "_io_out_2_resp_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_2_resp_ready_T_2 = firrtl.and %_io_out_2_resp_ready_T, %_io_out_6_resp_ready_T_1 {name = "_io_out_2_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_2_resp_ready_9, %_io_out_2_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_3_resp_ready_T = firrtl.and %outSelRespVec_3, %io_in_resp_ready {name = "_io_out_3_resp_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_3_resp_ready_T_2 = firrtl.and %_io_out_3_resp_ready_T, %_io_out_6_resp_ready_T_1 {name = "_io_out_3_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_3_resp_ready_11, %_io_out_3_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_4_resp_ready_T = firrtl.and %outSelRespVec_4, %io_in_resp_ready {name = "_io_out_4_resp_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_4_resp_ready_T_2 = firrtl.and %_io_out_4_resp_ready_T, %_io_out_6_resp_ready_T_1 {name = "_io_out_4_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_4_resp_ready_13, %_io_out_4_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_5_resp_ready_T = firrtl.and %outSelRespVec_5, %io_in_resp_ready {name = "_io_out_5_resp_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_5_resp_ready_T_2 = firrtl.and %_io_out_5_resp_ready_T, %_io_out_6_resp_ready_T_1 {name = "_io_out_5_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_5_resp_ready_15, %_io_out_5_resp_ready_T_2 : !firrtl.uint<1>
      %_io_out_6_resp_ready_T = firrtl.and %outSelRespVec_6, %io_in_resp_ready {name = "_io_out_6_resp_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_out_6_resp_ready_T_2 = firrtl.and %_io_out_6_resp_ready_T, %_io_out_6_resp_ready_T_1 {name = "_io_out_6_resp_ready_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_out_6_resp_ready_17, %_io_out_6_resp_ready_T_2 : !firrtl.uint<1>
      %_io_in_resp_valid_T = firrtl.mux(%outSelRespVec_0, %io_out_0_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_1 = firrtl.mux(%outSelRespVec_1, %io_out_1_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_2 = firrtl.mux(%outSelRespVec_2, %io_out_2_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_3 = firrtl.mux(%outSelRespVec_3, %io_out_3_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_4 = firrtl.mux(%outSelRespVec_4, %io_out_4_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_5 = firrtl.mux(%outSelRespVec_5, %io_out_5_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_6 = firrtl.mux(%outSelRespVec_6, %io_out_6_resp_valid, %c0_ui1) {name = "_io_in_resp_valid_T_6"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_7 = firrtl.or %_io_in_resp_valid_T, %_io_in_resp_valid_T_1 {name = "_io_in_resp_valid_T_7"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_8 = firrtl.or %_io_in_resp_valid_T_7, %_io_in_resp_valid_T_2 {name = "_io_in_resp_valid_T_8"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_9 = firrtl.or %_io_in_resp_valid_T_8, %_io_in_resp_valid_T_3 {name = "_io_in_resp_valid_T_9"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_10 = firrtl.or %_io_in_resp_valid_T_9, %_io_in_resp_valid_T_4 {name = "_io_in_resp_valid_T_10"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_11 = firrtl.or %_io_in_resp_valid_T_10, %_io_in_resp_valid_T_5 {name = "_io_in_resp_valid_T_11"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_12 = firrtl.or %_io_in_resp_valid_T_11, %_io_in_resp_valid_T_6 {name = "_io_in_resp_valid_T_12"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_resp_valid_WIRE = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %_io_in_resp_valid_WIRE, %_io_in_resp_valid_T_12 : !firrtl.uint<1>
      %_io_in_resp_valid_T_13 = firrtl.eq %state, %c2_ui2 {name = "_io_in_resp_valid_T_13"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_io_in_resp_valid_T_14 = firrtl.or %_io_in_resp_valid_WIRE, %_io_in_resp_valid_T_13 {name = "_io_in_resp_valid_T_14"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_resp_valid_1, %_io_in_resp_valid_T_14 : !firrtl.uint<1>
      %_io_in_resp_bits_WIRE_cmd = firrtl.wire : !firrtl.uint<4>
      %_io_in_resp_bits_WIRE_rdata = firrtl.wire : !firrtl.uint<64>
      %_io_in_resp_bits_T = firrtl.mux(%outSelRespVec_0, %io_out_0_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_1 = firrtl.mux(%outSelRespVec_1, %io_out_1_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_1"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_2 = firrtl.mux(%outSelRespVec_2, %io_out_2_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_2"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_3 = firrtl.mux(%outSelRespVec_3, %io_out_3_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_3"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_4 = firrtl.mux(%outSelRespVec_4, %io_out_4_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_4"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_5 = firrtl.mux(%outSelRespVec_5, %io_out_5_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_5"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_6 = firrtl.mux(%outSelRespVec_6, %io_out_6_resp_bits_rdata, %c0_ui64) {name = "_io_in_resp_bits_T_6"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_7 = firrtl.or %_io_in_resp_bits_T, %_io_in_resp_bits_T_1 {name = "_io_in_resp_bits_T_7"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_8 = firrtl.or %_io_in_resp_bits_T_7, %_io_in_resp_bits_T_2 {name = "_io_in_resp_bits_T_8"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_9 = firrtl.or %_io_in_resp_bits_T_8, %_io_in_resp_bits_T_3 {name = "_io_in_resp_bits_T_9"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_10 = firrtl.or %_io_in_resp_bits_T_9, %_io_in_resp_bits_T_4 {name = "_io_in_resp_bits_T_10"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_11 = firrtl.or %_io_in_resp_bits_T_10, %_io_in_resp_bits_T_5 {name = "_io_in_resp_bits_T_11"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_T_12 = firrtl.or %_io_in_resp_bits_T_11, %_io_in_resp_bits_T_6 {name = "_io_in_resp_bits_T_12"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_io_in_resp_bits_WIRE_1 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_1, %_io_in_resp_bits_T_12 : !firrtl.uint<64>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_rdata, %_io_in_resp_bits_WIRE_1 : !firrtl.uint<64>
      %_io_in_resp_bits_T_13 = firrtl.mux(%outSelRespVec_0, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_13"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_14 = firrtl.mux(%outSelRespVec_1, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_14"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_15 = firrtl.mux(%outSelRespVec_2, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_15"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_16 = firrtl.mux(%outSelRespVec_3, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_16"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_17 = firrtl.mux(%outSelRespVec_4, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_17"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_18 = firrtl.mux(%outSelRespVec_5, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_18"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_19 = firrtl.mux(%outSelRespVec_6, %c6_ui4, %c0_ui4) {name = "_io_in_resp_bits_T_19"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_20 = firrtl.or %_io_in_resp_bits_T_13, %_io_in_resp_bits_T_14 {name = "_io_in_resp_bits_T_20"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_21 = firrtl.or %_io_in_resp_bits_T_20, %_io_in_resp_bits_T_15 {name = "_io_in_resp_bits_T_21"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_22 = firrtl.or %_io_in_resp_bits_T_21, %_io_in_resp_bits_T_16 {name = "_io_in_resp_bits_T_22"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_23 = firrtl.or %_io_in_resp_bits_T_22, %_io_in_resp_bits_T_17 {name = "_io_in_resp_bits_T_23"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_24 = firrtl.or %_io_in_resp_bits_T_23, %_io_in_resp_bits_T_18 {name = "_io_in_resp_bits_T_24"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_T_25 = firrtl.or %_io_in_resp_bits_T_24, %_io_in_resp_bits_T_19 {name = "_io_in_resp_bits_T_25"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %_io_in_resp_bits_WIRE_2 = firrtl.wire : !firrtl.uint<4>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_2, %_io_in_resp_bits_T_25 : !firrtl.uint<4>
      firrtl.strictconnect %_io_in_resp_bits_WIRE_cmd, %_io_in_resp_bits_WIRE_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_cmd_2, %_io_in_resp_bits_WIRE_cmd : !firrtl.uint<4>
      firrtl.strictconnect %io_in_resp_bits_rdata_3, %_io_in_resp_bits_WIRE_rdata : !firrtl.uint<64>
      %LogPerfHelper_1_timer, %LogPerfHelper_1_logEnable, %LogPerfHelper_1_clean, %LogPerfHelper_1_dump = firrtl.instance LogPerfHelper_1 sym @sym_0 @LogPerfHelper(out timer: !firrtl.uint<64>, out logEnable: !firrtl.uint<1>, out clean: !firrtl.uint<1>, out dump: !firrtl.uint<1>)
      %control_1_logEnable = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %control_1_logEnable, %LogPerfHelper_1_logEnable : !firrtl.uint<1>
      %26 = firrtl.and %control_1_logEnable, %_outSelRespVec_T : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %c_1 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 73 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T_2 = firrtl.add %c_1, %c1_ui1 {name = "_c_T_2"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_3 = firrtl.bits %_c_T_2 63 to 0 {name = "_c_T_3"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c_1, %_c_T_3 : !firrtl.uint<64>
      %27 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.and %26, %27 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %28, "%d: xbar: outSelVec = Vec(%d, %d, %d, %d, %d, %d, %d), outSel.req: addr = 0x%x, cmd = %d, size = %d, wmask = 0x%x, wdata = 0x%x\0A" {name = "printf_2"} (%c_1, %outSelVec_0, %outSelVec_1, %outSelVec_2, %outSelVec_3, %outSelVec_4, %outSelVec_5, %outSelVec_6, %io_in_req_bits_addr, %io_in_req_bits_cmd, %io_in_req_bits_size, %io_in_req_bits_wmask, %io_in_req_bits_wdata) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<4>, !firrtl.uint<3>, !firrtl.uint<8>, !firrtl.uint<64>
      %29 = firrtl.and %io_in_resp_ready, %io_in_resp_valid_1 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %30 = firrtl.and %control_1_logEnable, %29 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %c_2 = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 137 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_c_T_4 = firrtl.add %c_2, %c1_ui1 {name = "_c_T_4"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_c_T_5 = firrtl.bits %_c_T_4 63 to 0 {name = "_c_T_5"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %c_2, %_c_T_5 : !firrtl.uint<64>
      %31 = firrtl.not %reset : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %32 = firrtl.and %30, %31 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.printf %clock, %32, "%d: xbar: outSelVec = Vec(%d, %d, %d, %d, %d, %d, %d), outSel.resp: rdata = %x, cmd = %d\0A" {name = "printf_3"} (%c_2, %outSelVec_0, %outSelVec_1, %outSelVec_2, %outSelVec_3, %outSelVec_4, %outSelVec_5, %outSelVec_6, %io_in_resp_bits_rdata_3, %io_in_resp_bits_cmd_2) : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<4>
    }
    firrtl.module private @AXI4UART(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, out %io_extra_out_valid: !firrtl.uint<1>, out %io_extra_out_ch: !firrtl.uint<8>, out %io_extra_in_valid: !firrtl.uint<1>, in %io_extra_in_ch: !firrtl.uint<8>) {
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c12_ui4 = firrtl.constant 12 : !firrtl.uint<4>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c1_ui32 = firrtl.constant 1 : !firrtl.uint<32>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_extra_out_valid_6 = firrtl.wire {name = "io_extra_out_valid"} : !firrtl.uint<1>
      %io_extra_out_ch_7 = firrtl.wire {name = "io_extra_out_ch"} : !firrtl.uint<8>
      %io_extra_in_valid_8 = firrtl.wire {name = "io_extra_in_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_out_valid, %io_extra_out_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_out_ch, %io_extra_out_ch_7 : !firrtl.uint<8>
      firrtl.strictconnect %io_extra_in_valid, %io_extra_in_valid_8 : !firrtl.uint<1>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_io_in_r_valid_T = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_io_in_r_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_extra_in_valid_T_2 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_io_extra_in_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_io_extra_in_valid_T_2, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_io_in_r_valid_T, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_io_in_r_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_io_in_r_valid_T, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_io_extra_in_valid_T_2, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_extra_out_valid_T_2 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_extra_out_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_extra_out_valid_T_2, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %txfifo = firrtl.reg %clock {firrtl.random_init_start = 37 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %stat = firrtl.regreset %clock, %reset, %c1_ui32 {firrtl.random_init_start = 69 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %ctrl = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 101 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %_io_extra_out_valid_T = firrtl.bits %io_in_aw_bits_addr 3 to 0 {name = "_io_extra_out_valid_T"} : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %_io_extra_out_valid_T_1 = firrtl.eq %_io_extra_out_valid_T, %c4_ui3 {name = "_io_extra_out_valid_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_extra_out_valid_T_3 = firrtl.and %_io_extra_out_valid_T_1, %_io_extra_out_valid_T_2 {name = "_io_extra_out_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_extra_out_valid_6, %_io_extra_out_valid_T_3 : !firrtl.uint<1>
      %_io_extra_out_ch_T = firrtl.bits %io_in_w_bits_data 7 to 0 {name = "_io_extra_out_ch_T"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_extra_out_ch_7, %_io_extra_out_ch_T : !firrtl.uint<8>
      %_io_extra_in_valid_T = firrtl.bits %io_in_ar_bits_addr 3 to 0 {name = "_io_extra_in_valid_T"} : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %8 = firrtl.orr %_io_extra_in_valid_T : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_extra_in_valid_T_1 = firrtl.not %8 {name = "_io_extra_in_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_extra_in_valid_T_3 = firrtl.and %_io_extra_in_valid_T_1, %_io_extra_in_valid_T_2 {name = "_io_extra_in_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_extra_in_valid_8, %_io_extra_in_valid_T_3 : !firrtl.uint<1>
      %9 = firrtl.bits %io_in_w_bits_data 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %10 = firrtl.bits %io_in_aw_bits_addr 2 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<3>
      %11 = firrtl.dshr %io_in_w_bits_strb, %10 : (!firrtl.uint<8>, !firrtl.uint<3>) -> !firrtl.uint<8>
      %12 = firrtl.bits %11 0 to 0 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %13 = firrtl.bits %11 1 to 1 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %14 = firrtl.bits %11 2 to 2 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %15 = firrtl.bits %11 3 to 3 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %16 = firrtl.bits %11 4 to 4 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %17 = firrtl.bits %11 5 to 5 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %18 = firrtl.bits %11 6 to 6 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %19 = firrtl.bits %11 7 to 7 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %20 = firrtl.mux(%12, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %21 = firrtl.mux(%13, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %22 = firrtl.mux(%14, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %23 = firrtl.mux(%15, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %24 = firrtl.mux(%16, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %25 = firrtl.mux(%17, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %26 = firrtl.mux(%18, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %27 = firrtl.mux(%19, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %lo_lo = firrtl.cat %21, %20 {name = "lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo_hi = firrtl.cat %23, %22 {name = "lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo = firrtl.cat %lo_hi, %lo_lo {name = "lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %hi_lo = firrtl.cat %25, %24 {name = "hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi_hi = firrtl.cat %27, %26 {name = "hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi = firrtl.cat %hi_hi, %hi_lo {name = "hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %28 = firrtl.cat %hi, %lo : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %29 = firrtl.bits %28 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %30 = firrtl.orr %_io_extra_in_valid_T : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T = firrtl.not %30 {name = "_io_in_r_bits_data_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_1 = firrtl.eq %_io_extra_in_valid_T, %c4_ui3 {name = "_io_in_r_bits_data_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_2 = firrtl.eq %_io_extra_in_valid_T, %c8_ui4 {name = "_io_in_r_bits_data_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_3 = firrtl.eq %_io_extra_in_valid_T, %c12_ui4 {name = "_io_in_r_bits_data_T_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_4 = firrtl.mux(%_io_in_r_bits_data_T, %io_extra_in_ch, %c0_ui8) {name = "_io_in_r_bits_data_T_4"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_io_in_r_bits_data_T_5 = firrtl.mux(%_io_in_r_bits_data_T_1, %txfifo, %c0_ui32) {name = "_io_in_r_bits_data_T_5"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_6 = firrtl.mux(%_io_in_r_bits_data_T_2, %stat, %c0_ui32) {name = "_io_in_r_bits_data_T_6"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_7 = firrtl.mux(%_io_in_r_bits_data_T_3, %ctrl, %c0_ui32) {name = "_io_in_r_bits_data_T_7"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %31 = firrtl.pad %_io_in_r_bits_data_T_4, 32 : (!firrtl.uint<8>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_8 = firrtl.or %31, %_io_in_r_bits_data_T_5 {name = "_io_in_r_bits_data_T_8"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_9 = firrtl.or %_io_in_r_bits_data_T_8, %_io_in_r_bits_data_T_6 {name = "_io_in_r_bits_data_T_9"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_10 = firrtl.or %_io_in_r_bits_data_T_9, %_io_in_r_bits_data_T_7 {name = "_io_in_r_bits_data_T_10"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_WIRE = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %_io_in_r_bits_data_WIRE, %_io_in_r_bits_data_T_10 : !firrtl.uint<32>
      %32 = firrtl.pad %_io_in_r_bits_data_WIRE, 64 : (!firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %32 : !firrtl.uint<64>
      %33 = firrtl.eq %_io_extra_out_valid_T, %c4_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %34 = firrtl.and %_io_extra_out_valid_T_2, %33 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_txfifo_T = firrtl.and %9, %29 {name = "_txfifo_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_txfifo_T_1 = firrtl.not %29 {name = "_txfifo_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_txfifo_T_2 = firrtl.and %txfifo, %_txfifo_T_1 {name = "_txfifo_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_txfifo_T_3 = firrtl.or %_txfifo_T, %_txfifo_T_2 {name = "_txfifo_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %35 = firrtl.mux(%34, %_txfifo_T_3, %txfifo) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %txfifo, %35 : !firrtl.uint<32>
      %36 = firrtl.eq %_io_extra_out_valid_T, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %37 = firrtl.and %_io_extra_out_valid_T_2, %36 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_stat_T = firrtl.and %9, %29 {name = "_stat_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_stat_T_1 = firrtl.not %29 {name = "_stat_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_stat_T_2 = firrtl.and %stat, %_stat_T_1 {name = "_stat_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_stat_T_3 = firrtl.or %_stat_T, %_stat_T_2 {name = "_stat_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %38 = firrtl.mux(%37, %_stat_T_3, %stat) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %stat, %38 : !firrtl.uint<32>
      %39 = firrtl.eq %_io_extra_out_valid_T, %c12_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %40 = firrtl.and %_io_extra_out_valid_T_2, %39 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_ctrl_T = firrtl.and %9, %29 {name = "_ctrl_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_ctrl_T_1 = firrtl.not %29 {name = "_ctrl_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_ctrl_T_2 = firrtl.and %ctrl, %_ctrl_T_1 {name = "_ctrl_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_ctrl_T_3 = firrtl.or %_ctrl_T, %_ctrl_T_2 {name = "_ctrl_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %41 = firrtl.mux(%40, %_ctrl_T_3, %ctrl) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %ctrl, %41 : !firrtl.uint<32>
    }
    firrtl.module private @VGACtrl(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, out %io_extra_sync: !firrtl.uint<1>) {
      %c13107350_ui31 = firrtl.constant 13107350 : !firrtl.uint<31>
      %c0_ui31 = firrtl.constant 0 : !firrtl.uint<31>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_extra_sync_6 = firrtl.wire {name = "io_extra_sync"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_sync, %io_extra_sync_6 : !firrtl.uint<1>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_io_in_r_valid_T = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_io_in_r_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_3 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_io_in_r_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_io_in_r_valid_T, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_io_in_r_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_io_in_r_valid_T, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %sync = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "sync"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%sync, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %8 = firrtl.bits %io_in_ar_bits_addr 3 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %9 = firrtl.orr %8 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T = firrtl.not %9 {name = "_io_in_r_bits_data_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_1 = firrtl.eq %8, %c4_ui3 {name = "_io_in_r_bits_data_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_3 = firrtl.mux(%_io_in_r_bits_data_T_1, %sync, %c0_ui1) {name = "_io_in_r_bits_data_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.mux(%_io_in_r_bits_data_T, %c13107350_ui31, %c0_ui31) : (!firrtl.uint<1>, !firrtl.uint<31>, !firrtl.uint<31>) -> !firrtl.uint<31>
      %_io_in_r_bits_data_T_4 = firrtl.cat %10, %_io_in_r_bits_data_T_3 {name = "_io_in_r_bits_data_T_4"} : (!firrtl.uint<31>, !firrtl.uint<1>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_WIRE = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %_io_in_r_bits_data_WIRE, %_io_in_r_bits_data_T_4 : !firrtl.uint<32>
      %11 = firrtl.pad %_io_in_r_bits_data_WIRE, 64 : (!firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %11 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_sync_6, %sync : !firrtl.uint<1>
    }
    firrtl.module private @AXI4RAM_1(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c60000_ui16 = firrtl.constant 60000 : !firrtl.uint<16>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_r_valid_3 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_4 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_4 : !firrtl.uint<64>
      %_rdata_T = firrtl.bits %io_in_w_bits_strb 0 to 0 {name = "_rdata_T"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_rdata_T_1 = firrtl.bits %io_in_w_bits_strb 1 to 1 {name = "_rdata_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_rdata_T_2 = firrtl.bits %io_in_w_bits_strb 2 to 2 {name = "_rdata_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_rdata_T_3 = firrtl.bits %io_in_w_bits_strb 3 to 3 {name = "_rdata_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_rdata_T_4 = firrtl.bits %io_in_w_bits_strb 4 to 4 {name = "_rdata_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_rdata_T_5 = firrtl.bits %io_in_w_bits_strb 5 to 5 {name = "_rdata_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_rdata_T_6 = firrtl.bits %io_in_w_bits_strb 6 to 6 {name = "_rdata_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_rdata_T_7 = firrtl.bits %io_in_w_bits_strb 7 to 7 {name = "_rdata_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %ren = firrtl.wire : !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%io_in_r_valid_3, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%io_in_ar_valid, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %io_in_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %io_in_ar_valid, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%io_in_r_valid_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_3, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_wen_T = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_wen_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_wen_T, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %8 = firrtl.bits %io_in_aw_bits_addr 18 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<19>
      %_wIdx_T = firrtl.pad %8, 32 {name = "_wIdx_T"} : (!firrtl.uint<19>) -> !firrtl.uint<32>
      %wIdx = firrtl.bits %_wIdx_T 31 to 3 {name = "wIdx"} : (!firrtl.uint<32>) -> !firrtl.uint<29>
      %9 = firrtl.bits %io_in_ar_bits_addr 18 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<19>
      %_rIdx_T = firrtl.pad %9, 32 {name = "_rIdx_T"} : (!firrtl.uint<19>) -> !firrtl.uint<32>
      %_wen_T_1 = firrtl.lt %wIdx, %c60000_ui16 {name = "_wen_T_1"} : (!firrtl.uint<29>, !firrtl.uint<16>) -> !firrtl.uint<1>
      %wen = firrtl.and %_wen_T, %_wen_T_1 {name = "wen"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %rdata_mem_rdata_MPORT, %rdata_mem_rdata_MPORT_1 = firrtl.mem Undefined {depth = 60000 : i64, name = "rdata_mem", portNames = ["rdata_MPORT", "rdata_MPORT_1"], prefix = "", readLatency = 0 : i32, writeLatency = 1 : i32} : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<8>>, !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data flip: uint<64>>
      %rdata_mem_rdata_MPORT_addr = firrtl.wire : !firrtl.uint<16>
      %rdata_mem_rdata_MPORT_en = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_data_0 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_data_1 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_data_2 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_data_3 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_data_4 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_data_5 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_data_6 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_data_7 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_mask_0 = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_mask_1 = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_mask_2 = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_mask_3 = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_mask_4 = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_mask_5 = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_mask_6 = firrtl.wire : !firrtl.uint<1>
      %rdata_mem_rdata_MPORT_mask_7 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.subfield %rdata_mem_rdata_MPORT[addr] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<8>>
      firrtl.strictconnect %10, %rdata_mem_rdata_MPORT_addr : !firrtl.uint<16>
      %11 = firrtl.subfield %rdata_mem_rdata_MPORT[en] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<8>>
      firrtl.strictconnect %11, %rdata_mem_rdata_MPORT_en : !firrtl.uint<1>
      %12 = firrtl.subfield %rdata_mem_rdata_MPORT[clk] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<8>>
      firrtl.strictconnect %12, %clock : !firrtl.clock
      %13 = firrtl.subfield %rdata_mem_rdata_MPORT[data] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<8>>
      %14 = firrtl.cat %rdata_mem_rdata_MPORT_data_1, %rdata_mem_rdata_MPORT_data_0 : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %15 = firrtl.cat %rdata_mem_rdata_MPORT_data_2, %14 : (!firrtl.uint<8>, !firrtl.uint<16>) -> !firrtl.uint<24>
      %16 = firrtl.cat %rdata_mem_rdata_MPORT_data_3, %15 : (!firrtl.uint<8>, !firrtl.uint<24>) -> !firrtl.uint<32>
      %17 = firrtl.cat %rdata_mem_rdata_MPORT_data_4, %16 : (!firrtl.uint<8>, !firrtl.uint<32>) -> !firrtl.uint<40>
      %18 = firrtl.cat %rdata_mem_rdata_MPORT_data_5, %17 : (!firrtl.uint<8>, !firrtl.uint<40>) -> !firrtl.uint<48>
      %19 = firrtl.cat %rdata_mem_rdata_MPORT_data_6, %18 : (!firrtl.uint<8>, !firrtl.uint<48>) -> !firrtl.uint<56>
      %20 = firrtl.cat %rdata_mem_rdata_MPORT_data_7, %19 : (!firrtl.uint<8>, !firrtl.uint<56>) -> !firrtl.uint<64>
      firrtl.strictconnect %13, %20 : !firrtl.uint<64>
      %21 = firrtl.subfield %rdata_mem_rdata_MPORT[mask] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data: uint<64>, mask: uint<8>>
      %22 = firrtl.cat %rdata_mem_rdata_MPORT_mask_1, %rdata_mem_rdata_MPORT_mask_0 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<2>
      %23 = firrtl.cat %rdata_mem_rdata_MPORT_mask_2, %22 : (!firrtl.uint<1>, !firrtl.uint<2>) -> !firrtl.uint<3>
      %24 = firrtl.cat %rdata_mem_rdata_MPORT_mask_3, %23 : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %25 = firrtl.cat %rdata_mem_rdata_MPORT_mask_4, %24 : (!firrtl.uint<1>, !firrtl.uint<4>) -> !firrtl.uint<5>
      %26 = firrtl.cat %rdata_mem_rdata_MPORT_mask_5, %25 : (!firrtl.uint<1>, !firrtl.uint<5>) -> !firrtl.uint<6>
      %27 = firrtl.cat %rdata_mem_rdata_MPORT_mask_6, %26 : (!firrtl.uint<1>, !firrtl.uint<6>) -> !firrtl.uint<7>
      %28 = firrtl.cat %rdata_mem_rdata_MPORT_mask_7, %27 : (!firrtl.uint<1>, !firrtl.uint<7>) -> !firrtl.uint<8>
      firrtl.strictconnect %21, %28 : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_addr = firrtl.wire : !firrtl.uint<16>
      %rdata_mem_rdata_MPORT_1_data_0 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_data_1 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_data_2 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_data_3 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_data_4 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_data_5 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_data_6 = firrtl.wire : !firrtl.uint<8>
      %rdata_mem_rdata_MPORT_1_data_7 = firrtl.wire : !firrtl.uint<8>
      %29 = firrtl.subfield %rdata_mem_rdata_MPORT_1[addr] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data flip: uint<64>>
      firrtl.strictconnect %29, %rdata_mem_rdata_MPORT_1_addr : !firrtl.uint<16>
      %30 = firrtl.subfield %rdata_mem_rdata_MPORT_1[en] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data flip: uint<64>>
      firrtl.strictconnect %30, %c1_ui1 : !firrtl.uint<1>
      %31 = firrtl.subfield %rdata_mem_rdata_MPORT_1[clk] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data flip: uint<64>>
      firrtl.strictconnect %31, %clock : !firrtl.clock
      %32 = firrtl.subfield %rdata_mem_rdata_MPORT_1[data] : !firrtl.bundle<addr: uint<16>, en: uint<1>, clk: clock, data flip: uint<64>>
      %33 = firrtl.bits %32 7 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %34 = firrtl.bits %32 15 to 8 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %35 = firrtl.bits %32 23 to 16 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %36 = firrtl.bits %32 31 to 24 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %37 = firrtl.bits %32 39 to 32 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %38 = firrtl.bits %32 47 to 40 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %39 = firrtl.bits %32 55 to 48 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %40 = firrtl.bits %32 63 to 56 : (!firrtl.uint<64>) -> !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_0, %33 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_1, %34 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_2, %35 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_3, %36 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_4, %37 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_5, %38 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_6, %39 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_data_7, %40 : !firrtl.uint<8>
      %_rdata_wdata_T = firrtl.bits %io_in_w_bits_data 7 to 0 {name = "_rdata_wdata_T"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_rdata_wdata_T_1 = firrtl.bits %io_in_w_bits_data 15 to 8 {name = "_rdata_wdata_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_rdata_wdata_T_2 = firrtl.bits %io_in_w_bits_data 23 to 16 {name = "_rdata_wdata_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_rdata_wdata_T_3 = firrtl.bits %io_in_w_bits_data 31 to 24 {name = "_rdata_wdata_T_3"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_rdata_wdata_T_4 = firrtl.bits %io_in_w_bits_data 39 to 32 {name = "_rdata_wdata_T_4"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_rdata_wdata_T_5 = firrtl.bits %io_in_w_bits_data 47 to 40 {name = "_rdata_wdata_T_5"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_rdata_wdata_T_6 = firrtl.bits %io_in_w_bits_data 55 to 48 {name = "_rdata_wdata_T_6"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %_rdata_wdata_T_7 = firrtl.bits %io_in_w_bits_data 63 to 56 {name = "_rdata_wdata_T_7"} : (!firrtl.uint<64>) -> !firrtl.uint<8>
      %rdata_wdata_0 = firrtl.wire : !firrtl.uint<8>
      %rdata_wdata_1 = firrtl.wire : !firrtl.uint<8>
      %rdata_wdata_2 = firrtl.wire : !firrtl.uint<8>
      %rdata_wdata_3 = firrtl.wire : !firrtl.uint<8>
      %rdata_wdata_4 = firrtl.wire : !firrtl.uint<8>
      %rdata_wdata_5 = firrtl.wire : !firrtl.uint<8>
      %rdata_wdata_6 = firrtl.wire : !firrtl.uint<8>
      %rdata_wdata_7 = firrtl.wire : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_0, %_rdata_wdata_T : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_1, %_rdata_wdata_T_1 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_2, %_rdata_wdata_T_2 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_3, %_rdata_wdata_T_3 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_4, %_rdata_wdata_T_4 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_5, %_rdata_wdata_T_5 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_6, %_rdata_wdata_T_6 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_wdata_7, %_rdata_wdata_T_7 : !firrtl.uint<8>
      %_rdata_T_9 = firrtl.bits %_wIdx_T 18 to 3 {name = "_rdata_T_9"} : (!firrtl.uint<32>) -> !firrtl.uint<16>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_addr, %_rdata_T_9 : !firrtl.uint<16>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_en, %wen : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_0, %_rdata_T : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_0, %rdata_wdata_0 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_1, %_rdata_T_1 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_1, %rdata_wdata_1 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_2, %_rdata_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_2, %rdata_wdata_2 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_3, %_rdata_T_3 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_3, %rdata_wdata_3 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_4, %_rdata_T_4 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_4, %rdata_wdata_4 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_5, %_rdata_T_5 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_5, %rdata_wdata_5 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_6, %_rdata_T_6 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_6, %rdata_wdata_6 : !firrtl.uint<8>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_mask_7, %_rdata_T_7 : !firrtl.uint<1>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_data_7, %rdata_wdata_7 : !firrtl.uint<8>
      %_rdata_T_11 = firrtl.bits %_rIdx_T 18 to 3 {name = "_rdata_T_11"} : (!firrtl.uint<32>) -> !firrtl.uint<16>
      firrtl.strictconnect %rdata_mem_rdata_MPORT_1_addr, %_rdata_T_11 : !firrtl.uint<16>
      %rdata_lo_lo = firrtl.cat %rdata_mem_rdata_MPORT_1_data_1, %rdata_mem_rdata_MPORT_1_data_0 {name = "rdata_lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_lo_hi = firrtl.cat %rdata_mem_rdata_MPORT_1_data_3, %rdata_mem_rdata_MPORT_1_data_2 {name = "rdata_lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_lo = firrtl.cat %rdata_lo_hi, %rdata_lo_lo {name = "rdata_lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %rdata_hi_lo = firrtl.cat %rdata_mem_rdata_MPORT_1_data_5, %rdata_mem_rdata_MPORT_1_data_4 {name = "rdata_hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_hi_hi = firrtl.cat %rdata_mem_rdata_MPORT_1_data_7, %rdata_mem_rdata_MPORT_1_data_6 {name = "rdata_hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %rdata_hi = firrtl.cat %rdata_hi_hi, %rdata_hi_lo {name = "rdata_hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %_rdata_T_12 = firrtl.cat %rdata_hi, %rdata_lo {name = "_rdata_T_12"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %rdata = firrtl.reg %clock {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %41 = firrtl.mux(%ren, %_rdata_T_12, %rdata) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %rdata, %41 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_4, %rdata : !firrtl.uint<64>
    }
    firrtl.extmodule private @FBHelper(in clk: !firrtl.clock, in valid: !firrtl.uint<1>, in pixel: !firrtl.uint<32>, in sync: !firrtl.uint<1>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "FBHelper"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "FBHelper"}
    firrtl.module private @AXI4VGA(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_fb_aw_ready: !firrtl.uint<1>, in %io_in_fb_aw_valid: !firrtl.uint<1>, in %io_in_fb_aw_bits_addr: !firrtl.uint<32>, out %io_in_fb_w_ready: !firrtl.uint<1>, in %io_in_fb_w_valid: !firrtl.uint<1>, in %io_in_fb_w_bits_data: !firrtl.uint<64>, in %io_in_fb_w_bits_strb: !firrtl.uint<8>, in %io_in_fb_b_ready: !firrtl.uint<1>, out %io_in_fb_b_valid: !firrtl.uint<1>, in %io_in_fb_ar_valid: !firrtl.uint<1>, in %io_in_fb_r_ready: !firrtl.uint<1>, out %io_in_fb_r_valid: !firrtl.uint<1>, out %io_in_ctrl_aw_ready: !firrtl.uint<1>, in %io_in_ctrl_aw_valid: !firrtl.uint<1>, out %io_in_ctrl_w_ready: !firrtl.uint<1>, in %io_in_ctrl_w_valid: !firrtl.uint<1>, in %io_in_ctrl_b_ready: !firrtl.uint<1>, out %io_in_ctrl_b_valid: !firrtl.uint<1>, out %io_in_ctrl_ar_ready: !firrtl.uint<1>, in %io_in_ctrl_ar_valid: !firrtl.uint<1>, in %io_in_ctrl_ar_bits_addr: !firrtl.uint<32>, in %io_in_ctrl_r_ready: !firrtl.uint<1>, out %io_in_ctrl_r_valid: !firrtl.uint<1>, out %io_in_ctrl_r_bits_data: !firrtl.uint<64>) {
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64> {name = "io_in_fb_r_bits_data"}
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "io_in_fb_ar_ready"}
      %c0_ui17 = firrtl.constant 0 : !firrtl.uint<17>
      %c0_ui10 = firrtl.constant 0 : !firrtl.uint<10>
      %c0_ui11 = firrtl.constant 0 : !firrtl.uint<11>
      %c0_ui2 = firrtl.constant 0 : !firrtl.uint<2> {name = "io_in_fb_r_bits_resp"}
      %c119999_ui17 = firrtl.constant 119999 : !firrtl.uint<17>
      %c967_ui10 = firrtl.constant 967 : !firrtl.uint<10>
      %c167_ui8 = firrtl.constant 167 : !firrtl.uint<8>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c605_ui10 = firrtl.constant 605 : !firrtl.uint<10>
      %c5_ui3 = firrtl.constant 5 : !firrtl.uint<3>
      %c968_ui10 = firrtl.constant 968 : !firrtl.uint<10>
      %c168_ui8 = firrtl.constant 168 : !firrtl.uint<8>
      %c627_ui10 = firrtl.constant 627 : !firrtl.uint<10>
      %c1055_ui11 = firrtl.constant 1055 : !firrtl.uint<11>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %io_in_fb_aw_ready_0 = firrtl.wire {name = "io_in_fb_aw_ready"} : !firrtl.uint<1>
      %io_in_fb_w_ready_1 = firrtl.wire {name = "io_in_fb_w_ready"} : !firrtl.uint<1>
      %io_in_fb_b_valid_2 = firrtl.wire {name = "io_in_fb_b_valid"} : !firrtl.uint<1>
      %io_in_fb_r_valid_3 = firrtl.wire {name = "io_in_fb_r_valid"} : !firrtl.uint<1>
      %io_in_ctrl_aw_ready_4 = firrtl.wire {name = "io_in_ctrl_aw_ready"} : !firrtl.uint<1>
      %io_in_ctrl_w_ready_5 = firrtl.wire {name = "io_in_ctrl_w_ready"} : !firrtl.uint<1>
      %io_in_ctrl_b_valid_6 = firrtl.wire {name = "io_in_ctrl_b_valid"} : !firrtl.uint<1>
      %io_in_ctrl_ar_ready_7 = firrtl.wire {name = "io_in_ctrl_ar_ready"} : !firrtl.uint<1>
      %io_in_ctrl_r_valid_8 = firrtl.wire {name = "io_in_ctrl_r_valid"} : !firrtl.uint<1>
      %io_in_ctrl_r_bits_data_9 = firrtl.wire {name = "io_in_ctrl_r_bits_data"} : !firrtl.uint<64>
      %io_vga_valid = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_aw_ready, %io_in_fb_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_w_ready, %io_in_fb_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_b_valid, %io_in_fb_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_r_valid, %io_in_fb_r_valid_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_aw_ready, %io_in_ctrl_aw_ready_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_w_ready, %io_in_ctrl_w_ready_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_b_valid, %io_in_ctrl_b_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_ar_ready, %io_in_ctrl_ar_ready_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_r_valid, %io_in_ctrl_r_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_r_bits_data, %io_in_ctrl_r_bits_data_9 : !firrtl.uint<64>
      %ctrl_clock, %ctrl_reset, %ctrl_io_in_aw_ready, %ctrl_io_in_aw_valid, %ctrl_io_in_w_ready, %ctrl_io_in_w_valid, %ctrl_io_in_b_ready, %ctrl_io_in_b_valid, %ctrl_io_in_ar_ready, %ctrl_io_in_ar_valid, %ctrl_io_in_ar_bits_addr, %ctrl_io_in_r_ready, %ctrl_io_in_r_valid, %ctrl_io_in_r_bits_data, %ctrl_io_extra_sync = firrtl.instance ctrl @VGACtrl(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, out io_extra_sync: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<1>
      %3 = firrtl.wire : !firrtl.uint<1>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<64>
      %6 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %0, %ctrl_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %ctrl_io_in_aw_valid, %io_in_ctrl_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %1, %ctrl_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %ctrl_io_in_w_valid, %io_in_ctrl_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %ctrl_io_in_b_ready, %io_in_ctrl_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %2, %ctrl_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %3, %ctrl_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %ctrl_io_in_ar_valid, %io_in_ctrl_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %ctrl_io_in_ar_bits_addr, %io_in_ctrl_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %ctrl_io_in_r_ready, %io_in_ctrl_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %4, %ctrl_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %5, %ctrl_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %6, %ctrl_io_extra_sync : !firrtl.uint<1>
      firrtl.strictconnect %ctrl_clock, %clock : !firrtl.clock
      firrtl.strictconnect %ctrl_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_aw_ready_4, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_w_ready_5, %1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_b_valid_6, %2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_ar_ready_7, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_r_valid_8, %4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ctrl_r_bits_data_9, %5 : !firrtl.uint<64>
      %fb_clock, %fb_reset, %fb_io_in_aw_ready, %fb_io_in_aw_valid, %fb_io_in_aw_bits_addr, %fb_io_in_w_ready, %fb_io_in_w_valid, %fb_io_in_w_bits_data, %fb_io_in_w_bits_strb, %fb_io_in_b_ready, %fb_io_in_b_valid, %fb_io_in_ar_valid, %fb_io_in_ar_bits_addr, %fb_io_in_r_valid, %fb_io_in_r_bits_data = firrtl.instance fb @AXI4RAM_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>)
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<32>
      %_data_T = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %7, %fb_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %fb_io_in_aw_valid, %io_in_fb_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %fb_io_in_aw_bits_addr, %io_in_fb_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %8, %fb_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %fb_io_in_w_valid, %io_in_fb_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %fb_io_in_w_bits_data, %io_in_fb_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %fb_io_in_w_bits_strb, %io_in_fb_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %fb_io_in_b_ready, %io_in_fb_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %9, %fb_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %fb_io_in_ar_valid, %10 : !firrtl.uint<1>
      firrtl.strictconnect %fb_io_in_ar_bits_addr, %11 : !firrtl.uint<32>
      firrtl.strictconnect %_data_T, %fb_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %12, %fb_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %fb_clock, %clock : !firrtl.clock
      firrtl.strictconnect %fb_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_aw_ready_0, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_w_ready_1, %8 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_b_valid_2, %9 : !firrtl.uint<1>
      %_io_in_fb_r_valid_T_1 = firrtl.and %io_in_fb_r_ready, %io_in_fb_r_valid_3 {name = "_io_in_fb_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_fb_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %13 = firrtl.mux(%_io_in_fb_r_valid_T_1, %c0_ui1, %io_in_fb_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.mux(%io_in_fb_ar_valid, %c1_ui1, %13) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_r_valid_r, %14 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_fb_r_valid_3, %io_in_fb_r_valid_r : !firrtl.uint<1>
      %vga_fb_used = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %15 = firrtl.or %io_in_fb_aw_valid, %io_in_fb_w_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %16 = firrtl.or %15, %io_in_fb_ar_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.mux(%16, %c1_ui1, %vga_fb_used) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %vga_fb_used, %17 : !firrtl.uint<1>
      %hCounter = firrtl.regreset %clock, %reset, %c0_ui11 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<11>, !firrtl.uint<11>
      %hFinish = firrtl.wire : !firrtl.uint<1>
      %wrap_wrap = firrtl.eq %hCounter, %c1055_ui11 {name = "wrap_wrap"} : (!firrtl.uint<11>, !firrtl.uint<11>) -> !firrtl.uint<1>
      %_wrap_value_T = firrtl.add %hCounter, %c1_ui1 {name = "_wrap_value_T"} : (!firrtl.uint<11>, !firrtl.uint<1>) -> !firrtl.uint<12>
      %_wrap_value_T_1 = firrtl.bits %_wrap_value_T 10 to 0 {name = "_wrap_value_T_1"} : (!firrtl.uint<12>) -> !firrtl.uint<11>
      %18 = firrtl.mux(%wrap_wrap, %c0_ui11, %_wrap_value_T_1) : (!firrtl.uint<1>, !firrtl.uint<11>, !firrtl.uint<11>) -> !firrtl.uint<11>
      firrtl.strictconnect %hCounter, %18 : !firrtl.uint<11>
      firrtl.strictconnect %hFinish, %wrap_wrap : !firrtl.uint<1>
      %vCounter = firrtl.regreset %clock, %reset, %c0_ui10 {firrtl.random_init_start = 13 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<10>, !firrtl.uint<10>
      %wrap_wrap_1 = firrtl.eq %vCounter, %c627_ui10 {name = "wrap_wrap_1"} : (!firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_wrap_value_T_2 = firrtl.add %vCounter, %c1_ui1 {name = "_wrap_value_T_2"} : (!firrtl.uint<10>, !firrtl.uint<1>) -> !firrtl.uint<11>
      %_wrap_value_T_3 = firrtl.bits %_wrap_value_T_2 9 to 0 {name = "_wrap_value_T_3"} : (!firrtl.uint<11>) -> !firrtl.uint<10>
      %19 = firrtl.mux(%wrap_wrap_1, %c0_ui10, %_wrap_value_T_3) : (!firrtl.uint<1>, !firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<10>
      %20 = firrtl.mux(%hFinish, %19, %vCounter) : (!firrtl.uint<1>, !firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<10>
      firrtl.strictconnect %vCounter, %20 : !firrtl.uint<10>
      %_hInRange_T = firrtl.geq %hCounter, %c168_ui8 {name = "_hInRange_T"} : (!firrtl.uint<11>, !firrtl.uint<8>) -> !firrtl.uint<1>
      %_hInRange_T_1 = firrtl.lt %hCounter, %c968_ui10 {name = "_hInRange_T_1"} : (!firrtl.uint<11>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %hInRange = firrtl.and %_hInRange_T, %_hInRange_T_1 {name = "hInRange"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_vInRange_T = firrtl.geq %vCounter, %c5_ui3 {name = "_vInRange_T"} : (!firrtl.uint<10>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_vInRange_T_1 = firrtl.lt %vCounter, %c605_ui10 {name = "_vInRange_T_1"} : (!firrtl.uint<10>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %vInRange = firrtl.and %_vInRange_T, %_vInRange_T_1 {name = "vInRange"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_vga_valid_T = firrtl.and %hInRange, %vInRange {name = "_io_vga_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_vga_valid, %_io_vga_valid_T : !firrtl.uint<1>
      %hCounterIsOdd = firrtl.bits %hCounter 0 to 0 {name = "hCounterIsOdd"} : (!firrtl.uint<11>) -> !firrtl.uint<1>
      %_hCounterIs2_T = firrtl.bits %hCounter 1 to 0 {name = "_hCounterIs2_T"} : (!firrtl.uint<11>) -> !firrtl.uint<2>
      %hCounterIs2 = firrtl.eq %_hCounterIs2_T, %c2_ui2 {name = "hCounterIs2"} : (!firrtl.uint<2>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %vCounterIsOdd = firrtl.bits %vCounter 0 to 0 {name = "vCounterIsOdd"} : (!firrtl.uint<10>) -> !firrtl.uint<1>
      %_nextPixel_T = firrtl.geq %hCounter, %c167_ui8 {name = "_nextPixel_T"} : (!firrtl.uint<11>, !firrtl.uint<8>) -> !firrtl.uint<1>
      %_nextPixel_T_1 = firrtl.lt %hCounter, %c967_ui10 {name = "_nextPixel_T_1"} : (!firrtl.uint<11>, !firrtl.uint<10>) -> !firrtl.uint<1>
      %_nextPixel_T_2 = firrtl.and %_nextPixel_T, %_nextPixel_T_1 {name = "_nextPixel_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_nextPixel_T_3 = firrtl.and %_nextPixel_T_2, %vInRange {name = "_nextPixel_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %nextPixel = firrtl.and %_nextPixel_T_3, %hCounterIsOdd {name = "nextPixel"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_fbPixelAddrV0_T = firrtl.not %vCounterIsOdd {name = "_fbPixelAddrV0_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_fbPixelAddrV0_T_1 = firrtl.and %nextPixel, %_fbPixelAddrV0_T {name = "_fbPixelAddrV0_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %fbPixelAddrV0 = firrtl.regreset %clock, %reset, %c0_ui17 {firrtl.random_init_start = 23 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %fbPixelAddrV0_wrap_wrap = firrtl.eq %fbPixelAddrV0, %c119999_ui17 {name = "fbPixelAddrV0_wrap_wrap"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<1>
      %_fbPixelAddrV0_wrap_value_T = firrtl.add %fbPixelAddrV0, %c1_ui1 {name = "_fbPixelAddrV0_wrap_value_T"} : (!firrtl.uint<17>, !firrtl.uint<1>) -> !firrtl.uint<18>
      %_fbPixelAddrV0_wrap_value_T_1 = firrtl.bits %_fbPixelAddrV0_wrap_value_T 16 to 0 {name = "_fbPixelAddrV0_wrap_value_T_1"} : (!firrtl.uint<18>) -> !firrtl.uint<17>
      %21 = firrtl.mux(%fbPixelAddrV0_wrap_wrap, %c0_ui17, %_fbPixelAddrV0_wrap_value_T_1) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %22 = firrtl.mux(%_fbPixelAddrV0_T_1, %21, %fbPixelAddrV0) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %fbPixelAddrV0, %22 : !firrtl.uint<17>
      %_fbPixelAddrV1_T = firrtl.and %nextPixel, %vCounterIsOdd {name = "_fbPixelAddrV1_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %fbPixelAddrV1 = firrtl.regreset %clock, %reset, %c0_ui17 {firrtl.random_init_start = 40 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>
      %fbPixelAddrV1_wrap_wrap = firrtl.eq %fbPixelAddrV1, %c119999_ui17 {name = "fbPixelAddrV1_wrap_wrap"} : (!firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<1>
      %_fbPixelAddrV1_wrap_value_T = firrtl.add %fbPixelAddrV1, %c1_ui1 {name = "_fbPixelAddrV1_wrap_value_T"} : (!firrtl.uint<17>, !firrtl.uint<1>) -> !firrtl.uint<18>
      %_fbPixelAddrV1_wrap_value_T_1 = firrtl.bits %_fbPixelAddrV1_wrap_value_T 16 to 0 {name = "_fbPixelAddrV1_wrap_value_T_1"} : (!firrtl.uint<18>) -> !firrtl.uint<17>
      %23 = firrtl.mux(%fbPixelAddrV1_wrap_wrap, %c0_ui17, %_fbPixelAddrV1_wrap_value_T_1) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %24 = firrtl.mux(%_fbPixelAddrV1_T, %23, %fbPixelAddrV1) : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      firrtl.strictconnect %fbPixelAddrV1, %24 : !firrtl.uint<17>
      %_fb_io_in_ar_bits_addr_T = firrtl.mux(%vCounterIsOdd, %fbPixelAddrV1, %fbPixelAddrV0) {name = "_fb_io_in_ar_bits_addr_T"} : (!firrtl.uint<1>, !firrtl.uint<17>, !firrtl.uint<17>) -> !firrtl.uint<17>
      %_fb_io_in_ar_bits_addr_T_1 = firrtl.cat %_fb_io_in_ar_bits_addr_T, %c0_ui2 {name = "_fb_io_in_ar_bits_addr_T_1"} : (!firrtl.uint<17>, !firrtl.uint<2>) -> !firrtl.uint<19>
      %25 = firrtl.pad %_fb_io_in_ar_bits_addr_T_1, 32 : (!firrtl.uint<19>) -> !firrtl.uint<32>
      firrtl.strictconnect %11, %25 : !firrtl.uint<32>
      %fb_io_in_ar_valid_REG = firrtl.reg %clock {firrtl.random_init_start = 57 : ui64} : !firrtl.clock, !firrtl.uint<1>
      firrtl.strictconnect %fb_io_in_ar_valid_REG, %nextPixel : !firrtl.uint<1>
      %_fb_io_in_ar_valid_T = firrtl.and %fb_io_in_ar_valid_REG, %hCounterIs2 {name = "_fb_io_in_ar_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %10, %_fb_io_in_ar_valid_T : !firrtl.uint<1>
      %data_r = firrtl.regreset %clock, %reset, %c0_ui64 {firrtl.random_init_start = 58 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %26 = firrtl.mux(%_data_T, %12, %data_r) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %data_r, %26 : !firrtl.uint<64>
      %data = firrtl.mux(%_data_T, %12, %data_r) {name = "data"} : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      %_color_T = firrtl.bits %hCounter 1 to 1 {name = "_color_T"} : (!firrtl.uint<11>) -> !firrtl.uint<1>
      %_color_T_1 = firrtl.bits %data 63 to 32 {name = "_color_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_color_T_2 = firrtl.bits %data 31 to 0 {name = "_color_T_2"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %color = firrtl.mux(%_color_T, %_color_T_1, %_color_T_2) {name = "color"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %fbHelper_clk, %fbHelper_valid, %fbHelper_pixel, %fbHelper_sync = firrtl.instance fbHelper @FBHelper(in clk: !firrtl.clock, in valid: !firrtl.uint<1>, in pixel: !firrtl.uint<32>, in sync: !firrtl.uint<1>)
      firrtl.strictconnect %fbHelper_clk, %clock : !firrtl.clock
      %_fbHelper_io_valid_T = firrtl.and %io_vga_valid, %vga_fb_used {name = "_fbHelper_io_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %fbHelper_valid, %_fbHelper_io_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %fbHelper_pixel, %color : !firrtl.uint<32>
      firrtl.strictconnect %fbHelper_sync, %6 : !firrtl.uint<1>
    }
    firrtl.module private @AXI4Flash(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>) {
      %c0_ui18 = firrtl.constant 0 : !firrtl.uint<18>
      %c0_ui25 = firrtl.constant 0 : !firrtl.uint<25>
      %c0_ui21 = firrtl.constant 0 : !firrtl.uint<21>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c163943_ui18 = firrtl.constant 163943 : !firrtl.uint<18>
      %c32674451_ui25 = firrtl.constant 32674451 : !firrtl.uint<25>
      %c1049243_ui21 = firrtl.constant 1049243 : !firrtl.uint<21>
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_io_in_r_valid_T = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_io_in_r_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_3 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_io_in_r_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_io_in_r_valid_T, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_io_in_r_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_io_in_r_valid_T, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %rdata = firrtl.wire : !firrtl.uint<64>
      %8 = firrtl.bits %io_in_ar_bits_addr 12 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<13>
      %9 = firrtl.orr %8 : (!firrtl.uint<13>) -> !firrtl.uint<1>
      %_rdata_T = firrtl.not %9 {name = "_rdata_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rdata_T_1 = firrtl.eq %8, %c4_ui3 {name = "_rdata_T_1"} : (!firrtl.uint<13>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdata_T_2 = firrtl.eq %8, %c8_ui4 {name = "_rdata_T_2"} : (!firrtl.uint<13>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_rdata_T_3 = firrtl.mux(%_rdata_T, %c1049243_ui21, %c0_ui21) {name = "_rdata_T_3"} : (!firrtl.uint<1>, !firrtl.uint<21>, !firrtl.uint<21>) -> !firrtl.uint<21>
      %_rdata_T_4 = firrtl.mux(%_rdata_T_1, %c32674451_ui25, %c0_ui25) {name = "_rdata_T_4"} : (!firrtl.uint<1>, !firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %_rdata_T_5 = firrtl.mux(%_rdata_T_2, %c163943_ui18, %c0_ui18) {name = "_rdata_T_5"} : (!firrtl.uint<1>, !firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %10 = firrtl.pad %_rdata_T_3, 25 : (!firrtl.uint<21>) -> !firrtl.uint<25>
      %_rdata_T_6 = firrtl.or %10, %_rdata_T_4 {name = "_rdata_T_6"} : (!firrtl.uint<25>, !firrtl.uint<25>) -> !firrtl.uint<25>
      %11 = firrtl.bits %_rdata_T_6 24 to 18 : (!firrtl.uint<25>) -> !firrtl.uint<7>
      %12 = firrtl.bits %_rdata_T_6 17 to 0 : (!firrtl.uint<25>) -> !firrtl.uint<18>
      %13 = firrtl.or %12, %_rdata_T_5 : (!firrtl.uint<18>, !firrtl.uint<18>) -> !firrtl.uint<18>
      %_rdata_T_7 = firrtl.cat %11, %13 {name = "_rdata_T_7"} : (!firrtl.uint<7>, !firrtl.uint<18>) -> !firrtl.uint<25>
      %_rdata_WIRE = firrtl.wire : !firrtl.uint<25>
      firrtl.strictconnect %_rdata_WIRE, %_rdata_T_7 : !firrtl.uint<25>
      %14 = firrtl.pad %_rdata_WIRE, 64 : (!firrtl.uint<25>) -> !firrtl.uint<64>
      firrtl.strictconnect %rdata, %14 : !firrtl.uint<64>
      %_io_in_r_bits_data_T = firrtl.bits %rdata 31 to 0 {name = "_io_in_r_bits_data_T"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_1 = firrtl.cat %_io_in_r_bits_data_T, %_io_in_r_bits_data_T {name = "_io_in_r_bits_data_T_1"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %io_in_r_bits_data_REG = firrtl.reg %clock {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_REG, %_io_in_r_bits_data_T_1 : !firrtl.uint<64>
      %io_in_r_bits_data_r = firrtl.reg %clock {firrtl.random_init_start = 69 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %15 = firrtl.mux(%ren, %io_in_r_bits_data_REG, %io_in_r_bits_data_r) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_r, %15 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %io_in_r_bits_data_r : !firrtl.uint<64>
    }
    firrtl.extmodule private @SDHelper(in clk: !firrtl.clock, in ren: !firrtl.uint<1>, out data: !firrtl.uint<32>, in setAddr: !firrtl.uint<1>, in addr: !firrtl.uint<32>) attributes {annotations = [{class = "firrtl.transforms.DedupGroupAnnotation", group = "SDHelper"}, {class = "firrtl.transforms.BlackBox"}], convention = #firrtl<convention scalarized>, defname = "SDHelper"}
    firrtl.module private @AXI4DummySD(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>) {
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c257916991_ui32 = firrtl.constant 257916991 : !firrtl.uint<32>
      %c3528169443_ui32 = firrtl.constant 3528169443 : !firrtl.uint<32>
      %c352321536_ui32 = firrtl.constant 352321536 : !firrtl.uint<32>
      %c1_ui32 = firrtl.constant 1 : !firrtl.uint<32>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c18_ui5 = firrtl.constant 18 : !firrtl.uint<5>
      %c13_ui4 = firrtl.constant 13 : !firrtl.uint<4>
      %c2351300906_ui32 = firrtl.constant 2351300906 : !firrtl.uint<32>
      %c2453684225_ui32 = firrtl.constant 2453684225 : !firrtl.uint<32>
      %c9_ui4 = firrtl.constant 9 : !firrtl.uint<4>
      %c2_ui2 = firrtl.constant 2 : !firrtl.uint<2>
      %c2164228096_ui32 = firrtl.constant 2164228096 : !firrtl.uint<32>
      %c128_ui8 = firrtl.constant 128 : !firrtl.uint<8>
      %c32_ui6 = firrtl.constant 32 : !firrtl.uint<6>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c16_ui5 = firrtl.constant 16 : !firrtl.uint<5>
      %c80_ui7 = firrtl.constant 80 : !firrtl.uint<7>
      %c28_ui5 = firrtl.constant 28 : !firrtl.uint<5>
      %c20_ui5 = firrtl.constant 20 : !firrtl.uint<5>
      %c52_ui6 = firrtl.constant 52 : !firrtl.uint<6>
      %c24_ui5 = firrtl.constant 24 : !firrtl.uint<5>
      %c56_ui6 = firrtl.constant 56 : !firrtl.uint<6>
      %c64_ui7 = firrtl.constant 64 : !firrtl.uint<7>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_sdHelper_io_ren_T_2 = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_sdHelper_io_ren_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_3 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_io_in_r_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_sdHelper_io_ren_T_2, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_sdHelper_io_ren_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_sdHelper_io_ren_T_2, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %regs_0 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_1 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 37 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_4 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 133 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_5 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 165 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_6 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 197 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_7 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 229 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_8 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 261 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_15 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 485 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %regs_20 = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 645 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %setAddr = firrtl.wire : !firrtl.uint<1>
      %sdHelper_clk, %sdHelper_ren, %sdHelper_data, %sdHelper_setAddr, %sdHelper_addr = firrtl.instance sdHelper @SDHelper(in clk: !firrtl.clock, in ren: !firrtl.uint<1>, out data: !firrtl.uint<32>, in setAddr: !firrtl.uint<1>, in addr: !firrtl.uint<32>)
      firrtl.strictconnect %sdHelper_clk, %clock : !firrtl.clock
      %_sdHelper_io_ren_T = firrtl.bits %io_in_ar_bits_addr 12 to 0 {name = "_sdHelper_io_ren_T"} : (!firrtl.uint<32>) -> !firrtl.uint<13>
      %_sdHelper_io_ren_T_1 = firrtl.eq %_sdHelper_io_ren_T, %c64_ui7 {name = "_sdHelper_io_ren_T_1"} : (!firrtl.uint<13>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_sdHelper_io_ren_T_3 = firrtl.and %_sdHelper_io_ren_T_1, %_sdHelper_io_ren_T_2 {name = "_sdHelper_io_ren_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %sdHelper_ren, %_sdHelper_io_ren_T_3 : !firrtl.uint<1>
      firrtl.strictconnect %sdHelper_setAddr, %setAddr : !firrtl.uint<1>
      firrtl.strictconnect %sdHelper_addr, %regs_1 : !firrtl.uint<32>
      %_strb_T = firrtl.bits %io_in_aw_bits_addr 2 to 2 {name = "_strb_T"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_strb_T_1 = firrtl.bits %io_in_w_bits_strb 7 to 4 {name = "_strb_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<4>
      %_strb_T_2 = firrtl.bits %io_in_w_bits_strb 3 to 0 {name = "_strb_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<4>
      %strb = firrtl.mux(%_strb_T, %_strb_T_1, %_strb_T_2) {name = "strb"} : (!firrtl.uint<1>, !firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<4>
      %rdata = firrtl.wire : !firrtl.uint<64>
      %8 = firrtl.bits %io_in_aw_bits_addr 12 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<13>
      %9 = firrtl.bits %io_in_w_bits_data 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %10 = firrtl.bits %strb 0 to 0 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %11 = firrtl.bits %strb 1 to 1 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %12 = firrtl.bits %strb 2 to 2 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %13 = firrtl.bits %strb 3 to 3 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %14 = firrtl.mux(%10, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %15 = firrtl.mux(%11, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %16 = firrtl.mux(%12, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %17 = firrtl.mux(%13, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %lo = firrtl.cat %15, %14 {name = "lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi = firrtl.cat %17, %16 {name = "hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %18 = firrtl.cat %hi, %lo : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %19 = firrtl.orr %_sdHelper_io_ren_T : (!firrtl.uint<13>) -> !firrtl.uint<1>
      %_rdata_T = firrtl.not %19 {name = "_rdata_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_rdata_T_1 = firrtl.eq %_sdHelper_io_ren_T, %c56_ui6 {name = "_rdata_T_1"} : (!firrtl.uint<13>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_rdata_T_2 = firrtl.eq %_sdHelper_io_ren_T, %c24_ui5 {name = "_rdata_T_2"} : (!firrtl.uint<13>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_rdata_T_3 = firrtl.eq %_sdHelper_io_ren_T, %c52_ui6 {name = "_rdata_T_3"} : (!firrtl.uint<13>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_rdata_T_4 = firrtl.eq %_sdHelper_io_ren_T, %c20_ui5 {name = "_rdata_T_4"} : (!firrtl.uint<13>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_rdata_T_5 = firrtl.eq %_sdHelper_io_ren_T, %c28_ui5 {name = "_rdata_T_5"} : (!firrtl.uint<13>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_rdata_T_6 = firrtl.eq %_sdHelper_io_ren_T, %c80_ui7 {name = "_rdata_T_6"} : (!firrtl.uint<13>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_rdata_T_7 = firrtl.eq %_sdHelper_io_ren_T, %c16_ui5 {name = "_rdata_T_7"} : (!firrtl.uint<13>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %_rdata_T_8 = firrtl.eq %_sdHelper_io_ren_T, %c4_ui3 {name = "_rdata_T_8"} : (!firrtl.uint<13>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_rdata_T_9 = firrtl.eq %_sdHelper_io_ren_T, %c32_ui6 {name = "_rdata_T_9"} : (!firrtl.uint<13>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %_rdata_T_10 = firrtl.eq %_sdHelper_io_ren_T, %c64_ui7 {name = "_rdata_T_10"} : (!firrtl.uint<13>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %_rdata_T_11 = firrtl.mux(%_rdata_T, %regs_0, %c0_ui32) {name = "_rdata_T_11"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_12 = firrtl.mux(%_rdata_T_1, %regs_15, %c0_ui32) {name = "_rdata_T_12"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_13 = firrtl.mux(%_rdata_T_2, %regs_6, %c0_ui32) {name = "_rdata_T_13"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_14 = firrtl.mux(%_rdata_T_3, %c128_ui8, %c0_ui8) {name = "_rdata_T_14"} : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_rdata_T_15 = firrtl.mux(%_rdata_T_4, %regs_5, %c0_ui32) {name = "_rdata_T_15"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_16 = firrtl.mux(%_rdata_T_5, %regs_7, %c0_ui32) {name = "_rdata_T_16"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_17 = firrtl.mux(%_rdata_T_6, %regs_20, %c0_ui32) {name = "_rdata_T_17"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_18 = firrtl.mux(%_rdata_T_7, %regs_4, %c0_ui32) {name = "_rdata_T_18"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_19 = firrtl.mux(%_rdata_T_8, %regs_1, %c0_ui32) {name = "_rdata_T_19"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_20 = firrtl.mux(%_rdata_T_9, %regs_8, %c0_ui32) {name = "_rdata_T_20"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_21 = firrtl.mux(%_rdata_T_10, %sdHelper_data, %c0_ui32) {name = "_rdata_T_21"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_22 = firrtl.or %_rdata_T_11, %_rdata_T_12 {name = "_rdata_T_22"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_23 = firrtl.or %_rdata_T_22, %_rdata_T_13 {name = "_rdata_T_23"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %20 = firrtl.bits %_rdata_T_23 31 to 8 : (!firrtl.uint<32>) -> !firrtl.uint<24>
      %21 = firrtl.bits %_rdata_T_23 7 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<8>
      %22 = firrtl.or %21, %_rdata_T_14 : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %_rdata_T_24 = firrtl.cat %20, %22 {name = "_rdata_T_24"} : (!firrtl.uint<24>, !firrtl.uint<8>) -> !firrtl.uint<32>
      %_rdata_T_25 = firrtl.or %_rdata_T_24, %_rdata_T_15 {name = "_rdata_T_25"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_26 = firrtl.or %_rdata_T_25, %_rdata_T_16 {name = "_rdata_T_26"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_27 = firrtl.or %_rdata_T_26, %_rdata_T_17 {name = "_rdata_T_27"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_28 = firrtl.or %_rdata_T_27, %_rdata_T_18 {name = "_rdata_T_28"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_29 = firrtl.or %_rdata_T_28, %_rdata_T_19 {name = "_rdata_T_29"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_30 = firrtl.or %_rdata_T_29, %_rdata_T_20 {name = "_rdata_T_30"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_T_31 = firrtl.or %_rdata_T_30, %_rdata_T_21 {name = "_rdata_T_31"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_rdata_WIRE = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %_rdata_WIRE, %_rdata_T_31 : !firrtl.uint<32>
      %23 = firrtl.pad %_rdata_WIRE, 64 : (!firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %rdata, %23 : !firrtl.uint<64>
      %24 = firrtl.orr %8 : (!firrtl.uint<13>) -> !firrtl.uint<1>
      %25 = firrtl.not %24 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.and %_io_in_b_valid_T_1, %25 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_regs_0_T = firrtl.and %9, %18 {name = "_regs_0_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_0_T_1 = firrtl.not %18 {name = "_regs_0_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_0_T_2 = firrtl.and %regs_0, %_regs_0_T_1 {name = "_regs_0_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_0_T_3 = firrtl.or %_regs_0_T, %_regs_0_T_2 {name = "_regs_0_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %regs_0_cmd = firrtl.bits %_regs_0_T_3 5 to 0 {name = "regs_0_cmd"} : (!firrtl.uint<32>) -> !firrtl.uint<6>
      %_regs_0_T_4 = firrtl.eq %regs_0_cmd, %c1_ui1 {name = "_regs_0_T_4"} : (!firrtl.uint<6>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_regs_0_T_5 = firrtl.eq %regs_0_cmd, %c2_ui2 {name = "_regs_0_T_5"} : (!firrtl.uint<6>, !firrtl.uint<2>) -> !firrtl.uint<1>
      %_regs_0_T_6 = firrtl.eq %regs_0_cmd, %c9_ui4 {name = "_regs_0_T_6"} : (!firrtl.uint<6>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_regs_0_T_7 = firrtl.eq %regs_0_cmd, %c13_ui4 {name = "_regs_0_T_7"} : (!firrtl.uint<6>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %27 = firrtl.mux(%_regs_0_T_7, %c0_ui32, %regs_4) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %28 = firrtl.mux(%_regs_0_T_6, %c2453684225_ui32, %27) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %29 = firrtl.mux(%_regs_0_T_5, %c1_ui32, %28) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %30 = firrtl.mux(%_regs_0_T_4, %c2164228096_ui32, %29) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %31 = firrtl.mux(%26, %30, %regs_4) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_4, %31 : !firrtl.uint<32>
      %32 = firrtl.mux(%_regs_0_T_7, %c0_ui32, %regs_5) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %33 = firrtl.mux(%_regs_0_T_6, %c3528169443_ui32, %32) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %34 = firrtl.mux(%_regs_0_T_5, %c0_ui32, %33) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %35 = firrtl.mux(%_regs_0_T_4, %regs_5, %34) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %36 = firrtl.mux(%26, %35, %regs_5) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_5, %36 : !firrtl.uint<32>
      %37 = firrtl.mux(%_regs_0_T_7, %c0_ui32, %regs_6) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %38 = firrtl.mux(%_regs_0_T_6, %c257916991_ui32, %37) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %39 = firrtl.mux(%_regs_0_T_5, %c0_ui32, %38) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %40 = firrtl.mux(%_regs_0_T_4, %regs_6, %39) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %41 = firrtl.mux(%26, %40, %regs_6) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_6, %41 : !firrtl.uint<32>
      %42 = firrtl.mux(%_regs_0_T_7, %c0_ui32, %regs_7) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %43 = firrtl.mux(%_regs_0_T_6, %c2351300906_ui32, %42) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %44 = firrtl.mux(%_regs_0_T_5, %c352321536_ui32, %43) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %45 = firrtl.mux(%_regs_0_T_4, %regs_7, %44) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %46 = firrtl.mux(%26, %45, %regs_7) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_7, %46 : !firrtl.uint<32>
      %_regs_0_T_8 = firrtl.eq %regs_0_cmd, %c18_ui5 {name = "_regs_0_T_8"} : (!firrtl.uint<6>, !firrtl.uint<5>) -> !firrtl.uint<1>
      %47 = firrtl.or %_regs_0_T_6, %_regs_0_T_7 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %48 = firrtl.or %_regs_0_T_5, %47 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %49 = firrtl.or %_regs_0_T_4, %48 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %50 = firrtl.mux(%49, %c0_ui1, %_regs_0_T_8) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %51 = firrtl.mux(%26, %50, %c0_ui1) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %setAddr, %51 : !firrtl.uint<1>
      %52 = firrtl.mux(%26, %_regs_0_T_3, %regs_0) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_0, %52 : !firrtl.uint<32>
      %53 = firrtl.eq %8, %c56_ui6 : (!firrtl.uint<13>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %54 = firrtl.and %_io_in_b_valid_T_1, %53 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_regs_15_T = firrtl.and %9, %18 {name = "_regs_15_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_15_T_1 = firrtl.not %18 {name = "_regs_15_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_15_T_2 = firrtl.and %regs_15, %_regs_15_T_1 {name = "_regs_15_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_15_T_3 = firrtl.or %_regs_15_T, %_regs_15_T_2 {name = "_regs_15_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %55 = firrtl.mux(%54, %_regs_15_T_3, %regs_15) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_15, %55 : !firrtl.uint<32>
      %56 = firrtl.eq %8, %c80_ui7 : (!firrtl.uint<13>, !firrtl.uint<7>) -> !firrtl.uint<1>
      %57 = firrtl.and %_io_in_b_valid_T_1, %56 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_regs_20_T = firrtl.and %9, %18 {name = "_regs_20_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_20_T_1 = firrtl.not %18 {name = "_regs_20_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_20_T_2 = firrtl.and %regs_20, %_regs_20_T_1 {name = "_regs_20_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_20_T_3 = firrtl.or %_regs_20_T, %_regs_20_T_2 {name = "_regs_20_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %58 = firrtl.mux(%57, %_regs_20_T_3, %regs_20) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_20, %58 : !firrtl.uint<32>
      %59 = firrtl.eq %8, %c4_ui3 : (!firrtl.uint<13>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %60 = firrtl.and %_io_in_b_valid_T_1, %59 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_regs_1_T = firrtl.and %9, %18 {name = "_regs_1_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_1_T_1 = firrtl.not %18 {name = "_regs_1_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_1_T_2 = firrtl.and %regs_1, %_regs_1_T_1 {name = "_regs_1_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_1_T_3 = firrtl.or %_regs_1_T, %_regs_1_T_2 {name = "_regs_1_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %61 = firrtl.mux(%60, %_regs_1_T_3, %regs_1) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_1, %61 : !firrtl.uint<32>
      %62 = firrtl.eq %8, %c32_ui6 : (!firrtl.uint<13>, !firrtl.uint<6>) -> !firrtl.uint<1>
      %63 = firrtl.and %_io_in_b_valid_T_1, %62 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_regs_8_T = firrtl.and %9, %18 {name = "_regs_8_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_8_T_1 = firrtl.not %18 {name = "_regs_8_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_8_T_2 = firrtl.and %regs_8, %_regs_8_T_1 {name = "_regs_8_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_regs_8_T_3 = firrtl.or %_regs_8_T, %_regs_8_T_2 {name = "_regs_8_T_3"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %64 = firrtl.mux(%63, %_regs_8_T_3, %regs_8) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %regs_8, %64 : !firrtl.uint<32>
      %_io_in_r_bits_data_T = firrtl.bits %rdata 31 to 0 {name = "_io_in_r_bits_data_T"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_1 = firrtl.cat %_io_in_r_bits_data_T, %_io_in_r_bits_data_T {name = "_io_in_r_bits_data_T_1"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %io_in_r_bits_data_REG = firrtl.reg %clock {firrtl.random_init_start = 677 : ui64} : !firrtl.clock, !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_REG, %_io_in_r_bits_data_T_1 : !firrtl.uint<64>
      %io_in_r_bits_data_r = firrtl.reg %clock {firrtl.random_init_start = 741 : ui64} : !firrtl.clock, !firrtl.uint<64>
      %65 = firrtl.mux(%ren, %io_in_r_bits_data_REG, %io_in_r_bits_data_r) : (!firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_r, %65 : !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %io_in_r_bits_data_r : !firrtl.uint<64>
    }
    firrtl.module private @AXI4MeipGen(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, out %io_extra_meip: !firrtl.uint<1>) {
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_extra_meip_6 = firrtl.wire {name = "io_extra_meip"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_meip, %io_extra_meip_6 : !firrtl.uint<1>
      %_fullMask_T = firrtl.bits %io_in_w_bits_strb 0 to 0 {name = "_fullMask_T"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_1 = firrtl.bits %io_in_w_bits_strb 1 to 1 {name = "_fullMask_T_1"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_2 = firrtl.bits %io_in_w_bits_strb 2 to 2 {name = "_fullMask_T_2"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_3 = firrtl.bits %io_in_w_bits_strb 3 to 3 {name = "_fullMask_T_3"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_4 = firrtl.bits %io_in_w_bits_strb 4 to 4 {name = "_fullMask_T_4"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_5 = firrtl.bits %io_in_w_bits_strb 5 to 5 {name = "_fullMask_T_5"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_6 = firrtl.bits %io_in_w_bits_strb 6 to 6 {name = "_fullMask_T_6"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %_fullMask_T_7 = firrtl.bits %io_in_w_bits_strb 7 to 7 {name = "_fullMask_T_7"} : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_io_in_r_valid_T = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_io_in_r_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_3 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_io_in_r_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_io_in_r_valid_T, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_io_in_r_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_io_in_r_valid_T, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %meip = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %8 = firrtl.bits %io_in_aw_bits_addr 3 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %9 = firrtl.bits %io_in_w_bits_data 0 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %10 = firrtl.mux(%_fullMask_T, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %11 = firrtl.mux(%_fullMask_T_1, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %12 = firrtl.mux(%_fullMask_T_2, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %13 = firrtl.mux(%_fullMask_T_3, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %14 = firrtl.mux(%_fullMask_T_4, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %15 = firrtl.mux(%_fullMask_T_5, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %16 = firrtl.mux(%_fullMask_T_6, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %17 = firrtl.mux(%_fullMask_T_7, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %lo_lo = firrtl.cat %11, %10 {name = "lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo_hi = firrtl.cat %13, %12 {name = "lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo = firrtl.cat %lo_hi, %lo_lo {name = "lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %hi_lo = firrtl.cat %15, %14 {name = "hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi_hi = firrtl.cat %17, %16 {name = "hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi = firrtl.cat %hi_hi, %hi_lo {name = "hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %18 = firrtl.cat %hi, %lo : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %19 = firrtl.bits %18 0 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<1>
      %20 = firrtl.pad %meip, 64 : (!firrtl.uint<1>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %20 : !firrtl.uint<64>
      %21 = firrtl.orr %8 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %22 = firrtl.not %21 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %23 = firrtl.and %_io_in_b_valid_T_1, %22 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meip_T = firrtl.and %9, %19 {name = "_meip_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meip_T_1 = firrtl.not %19 {name = "_meip_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_meip_T_2 = firrtl.and %meip, %_meip_T_1 {name = "_meip_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_meip_T_3 = firrtl.or %_meip_T, %_meip_T_2 {name = "_meip_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.mux(%23, %_meip_T_3, %meip) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %meip, %24 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_meip_6, %meip : !firrtl.uint<1>
    }
    firrtl.module private @AXI4DMA(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_in_aw_ready: !firrtl.uint<1>, in %io_in_aw_valid: !firrtl.uint<1>, in %io_in_aw_bits_addr: !firrtl.uint<32>, out %io_in_w_ready: !firrtl.uint<1>, in %io_in_w_valid: !firrtl.uint<1>, in %io_in_w_bits_data: !firrtl.uint<64>, in %io_in_w_bits_strb: !firrtl.uint<8>, in %io_in_b_ready: !firrtl.uint<1>, out %io_in_b_valid: !firrtl.uint<1>, out %io_in_ar_ready: !firrtl.uint<1>, in %io_in_ar_valid: !firrtl.uint<1>, in %io_in_ar_bits_addr: !firrtl.uint<32>, in %io_in_r_ready: !firrtl.uint<1>, out %io_in_r_valid: !firrtl.uint<1>, out %io_in_r_bits_data: !firrtl.uint<64>, in %io_extra_dma_aw_ready: !firrtl.uint<1>, out %io_extra_dma_aw_valid: !firrtl.uint<1>, out %io_extra_dma_aw_bits_addr: !firrtl.uint<32>, in %io_extra_dma_w_ready: !firrtl.uint<1>, out %io_extra_dma_w_valid: !firrtl.uint<1>, out %io_extra_dma_w_bits_data: !firrtl.uint<64>, out %io_extra_dma_w_bits_strb: !firrtl.uint<8>, out %io_extra_dma_b_ready: !firrtl.uint<1>, in %io_extra_dma_b_valid: !firrtl.uint<1>, in %io_extra_dma_ar_ready: !firrtl.uint<1>, out %io_extra_dma_ar_valid: !firrtl.uint<1>, out %io_extra_dma_ar_bits_addr: !firrtl.uint<32>, out %io_extra_dma_r_ready: !firrtl.uint<1>, in %io_extra_dma_r_valid: !firrtl.uint<1>, in %io_extra_dma_r_bits_data: !firrtl.uint<64>) {
      %c0_ui32 = firrtl.constant 0 : !firrtl.uint<32>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1> {name = "io_extra_dma_w_bits_last"}
      %c15_ui4 = firrtl.constant 15 : !firrtl.uint<4>
      %c1_ui3 = firrtl.constant 1 : !firrtl.uint<3> {name = "io_extra_dma_ar_bits_prot"}
      %c0_ui1 = firrtl.constant 0 : !firrtl.uint<1> {name = "io_extra_dma_ar_bits_id"}
      %c0_ui8 = firrtl.constant 0 : !firrtl.uint<8> {name = "io_extra_dma_ar_bits_len"}
      %c2_ui3 = firrtl.constant 2 : !firrtl.uint<3> {name = "io_extra_dma_ar_bits_size"}
      %c8_ui4 = firrtl.constant 8 : !firrtl.uint<4>
      %c4_ui3 = firrtl.constant 4 : !firrtl.uint<3>
      %c3_ui3 = firrtl.constant 3 : !firrtl.uint<3>
      %c0_ui3 = firrtl.constant 0 : !firrtl.uint<3>
      %c255_ui8 = firrtl.constant 255 : !firrtl.uint<8>
      %io_in_aw_ready_0 = firrtl.wire {name = "io_in_aw_ready"} : !firrtl.uint<1>
      %io_in_w_ready_1 = firrtl.wire {name = "io_in_w_ready"} : !firrtl.uint<1>
      %io_in_b_valid_2 = firrtl.wire {name = "io_in_b_valid"} : !firrtl.uint<1>
      %io_in_ar_ready_3 = firrtl.wire {name = "io_in_ar_ready"} : !firrtl.uint<1>
      %io_in_r_valid_4 = firrtl.wire {name = "io_in_r_valid"} : !firrtl.uint<1>
      %io_in_r_bits_data_5 = firrtl.wire {name = "io_in_r_bits_data"} : !firrtl.uint<64>
      %io_extra_dma_aw_valid_6 = firrtl.wire {name = "io_extra_dma_aw_valid"} : !firrtl.uint<1>
      %io_extra_dma_aw_bits_addr_7 = firrtl.wire {name = "io_extra_dma_aw_bits_addr"} : !firrtl.uint<32>
      %io_extra_dma_w_valid_8 = firrtl.wire {name = "io_extra_dma_w_valid"} : !firrtl.uint<1>
      %io_extra_dma_w_bits_data_9 = firrtl.wire {name = "io_extra_dma_w_bits_data"} : !firrtl.uint<64>
      %io_extra_dma_w_bits_strb_10 = firrtl.wire {name = "io_extra_dma_w_bits_strb"} : !firrtl.uint<8>
      %io_extra_dma_b_ready_11 = firrtl.wire {name = "io_extra_dma_b_ready"} : !firrtl.uint<1>
      %io_extra_dma_ar_valid_12 = firrtl.wire {name = "io_extra_dma_ar_valid"} : !firrtl.uint<1>
      %io_extra_dma_ar_bits_addr_13 = firrtl.wire {name = "io_extra_dma_ar_bits_addr"} : !firrtl.uint<32>
      %io_extra_dma_r_ready_14 = firrtl.wire {name = "io_extra_dma_r_ready"} : !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready, %io_in_aw_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready, %io_in_w_ready_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid, %io_in_b_valid_2 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready, %io_in_ar_ready_3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid, %io_in_r_valid_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_bits_data, %io_in_r_bits_data_5 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_dma_aw_valid, %io_extra_dma_aw_valid_6 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_aw_bits_addr, %io_extra_dma_aw_bits_addr_7 : !firrtl.uint<32>
      firrtl.strictconnect %io_extra_dma_w_valid, %io_extra_dma_w_valid_8 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_w_bits_data, %io_extra_dma_w_bits_data_9 : !firrtl.uint<64>
      firrtl.strictconnect %io_extra_dma_w_bits_strb, %io_extra_dma_w_bits_strb_10 : !firrtl.uint<8>
      firrtl.strictconnect %io_extra_dma_b_ready, %io_extra_dma_b_ready_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_ar_valid, %io_extra_dma_ar_valid_12 : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_ar_bits_addr, %io_extra_dma_ar_bits_addr_13 : !firrtl.uint<32>
      firrtl.strictconnect %io_extra_dma_r_ready, %io_extra_dma_r_ready_14 : !firrtl.uint<1>
      %ren = firrtl.wire : !firrtl.uint<1>
      %_io_in_r_valid_T = firrtl.and %io_in_ar_ready_3, %io_in_ar_valid {name = "_io_in_r_valid_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_3 = firrtl.and %io_in_r_ready, %io_in_r_valid_4 {name = "_io_in_r_valid_T_3"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %r_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %0 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %r_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %1 = firrtl.mux(%_io_in_r_valid_T, %c1_ui1, %0) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %r_busy, %1 : !firrtl.uint<1>
      %_io_in_ar_ready_T = firrtl.not %r_busy {name = "_io_in_ar_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_ar_ready_T_1 = firrtl.or %io_in_r_ready, %_io_in_ar_ready_T {name = "_io_in_ar_ready_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_ar_ready_3, %_io_in_ar_ready_T_1 : !firrtl.uint<1>
      %ren_REG = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 1 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      firrtl.strictconnect %ren_REG, %_io_in_r_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %ren, %ren_REG : !firrtl.uint<1>
      %_io_in_r_valid_T_1 = firrtl.or %_io_in_r_valid_T, %r_busy {name = "_io_in_r_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_valid_T_2 = firrtl.and %ren, %_io_in_r_valid_T_1 {name = "_io_in_r_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_r_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 2 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %2 = firrtl.mux(%_io_in_r_valid_T_3, %c0_ui1, %io_in_r_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %3 = firrtl.mux(%_io_in_r_valid_T_2, %c1_ui1, %2) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_r, %3 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_r_valid_4, %io_in_r_valid_r : !firrtl.uint<1>
      %_w_busy_T = firrtl.and %io_in_aw_ready_0, %io_in_aw_valid {name = "_w_busy_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_b_valid_T_2 = firrtl.and %io_in_b_ready, %io_in_b_valid_2 {name = "_io_in_b_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %w_busy = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 3 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %4 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %w_busy) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %5 = firrtl.mux(%_w_busy_T, %c1_ui1, %4) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %w_busy, %5 : !firrtl.uint<1>
      %_io_in_aw_ready_T = firrtl.not %w_busy {name = "_io_in_aw_ready_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_aw_ready_0, %_io_in_aw_ready_T : !firrtl.uint<1>
      %_io_in_w_ready_T = firrtl.or %io_in_aw_valid, %w_busy {name = "_io_in_w_ready_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_w_ready_1, %_io_in_w_ready_T : !firrtl.uint<1>
      %_io_in_b_valid_T_1 = firrtl.and %io_in_w_ready_1, %io_in_w_valid {name = "_io_in_b_valid_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %io_in_b_valid_r = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 4 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %6 = firrtl.mux(%_io_in_b_valid_T_2, %c0_ui1, %io_in_b_valid_r) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %7 = firrtl.mux(%_io_in_b_valid_T_1, %c1_ui1, %6) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_r, %7 : !firrtl.uint<1>
      firrtl.strictconnect %io_in_b_valid_2, %io_in_b_valid_r : !firrtl.uint<1>
      %dest = firrtl.reg %clock {firrtl.random_init_start = 5 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %src = firrtl.reg %clock {firrtl.random_init_start = 37 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %len = firrtl.regreset %clock, %reset, %c0_ui32 {firrtl.random_init_start = 69 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>
      %data = firrtl.reg %clock {firrtl.random_init_start = 101 : ui64} : !firrtl.clock, !firrtl.uint<32>
      %state = firrtl.regreset %clock, %reset, %c0_ui3 {firrtl.random_init_start = 133 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>
      %8 = firrtl.orr %state : (!firrtl.uint<3>) -> !firrtl.uint<1>
      %9 = firrtl.not %8 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %10 = firrtl.orr %len : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %11 = firrtl.and %9, %10 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %12 = firrtl.mux(%11, %c1_ui3, %state) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_io_extra_dma_ar_valid_T = firrtl.eq %state, %c1_ui3 {name = "_io_extra_dma_ar_valid_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %13 = firrtl.and %io_extra_dma_ar_ready, %io_extra_dma_ar_valid_12 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %14 = firrtl.and %_io_extra_dma_ar_valid_T, %13 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %15 = firrtl.mux(%14, %c2_ui3, %12) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_io_extra_dma_r_ready_T = firrtl.eq %state, %c2_ui3 {name = "_io_extra_dma_r_ready_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %16 = firrtl.and %io_extra_dma_r_ready_14, %io_extra_dma_r_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %17 = firrtl.and %_io_extra_dma_r_ready_T, %16 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_data_WIRE_0 = firrtl.wire : !firrtl.uint<32>
      %_data_WIRE_1 = firrtl.wire : !firrtl.uint<32>
      %_data_T = firrtl.bits %io_extra_dma_r_bits_data 31 to 0 {name = "_data_T"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      firrtl.strictconnect %_data_WIRE_0, %_data_T : !firrtl.uint<32>
      %_data_T_1 = firrtl.bits %io_extra_dma_r_bits_data 63 to 32 {name = "_data_T_1"} : (!firrtl.uint<64>) -> !firrtl.uint<32>
      firrtl.strictconnect %_data_WIRE_1, %_data_T_1 : !firrtl.uint<32>
      %_data_T_2 = firrtl.bits %src 2 to 2 {name = "_data_T_2"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %18 = firrtl.mux(%_data_T_2, %_data_WIRE_1, %_data_WIRE_0) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %19 = firrtl.mux(%17, %18, %data) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %data, %19 : !firrtl.uint<32>
      %20 = firrtl.mux(%17, %c3_ui3, %15) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %wSend = firrtl.wire : !firrtl.uint<1>
      %_wSend_T = firrtl.and %io_extra_dma_aw_ready, %io_extra_dma_aw_valid_6 {name = "_wSend_T"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %awAck = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 136 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %21 = firrtl.mux(%_wSend_T, %c1_ui1, %awAck) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %22 = firrtl.mux(%wSend, %c0_ui1, %21) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %awAck, %22 : !firrtl.uint<1>
      %_wSend_T_1 = firrtl.and %io_extra_dma_w_ready, %io_extra_dma_w_valid_8 {name = "_wSend_T_1"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %wAck = firrtl.regreset %clock, %reset, %c0_ui1 {firrtl.random_init_start = 137 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>
      %23 = firrtl.mux(%_wSend_T_1, %c1_ui1, %wAck) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %24 = firrtl.mux(%wSend, %c0_ui1, %23) : (!firrtl.uint<1>, !firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wAck, %24 : !firrtl.uint<1>
      %_wSend_T_2 = firrtl.and %_wSend_T, %_wSend_T_1 {name = "_wSend_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wSend_T_4 = firrtl.and %awAck, %wAck {name = "_wSend_T_4"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_wSend_T_5 = firrtl.or %_wSend_T_2, %_wSend_T_4 {name = "_wSend_T_5"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %wSend, %_wSend_T_5 : !firrtl.uint<1>
      %_io_extra_dma_w_valid_T = firrtl.eq %state, %c3_ui3 {name = "_io_extra_dma_w_valid_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %25 = firrtl.and %_io_extra_dma_w_valid_T, %wSend : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %26 = firrtl.mux(%25, %c4_ui3, %20) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %_io_extra_dma_b_ready_T = firrtl.eq %state, %c4_ui3 {name = "_io_extra_dma_b_ready_T"} : (!firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %27 = firrtl.and %io_extra_dma_b_ready_11, %io_extra_dma_b_valid : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %28 = firrtl.and %_io_extra_dma_b_ready_T, %27 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_len_T = firrtl.sub %len, %c4_ui3 {name = "_len_T"} : (!firrtl.uint<32>, !firrtl.uint<3>) -> !firrtl.uint<33>
      %_len_T_1 = firrtl.bits %_len_T 31 to 0 {name = "_len_T_1"} : (!firrtl.uint<33>) -> !firrtl.uint<32>
      %29 = firrtl.mux(%28, %_len_T_1, %len) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_dest_T = firrtl.add %dest, %c4_ui3 {name = "_dest_T"} : (!firrtl.uint<32>, !firrtl.uint<3>) -> !firrtl.uint<33>
      %_dest_T_1 = firrtl.bits %_dest_T 31 to 0 {name = "_dest_T_1"} : (!firrtl.uint<33>) -> !firrtl.uint<32>
      %30 = firrtl.mux(%28, %_dest_T_1, %dest) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_src_T = firrtl.add %src, %c4_ui3 {name = "_src_T"} : (!firrtl.uint<32>, !firrtl.uint<3>) -> !firrtl.uint<33>
      %_src_T_1 = firrtl.bits %_src_T 31 to 0 {name = "_src_T_1"} : (!firrtl.uint<33>) -> !firrtl.uint<32>
      %31 = firrtl.mux(%28, %_src_T_1, %src) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_state_T = firrtl.leq %len, %c4_ui3 {name = "_state_T"} : (!firrtl.uint<32>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_state_T_1 = firrtl.mux(%_state_T, %c0_ui3, %c1_ui3) {name = "_state_T_1"} : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      %32 = firrtl.mux(%28, %_state_T_1, %26) : (!firrtl.uint<1>, !firrtl.uint<3>, !firrtl.uint<3>) -> !firrtl.uint<3>
      firrtl.strictconnect %state, %32 : !firrtl.uint<3>
      firrtl.strictconnect %io_extra_dma_ar_bits_addr_13, %src : !firrtl.uint<32>
      firrtl.strictconnect %io_extra_dma_ar_valid_12, %_io_extra_dma_ar_valid_T : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_r_ready_14, %_io_extra_dma_r_ready_T : !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_aw_bits_addr_7, %dest : !firrtl.uint<32>
      %_io_extra_dma_aw_valid_T_1 = firrtl.not %awAck {name = "_io_extra_dma_aw_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_extra_dma_aw_valid_T_2 = firrtl.and %_io_extra_dma_w_valid_T, %_io_extra_dma_aw_valid_T_1 {name = "_io_extra_dma_aw_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_aw_valid_6, %_io_extra_dma_aw_valid_T_2 : !firrtl.uint<1>
      %_io_extra_dma_w_valid_T_1 = firrtl.not %wAck {name = "_io_extra_dma_w_valid_T_1"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_extra_dma_w_valid_T_2 = firrtl.and %_io_extra_dma_w_valid_T, %_io_extra_dma_w_valid_T_1 {name = "_io_extra_dma_w_valid_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %io_extra_dma_w_valid_8, %_io_extra_dma_w_valid_T_2 : !firrtl.uint<1>
      %_io_extra_dma_w_bits_data_T = firrtl.cat %data, %data {name = "_io_extra_dma_w_bits_data_T"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_extra_dma_w_bits_data_9, %_io_extra_dma_w_bits_data_T : !firrtl.uint<64>
      %_io_extra_dma_w_bits_strb_T_1 = firrtl.bits %dest 2 to 2 {name = "_io_extra_dma_w_bits_strb_T_1"} : (!firrtl.uint<32>) -> !firrtl.uint<1>
      %_io_extra_dma_w_bits_strb_T_2 = firrtl.mul %_io_extra_dma_w_bits_strb_T_1, %c4_ui3 {name = "_io_extra_dma_w_bits_strb_T_2"} : (!firrtl.uint<1>, !firrtl.uint<3>) -> !firrtl.uint<4>
      %_io_extra_dma_w_bits_strb_T_3 = firrtl.dshl %c15_ui4, %_io_extra_dma_w_bits_strb_T_2 {name = "_io_extra_dma_w_bits_strb_T_3"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<19>
      %33 = firrtl.bits %_io_extra_dma_w_bits_strb_T_3 7 to 0 : (!firrtl.uint<19>) -> !firrtl.uint<8>
      firrtl.strictconnect %io_extra_dma_w_bits_strb_10, %33 : !firrtl.uint<8>
      firrtl.strictconnect %io_extra_dma_b_ready_11, %_io_extra_dma_b_ready_T : !firrtl.uint<1>
      %34 = firrtl.bits %io_in_ar_bits_addr 3 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %35 = firrtl.bits %io_in_aw_bits_addr 3 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<4>
      %36 = firrtl.bits %io_in_w_bits_data 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %37 = firrtl.bits %io_in_aw_bits_addr 2 to 0 : (!firrtl.uint<32>) -> !firrtl.uint<3>
      %38 = firrtl.dshr %io_in_w_bits_strb, %37 : (!firrtl.uint<8>, !firrtl.uint<3>) -> !firrtl.uint<8>
      %39 = firrtl.bits %38 0 to 0 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %40 = firrtl.bits %38 1 to 1 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %41 = firrtl.bits %38 2 to 2 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %42 = firrtl.bits %38 3 to 3 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %43 = firrtl.bits %38 4 to 4 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %44 = firrtl.bits %38 5 to 5 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %45 = firrtl.bits %38 6 to 6 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %46 = firrtl.bits %38 7 to 7 : (!firrtl.uint<8>) -> !firrtl.uint<1>
      %47 = firrtl.mux(%39, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %48 = firrtl.mux(%40, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %49 = firrtl.mux(%41, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %50 = firrtl.mux(%42, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %51 = firrtl.mux(%43, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %52 = firrtl.mux(%44, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %53 = firrtl.mux(%45, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %54 = firrtl.mux(%46, %c255_ui8, %c0_ui8) : (!firrtl.uint<1>, !firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<8>
      %lo_lo = firrtl.cat %48, %47 {name = "lo_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo_hi = firrtl.cat %50, %49 {name = "lo_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %lo = firrtl.cat %lo_hi, %lo_lo {name = "lo"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %hi_lo = firrtl.cat %52, %51 {name = "hi_lo"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi_hi = firrtl.cat %54, %53 {name = "hi_hi"} : (!firrtl.uint<8>, !firrtl.uint<8>) -> !firrtl.uint<16>
      %hi = firrtl.cat %hi_hi, %hi_lo {name = "hi"} : (!firrtl.uint<16>, !firrtl.uint<16>) -> !firrtl.uint<32>
      %55 = firrtl.cat %hi, %lo : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<64>
      %56 = firrtl.bits %55 31 to 0 : (!firrtl.uint<64>) -> !firrtl.uint<32>
      %57 = firrtl.orr %34 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T = firrtl.not %57 {name = "_io_in_r_bits_data_T"} : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_1 = firrtl.eq %34, %c4_ui3 {name = "_io_in_r_bits_data_T_1"} : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_2 = firrtl.eq %34, %c8_ui4 {name = "_io_in_r_bits_data_T_2"} : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %_io_in_r_bits_data_T_3 = firrtl.mux(%_io_in_r_bits_data_T, %dest, %c0_ui32) {name = "_io_in_r_bits_data_T_3"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_4 = firrtl.mux(%_io_in_r_bits_data_T_1, %src, %c0_ui32) {name = "_io_in_r_bits_data_T_4"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_5 = firrtl.mux(%_io_in_r_bits_data_T_2, %len, %c0_ui32) {name = "_io_in_r_bits_data_T_5"} : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_6 = firrtl.or %_io_in_r_bits_data_T_3, %_io_in_r_bits_data_T_4 {name = "_io_in_r_bits_data_T_6"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_T_7 = firrtl.or %_io_in_r_bits_data_T_6, %_io_in_r_bits_data_T_5 {name = "_io_in_r_bits_data_T_7"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_io_in_r_bits_data_WIRE = firrtl.wire : !firrtl.uint<32>
      firrtl.strictconnect %_io_in_r_bits_data_WIRE, %_io_in_r_bits_data_T_7 : !firrtl.uint<32>
      %58 = firrtl.pad %_io_in_r_bits_data_WIRE, 64 : (!firrtl.uint<32>) -> !firrtl.uint<64>
      firrtl.strictconnect %io_in_r_bits_data_5, %58 : !firrtl.uint<64>
      %59 = firrtl.orr %35 : (!firrtl.uint<4>) -> !firrtl.uint<1>
      %60 = firrtl.not %59 : (!firrtl.uint<1>) -> !firrtl.uint<1>
      %61 = firrtl.and %_io_in_b_valid_T_1, %60 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_dest_T_2 = firrtl.and %36, %56 {name = "_dest_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_dest_T_3 = firrtl.not %56 {name = "_dest_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_dest_T_4 = firrtl.and %dest, %_dest_T_3 {name = "_dest_T_4"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_dest_T_5 = firrtl.or %_dest_T_2, %_dest_T_4 {name = "_dest_T_5"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %62 = firrtl.mux(%61, %_dest_T_5, %30) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %dest, %62 : !firrtl.uint<32>
      %63 = firrtl.eq %35, %c4_ui3 : (!firrtl.uint<4>, !firrtl.uint<3>) -> !firrtl.uint<1>
      %64 = firrtl.and %_io_in_b_valid_T_1, %63 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_src_T_2 = firrtl.and %36, %56 {name = "_src_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_src_T_3 = firrtl.not %56 {name = "_src_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_src_T_4 = firrtl.and %src, %_src_T_3 {name = "_src_T_4"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_src_T_5 = firrtl.or %_src_T_2, %_src_T_4 {name = "_src_T_5"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %65 = firrtl.mux(%64, %_src_T_5, %31) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %src, %65 : !firrtl.uint<32>
      %66 = firrtl.eq %35, %c8_ui4 : (!firrtl.uint<4>, !firrtl.uint<4>) -> !firrtl.uint<1>
      %67 = firrtl.and %_io_in_b_valid_T_1, %66 : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      %_len_T_2 = firrtl.and %36, %56 {name = "_len_T_2"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_len_T_3 = firrtl.not %56 {name = "_len_T_3"} : (!firrtl.uint<32>) -> !firrtl.uint<32>
      %_len_T_4 = firrtl.and %len, %_len_T_3 {name = "_len_T_4"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %_len_T_5 = firrtl.or %_len_T_2, %_len_T_4 {name = "_len_T_5"} : (!firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      %68 = firrtl.mux(%67, %_len_T_5, %29) : (!firrtl.uint<1>, !firrtl.uint<32>, !firrtl.uint<32>) -> !firrtl.uint<32>
      firrtl.strictconnect %len, %68 : !firrtl.uint<32>
    }
    firrtl.module private @SimMMIO(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %io_rw_req_ready: !firrtl.uint<1>, in %io_rw_req_valid: !firrtl.uint<1>, in %io_rw_req_bits_addr: !firrtl.uint<32>, in %io_rw_req_bits_size: !firrtl.uint<3>, in %io_rw_req_bits_cmd: !firrtl.uint<4>, in %io_rw_req_bits_wmask: !firrtl.uint<8>, in %io_rw_req_bits_wdata: !firrtl.uint<64>, in %io_rw_resp_ready: !firrtl.uint<1>, out %io_rw_resp_valid: !firrtl.uint<1>, out %io_rw_resp_bits_cmd: !firrtl.uint<4>, out %io_rw_resp_bits_rdata: !firrtl.uint<64>, out %io_meip: !firrtl.uint<1>, in %io_dma_aw_ready: !firrtl.uint<1>, out %io_dma_aw_valid: !firrtl.uint<1>, out %io_dma_aw_bits_addr: !firrtl.uint<32>, in %io_dma_w_ready: !firrtl.uint<1>, out %io_dma_w_valid: !firrtl.uint<1>, out %io_dma_w_bits_data: !firrtl.uint<64>, out %io_dma_w_bits_strb: !firrtl.uint<8>, out %io_dma_b_ready: !firrtl.uint<1>, in %io_dma_b_valid: !firrtl.uint<1>, in %io_dma_ar_ready: !firrtl.uint<1>, out %io_dma_ar_valid: !firrtl.uint<1>, out %io_dma_ar_bits_addr: !firrtl.uint<32>, out %io_dma_r_ready: !firrtl.uint<1>, in %io_dma_r_valid: !firrtl.uint<1>, in %io_dma_r_bits_data: !firrtl.uint<64>, out %io_uart_out_valid: !firrtl.uint<1>, out %io_uart_out_ch: !firrtl.uint<8>, out %io_uart_in_valid: !firrtl.uint<1>, in %io_uart_in_ch: !firrtl.uint<8>) {
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %io_rw_req_ready_0 = firrtl.wire {name = "io_rw_req_ready"} : !firrtl.uint<1>
      %io_rw_resp_valid_1 = firrtl.wire {name = "io_rw_resp_valid"} : !firrtl.uint<1>
      %io_rw_resp_bits_cmd_2 = firrtl.wire {name = "io_rw_resp_bits_cmd"} : !firrtl.uint<4>
      %io_rw_resp_bits_rdata_3 = firrtl.wire {name = "io_rw_resp_bits_rdata"} : !firrtl.uint<64>
      %io_meip_4 = firrtl.wire {name = "io_meip"} : !firrtl.uint<1>
      %io_dma_aw_valid_5 = firrtl.wire {name = "io_dma_aw_valid"} : !firrtl.uint<1>
      %io_dma_aw_bits_addr_6 = firrtl.wire {name = "io_dma_aw_bits_addr"} : !firrtl.uint<32>
      %io_dma_w_valid_7 = firrtl.wire {name = "io_dma_w_valid"} : !firrtl.uint<1>
      %io_dma_w_bits_data_8 = firrtl.wire {name = "io_dma_w_bits_data"} : !firrtl.uint<64>
      %io_dma_w_bits_strb_9 = firrtl.wire {name = "io_dma_w_bits_strb"} : !firrtl.uint<8>
      %io_dma_b_ready_10 = firrtl.wire {name = "io_dma_b_ready"} : !firrtl.uint<1>
      %io_dma_ar_valid_11 = firrtl.wire {name = "io_dma_ar_valid"} : !firrtl.uint<1>
      %io_dma_ar_bits_addr_12 = firrtl.wire {name = "io_dma_ar_bits_addr"} : !firrtl.uint<32>
      %io_dma_r_ready_13 = firrtl.wire {name = "io_dma_r_ready"} : !firrtl.uint<1>
      %io_uart_out_valid_14 = firrtl.wire {name = "io_uart_out_valid"} : !firrtl.uint<1>
      %io_uart_out_ch_15 = firrtl.wire {name = "io_uart_out_ch"} : !firrtl.uint<8>
      %io_uart_in_valid_16 = firrtl.wire {name = "io_uart_in_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %io_rw_req_ready, %io_rw_req_ready_0 : !firrtl.uint<1>
      firrtl.strictconnect %io_rw_resp_valid, %io_rw_resp_valid_1 : !firrtl.uint<1>
      firrtl.strictconnect %io_rw_resp_bits_cmd, %io_rw_resp_bits_cmd_2 : !firrtl.uint<4>
      firrtl.strictconnect %io_rw_resp_bits_rdata, %io_rw_resp_bits_rdata_3 : !firrtl.uint<64>
      firrtl.strictconnect %io_meip, %io_meip_4 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_aw_valid, %io_dma_aw_valid_5 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_aw_bits_addr, %io_dma_aw_bits_addr_6 : !firrtl.uint<32>
      firrtl.strictconnect %io_dma_w_valid, %io_dma_w_valid_7 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_w_bits_data, %io_dma_w_bits_data_8 : !firrtl.uint<64>
      firrtl.strictconnect %io_dma_w_bits_strb, %io_dma_w_bits_strb_9 : !firrtl.uint<8>
      firrtl.strictconnect %io_dma_b_ready, %io_dma_b_ready_10 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_ar_valid, %io_dma_ar_valid_11 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_ar_bits_addr, %io_dma_ar_bits_addr_12 : !firrtl.uint<32>
      firrtl.strictconnect %io_dma_r_ready, %io_dma_r_ready_13 : !firrtl.uint<1>
      firrtl.strictconnect %io_uart_out_valid, %io_uart_out_valid_14 : !firrtl.uint<1>
      firrtl.strictconnect %io_uart_out_ch, %io_uart_out_ch_15 : !firrtl.uint<8>
      firrtl.strictconnect %io_uart_in_valid, %io_uart_in_valid_16 : !firrtl.uint<1>
      %xbar_clock, %xbar_reset, %xbar_io_in_req_ready, %xbar_io_in_req_valid, %xbar_io_in_req_bits_addr, %xbar_io_in_req_bits_size, %xbar_io_in_req_bits_cmd, %xbar_io_in_req_bits_wmask, %xbar_io_in_req_bits_wdata, %xbar_io_in_resp_ready, %xbar_io_in_resp_valid, %xbar_io_in_resp_bits_cmd, %xbar_io_in_resp_bits_rdata, %xbar_io_out_0_req_ready, %xbar_io_out_0_req_valid, %xbar_io_out_0_req_bits_addr, %xbar_io_out_0_req_bits_cmd, %xbar_io_out_0_req_bits_wmask, %xbar_io_out_0_req_bits_wdata, %xbar_io_out_0_resp_ready, %xbar_io_out_0_resp_valid, %xbar_io_out_0_resp_bits_rdata, %xbar_io_out_1_req_ready, %xbar_io_out_1_req_valid, %xbar_io_out_1_req_bits_addr, %xbar_io_out_1_req_bits_cmd, %xbar_io_out_1_req_bits_wmask, %xbar_io_out_1_req_bits_wdata, %xbar_io_out_1_resp_ready, %xbar_io_out_1_resp_valid, %xbar_io_out_1_resp_bits_rdata, %xbar_io_out_2_req_ready, %xbar_io_out_2_req_valid, %xbar_io_out_2_req_bits_addr, %xbar_io_out_2_req_bits_cmd, %xbar_io_out_2_req_bits_wmask, %xbar_io_out_2_req_bits_wdata, %xbar_io_out_2_resp_ready, %xbar_io_out_2_resp_valid, %xbar_io_out_2_resp_bits_rdata, %xbar_io_out_3_req_ready, %xbar_io_out_3_req_valid, %xbar_io_out_3_req_bits_addr, %xbar_io_out_3_req_bits_cmd, %xbar_io_out_3_req_bits_wmask, %xbar_io_out_3_req_bits_wdata, %xbar_io_out_3_resp_ready, %xbar_io_out_3_resp_valid, %xbar_io_out_3_resp_bits_rdata, %xbar_io_out_4_req_ready, %xbar_io_out_4_req_valid, %xbar_io_out_4_req_bits_addr, %xbar_io_out_4_req_bits_cmd, %xbar_io_out_4_req_bits_wmask, %xbar_io_out_4_req_bits_wdata, %xbar_io_out_4_resp_ready, %xbar_io_out_4_resp_valid, %xbar_io_out_4_resp_bits_rdata, %xbar_io_out_5_req_ready, %xbar_io_out_5_req_valid, %xbar_io_out_5_req_bits_addr, %xbar_io_out_5_req_bits_cmd, %xbar_io_out_5_req_bits_wmask, %xbar_io_out_5_req_bits_wdata, %xbar_io_out_5_resp_ready, %xbar_io_out_5_resp_valid, %xbar_io_out_5_resp_bits_rdata, %xbar_io_out_6_req_ready, %xbar_io_out_6_req_valid, %xbar_io_out_6_req_bits_addr, %xbar_io_out_6_req_bits_cmd, %xbar_io_out_6_req_bits_wmask, %xbar_io_out_6_req_bits_wdata, %xbar_io_out_6_resp_ready, %xbar_io_out_6_resp_valid, %xbar_io_out_6_resp_bits_rdata = firrtl.instance xbar @SimpleBusCrossbar1toN_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_size: !firrtl.uint<3>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_cmd: !firrtl.uint<4>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_0_req_ready: !firrtl.uint<1>, out io_out_0_req_valid: !firrtl.uint<1>, out io_out_0_req_bits_addr: !firrtl.uint<32>, out io_out_0_req_bits_cmd: !firrtl.uint<4>, out io_out_0_req_bits_wmask: !firrtl.uint<8>, out io_out_0_req_bits_wdata: !firrtl.uint<64>, out io_out_0_resp_ready: !firrtl.uint<1>, in io_out_0_resp_valid: !firrtl.uint<1>, in io_out_0_resp_bits_rdata: !firrtl.uint<64>, in io_out_1_req_ready: !firrtl.uint<1>, out io_out_1_req_valid: !firrtl.uint<1>, out io_out_1_req_bits_addr: !firrtl.uint<32>, out io_out_1_req_bits_cmd: !firrtl.uint<4>, out io_out_1_req_bits_wmask: !firrtl.uint<8>, out io_out_1_req_bits_wdata: !firrtl.uint<64>, out io_out_1_resp_ready: !firrtl.uint<1>, in io_out_1_resp_valid: !firrtl.uint<1>, in io_out_1_resp_bits_rdata: !firrtl.uint<64>, in io_out_2_req_ready: !firrtl.uint<1>, out io_out_2_req_valid: !firrtl.uint<1>, out io_out_2_req_bits_addr: !firrtl.uint<32>, out io_out_2_req_bits_cmd: !firrtl.uint<4>, out io_out_2_req_bits_wmask: !firrtl.uint<8>, out io_out_2_req_bits_wdata: !firrtl.uint<64>, out io_out_2_resp_ready: !firrtl.uint<1>, in io_out_2_resp_valid: !firrtl.uint<1>, in io_out_2_resp_bits_rdata: !firrtl.uint<64>, in io_out_3_req_ready: !firrtl.uint<1>, out io_out_3_req_valid: !firrtl.uint<1>, out io_out_3_req_bits_addr: !firrtl.uint<32>, out io_out_3_req_bits_cmd: !firrtl.uint<4>, out io_out_3_req_bits_wmask: !firrtl.uint<8>, out io_out_3_req_bits_wdata: !firrtl.uint<64>, out io_out_3_resp_ready: !firrtl.uint<1>, in io_out_3_resp_valid: !firrtl.uint<1>, in io_out_3_resp_bits_rdata: !firrtl.uint<64>, in io_out_4_req_ready: !firrtl.uint<1>, out io_out_4_req_valid: !firrtl.uint<1>, out io_out_4_req_bits_addr: !firrtl.uint<32>, out io_out_4_req_bits_cmd: !firrtl.uint<4>, out io_out_4_req_bits_wmask: !firrtl.uint<8>, out io_out_4_req_bits_wdata: !firrtl.uint<64>, out io_out_4_resp_ready: !firrtl.uint<1>, in io_out_4_resp_valid: !firrtl.uint<1>, in io_out_4_resp_bits_rdata: !firrtl.uint<64>, in io_out_5_req_ready: !firrtl.uint<1>, out io_out_5_req_valid: !firrtl.uint<1>, out io_out_5_req_bits_addr: !firrtl.uint<32>, out io_out_5_req_bits_cmd: !firrtl.uint<4>, out io_out_5_req_bits_wmask: !firrtl.uint<8>, out io_out_5_req_bits_wdata: !firrtl.uint<64>, out io_out_5_resp_ready: !firrtl.uint<1>, in io_out_5_resp_valid: !firrtl.uint<1>, in io_out_5_resp_bits_rdata: !firrtl.uint<64>, in io_out_6_req_ready: !firrtl.uint<1>, out io_out_6_req_valid: !firrtl.uint<1>, out io_out_6_req_bits_addr: !firrtl.uint<32>, out io_out_6_req_bits_cmd: !firrtl.uint<4>, out io_out_6_req_bits_wmask: !firrtl.uint<8>, out io_out_6_req_bits_wdata: !firrtl.uint<64>, out io_out_6_resp_ready: !firrtl.uint<1>, in io_out_6_resp_valid: !firrtl.uint<1>, in io_out_6_resp_bits_rdata: !firrtl.uint<64>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<4>
      %3 = firrtl.wire : !firrtl.uint<64>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<32>
      %7 = firrtl.wire : !firrtl.uint<4>
      %8 = firrtl.wire : !firrtl.uint<8>
      %9 = firrtl.wire : !firrtl.uint<64>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<1>
      %12 = firrtl.wire : !firrtl.uint<64>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<1>
      %15 = firrtl.wire : !firrtl.uint<32>
      %16 = firrtl.wire : !firrtl.uint<4>
      %17 = firrtl.wire : !firrtl.uint<8>
      %18 = firrtl.wire : !firrtl.uint<64>
      %19 = firrtl.wire : !firrtl.uint<1>
      %20 = firrtl.wire : !firrtl.uint<1>
      %21 = firrtl.wire : !firrtl.uint<64>
      %22 = firrtl.wire : !firrtl.uint<1>
      %23 = firrtl.wire : !firrtl.uint<1>
      %24 = firrtl.wire : !firrtl.uint<32>
      %25 = firrtl.wire : !firrtl.uint<4>
      %26 = firrtl.wire : !firrtl.uint<8>
      %27 = firrtl.wire : !firrtl.uint<64>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<1>
      %30 = firrtl.wire : !firrtl.uint<64>
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<1>
      %33 = firrtl.wire : !firrtl.uint<32>
      %34 = firrtl.wire : !firrtl.uint<4>
      %35 = firrtl.wire : !firrtl.uint<8>
      %36 = firrtl.wire : !firrtl.uint<64>
      %37 = firrtl.wire : !firrtl.uint<1>
      %38 = firrtl.wire : !firrtl.uint<1>
      %39 = firrtl.wire : !firrtl.uint<64>
      %40 = firrtl.wire : !firrtl.uint<1>
      %41 = firrtl.wire : !firrtl.uint<1>
      %42 = firrtl.wire : !firrtl.uint<32>
      %43 = firrtl.wire : !firrtl.uint<4>
      %44 = firrtl.wire : !firrtl.uint<8>
      %45 = firrtl.wire : !firrtl.uint<64>
      %46 = firrtl.wire : !firrtl.uint<1>
      %47 = firrtl.wire : !firrtl.uint<1>
      %48 = firrtl.wire : !firrtl.uint<64>
      %49 = firrtl.wire : !firrtl.uint<1>
      %50 = firrtl.wire : !firrtl.uint<1>
      %51 = firrtl.wire : !firrtl.uint<32>
      %52 = firrtl.wire : !firrtl.uint<4>
      %53 = firrtl.wire : !firrtl.uint<8>
      %54 = firrtl.wire : !firrtl.uint<64>
      %55 = firrtl.wire : !firrtl.uint<1>
      %56 = firrtl.wire : !firrtl.uint<1>
      %57 = firrtl.wire : !firrtl.uint<64>
      %58 = firrtl.wire : !firrtl.uint<1>
      %59 = firrtl.wire : !firrtl.uint<1>
      %60 = firrtl.wire : !firrtl.uint<32>
      %61 = firrtl.wire : !firrtl.uint<4>
      %62 = firrtl.wire : !firrtl.uint<8>
      %63 = firrtl.wire : !firrtl.uint<64>
      %64 = firrtl.wire : !firrtl.uint<1>
      %65 = firrtl.wire : !firrtl.uint<1>
      %66 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %0, %xbar_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_in_req_valid, %io_rw_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_in_req_bits_addr, %io_rw_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %xbar_io_in_req_bits_size, %io_rw_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %xbar_io_in_req_bits_cmd, %io_rw_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %xbar_io_in_req_bits_wmask, %io_rw_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %xbar_io_in_req_bits_wdata, %io_rw_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_in_resp_ready, %io_rw_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %1, %xbar_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %2, %xbar_io_in_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %3, %xbar_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_0_req_ready, %4 : !firrtl.uint<1>
      firrtl.strictconnect %5, %xbar_io_out_0_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %6, %xbar_io_out_0_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %7, %xbar_io_out_0_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %8, %xbar_io_out_0_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %9, %xbar_io_out_0_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %10, %xbar_io_out_0_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_0_resp_valid, %11 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_0_resp_bits_rdata, %12 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_1_req_ready, %13 : !firrtl.uint<1>
      firrtl.strictconnect %14, %xbar_io_out_1_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %15, %xbar_io_out_1_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %16, %xbar_io_out_1_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %17, %xbar_io_out_1_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %18, %xbar_io_out_1_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %19, %xbar_io_out_1_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_1_resp_valid, %20 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_1_resp_bits_rdata, %21 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_2_req_ready, %22 : !firrtl.uint<1>
      firrtl.strictconnect %23, %xbar_io_out_2_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %24, %xbar_io_out_2_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %25, %xbar_io_out_2_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %26, %xbar_io_out_2_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %27, %xbar_io_out_2_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %28, %xbar_io_out_2_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_2_resp_valid, %29 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_2_resp_bits_rdata, %30 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_3_req_ready, %31 : !firrtl.uint<1>
      firrtl.strictconnect %32, %xbar_io_out_3_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %33, %xbar_io_out_3_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %34, %xbar_io_out_3_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %35, %xbar_io_out_3_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %36, %xbar_io_out_3_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %37, %xbar_io_out_3_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_3_resp_valid, %38 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_3_resp_bits_rdata, %39 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_4_req_ready, %40 : !firrtl.uint<1>
      firrtl.strictconnect %41, %xbar_io_out_4_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %42, %xbar_io_out_4_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %43, %xbar_io_out_4_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %44, %xbar_io_out_4_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %45, %xbar_io_out_4_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %46, %xbar_io_out_4_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_4_resp_valid, %47 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_4_resp_bits_rdata, %48 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_5_req_ready, %49 : !firrtl.uint<1>
      firrtl.strictconnect %50, %xbar_io_out_5_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %51, %xbar_io_out_5_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %52, %xbar_io_out_5_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %53, %xbar_io_out_5_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %54, %xbar_io_out_5_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %55, %xbar_io_out_5_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_5_resp_valid, %56 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_5_resp_bits_rdata, %57 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_io_out_6_req_ready, %58 : !firrtl.uint<1>
      firrtl.strictconnect %59, %xbar_io_out_6_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %60, %xbar_io_out_6_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %61, %xbar_io_out_6_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %62, %xbar_io_out_6_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %63, %xbar_io_out_6_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %64, %xbar_io_out_6_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_6_resp_valid, %65 : !firrtl.uint<1>
      firrtl.strictconnect %xbar_io_out_6_resp_bits_rdata, %66 : !firrtl.uint<64>
      firrtl.strictconnect %xbar_clock, %clock : !firrtl.clock
      firrtl.strictconnect %xbar_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %io_rw_req_ready_0, %0 : !firrtl.uint<1>
      firrtl.strictconnect %io_rw_resp_valid_1, %1 : !firrtl.uint<1>
      firrtl.strictconnect %io_rw_resp_bits_cmd_2, %2 : !firrtl.uint<4>
      firrtl.strictconnect %io_rw_resp_bits_rdata_3, %3 : !firrtl.uint<64>
      %uart_clock, %uart_reset, %uart_io_in_aw_ready, %uart_io_in_aw_valid, %uart_io_in_aw_bits_addr, %uart_io_in_w_ready, %uart_io_in_w_valid, %uart_io_in_w_bits_data, %uart_io_in_w_bits_strb, %uart_io_in_b_ready, %uart_io_in_b_valid, %uart_io_in_ar_ready, %uart_io_in_ar_valid, %uart_io_in_ar_bits_addr, %uart_io_in_r_ready, %uart_io_in_r_valid, %uart_io_in_r_bits_data, %uart_io_extra_out_valid, %uart_io_extra_out_ch, %uart_io_extra_in_valid, %uart_io_extra_in_ch = firrtl.instance uart @AXI4UART(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, out io_extra_out_valid: !firrtl.uint<1>, out io_extra_out_ch: !firrtl.uint<8>, out io_extra_in_valid: !firrtl.uint<1>, in io_extra_in_ch: !firrtl.uint<8>)
      %67 = firrtl.wire : !firrtl.uint<1>
      %68 = firrtl.wire : !firrtl.uint<1>
      %69 = firrtl.wire : !firrtl.uint<32>
      %70 = firrtl.wire : !firrtl.uint<1>
      %71 = firrtl.wire : !firrtl.uint<1>
      %72 = firrtl.wire : !firrtl.uint<64>
      %73 = firrtl.wire : !firrtl.uint<8>
      %74 = firrtl.wire : !firrtl.uint<1>
      %75 = firrtl.wire : !firrtl.uint<1>
      %76 = firrtl.wire : !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<1>
      %78 = firrtl.wire : !firrtl.uint<32>
      %79 = firrtl.wire : !firrtl.uint<1>
      %80 = firrtl.wire : !firrtl.uint<1>
      %81 = firrtl.wire : !firrtl.uint<64>
      %82 = firrtl.wire : !firrtl.uint<1>
      %83 = firrtl.wire : !firrtl.uint<8>
      %84 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %67, %uart_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_aw_valid, %68 : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_aw_bits_addr, %69 : !firrtl.uint<32>
      firrtl.strictconnect %70, %uart_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_w_valid, %71 : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_w_bits_data, %72 : !firrtl.uint<64>
      firrtl.strictconnect %uart_io_in_w_bits_strb, %73 : !firrtl.uint<8>
      firrtl.strictconnect %uart_io_in_b_ready, %74 : !firrtl.uint<1>
      firrtl.strictconnect %75, %uart_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %76, %uart_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_ar_valid, %77 : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_ar_bits_addr, %78 : !firrtl.uint<32>
      firrtl.strictconnect %uart_io_in_r_ready, %79 : !firrtl.uint<1>
      firrtl.strictconnect %80, %uart_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %81, %uart_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %82, %uart_io_extra_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %83, %uart_io_extra_out_ch : !firrtl.uint<8>
      firrtl.strictconnect %84, %uart_io_extra_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_extra_in_ch, %io_uart_in_ch : !firrtl.uint<8>
      firrtl.strictconnect %uart_clock, %clock : !firrtl.clock
      firrtl.strictconnect %uart_reset, %reset : !firrtl.uint<1>
      %vga_clock, %vga_reset, %vga_io_in_fb_aw_ready, %vga_io_in_fb_aw_valid, %vga_io_in_fb_aw_bits_addr, %vga_io_in_fb_w_ready, %vga_io_in_fb_w_valid, %vga_io_in_fb_w_bits_data, %vga_io_in_fb_w_bits_strb, %vga_io_in_fb_b_ready, %vga_io_in_fb_b_valid, %vga_io_in_fb_ar_valid, %vga_io_in_fb_r_ready, %vga_io_in_fb_r_valid, %vga_io_in_ctrl_aw_ready, %vga_io_in_ctrl_aw_valid, %vga_io_in_ctrl_w_ready, %vga_io_in_ctrl_w_valid, %vga_io_in_ctrl_b_ready, %vga_io_in_ctrl_b_valid, %vga_io_in_ctrl_ar_ready, %vga_io_in_ctrl_ar_valid, %vga_io_in_ctrl_ar_bits_addr, %vga_io_in_ctrl_r_ready, %vga_io_in_ctrl_r_valid, %vga_io_in_ctrl_r_bits_data = firrtl.instance vga @AXI4VGA(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_fb_aw_ready: !firrtl.uint<1>, in io_in_fb_aw_valid: !firrtl.uint<1>, in io_in_fb_aw_bits_addr: !firrtl.uint<32>, out io_in_fb_w_ready: !firrtl.uint<1>, in io_in_fb_w_valid: !firrtl.uint<1>, in io_in_fb_w_bits_data: !firrtl.uint<64>, in io_in_fb_w_bits_strb: !firrtl.uint<8>, in io_in_fb_b_ready: !firrtl.uint<1>, out io_in_fb_b_valid: !firrtl.uint<1>, in io_in_fb_ar_valid: !firrtl.uint<1>, in io_in_fb_r_ready: !firrtl.uint<1>, out io_in_fb_r_valid: !firrtl.uint<1>, out io_in_ctrl_aw_ready: !firrtl.uint<1>, in io_in_ctrl_aw_valid: !firrtl.uint<1>, out io_in_ctrl_w_ready: !firrtl.uint<1>, in io_in_ctrl_w_valid: !firrtl.uint<1>, in io_in_ctrl_b_ready: !firrtl.uint<1>, out io_in_ctrl_b_valid: !firrtl.uint<1>, out io_in_ctrl_ar_ready: !firrtl.uint<1>, in io_in_ctrl_ar_valid: !firrtl.uint<1>, in io_in_ctrl_ar_bits_addr: !firrtl.uint<32>, in io_in_ctrl_r_ready: !firrtl.uint<1>, out io_in_ctrl_r_valid: !firrtl.uint<1>, out io_in_ctrl_r_bits_data: !firrtl.uint<64>)
      %85 = firrtl.wire : !firrtl.uint<1>
      %86 = firrtl.wire : !firrtl.uint<1>
      %87 = firrtl.wire : !firrtl.uint<32>
      %88 = firrtl.wire : !firrtl.uint<1>
      %89 = firrtl.wire : !firrtl.uint<1>
      %90 = firrtl.wire : !firrtl.uint<64>
      %91 = firrtl.wire : !firrtl.uint<8>
      %92 = firrtl.wire : !firrtl.uint<1>
      %93 = firrtl.wire : !firrtl.uint<1>
      %94 = firrtl.wire : !firrtl.uint<1>
      %95 = firrtl.wire : !firrtl.uint<1>
      %96 = firrtl.wire : !firrtl.uint<1>
      %97 = firrtl.wire : !firrtl.uint<1>
      %98 = firrtl.wire : !firrtl.uint<1>
      %99 = firrtl.wire : !firrtl.uint<1>
      %100 = firrtl.wire : !firrtl.uint<1>
      %101 = firrtl.wire : !firrtl.uint<1>
      %102 = firrtl.wire : !firrtl.uint<1>
      %103 = firrtl.wire : !firrtl.uint<1>
      %104 = firrtl.wire : !firrtl.uint<1>
      %105 = firrtl.wire : !firrtl.uint<32>
      %106 = firrtl.wire : !firrtl.uint<1>
      %107 = firrtl.wire : !firrtl.uint<1>
      %108 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %85, %vga_io_in_fb_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_aw_valid, %86 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_aw_bits_addr, %87 : !firrtl.uint<32>
      firrtl.strictconnect %88, %vga_io_in_fb_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_w_valid, %89 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_w_bits_data, %90 : !firrtl.uint<64>
      firrtl.strictconnect %vga_io_in_fb_w_bits_strb, %91 : !firrtl.uint<8>
      firrtl.strictconnect %vga_io_in_fb_b_ready, %92 : !firrtl.uint<1>
      firrtl.strictconnect %93, %vga_io_in_fb_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_ar_valid, %94 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_r_ready, %95 : !firrtl.uint<1>
      firrtl.strictconnect %96, %vga_io_in_fb_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %97, %vga_io_in_ctrl_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_aw_valid, %98 : !firrtl.uint<1>
      firrtl.strictconnect %99, %vga_io_in_ctrl_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_w_valid, %100 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_b_ready, %101 : !firrtl.uint<1>
      firrtl.strictconnect %102, %vga_io_in_ctrl_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %103, %vga_io_in_ctrl_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_ar_valid, %104 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_ar_bits_addr, %105 : !firrtl.uint<32>
      firrtl.strictconnect %vga_io_in_ctrl_r_ready, %106 : !firrtl.uint<1>
      firrtl.strictconnect %107, %vga_io_in_ctrl_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %108, %vga_io_in_ctrl_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %vga_clock, %clock : !firrtl.clock
      firrtl.strictconnect %vga_reset, %reset : !firrtl.uint<1>
      %flash_clock, %flash_reset, %flash_io_in_aw_ready, %flash_io_in_aw_valid, %flash_io_in_w_ready, %flash_io_in_w_valid, %flash_io_in_b_ready, %flash_io_in_b_valid, %flash_io_in_ar_ready, %flash_io_in_ar_valid, %flash_io_in_ar_bits_addr, %flash_io_in_r_ready, %flash_io_in_r_valid, %flash_io_in_r_bits_data = firrtl.instance flash @AXI4Flash(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>)
      %109 = firrtl.wire : !firrtl.uint<1>
      %110 = firrtl.wire : !firrtl.uint<1>
      %111 = firrtl.wire : !firrtl.uint<1>
      %112 = firrtl.wire : !firrtl.uint<1>
      %113 = firrtl.wire : !firrtl.uint<1>
      %114 = firrtl.wire : !firrtl.uint<1>
      %115 = firrtl.wire : !firrtl.uint<1>
      %116 = firrtl.wire : !firrtl.uint<1>
      %117 = firrtl.wire : !firrtl.uint<32>
      %118 = firrtl.wire : !firrtl.uint<1>
      %119 = firrtl.wire : !firrtl.uint<1>
      %120 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %109, %flash_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_aw_valid, %110 : !firrtl.uint<1>
      firrtl.strictconnect %111, %flash_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_w_valid, %112 : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_b_ready, %113 : !firrtl.uint<1>
      firrtl.strictconnect %114, %flash_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %115, %flash_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_ar_valid, %116 : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_ar_bits_addr, %117 : !firrtl.uint<32>
      firrtl.strictconnect %flash_io_in_r_ready, %118 : !firrtl.uint<1>
      firrtl.strictconnect %119, %flash_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %120, %flash_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %flash_clock, %clock : !firrtl.clock
      firrtl.strictconnect %flash_reset, %reset : !firrtl.uint<1>
      %sd_clock, %sd_reset, %sd_io_in_aw_ready, %sd_io_in_aw_valid, %sd_io_in_aw_bits_addr, %sd_io_in_w_ready, %sd_io_in_w_valid, %sd_io_in_w_bits_data, %sd_io_in_w_bits_strb, %sd_io_in_b_ready, %sd_io_in_b_valid, %sd_io_in_ar_ready, %sd_io_in_ar_valid, %sd_io_in_ar_bits_addr, %sd_io_in_r_ready, %sd_io_in_r_valid, %sd_io_in_r_bits_data = firrtl.instance sd @AXI4DummySD(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>)
      %121 = firrtl.wire : !firrtl.uint<1>
      %122 = firrtl.wire : !firrtl.uint<1>
      %123 = firrtl.wire : !firrtl.uint<32>
      %124 = firrtl.wire : !firrtl.uint<1>
      %125 = firrtl.wire : !firrtl.uint<1>
      %126 = firrtl.wire : !firrtl.uint<64>
      %127 = firrtl.wire : !firrtl.uint<8>
      %128 = firrtl.wire : !firrtl.uint<1>
      %129 = firrtl.wire : !firrtl.uint<1>
      %130 = firrtl.wire : !firrtl.uint<1>
      %131 = firrtl.wire : !firrtl.uint<1>
      %132 = firrtl.wire : !firrtl.uint<32>
      %133 = firrtl.wire : !firrtl.uint<1>
      %134 = firrtl.wire : !firrtl.uint<1>
      %135 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %121, %sd_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_aw_valid, %122 : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_aw_bits_addr, %123 : !firrtl.uint<32>
      firrtl.strictconnect %124, %sd_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_w_valid, %125 : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_w_bits_data, %126 : !firrtl.uint<64>
      firrtl.strictconnect %sd_io_in_w_bits_strb, %127 : !firrtl.uint<8>
      firrtl.strictconnect %sd_io_in_b_ready, %128 : !firrtl.uint<1>
      firrtl.strictconnect %129, %sd_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %130, %sd_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_ar_valid, %131 : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_ar_bits_addr, %132 : !firrtl.uint<32>
      firrtl.strictconnect %sd_io_in_r_ready, %133 : !firrtl.uint<1>
      firrtl.strictconnect %134, %sd_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %135, %sd_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %sd_clock, %clock : !firrtl.clock
      firrtl.strictconnect %sd_reset, %reset : !firrtl.uint<1>
      %meipGen_clock, %meipGen_reset, %meipGen_io_in_aw_ready, %meipGen_io_in_aw_valid, %meipGen_io_in_aw_bits_addr, %meipGen_io_in_w_ready, %meipGen_io_in_w_valid, %meipGen_io_in_w_bits_data, %meipGen_io_in_w_bits_strb, %meipGen_io_in_b_ready, %meipGen_io_in_b_valid, %meipGen_io_in_ar_ready, %meipGen_io_in_ar_valid, %meipGen_io_in_r_ready, %meipGen_io_in_r_valid, %meipGen_io_in_r_bits_data, %meipGen_io_extra_meip = firrtl.instance meipGen @AXI4MeipGen(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, out io_extra_meip: !firrtl.uint<1>)
      %136 = firrtl.wire : !firrtl.uint<1>
      %137 = firrtl.wire : !firrtl.uint<1>
      %138 = firrtl.wire : !firrtl.uint<32>
      %139 = firrtl.wire : !firrtl.uint<1>
      %140 = firrtl.wire : !firrtl.uint<1>
      %141 = firrtl.wire : !firrtl.uint<64>
      %142 = firrtl.wire : !firrtl.uint<8>
      %143 = firrtl.wire : !firrtl.uint<1>
      %144 = firrtl.wire : !firrtl.uint<1>
      %145 = firrtl.wire : !firrtl.uint<1>
      %146 = firrtl.wire : !firrtl.uint<1>
      %147 = firrtl.wire : !firrtl.uint<1>
      %148 = firrtl.wire : !firrtl.uint<1>
      %149 = firrtl.wire : !firrtl.uint<64>
      %150 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %136, %meipGen_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_aw_valid, %137 : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_aw_bits_addr, %138 : !firrtl.uint<32>
      firrtl.strictconnect %139, %meipGen_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_w_valid, %140 : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_w_bits_data, %141 : !firrtl.uint<64>
      firrtl.strictconnect %meipGen_io_in_w_bits_strb, %142 : !firrtl.uint<8>
      firrtl.strictconnect %meipGen_io_in_b_ready, %143 : !firrtl.uint<1>
      firrtl.strictconnect %144, %meipGen_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %145, %meipGen_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_ar_valid, %146 : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_r_ready, %147 : !firrtl.uint<1>
      firrtl.strictconnect %148, %meipGen_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %149, %meipGen_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %150, %meipGen_io_extra_meip : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_clock, %clock : !firrtl.clock
      firrtl.strictconnect %meipGen_reset, %reset : !firrtl.uint<1>
      %dma_clock, %dma_reset, %dma_io_in_aw_ready, %dma_io_in_aw_valid, %dma_io_in_aw_bits_addr, %dma_io_in_w_ready, %dma_io_in_w_valid, %dma_io_in_w_bits_data, %dma_io_in_w_bits_strb, %dma_io_in_b_ready, %dma_io_in_b_valid, %dma_io_in_ar_ready, %dma_io_in_ar_valid, %dma_io_in_ar_bits_addr, %dma_io_in_r_ready, %dma_io_in_r_valid, %dma_io_in_r_bits_data, %dma_io_extra_dma_aw_ready, %dma_io_extra_dma_aw_valid, %dma_io_extra_dma_aw_bits_addr, %dma_io_extra_dma_w_ready, %dma_io_extra_dma_w_valid, %dma_io_extra_dma_w_bits_data, %dma_io_extra_dma_w_bits_strb, %dma_io_extra_dma_b_ready, %dma_io_extra_dma_b_valid, %dma_io_extra_dma_ar_ready, %dma_io_extra_dma_ar_valid, %dma_io_extra_dma_ar_bits_addr, %dma_io_extra_dma_r_ready, %dma_io_extra_dma_r_valid, %dma_io_extra_dma_r_bits_data = firrtl.instance dma @AXI4DMA(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_strb: !firrtl.uint<8>, in io_in_b_ready: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_r_ready: !firrtl.uint<1>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, in io_extra_dma_aw_ready: !firrtl.uint<1>, out io_extra_dma_aw_valid: !firrtl.uint<1>, out io_extra_dma_aw_bits_addr: !firrtl.uint<32>, in io_extra_dma_w_ready: !firrtl.uint<1>, out io_extra_dma_w_valid: !firrtl.uint<1>, out io_extra_dma_w_bits_data: !firrtl.uint<64>, out io_extra_dma_w_bits_strb: !firrtl.uint<8>, out io_extra_dma_b_ready: !firrtl.uint<1>, in io_extra_dma_b_valid: !firrtl.uint<1>, in io_extra_dma_ar_ready: !firrtl.uint<1>, out io_extra_dma_ar_valid: !firrtl.uint<1>, out io_extra_dma_ar_bits_addr: !firrtl.uint<32>, out io_extra_dma_r_ready: !firrtl.uint<1>, in io_extra_dma_r_valid: !firrtl.uint<1>, in io_extra_dma_r_bits_data: !firrtl.uint<64>)
      %151 = firrtl.wire : !firrtl.uint<1>
      %152 = firrtl.wire : !firrtl.uint<1>
      %153 = firrtl.wire : !firrtl.uint<32>
      %154 = firrtl.wire : !firrtl.uint<1>
      %155 = firrtl.wire : !firrtl.uint<1>
      %156 = firrtl.wire : !firrtl.uint<64>
      %157 = firrtl.wire : !firrtl.uint<8>
      %158 = firrtl.wire : !firrtl.uint<1>
      %159 = firrtl.wire : !firrtl.uint<1>
      %160 = firrtl.wire : !firrtl.uint<1>
      %161 = firrtl.wire : !firrtl.uint<1>
      %162 = firrtl.wire : !firrtl.uint<32>
      %163 = firrtl.wire : !firrtl.uint<1>
      %164 = firrtl.wire : !firrtl.uint<1>
      %165 = firrtl.wire : !firrtl.uint<64>
      %166 = firrtl.wire : !firrtl.uint<1>
      %167 = firrtl.wire : !firrtl.uint<32>
      %168 = firrtl.wire : !firrtl.uint<1>
      %169 = firrtl.wire : !firrtl.uint<64>
      %170 = firrtl.wire : !firrtl.uint<8>
      %171 = firrtl.wire : !firrtl.uint<1>
      %172 = firrtl.wire : !firrtl.uint<1>
      %173 = firrtl.wire : !firrtl.uint<32>
      %174 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %151, %dma_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_aw_valid, %152 : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_aw_bits_addr, %153 : !firrtl.uint<32>
      firrtl.strictconnect %154, %dma_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_w_valid, %155 : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_w_bits_data, %156 : !firrtl.uint<64>
      firrtl.strictconnect %dma_io_in_w_bits_strb, %157 : !firrtl.uint<8>
      firrtl.strictconnect %dma_io_in_b_ready, %158 : !firrtl.uint<1>
      firrtl.strictconnect %159, %dma_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %160, %dma_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_ar_valid, %161 : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_ar_bits_addr, %162 : !firrtl.uint<32>
      firrtl.strictconnect %dma_io_in_r_ready, %163 : !firrtl.uint<1>
      firrtl.strictconnect %164, %dma_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %165, %dma_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %dma_io_extra_dma_aw_ready, %io_dma_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %166, %dma_io_extra_dma_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %167, %dma_io_extra_dma_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %dma_io_extra_dma_w_ready, %io_dma_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %168, %dma_io_extra_dma_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %169, %dma_io_extra_dma_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %170, %dma_io_extra_dma_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %171, %dma_io_extra_dma_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_extra_dma_b_valid, %io_dma_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_extra_dma_ar_ready, %io_dma_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %172, %dma_io_extra_dma_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %173, %dma_io_extra_dma_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %174, %dma_io_extra_dma_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_extra_dma_r_valid, %io_dma_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_extra_dma_r_bits_data, %io_dma_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %dma_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dma_reset, %reset : !firrtl.uint<1>
      %uart_io_in_bridge_clock, %uart_io_in_bridge_reset, %uart_io_in_bridge_io_in_req_ready, %uart_io_in_bridge_io_in_req_valid, %uart_io_in_bridge_io_in_req_bits_addr, %uart_io_in_bridge_io_in_req_bits_cmd, %uart_io_in_bridge_io_in_req_bits_wmask, %uart_io_in_bridge_io_in_req_bits_wdata, %uart_io_in_bridge_io_in_resp_ready, %uart_io_in_bridge_io_in_resp_valid, %uart_io_in_bridge_io_in_resp_bits_rdata, %uart_io_in_bridge_io_out_aw_ready, %uart_io_in_bridge_io_out_aw_valid, %uart_io_in_bridge_io_out_aw_bits_addr, %uart_io_in_bridge_io_out_w_ready, %uart_io_in_bridge_io_out_w_valid, %uart_io_in_bridge_io_out_w_bits_data, %uart_io_in_bridge_io_out_w_bits_strb, %uart_io_in_bridge_io_out_b_ready, %uart_io_in_bridge_io_out_b_valid, %uart_io_in_bridge_io_out_ar_ready, %uart_io_in_bridge_io_out_ar_valid, %uart_io_in_bridge_io_out_ar_bits_addr, %uart_io_in_bridge_io_out_r_ready, %uart_io_in_bridge_io_out_r_valid, %uart_io_in_bridge_io_out_r_bits_data = firrtl.instance uart_io_in_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %175 = firrtl.wire : !firrtl.uint<1>
      %176 = firrtl.wire : !firrtl.uint<1>
      %177 = firrtl.wire : !firrtl.uint<32>
      %178 = firrtl.wire : !firrtl.uint<4>
      %179 = firrtl.wire : !firrtl.uint<8>
      %180 = firrtl.wire : !firrtl.uint<64>
      %181 = firrtl.wire : !firrtl.uint<1>
      %182 = firrtl.wire : !firrtl.uint<1>
      %183 = firrtl.wire : !firrtl.uint<64>
      %184 = firrtl.wire : !firrtl.uint<1>
      %185 = firrtl.wire : !firrtl.uint<1>
      %186 = firrtl.wire : !firrtl.uint<32>
      %187 = firrtl.wire : !firrtl.uint<1>
      %188 = firrtl.wire : !firrtl.uint<1>
      %189 = firrtl.wire : !firrtl.uint<64>
      %190 = firrtl.wire : !firrtl.uint<8>
      %191 = firrtl.wire : !firrtl.uint<1>
      %192 = firrtl.wire : !firrtl.uint<1>
      %193 = firrtl.wire : !firrtl.uint<1>
      %194 = firrtl.wire : !firrtl.uint<1>
      %195 = firrtl.wire : !firrtl.uint<32>
      %196 = firrtl.wire : !firrtl.uint<1>
      %197 = firrtl.wire : !firrtl.uint<1>
      %198 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %175, %uart_io_in_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_bridge_io_in_req_valid, %176 : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_bridge_io_in_req_bits_addr, %177 : !firrtl.uint<32>
      firrtl.strictconnect %uart_io_in_bridge_io_in_req_bits_cmd, %178 : !firrtl.uint<4>
      firrtl.strictconnect %uart_io_in_bridge_io_in_req_bits_wmask, %179 : !firrtl.uint<8>
      firrtl.strictconnect %uart_io_in_bridge_io_in_req_bits_wdata, %180 : !firrtl.uint<64>
      firrtl.strictconnect %uart_io_in_bridge_io_in_resp_ready, %181 : !firrtl.uint<1>
      firrtl.strictconnect %182, %uart_io_in_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %183, %uart_io_in_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %uart_io_in_bridge_io_out_aw_ready, %184 : !firrtl.uint<1>
      firrtl.strictconnect %185, %uart_io_in_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %186, %uart_io_in_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %uart_io_in_bridge_io_out_w_ready, %187 : !firrtl.uint<1>
      firrtl.strictconnect %188, %uart_io_in_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %189, %uart_io_in_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %190, %uart_io_in_bridge_io_out_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %191, %uart_io_in_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_bridge_io_out_b_valid, %192 : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_bridge_io_out_ar_ready, %193 : !firrtl.uint<1>
      firrtl.strictconnect %194, %uart_io_in_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %195, %uart_io_in_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %196, %uart_io_in_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_bridge_io_out_r_valid, %197 : !firrtl.uint<1>
      firrtl.strictconnect %uart_io_in_bridge_io_out_r_bits_data, %198 : !firrtl.uint<64>
      firrtl.strictconnect %uart_io_in_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %uart_io_in_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %4, %175 : !firrtl.uint<1>
      firrtl.strictconnect %176, %5 : !firrtl.uint<1>
      firrtl.strictconnect %177, %6 : !firrtl.uint<32>
      firrtl.strictconnect %178, %7 : !firrtl.uint<4>
      firrtl.strictconnect %179, %8 : !firrtl.uint<8>
      firrtl.strictconnect %180, %9 : !firrtl.uint<64>
      firrtl.strictconnect %181, %10 : !firrtl.uint<1>
      firrtl.strictconnect %11, %182 : !firrtl.uint<1>
      firrtl.strictconnect %12, %183 : !firrtl.uint<64>
      firrtl.strictconnect %184, %67 : !firrtl.uint<1>
      firrtl.strictconnect %68, %185 : !firrtl.uint<1>
      firrtl.strictconnect %69, %186 : !firrtl.uint<32>
      firrtl.strictconnect %187, %70 : !firrtl.uint<1>
      firrtl.strictconnect %71, %188 : !firrtl.uint<1>
      firrtl.strictconnect %72, %189 : !firrtl.uint<64>
      firrtl.strictconnect %73, %190 : !firrtl.uint<8>
      firrtl.strictconnect %74, %191 : !firrtl.uint<1>
      firrtl.strictconnect %192, %75 : !firrtl.uint<1>
      firrtl.strictconnect %193, %76 : !firrtl.uint<1>
      firrtl.strictconnect %77, %194 : !firrtl.uint<1>
      firrtl.strictconnect %78, %195 : !firrtl.uint<32>
      firrtl.strictconnect %79, %196 : !firrtl.uint<1>
      firrtl.strictconnect %197, %80 : !firrtl.uint<1>
      firrtl.strictconnect %198, %81 : !firrtl.uint<64>
      %vga_io_in_fb_bridge_clock, %vga_io_in_fb_bridge_reset, %vga_io_in_fb_bridge_io_in_req_ready, %vga_io_in_fb_bridge_io_in_req_valid, %vga_io_in_fb_bridge_io_in_req_bits_addr, %vga_io_in_fb_bridge_io_in_req_bits_cmd, %vga_io_in_fb_bridge_io_in_req_bits_wmask, %vga_io_in_fb_bridge_io_in_req_bits_wdata, %vga_io_in_fb_bridge_io_in_resp_ready, %vga_io_in_fb_bridge_io_in_resp_valid, %vga_io_in_fb_bridge_io_in_resp_bits_rdata, %vga_io_in_fb_bridge_io_out_aw_ready, %vga_io_in_fb_bridge_io_out_aw_valid, %vga_io_in_fb_bridge_io_out_aw_bits_addr, %vga_io_in_fb_bridge_io_out_w_ready, %vga_io_in_fb_bridge_io_out_w_valid, %vga_io_in_fb_bridge_io_out_w_bits_data, %vga_io_in_fb_bridge_io_out_w_bits_strb, %vga_io_in_fb_bridge_io_out_b_ready, %vga_io_in_fb_bridge_io_out_b_valid, %vga_io_in_fb_bridge_io_out_ar_ready, %vga_io_in_fb_bridge_io_out_ar_valid, %vga_io_in_fb_bridge_io_out_ar_bits_addr, %vga_io_in_fb_bridge_io_out_r_ready, %vga_io_in_fb_bridge_io_out_r_valid, %vga_io_in_fb_bridge_io_out_r_bits_data = firrtl.instance vga_io_in_fb_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %199 = firrtl.wire : !firrtl.uint<1>
      %200 = firrtl.wire : !firrtl.uint<1>
      %201 = firrtl.wire : !firrtl.uint<32>
      %202 = firrtl.wire : !firrtl.uint<4>
      %203 = firrtl.wire : !firrtl.uint<8>
      %204 = firrtl.wire : !firrtl.uint<64>
      %205 = firrtl.wire : !firrtl.uint<1>
      %206 = firrtl.wire : !firrtl.uint<1>
      %207 = firrtl.wire : !firrtl.uint<64>
      %208 = firrtl.wire : !firrtl.uint<1>
      %209 = firrtl.wire : !firrtl.uint<1>
      %210 = firrtl.wire : !firrtl.uint<32>
      %211 = firrtl.wire : !firrtl.uint<1>
      %212 = firrtl.wire : !firrtl.uint<1>
      %213 = firrtl.wire : !firrtl.uint<64>
      %214 = firrtl.wire : !firrtl.uint<8>
      %215 = firrtl.wire : !firrtl.uint<1>
      %216 = firrtl.wire : !firrtl.uint<1>
      %217 = firrtl.wire : !firrtl.uint<1>
      %218 = firrtl.wire : !firrtl.uint<1>
      %219 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %199, %vga_io_in_fb_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_in_req_valid, %200 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_in_req_bits_addr, %201 : !firrtl.uint<32>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_in_req_bits_cmd, %202 : !firrtl.uint<4>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_in_req_bits_wmask, %203 : !firrtl.uint<8>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_in_req_bits_wdata, %204 : !firrtl.uint<64>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_in_resp_ready, %205 : !firrtl.uint<1>
      firrtl.strictconnect %206, %vga_io_in_fb_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %207, %vga_io_in_fb_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_out_aw_ready, %208 : !firrtl.uint<1>
      firrtl.strictconnect %209, %vga_io_in_fb_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %210, %vga_io_in_fb_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_out_w_ready, %211 : !firrtl.uint<1>
      firrtl.strictconnect %212, %vga_io_in_fb_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %213, %vga_io_in_fb_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %214, %vga_io_in_fb_bridge_io_out_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %215, %vga_io_in_fb_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_out_b_valid, %216 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_out_ar_ready, %c1_ui1 : !firrtl.uint<1>
      firrtl.strictconnect %217, %vga_io_in_fb_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %218, %vga_io_in_fb_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_out_r_valid, %219 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_fb_bridge_io_out_r_bits_data, %c0_ui64 : !firrtl.uint<64>
      firrtl.strictconnect %vga_io_in_fb_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %vga_io_in_fb_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %13, %199 : !firrtl.uint<1>
      firrtl.strictconnect %200, %14 : !firrtl.uint<1>
      firrtl.strictconnect %201, %15 : !firrtl.uint<32>
      firrtl.strictconnect %202, %16 : !firrtl.uint<4>
      firrtl.strictconnect %203, %17 : !firrtl.uint<8>
      firrtl.strictconnect %204, %18 : !firrtl.uint<64>
      firrtl.strictconnect %205, %19 : !firrtl.uint<1>
      firrtl.strictconnect %20, %206 : !firrtl.uint<1>
      firrtl.strictconnect %21, %207 : !firrtl.uint<64>
      firrtl.strictconnect %208, %85 : !firrtl.uint<1>
      firrtl.strictconnect %86, %209 : !firrtl.uint<1>
      firrtl.strictconnect %87, %210 : !firrtl.uint<32>
      firrtl.strictconnect %211, %88 : !firrtl.uint<1>
      firrtl.strictconnect %89, %212 : !firrtl.uint<1>
      firrtl.strictconnect %90, %213 : !firrtl.uint<64>
      firrtl.strictconnect %91, %214 : !firrtl.uint<8>
      firrtl.strictconnect %92, %215 : !firrtl.uint<1>
      firrtl.strictconnect %216, %93 : !firrtl.uint<1>
      firrtl.strictconnect %94, %217 : !firrtl.uint<1>
      firrtl.strictconnect %95, %218 : !firrtl.uint<1>
      firrtl.strictconnect %219, %96 : !firrtl.uint<1>
      %vga_io_in_ctrl_bridge_clock, %vga_io_in_ctrl_bridge_reset, %vga_io_in_ctrl_bridge_io_in_req_ready, %vga_io_in_ctrl_bridge_io_in_req_valid, %vga_io_in_ctrl_bridge_io_in_req_bits_addr, %vga_io_in_ctrl_bridge_io_in_req_bits_cmd, %vga_io_in_ctrl_bridge_io_in_req_bits_wmask, %vga_io_in_ctrl_bridge_io_in_req_bits_wdata, %vga_io_in_ctrl_bridge_io_in_resp_ready, %vga_io_in_ctrl_bridge_io_in_resp_valid, %vga_io_in_ctrl_bridge_io_in_resp_bits_rdata, %vga_io_in_ctrl_bridge_io_out_aw_ready, %vga_io_in_ctrl_bridge_io_out_aw_valid, %vga_io_in_ctrl_bridge_io_out_aw_bits_addr, %vga_io_in_ctrl_bridge_io_out_w_ready, %vga_io_in_ctrl_bridge_io_out_w_valid, %vga_io_in_ctrl_bridge_io_out_w_bits_data, %vga_io_in_ctrl_bridge_io_out_w_bits_strb, %vga_io_in_ctrl_bridge_io_out_b_ready, %vga_io_in_ctrl_bridge_io_out_b_valid, %vga_io_in_ctrl_bridge_io_out_ar_ready, %vga_io_in_ctrl_bridge_io_out_ar_valid, %vga_io_in_ctrl_bridge_io_out_ar_bits_addr, %vga_io_in_ctrl_bridge_io_out_r_ready, %vga_io_in_ctrl_bridge_io_out_r_valid, %vga_io_in_ctrl_bridge_io_out_r_bits_data = firrtl.instance vga_io_in_ctrl_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %220 = firrtl.wire : !firrtl.uint<1>
      %221 = firrtl.wire : !firrtl.uint<1>
      %222 = firrtl.wire : !firrtl.uint<32>
      %223 = firrtl.wire : !firrtl.uint<4>
      %224 = firrtl.wire : !firrtl.uint<8>
      %225 = firrtl.wire : !firrtl.uint<64>
      %226 = firrtl.wire : !firrtl.uint<1>
      %227 = firrtl.wire : !firrtl.uint<1>
      %228 = firrtl.wire : !firrtl.uint<64>
      %229 = firrtl.wire : !firrtl.uint<1>
      %230 = firrtl.wire : !firrtl.uint<1>
      %231 = firrtl.wire : !firrtl.uint<1>
      %232 = firrtl.wire : !firrtl.uint<1>
      %233 = firrtl.wire : !firrtl.uint<1>
      %234 = firrtl.wire : !firrtl.uint<1>
      %235 = firrtl.wire : !firrtl.uint<1>
      %236 = firrtl.wire : !firrtl.uint<1>
      %237 = firrtl.wire : !firrtl.uint<32>
      %238 = firrtl.wire : !firrtl.uint<1>
      %239 = firrtl.wire : !firrtl.uint<1>
      %240 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %220, %vga_io_in_ctrl_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_in_req_valid, %221 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_in_req_bits_addr, %222 : !firrtl.uint<32>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_in_req_bits_cmd, %223 : !firrtl.uint<4>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_in_req_bits_wmask, %224 : !firrtl.uint<8>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_in_req_bits_wdata, %225 : !firrtl.uint<64>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_in_resp_ready, %226 : !firrtl.uint<1>
      firrtl.strictconnect %227, %vga_io_in_ctrl_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %228, %vga_io_in_ctrl_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_out_aw_ready, %229 : !firrtl.uint<1>
      firrtl.strictconnect %230, %vga_io_in_ctrl_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_out_w_ready, %231 : !firrtl.uint<1>
      firrtl.strictconnect %232, %vga_io_in_ctrl_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %233, %vga_io_in_ctrl_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_out_b_valid, %234 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_out_ar_ready, %235 : !firrtl.uint<1>
      firrtl.strictconnect %236, %vga_io_in_ctrl_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %237, %vga_io_in_ctrl_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %238, %vga_io_in_ctrl_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_out_r_valid, %239 : !firrtl.uint<1>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_io_out_r_bits_data, %240 : !firrtl.uint<64>
      firrtl.strictconnect %vga_io_in_ctrl_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %vga_io_in_ctrl_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %22, %220 : !firrtl.uint<1>
      firrtl.strictconnect %221, %23 : !firrtl.uint<1>
      firrtl.strictconnect %222, %24 : !firrtl.uint<32>
      firrtl.strictconnect %223, %25 : !firrtl.uint<4>
      firrtl.strictconnect %224, %26 : !firrtl.uint<8>
      firrtl.strictconnect %225, %27 : !firrtl.uint<64>
      firrtl.strictconnect %226, %28 : !firrtl.uint<1>
      firrtl.strictconnect %29, %227 : !firrtl.uint<1>
      firrtl.strictconnect %30, %228 : !firrtl.uint<64>
      firrtl.strictconnect %229, %97 : !firrtl.uint<1>
      firrtl.strictconnect %98, %230 : !firrtl.uint<1>
      firrtl.strictconnect %231, %99 : !firrtl.uint<1>
      firrtl.strictconnect %100, %232 : !firrtl.uint<1>
      firrtl.strictconnect %101, %233 : !firrtl.uint<1>
      firrtl.strictconnect %234, %102 : !firrtl.uint<1>
      firrtl.strictconnect %235, %103 : !firrtl.uint<1>
      firrtl.strictconnect %104, %236 : !firrtl.uint<1>
      firrtl.strictconnect %105, %237 : !firrtl.uint<32>
      firrtl.strictconnect %106, %238 : !firrtl.uint<1>
      firrtl.strictconnect %239, %107 : !firrtl.uint<1>
      firrtl.strictconnect %240, %108 : !firrtl.uint<64>
      %flash_io_in_bridge_clock, %flash_io_in_bridge_reset, %flash_io_in_bridge_io_in_req_ready, %flash_io_in_bridge_io_in_req_valid, %flash_io_in_bridge_io_in_req_bits_addr, %flash_io_in_bridge_io_in_req_bits_cmd, %flash_io_in_bridge_io_in_req_bits_wmask, %flash_io_in_bridge_io_in_req_bits_wdata, %flash_io_in_bridge_io_in_resp_ready, %flash_io_in_bridge_io_in_resp_valid, %flash_io_in_bridge_io_in_resp_bits_rdata, %flash_io_in_bridge_io_out_aw_ready, %flash_io_in_bridge_io_out_aw_valid, %flash_io_in_bridge_io_out_aw_bits_addr, %flash_io_in_bridge_io_out_w_ready, %flash_io_in_bridge_io_out_w_valid, %flash_io_in_bridge_io_out_w_bits_data, %flash_io_in_bridge_io_out_w_bits_strb, %flash_io_in_bridge_io_out_b_ready, %flash_io_in_bridge_io_out_b_valid, %flash_io_in_bridge_io_out_ar_ready, %flash_io_in_bridge_io_out_ar_valid, %flash_io_in_bridge_io_out_ar_bits_addr, %flash_io_in_bridge_io_out_r_ready, %flash_io_in_bridge_io_out_r_valid, %flash_io_in_bridge_io_out_r_bits_data = firrtl.instance flash_io_in_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %241 = firrtl.wire : !firrtl.uint<1>
      %242 = firrtl.wire : !firrtl.uint<1>
      %243 = firrtl.wire : !firrtl.uint<32>
      %244 = firrtl.wire : !firrtl.uint<4>
      %245 = firrtl.wire : !firrtl.uint<8>
      %246 = firrtl.wire : !firrtl.uint<64>
      %247 = firrtl.wire : !firrtl.uint<1>
      %248 = firrtl.wire : !firrtl.uint<1>
      %249 = firrtl.wire : !firrtl.uint<64>
      %250 = firrtl.wire : !firrtl.uint<1>
      %251 = firrtl.wire : !firrtl.uint<1>
      %252 = firrtl.wire : !firrtl.uint<1>
      %253 = firrtl.wire : !firrtl.uint<1>
      %254 = firrtl.wire : !firrtl.uint<1>
      %255 = firrtl.wire : !firrtl.uint<1>
      %256 = firrtl.wire : !firrtl.uint<1>
      %257 = firrtl.wire : !firrtl.uint<1>
      %258 = firrtl.wire : !firrtl.uint<32>
      %259 = firrtl.wire : !firrtl.uint<1>
      %260 = firrtl.wire : !firrtl.uint<1>
      %261 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %241, %flash_io_in_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_bridge_io_in_req_valid, %242 : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_bridge_io_in_req_bits_addr, %243 : !firrtl.uint<32>
      firrtl.strictconnect %flash_io_in_bridge_io_in_req_bits_cmd, %244 : !firrtl.uint<4>
      firrtl.strictconnect %flash_io_in_bridge_io_in_req_bits_wmask, %245 : !firrtl.uint<8>
      firrtl.strictconnect %flash_io_in_bridge_io_in_req_bits_wdata, %246 : !firrtl.uint<64>
      firrtl.strictconnect %flash_io_in_bridge_io_in_resp_ready, %247 : !firrtl.uint<1>
      firrtl.strictconnect %248, %flash_io_in_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %249, %flash_io_in_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %flash_io_in_bridge_io_out_aw_ready, %250 : !firrtl.uint<1>
      firrtl.strictconnect %251, %flash_io_in_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_bridge_io_out_w_ready, %252 : !firrtl.uint<1>
      firrtl.strictconnect %253, %flash_io_in_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %254, %flash_io_in_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_bridge_io_out_b_valid, %255 : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_bridge_io_out_ar_ready, %256 : !firrtl.uint<1>
      firrtl.strictconnect %257, %flash_io_in_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %258, %flash_io_in_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %259, %flash_io_in_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_bridge_io_out_r_valid, %260 : !firrtl.uint<1>
      firrtl.strictconnect %flash_io_in_bridge_io_out_r_bits_data, %261 : !firrtl.uint<64>
      firrtl.strictconnect %flash_io_in_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %flash_io_in_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %31, %241 : !firrtl.uint<1>
      firrtl.strictconnect %242, %32 : !firrtl.uint<1>
      firrtl.strictconnect %243, %33 : !firrtl.uint<32>
      firrtl.strictconnect %244, %34 : !firrtl.uint<4>
      firrtl.strictconnect %245, %35 : !firrtl.uint<8>
      firrtl.strictconnect %246, %36 : !firrtl.uint<64>
      firrtl.strictconnect %247, %37 : !firrtl.uint<1>
      firrtl.strictconnect %38, %248 : !firrtl.uint<1>
      firrtl.strictconnect %39, %249 : !firrtl.uint<64>
      firrtl.strictconnect %250, %109 : !firrtl.uint<1>
      firrtl.strictconnect %110, %251 : !firrtl.uint<1>
      firrtl.strictconnect %252, %111 : !firrtl.uint<1>
      firrtl.strictconnect %112, %253 : !firrtl.uint<1>
      firrtl.strictconnect %113, %254 : !firrtl.uint<1>
      firrtl.strictconnect %255, %114 : !firrtl.uint<1>
      firrtl.strictconnect %256, %115 : !firrtl.uint<1>
      firrtl.strictconnect %116, %257 : !firrtl.uint<1>
      firrtl.strictconnect %117, %258 : !firrtl.uint<32>
      firrtl.strictconnect %118, %259 : !firrtl.uint<1>
      firrtl.strictconnect %260, %119 : !firrtl.uint<1>
      firrtl.strictconnect %261, %120 : !firrtl.uint<64>
      %sd_io_in_bridge_clock, %sd_io_in_bridge_reset, %sd_io_in_bridge_io_in_req_ready, %sd_io_in_bridge_io_in_req_valid, %sd_io_in_bridge_io_in_req_bits_addr, %sd_io_in_bridge_io_in_req_bits_cmd, %sd_io_in_bridge_io_in_req_bits_wmask, %sd_io_in_bridge_io_in_req_bits_wdata, %sd_io_in_bridge_io_in_resp_ready, %sd_io_in_bridge_io_in_resp_valid, %sd_io_in_bridge_io_in_resp_bits_rdata, %sd_io_in_bridge_io_out_aw_ready, %sd_io_in_bridge_io_out_aw_valid, %sd_io_in_bridge_io_out_aw_bits_addr, %sd_io_in_bridge_io_out_w_ready, %sd_io_in_bridge_io_out_w_valid, %sd_io_in_bridge_io_out_w_bits_data, %sd_io_in_bridge_io_out_w_bits_strb, %sd_io_in_bridge_io_out_b_ready, %sd_io_in_bridge_io_out_b_valid, %sd_io_in_bridge_io_out_ar_ready, %sd_io_in_bridge_io_out_ar_valid, %sd_io_in_bridge_io_out_ar_bits_addr, %sd_io_in_bridge_io_out_r_ready, %sd_io_in_bridge_io_out_r_valid, %sd_io_in_bridge_io_out_r_bits_data = firrtl.instance sd_io_in_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %262 = firrtl.wire : !firrtl.uint<1>
      %263 = firrtl.wire : !firrtl.uint<1>
      %264 = firrtl.wire : !firrtl.uint<32>
      %265 = firrtl.wire : !firrtl.uint<4>
      %266 = firrtl.wire : !firrtl.uint<8>
      %267 = firrtl.wire : !firrtl.uint<64>
      %268 = firrtl.wire : !firrtl.uint<1>
      %269 = firrtl.wire : !firrtl.uint<1>
      %270 = firrtl.wire : !firrtl.uint<64>
      %271 = firrtl.wire : !firrtl.uint<1>
      %272 = firrtl.wire : !firrtl.uint<1>
      %273 = firrtl.wire : !firrtl.uint<32>
      %274 = firrtl.wire : !firrtl.uint<1>
      %275 = firrtl.wire : !firrtl.uint<1>
      %276 = firrtl.wire : !firrtl.uint<64>
      %277 = firrtl.wire : !firrtl.uint<8>
      %278 = firrtl.wire : !firrtl.uint<1>
      %279 = firrtl.wire : !firrtl.uint<1>
      %280 = firrtl.wire : !firrtl.uint<1>
      %281 = firrtl.wire : !firrtl.uint<1>
      %282 = firrtl.wire : !firrtl.uint<32>
      %283 = firrtl.wire : !firrtl.uint<1>
      %284 = firrtl.wire : !firrtl.uint<1>
      %285 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %262, %sd_io_in_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_bridge_io_in_req_valid, %263 : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_bridge_io_in_req_bits_addr, %264 : !firrtl.uint<32>
      firrtl.strictconnect %sd_io_in_bridge_io_in_req_bits_cmd, %265 : !firrtl.uint<4>
      firrtl.strictconnect %sd_io_in_bridge_io_in_req_bits_wmask, %266 : !firrtl.uint<8>
      firrtl.strictconnect %sd_io_in_bridge_io_in_req_bits_wdata, %267 : !firrtl.uint<64>
      firrtl.strictconnect %sd_io_in_bridge_io_in_resp_ready, %268 : !firrtl.uint<1>
      firrtl.strictconnect %269, %sd_io_in_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %270, %sd_io_in_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %sd_io_in_bridge_io_out_aw_ready, %271 : !firrtl.uint<1>
      firrtl.strictconnect %272, %sd_io_in_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %273, %sd_io_in_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %sd_io_in_bridge_io_out_w_ready, %274 : !firrtl.uint<1>
      firrtl.strictconnect %275, %sd_io_in_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %276, %sd_io_in_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %277, %sd_io_in_bridge_io_out_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %278, %sd_io_in_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_bridge_io_out_b_valid, %279 : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_bridge_io_out_ar_ready, %280 : !firrtl.uint<1>
      firrtl.strictconnect %281, %sd_io_in_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %282, %sd_io_in_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %283, %sd_io_in_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_bridge_io_out_r_valid, %284 : !firrtl.uint<1>
      firrtl.strictconnect %sd_io_in_bridge_io_out_r_bits_data, %285 : !firrtl.uint<64>
      firrtl.strictconnect %sd_io_in_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %sd_io_in_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %40, %262 : !firrtl.uint<1>
      firrtl.strictconnect %263, %41 : !firrtl.uint<1>
      firrtl.strictconnect %264, %42 : !firrtl.uint<32>
      firrtl.strictconnect %265, %43 : !firrtl.uint<4>
      firrtl.strictconnect %266, %44 : !firrtl.uint<8>
      firrtl.strictconnect %267, %45 : !firrtl.uint<64>
      firrtl.strictconnect %268, %46 : !firrtl.uint<1>
      firrtl.strictconnect %47, %269 : !firrtl.uint<1>
      firrtl.strictconnect %48, %270 : !firrtl.uint<64>
      firrtl.strictconnect %271, %121 : !firrtl.uint<1>
      firrtl.strictconnect %122, %272 : !firrtl.uint<1>
      firrtl.strictconnect %123, %273 : !firrtl.uint<32>
      firrtl.strictconnect %274, %124 : !firrtl.uint<1>
      firrtl.strictconnect %125, %275 : !firrtl.uint<1>
      firrtl.strictconnect %126, %276 : !firrtl.uint<64>
      firrtl.strictconnect %127, %277 : !firrtl.uint<8>
      firrtl.strictconnect %128, %278 : !firrtl.uint<1>
      firrtl.strictconnect %279, %129 : !firrtl.uint<1>
      firrtl.strictconnect %280, %130 : !firrtl.uint<1>
      firrtl.strictconnect %131, %281 : !firrtl.uint<1>
      firrtl.strictconnect %132, %282 : !firrtl.uint<32>
      firrtl.strictconnect %133, %283 : !firrtl.uint<1>
      firrtl.strictconnect %284, %134 : !firrtl.uint<1>
      firrtl.strictconnect %285, %135 : !firrtl.uint<64>
      %meipGen_io_in_bridge_clock, %meipGen_io_in_bridge_reset, %meipGen_io_in_bridge_io_in_req_ready, %meipGen_io_in_bridge_io_in_req_valid, %meipGen_io_in_bridge_io_in_req_bits_addr, %meipGen_io_in_bridge_io_in_req_bits_cmd, %meipGen_io_in_bridge_io_in_req_bits_wmask, %meipGen_io_in_bridge_io_in_req_bits_wdata, %meipGen_io_in_bridge_io_in_resp_ready, %meipGen_io_in_bridge_io_in_resp_valid, %meipGen_io_in_bridge_io_in_resp_bits_rdata, %meipGen_io_in_bridge_io_out_aw_ready, %meipGen_io_in_bridge_io_out_aw_valid, %meipGen_io_in_bridge_io_out_aw_bits_addr, %meipGen_io_in_bridge_io_out_w_ready, %meipGen_io_in_bridge_io_out_w_valid, %meipGen_io_in_bridge_io_out_w_bits_data, %meipGen_io_in_bridge_io_out_w_bits_strb, %meipGen_io_in_bridge_io_out_b_ready, %meipGen_io_in_bridge_io_out_b_valid, %meipGen_io_in_bridge_io_out_ar_ready, %meipGen_io_in_bridge_io_out_ar_valid, %meipGen_io_in_bridge_io_out_ar_bits_addr, %meipGen_io_in_bridge_io_out_r_ready, %meipGen_io_in_bridge_io_out_r_valid, %meipGen_io_in_bridge_io_out_r_bits_data = firrtl.instance meipGen_io_in_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %286 = firrtl.wire : !firrtl.uint<1>
      %287 = firrtl.wire : !firrtl.uint<1>
      %288 = firrtl.wire : !firrtl.uint<32>
      %289 = firrtl.wire : !firrtl.uint<4>
      %290 = firrtl.wire : !firrtl.uint<8>
      %291 = firrtl.wire : !firrtl.uint<64>
      %292 = firrtl.wire : !firrtl.uint<1>
      %293 = firrtl.wire : !firrtl.uint<1>
      %294 = firrtl.wire : !firrtl.uint<64>
      %295 = firrtl.wire : !firrtl.uint<1>
      %296 = firrtl.wire : !firrtl.uint<1>
      %297 = firrtl.wire : !firrtl.uint<32>
      %298 = firrtl.wire : !firrtl.uint<1>
      %299 = firrtl.wire : !firrtl.uint<1>
      %300 = firrtl.wire : !firrtl.uint<64>
      %301 = firrtl.wire : !firrtl.uint<8>
      %302 = firrtl.wire : !firrtl.uint<1>
      %303 = firrtl.wire : !firrtl.uint<1>
      %304 = firrtl.wire : !firrtl.uint<1>
      %305 = firrtl.wire : !firrtl.uint<1>
      %306 = firrtl.wire : !firrtl.uint<1>
      %307 = firrtl.wire : !firrtl.uint<1>
      %308 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %286, %meipGen_io_in_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_bridge_io_in_req_valid, %287 : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_bridge_io_in_req_bits_addr, %288 : !firrtl.uint<32>
      firrtl.strictconnect %meipGen_io_in_bridge_io_in_req_bits_cmd, %289 : !firrtl.uint<4>
      firrtl.strictconnect %meipGen_io_in_bridge_io_in_req_bits_wmask, %290 : !firrtl.uint<8>
      firrtl.strictconnect %meipGen_io_in_bridge_io_in_req_bits_wdata, %291 : !firrtl.uint<64>
      firrtl.strictconnect %meipGen_io_in_bridge_io_in_resp_ready, %292 : !firrtl.uint<1>
      firrtl.strictconnect %293, %meipGen_io_in_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %294, %meipGen_io_in_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %meipGen_io_in_bridge_io_out_aw_ready, %295 : !firrtl.uint<1>
      firrtl.strictconnect %296, %meipGen_io_in_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %297, %meipGen_io_in_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %meipGen_io_in_bridge_io_out_w_ready, %298 : !firrtl.uint<1>
      firrtl.strictconnect %299, %meipGen_io_in_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %300, %meipGen_io_in_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %301, %meipGen_io_in_bridge_io_out_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %302, %meipGen_io_in_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_bridge_io_out_b_valid, %303 : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_bridge_io_out_ar_ready, %304 : !firrtl.uint<1>
      firrtl.strictconnect %305, %meipGen_io_in_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %306, %meipGen_io_in_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_bridge_io_out_r_valid, %307 : !firrtl.uint<1>
      firrtl.strictconnect %meipGen_io_in_bridge_io_out_r_bits_data, %308 : !firrtl.uint<64>
      firrtl.strictconnect %meipGen_io_in_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %meipGen_io_in_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %49, %286 : !firrtl.uint<1>
      firrtl.strictconnect %287, %50 : !firrtl.uint<1>
      firrtl.strictconnect %288, %51 : !firrtl.uint<32>
      firrtl.strictconnect %289, %52 : !firrtl.uint<4>
      firrtl.strictconnect %290, %53 : !firrtl.uint<8>
      firrtl.strictconnect %291, %54 : !firrtl.uint<64>
      firrtl.strictconnect %292, %55 : !firrtl.uint<1>
      firrtl.strictconnect %56, %293 : !firrtl.uint<1>
      firrtl.strictconnect %57, %294 : !firrtl.uint<64>
      firrtl.strictconnect %295, %136 : !firrtl.uint<1>
      firrtl.strictconnect %137, %296 : !firrtl.uint<1>
      firrtl.strictconnect %138, %297 : !firrtl.uint<32>
      firrtl.strictconnect %298, %139 : !firrtl.uint<1>
      firrtl.strictconnect %140, %299 : !firrtl.uint<1>
      firrtl.strictconnect %141, %300 : !firrtl.uint<64>
      firrtl.strictconnect %142, %301 : !firrtl.uint<8>
      firrtl.strictconnect %143, %302 : !firrtl.uint<1>
      firrtl.strictconnect %303, %144 : !firrtl.uint<1>
      firrtl.strictconnect %304, %145 : !firrtl.uint<1>
      firrtl.strictconnect %146, %305 : !firrtl.uint<1>
      firrtl.strictconnect %147, %306 : !firrtl.uint<1>
      firrtl.strictconnect %307, %148 : !firrtl.uint<1>
      firrtl.strictconnect %308, %149 : !firrtl.uint<64>
      %dma_io_in_bridge_clock, %dma_io_in_bridge_reset, %dma_io_in_bridge_io_in_req_ready, %dma_io_in_bridge_io_in_req_valid, %dma_io_in_bridge_io_in_req_bits_addr, %dma_io_in_bridge_io_in_req_bits_cmd, %dma_io_in_bridge_io_in_req_bits_wmask, %dma_io_in_bridge_io_in_req_bits_wdata, %dma_io_in_bridge_io_in_resp_ready, %dma_io_in_bridge_io_in_resp_valid, %dma_io_in_bridge_io_in_resp_bits_rdata, %dma_io_in_bridge_io_out_aw_ready, %dma_io_in_bridge_io_out_aw_valid, %dma_io_in_bridge_io_out_aw_bits_addr, %dma_io_in_bridge_io_out_w_ready, %dma_io_in_bridge_io_out_w_valid, %dma_io_in_bridge_io_out_w_bits_data, %dma_io_in_bridge_io_out_w_bits_strb, %dma_io_in_bridge_io_out_b_ready, %dma_io_in_bridge_io_out_b_valid, %dma_io_in_bridge_io_out_ar_ready, %dma_io_in_bridge_io_out_ar_valid, %dma_io_in_bridge_io_out_ar_bits_addr, %dma_io_in_bridge_io_out_r_ready, %dma_io_in_bridge_io_out_r_valid, %dma_io_in_bridge_io_out_r_bits_data = firrtl.instance dma_io_in_bridge @SimpleBus2AXI4Converter_1(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_req_ready: !firrtl.uint<1>, in io_in_req_valid: !firrtl.uint<1>, in io_in_req_bits_addr: !firrtl.uint<32>, in io_in_req_bits_cmd: !firrtl.uint<4>, in io_in_req_bits_wmask: !firrtl.uint<8>, in io_in_req_bits_wdata: !firrtl.uint<64>, in io_in_resp_ready: !firrtl.uint<1>, out io_in_resp_valid: !firrtl.uint<1>, out io_in_resp_bits_rdata: !firrtl.uint<64>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_strb: !firrtl.uint<8>, out io_out_b_ready: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, in io_out_ar_ready: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_r_ready: !firrtl.uint<1>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>)
      %309 = firrtl.wire : !firrtl.uint<1>
      %310 = firrtl.wire : !firrtl.uint<1>
      %311 = firrtl.wire : !firrtl.uint<32>
      %312 = firrtl.wire : !firrtl.uint<4>
      %313 = firrtl.wire : !firrtl.uint<8>
      %314 = firrtl.wire : !firrtl.uint<64>
      %315 = firrtl.wire : !firrtl.uint<1>
      %316 = firrtl.wire : !firrtl.uint<1>
      %317 = firrtl.wire : !firrtl.uint<64>
      %318 = firrtl.wire : !firrtl.uint<1>
      %319 = firrtl.wire : !firrtl.uint<1>
      %320 = firrtl.wire : !firrtl.uint<32>
      %321 = firrtl.wire : !firrtl.uint<1>
      %322 = firrtl.wire : !firrtl.uint<1>
      %323 = firrtl.wire : !firrtl.uint<64>
      %324 = firrtl.wire : !firrtl.uint<8>
      %325 = firrtl.wire : !firrtl.uint<1>
      %326 = firrtl.wire : !firrtl.uint<1>
      %327 = firrtl.wire : !firrtl.uint<1>
      %328 = firrtl.wire : !firrtl.uint<1>
      %329 = firrtl.wire : !firrtl.uint<32>
      %330 = firrtl.wire : !firrtl.uint<1>
      %331 = firrtl.wire : !firrtl.uint<1>
      %332 = firrtl.wire : !firrtl.uint<64>
      firrtl.strictconnect %309, %dma_io_in_bridge_io_in_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_bridge_io_in_req_valid, %310 : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_bridge_io_in_req_bits_addr, %311 : !firrtl.uint<32>
      firrtl.strictconnect %dma_io_in_bridge_io_in_req_bits_cmd, %312 : !firrtl.uint<4>
      firrtl.strictconnect %dma_io_in_bridge_io_in_req_bits_wmask, %313 : !firrtl.uint<8>
      firrtl.strictconnect %dma_io_in_bridge_io_in_req_bits_wdata, %314 : !firrtl.uint<64>
      firrtl.strictconnect %dma_io_in_bridge_io_in_resp_ready, %315 : !firrtl.uint<1>
      firrtl.strictconnect %316, %dma_io_in_bridge_io_in_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %317, %dma_io_in_bridge_io_in_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %dma_io_in_bridge_io_out_aw_ready, %318 : !firrtl.uint<1>
      firrtl.strictconnect %319, %dma_io_in_bridge_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %320, %dma_io_in_bridge_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %dma_io_in_bridge_io_out_w_ready, %321 : !firrtl.uint<1>
      firrtl.strictconnect %322, %dma_io_in_bridge_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %323, %dma_io_in_bridge_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %324, %dma_io_in_bridge_io_out_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %325, %dma_io_in_bridge_io_out_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_bridge_io_out_b_valid, %326 : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_bridge_io_out_ar_ready, %327 : !firrtl.uint<1>
      firrtl.strictconnect %328, %dma_io_in_bridge_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %329, %dma_io_in_bridge_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %330, %dma_io_in_bridge_io_out_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_bridge_io_out_r_valid, %331 : !firrtl.uint<1>
      firrtl.strictconnect %dma_io_in_bridge_io_out_r_bits_data, %332 : !firrtl.uint<64>
      firrtl.strictconnect %dma_io_in_bridge_clock, %clock : !firrtl.clock
      firrtl.strictconnect %dma_io_in_bridge_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %58, %309 : !firrtl.uint<1>
      firrtl.strictconnect %310, %59 : !firrtl.uint<1>
      firrtl.strictconnect %311, %60 : !firrtl.uint<32>
      firrtl.strictconnect %312, %61 : !firrtl.uint<4>
      firrtl.strictconnect %313, %62 : !firrtl.uint<8>
      firrtl.strictconnect %314, %63 : !firrtl.uint<64>
      firrtl.strictconnect %315, %64 : !firrtl.uint<1>
      firrtl.strictconnect %65, %316 : !firrtl.uint<1>
      firrtl.strictconnect %66, %317 : !firrtl.uint<64>
      firrtl.strictconnect %318, %151 : !firrtl.uint<1>
      firrtl.strictconnect %152, %319 : !firrtl.uint<1>
      firrtl.strictconnect %153, %320 : !firrtl.uint<32>
      firrtl.strictconnect %321, %154 : !firrtl.uint<1>
      firrtl.strictconnect %155, %322 : !firrtl.uint<1>
      firrtl.strictconnect %156, %323 : !firrtl.uint<64>
      firrtl.strictconnect %157, %324 : !firrtl.uint<8>
      firrtl.strictconnect %158, %325 : !firrtl.uint<1>
      firrtl.strictconnect %326, %159 : !firrtl.uint<1>
      firrtl.strictconnect %327, %160 : !firrtl.uint<1>
      firrtl.strictconnect %161, %328 : !firrtl.uint<1>
      firrtl.strictconnect %162, %329 : !firrtl.uint<32>
      firrtl.strictconnect %163, %330 : !firrtl.uint<1>
      firrtl.strictconnect %331, %164 : !firrtl.uint<1>
      firrtl.strictconnect %332, %165 : !firrtl.uint<64>
      firrtl.strictconnect %io_dma_r_ready_13, %174 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_ar_bits_addr_12, %173 : !firrtl.uint<32>
      firrtl.strictconnect %io_dma_ar_valid_11, %172 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_b_ready_10, %171 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_w_bits_data_8, %169 : !firrtl.uint<64>
      firrtl.strictconnect %io_dma_w_bits_strb_9, %170 : !firrtl.uint<8>
      firrtl.strictconnect %io_dma_w_valid_7, %168 : !firrtl.uint<1>
      firrtl.strictconnect %io_dma_aw_bits_addr_6, %167 : !firrtl.uint<32>
      firrtl.strictconnect %io_dma_aw_valid_5, %166 : !firrtl.uint<1>
      firrtl.strictconnect %io_meip_4, %150 : !firrtl.uint<1>
      firrtl.strictconnect %io_uart_in_valid_16, %84 : !firrtl.uint<1>
      firrtl.strictconnect %io_uart_out_valid_14, %82 : !firrtl.uint<1>
      firrtl.strictconnect %io_uart_out_ch_15, %83 : !firrtl.uint<8>
    }
    firrtl.module @SimTop(in %clock: !firrtl.clock, in %reset: !firrtl.uint<1>, out %difftest_step: !firrtl.uint<64>, in %difftest_perfCtrl_clean: !firrtl.uint<1>, in %difftest_perfCtrl_dump: !firrtl.uint<1>, in %difftest_logCtrl_begin: !firrtl.uint<64>, in %difftest_logCtrl_end: !firrtl.uint<64>, in %difftest_logCtrl_level: !firrtl.uint<64>, out %difftest_uart_out_valid: !firrtl.uint<1>, out %difftest_uart_out_ch: !firrtl.uint<8>, out %difftest_uart_in_valid: !firrtl.uint<1>, in %difftest_uart_in_ch: !firrtl.uint<8>) attributes {convention = #firrtl<convention scalarized>} {
      %c1_ui64 = firrtl.constant 1 : !firrtl.uint<64> {name = "difftest_step"}
      %c0_ui64 = firrtl.constant 0 : !firrtl.uint<64>
      %c1_ui1 = firrtl.constant 1 : !firrtl.uint<1>
      %difftest_uart_out_valid_0 = firrtl.wire {name = "difftest_uart_out_valid"} : !firrtl.uint<1>
      %difftest_uart_out_ch_1 = firrtl.wire {name = "difftest_uart_out_ch"} : !firrtl.uint<8>
      %difftest_uart_in_valid_2 = firrtl.wire {name = "difftest_uart_in_valid"} : !firrtl.uint<1>
      firrtl.strictconnect %difftest_step, %c1_ui64 : !firrtl.uint<64>
      firrtl.strictconnect %difftest_uart_out_valid, %difftest_uart_out_valid_0 : !firrtl.uint<1>
      firrtl.strictconnect %difftest_uart_out_ch, %difftest_uart_out_ch_1 : !firrtl.uint<8>
      firrtl.strictconnect %difftest_uart_in_valid, %difftest_uart_in_valid_2 : !firrtl.uint<1>
      %soc_clock, %soc_reset, %soc_io_mem_aw_ready, %soc_io_mem_aw_valid, %soc_io_mem_aw_bits_addr, %soc_io_mem_aw_bits_len, %soc_io_mem_w_ready, %soc_io_mem_w_valid, %soc_io_mem_w_bits_data, %soc_io_mem_w_bits_last, %soc_io_mem_b_valid, %soc_io_mem_ar_ready, %soc_io_mem_ar_valid, %soc_io_mem_ar_bits_addr, %soc_io_mem_ar_bits_len, %soc_io_mem_r_valid, %soc_io_mem_r_bits_data, %soc_io_mem_r_bits_last, %soc_io_mmio_req_ready, %soc_io_mmio_req_valid, %soc_io_mmio_req_bits_addr, %soc_io_mmio_req_bits_size, %soc_io_mmio_req_bits_cmd, %soc_io_mmio_req_bits_wmask, %soc_io_mmio_req_bits_wdata, %soc_io_mmio_resp_ready, %soc_io_mmio_resp_valid, %soc_io_mmio_resp_bits_cmd, %soc_io_mmio_resp_bits_rdata, %soc_io_frontend_aw_ready, %soc_io_frontend_aw_valid, %soc_io_frontend_aw_bits_addr, %soc_io_frontend_w_ready, %soc_io_frontend_w_valid, %soc_io_frontend_w_bits_data, %soc_io_frontend_w_bits_strb, %soc_io_frontend_b_ready, %soc_io_frontend_b_valid, %soc_io_frontend_ar_ready, %soc_io_frontend_ar_valid, %soc_io_frontend_ar_bits_addr, %soc_io_frontend_r_ready, %soc_io_frontend_r_valid, %soc_io_frontend_r_bits_data, %soc_io_meip = firrtl.instance soc @NutShell(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, in io_mem_aw_ready: !firrtl.uint<1>, out io_mem_aw_valid: !firrtl.uint<1>, out io_mem_aw_bits_addr: !firrtl.uint<32>, out io_mem_aw_bits_len: !firrtl.uint<8>, in io_mem_w_ready: !firrtl.uint<1>, out io_mem_w_valid: !firrtl.uint<1>, out io_mem_w_bits_data: !firrtl.uint<64>, out io_mem_w_bits_last: !firrtl.uint<1>, in io_mem_b_valid: !firrtl.uint<1>, in io_mem_ar_ready: !firrtl.uint<1>, out io_mem_ar_valid: !firrtl.uint<1>, out io_mem_ar_bits_addr: !firrtl.uint<32>, out io_mem_ar_bits_len: !firrtl.uint<8>, in io_mem_r_valid: !firrtl.uint<1>, in io_mem_r_bits_data: !firrtl.uint<64>, in io_mem_r_bits_last: !firrtl.uint<1>, in io_mmio_req_ready: !firrtl.uint<1>, out io_mmio_req_valid: !firrtl.uint<1>, out io_mmio_req_bits_addr: !firrtl.uint<32>, out io_mmio_req_bits_size: !firrtl.uint<3>, out io_mmio_req_bits_cmd: !firrtl.uint<4>, out io_mmio_req_bits_wmask: !firrtl.uint<8>, out io_mmio_req_bits_wdata: !firrtl.uint<64>, out io_mmio_resp_ready: !firrtl.uint<1>, in io_mmio_resp_valid: !firrtl.uint<1>, in io_mmio_resp_bits_cmd: !firrtl.uint<4>, in io_mmio_resp_bits_rdata: !firrtl.uint<64>, out io_frontend_aw_ready: !firrtl.uint<1>, in io_frontend_aw_valid: !firrtl.uint<1>, in io_frontend_aw_bits_addr: !firrtl.uint<32>, out io_frontend_w_ready: !firrtl.uint<1>, in io_frontend_w_valid: !firrtl.uint<1>, in io_frontend_w_bits_data: !firrtl.uint<64>, in io_frontend_w_bits_strb: !firrtl.uint<8>, in io_frontend_b_ready: !firrtl.uint<1>, out io_frontend_b_valid: !firrtl.uint<1>, out io_frontend_ar_ready: !firrtl.uint<1>, in io_frontend_ar_valid: !firrtl.uint<1>, in io_frontend_ar_bits_addr: !firrtl.uint<32>, in io_frontend_r_ready: !firrtl.uint<1>, out io_frontend_r_valid: !firrtl.uint<1>, out io_frontend_r_bits_data: !firrtl.uint<64>, in io_meip: !firrtl.uint<1>)
      %0 = firrtl.wire : !firrtl.uint<1>
      %1 = firrtl.wire : !firrtl.uint<1>
      %2 = firrtl.wire : !firrtl.uint<32>
      %3 = firrtl.wire : !firrtl.uint<8>
      %4 = firrtl.wire : !firrtl.uint<1>
      %5 = firrtl.wire : !firrtl.uint<1>
      %6 = firrtl.wire : !firrtl.uint<64>
      %7 = firrtl.wire : !firrtl.uint<1>
      %8 = firrtl.wire : !firrtl.uint<1>
      %9 = firrtl.wire : !firrtl.uint<1>
      %10 = firrtl.wire : !firrtl.uint<1>
      %11 = firrtl.wire : !firrtl.uint<32>
      %12 = firrtl.wire : !firrtl.uint<8>
      %13 = firrtl.wire : !firrtl.uint<1>
      %14 = firrtl.wire : !firrtl.uint<64>
      %15 = firrtl.wire : !firrtl.uint<1>
      %16 = firrtl.wire : !firrtl.uint<1>
      %17 = firrtl.wire : !firrtl.uint<1>
      %18 = firrtl.wire : !firrtl.uint<32>
      %19 = firrtl.wire : !firrtl.uint<3>
      %20 = firrtl.wire : !firrtl.uint<4>
      %21 = firrtl.wire : !firrtl.uint<8>
      %22 = firrtl.wire : !firrtl.uint<64>
      %23 = firrtl.wire : !firrtl.uint<1>
      %24 = firrtl.wire : !firrtl.uint<1>
      %25 = firrtl.wire : !firrtl.uint<4>
      %26 = firrtl.wire : !firrtl.uint<64>
      %27 = firrtl.wire : !firrtl.uint<1>
      %28 = firrtl.wire : !firrtl.uint<1>
      %29 = firrtl.wire : !firrtl.uint<32>
      %30 = firrtl.wire : !firrtl.uint<1>
      %31 = firrtl.wire : !firrtl.uint<1>
      %32 = firrtl.wire : !firrtl.uint<64>
      %33 = firrtl.wire : !firrtl.uint<8>
      %34 = firrtl.wire : !firrtl.uint<1>
      %35 = firrtl.wire : !firrtl.uint<1>
      %36 = firrtl.wire : !firrtl.uint<1>
      %37 = firrtl.wire : !firrtl.uint<1>
      %38 = firrtl.wire : !firrtl.uint<32>
      %39 = firrtl.wire : !firrtl.uint<1>
      %40 = firrtl.wire : !firrtl.uint<1>
      %41 = firrtl.wire : !firrtl.uint<64>
      %42 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_mem_aw_ready, %0 : !firrtl.uint<1>
      firrtl.strictconnect %1, %soc_io_mem_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %2, %soc_io_mem_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %3, %soc_io_mem_aw_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %soc_io_mem_w_ready, %4 : !firrtl.uint<1>
      firrtl.strictconnect %5, %soc_io_mem_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %6, %soc_io_mem_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %7, %soc_io_mem_w_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_mem_b_valid, %8 : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_mem_ar_ready, %9 : !firrtl.uint<1>
      firrtl.strictconnect %10, %soc_io_mem_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %11, %soc_io_mem_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %12, %soc_io_mem_ar_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %soc_io_mem_r_valid, %13 : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_mem_r_bits_data, %14 : !firrtl.uint<64>
      firrtl.strictconnect %soc_io_mem_r_bits_last, %15 : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_mmio_req_ready, %16 : !firrtl.uint<1>
      firrtl.strictconnect %17, %soc_io_mmio_req_valid : !firrtl.uint<1>
      firrtl.strictconnect %18, %soc_io_mmio_req_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %19, %soc_io_mmio_req_bits_size : !firrtl.uint<3>
      firrtl.strictconnect %20, %soc_io_mmio_req_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %21, %soc_io_mmio_req_bits_wmask : !firrtl.uint<8>
      firrtl.strictconnect %22, %soc_io_mmio_req_bits_wdata : !firrtl.uint<64>
      firrtl.strictconnect %23, %soc_io_mmio_resp_ready : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_mmio_resp_valid, %24 : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_mmio_resp_bits_cmd, %25 : !firrtl.uint<4>
      firrtl.strictconnect %soc_io_mmio_resp_bits_rdata, %26 : !firrtl.uint<64>
      firrtl.strictconnect %27, %soc_io_frontend_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_frontend_aw_valid, %28 : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_frontend_aw_bits_addr, %29 : !firrtl.uint<32>
      firrtl.strictconnect %30, %soc_io_frontend_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_frontend_w_valid, %31 : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_frontend_w_bits_data, %32 : !firrtl.uint<64>
      firrtl.strictconnect %soc_io_frontend_w_bits_strb, %33 : !firrtl.uint<8>
      firrtl.strictconnect %soc_io_frontend_b_ready, %34 : !firrtl.uint<1>
      firrtl.strictconnect %35, %soc_io_frontend_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %36, %soc_io_frontend_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_frontend_ar_valid, %37 : !firrtl.uint<1>
      firrtl.strictconnect %soc_io_frontend_ar_bits_addr, %38 : !firrtl.uint<32>
      firrtl.strictconnect %soc_io_frontend_r_ready, %39 : !firrtl.uint<1>
      firrtl.strictconnect %40, %soc_io_frontend_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %41, %soc_io_frontend_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %soc_io_meip, %42 : !firrtl.uint<1>
      firrtl.strictconnect %soc_clock, %clock : !firrtl.clock
      firrtl.strictconnect %soc_reset, %reset : !firrtl.uint<1>
      %mem_clock, %mem_reset, %mem_io_in_aw_ready, %mem_io_in_aw_valid, %mem_io_in_aw_bits_addr, %mem_io_in_w_ready, %mem_io_in_w_valid, %mem_io_in_w_bits_data, %mem_io_in_w_bits_last, %mem_io_in_b_valid, %mem_io_in_ar_valid, %mem_io_in_ar_bits_addr, %mem_io_in_ar_bits_len, %mem_io_in_r_valid, %mem_io_in_r_bits_data, %mem_io_in_r_bits_last = firrtl.instance mem @AXI4RAM(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_last: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_ar_bits_len: !firrtl.uint<8>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, out io_in_r_bits_last: !firrtl.uint<1>)
      %43 = firrtl.wire : !firrtl.uint<1>
      %44 = firrtl.wire : !firrtl.uint<1>
      %45 = firrtl.wire : !firrtl.uint<32>
      %46 = firrtl.wire : !firrtl.uint<1>
      %47 = firrtl.wire : !firrtl.uint<1>
      %48 = firrtl.wire : !firrtl.uint<64>
      %49 = firrtl.wire : !firrtl.uint<1>
      %50 = firrtl.wire : !firrtl.uint<1>
      %51 = firrtl.wire : !firrtl.uint<1>
      %52 = firrtl.wire : !firrtl.uint<32>
      %53 = firrtl.wire : !firrtl.uint<8>
      %54 = firrtl.wire : !firrtl.uint<1>
      %55 = firrtl.wire : !firrtl.uint<64>
      %56 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %43, %mem_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %mem_io_in_aw_valid, %44 : !firrtl.uint<1>
      firrtl.strictconnect %mem_io_in_aw_bits_addr, %45 : !firrtl.uint<32>
      firrtl.strictconnect %46, %mem_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %mem_io_in_w_valid, %47 : !firrtl.uint<1>
      firrtl.strictconnect %mem_io_in_w_bits_data, %48 : !firrtl.uint<64>
      firrtl.strictconnect %mem_io_in_w_bits_last, %49 : !firrtl.uint<1>
      firrtl.strictconnect %50, %mem_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %mem_io_in_ar_valid, %51 : !firrtl.uint<1>
      firrtl.strictconnect %mem_io_in_ar_bits_addr, %52 : !firrtl.uint<32>
      firrtl.strictconnect %mem_io_in_ar_bits_len, %53 : !firrtl.uint<8>
      firrtl.strictconnect %54, %mem_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %55, %mem_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %56, %mem_io_in_r_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %mem_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mem_reset, %reset : !firrtl.uint<1>
      %memdelay_io_in_aw_ready, %memdelay_io_in_aw_valid, %memdelay_io_in_aw_bits_addr, %memdelay_io_in_aw_bits_len, %memdelay_io_in_w_ready, %memdelay_io_in_w_valid, %memdelay_io_in_w_bits_data, %memdelay_io_in_w_bits_last, %memdelay_io_in_b_valid, %memdelay_io_in_ar_ready, %memdelay_io_in_ar_valid, %memdelay_io_in_ar_bits_addr, %memdelay_io_in_ar_bits_len, %memdelay_io_in_r_valid, %memdelay_io_in_r_bits_data, %memdelay_io_in_r_bits_last, %memdelay_io_out_aw_ready, %memdelay_io_out_aw_valid, %memdelay_io_out_aw_bits_addr, %memdelay_io_out_w_ready, %memdelay_io_out_w_valid, %memdelay_io_out_w_bits_data, %memdelay_io_out_w_bits_last, %memdelay_io_out_b_valid, %memdelay_io_out_ar_valid, %memdelay_io_out_ar_bits_addr, %memdelay_io_out_ar_bits_len, %memdelay_io_out_r_valid, %memdelay_io_out_r_bits_data, %memdelay_io_out_r_bits_last = firrtl.instance memdelay @AXI4Delayer(out io_in_aw_ready: !firrtl.uint<1>, in io_in_aw_valid: !firrtl.uint<1>, in io_in_aw_bits_addr: !firrtl.uint<32>, in io_in_aw_bits_len: !firrtl.uint<8>, out io_in_w_ready: !firrtl.uint<1>, in io_in_w_valid: !firrtl.uint<1>, in io_in_w_bits_data: !firrtl.uint<64>, in io_in_w_bits_last: !firrtl.uint<1>, out io_in_b_valid: !firrtl.uint<1>, out io_in_ar_ready: !firrtl.uint<1>, in io_in_ar_valid: !firrtl.uint<1>, in io_in_ar_bits_addr: !firrtl.uint<32>, in io_in_ar_bits_len: !firrtl.uint<8>, out io_in_r_valid: !firrtl.uint<1>, out io_in_r_bits_data: !firrtl.uint<64>, out io_in_r_bits_last: !firrtl.uint<1>, in io_out_aw_ready: !firrtl.uint<1>, out io_out_aw_valid: !firrtl.uint<1>, out io_out_aw_bits_addr: !firrtl.uint<32>, in io_out_w_ready: !firrtl.uint<1>, out io_out_w_valid: !firrtl.uint<1>, out io_out_w_bits_data: !firrtl.uint<64>, out io_out_w_bits_last: !firrtl.uint<1>, in io_out_b_valid: !firrtl.uint<1>, out io_out_ar_valid: !firrtl.uint<1>, out io_out_ar_bits_addr: !firrtl.uint<32>, out io_out_ar_bits_len: !firrtl.uint<8>, in io_out_r_valid: !firrtl.uint<1>, in io_out_r_bits_data: !firrtl.uint<64>, in io_out_r_bits_last: !firrtl.uint<1>)
      %57 = firrtl.wire : !firrtl.uint<1>
      %58 = firrtl.wire : !firrtl.uint<1>
      %59 = firrtl.wire : !firrtl.uint<32>
      %60 = firrtl.wire : !firrtl.uint<8>
      %61 = firrtl.wire : !firrtl.uint<1>
      %62 = firrtl.wire : !firrtl.uint<1>
      %63 = firrtl.wire : !firrtl.uint<64>
      %64 = firrtl.wire : !firrtl.uint<1>
      %65 = firrtl.wire : !firrtl.uint<1>
      %66 = firrtl.wire : !firrtl.uint<1>
      %67 = firrtl.wire : !firrtl.uint<1>
      %68 = firrtl.wire : !firrtl.uint<32>
      %69 = firrtl.wire : !firrtl.uint<8>
      %70 = firrtl.wire : !firrtl.uint<1>
      %71 = firrtl.wire : !firrtl.uint<64>
      %72 = firrtl.wire : !firrtl.uint<1>
      %73 = firrtl.wire : !firrtl.uint<1>
      %74 = firrtl.wire : !firrtl.uint<1>
      %75 = firrtl.wire : !firrtl.uint<32>
      %76 = firrtl.wire : !firrtl.uint<1>
      %77 = firrtl.wire : !firrtl.uint<1>
      %78 = firrtl.wire : !firrtl.uint<64>
      %79 = firrtl.wire : !firrtl.uint<1>
      %80 = firrtl.wire : !firrtl.uint<1>
      %81 = firrtl.wire : !firrtl.uint<1>
      %82 = firrtl.wire : !firrtl.uint<32>
      %83 = firrtl.wire : !firrtl.uint<8>
      %84 = firrtl.wire : !firrtl.uint<1>
      %85 = firrtl.wire : !firrtl.uint<64>
      %86 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %57, %memdelay_io_in_aw_ready : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_in_aw_valid, %58 : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_in_aw_bits_addr, %59 : !firrtl.uint<32>
      firrtl.strictconnect %memdelay_io_in_aw_bits_len, %60 : !firrtl.uint<8>
      firrtl.strictconnect %61, %memdelay_io_in_w_ready : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_in_w_valid, %62 : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_in_w_bits_data, %63 : !firrtl.uint<64>
      firrtl.strictconnect %memdelay_io_in_w_bits_last, %64 : !firrtl.uint<1>
      firrtl.strictconnect %65, %memdelay_io_in_b_valid : !firrtl.uint<1>
      firrtl.strictconnect %66, %memdelay_io_in_ar_ready : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_in_ar_valid, %67 : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_in_ar_bits_addr, %68 : !firrtl.uint<32>
      firrtl.strictconnect %memdelay_io_in_ar_bits_len, %69 : !firrtl.uint<8>
      firrtl.strictconnect %70, %memdelay_io_in_r_valid : !firrtl.uint<1>
      firrtl.strictconnect %71, %memdelay_io_in_r_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %72, %memdelay_io_in_r_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_out_aw_ready, %73 : !firrtl.uint<1>
      firrtl.strictconnect %74, %memdelay_io_out_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %75, %memdelay_io_out_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %memdelay_io_out_w_ready, %76 : !firrtl.uint<1>
      firrtl.strictconnect %77, %memdelay_io_out_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %78, %memdelay_io_out_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %79, %memdelay_io_out_w_bits_last : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_out_b_valid, %80 : !firrtl.uint<1>
      firrtl.strictconnect %81, %memdelay_io_out_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %82, %memdelay_io_out_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %83, %memdelay_io_out_ar_bits_len : !firrtl.uint<8>
      firrtl.strictconnect %memdelay_io_out_r_valid, %84 : !firrtl.uint<1>
      firrtl.strictconnect %memdelay_io_out_r_bits_data, %85 : !firrtl.uint<64>
      firrtl.strictconnect %memdelay_io_out_r_bits_last, %86 : !firrtl.uint<1>
      %mmio_clock, %mmio_reset, %mmio_io_rw_req_ready, %mmio_io_rw_req_valid, %mmio_io_rw_req_bits_addr, %mmio_io_rw_req_bits_size, %mmio_io_rw_req_bits_cmd, %mmio_io_rw_req_bits_wmask, %mmio_io_rw_req_bits_wdata, %mmio_io_rw_resp_ready, %mmio_io_rw_resp_valid, %mmio_io_rw_resp_bits_cmd, %mmio_io_rw_resp_bits_rdata, %mmio_io_meip, %mmio_io_dma_aw_ready, %mmio_io_dma_aw_valid, %mmio_io_dma_aw_bits_addr, %mmio_io_dma_w_ready, %mmio_io_dma_w_valid, %mmio_io_dma_w_bits_data, %mmio_io_dma_w_bits_strb, %mmio_io_dma_b_ready, %mmio_io_dma_b_valid, %mmio_io_dma_ar_ready, %mmio_io_dma_ar_valid, %mmio_io_dma_ar_bits_addr, %mmio_io_dma_r_ready, %mmio_io_dma_r_valid, %mmio_io_dma_r_bits_data, %mmio_io_uart_out_valid, %mmio_io_uart_out_ch, %mmio_io_uart_in_valid, %mmio_io_uart_in_ch = firrtl.instance mmio @SimMMIO(in clock: !firrtl.clock, in reset: !firrtl.uint<1>, out io_rw_req_ready: !firrtl.uint<1>, in io_rw_req_valid: !firrtl.uint<1>, in io_rw_req_bits_addr: !firrtl.uint<32>, in io_rw_req_bits_size: !firrtl.uint<3>, in io_rw_req_bits_cmd: !firrtl.uint<4>, in io_rw_req_bits_wmask: !firrtl.uint<8>, in io_rw_req_bits_wdata: !firrtl.uint<64>, in io_rw_resp_ready: !firrtl.uint<1>, out io_rw_resp_valid: !firrtl.uint<1>, out io_rw_resp_bits_cmd: !firrtl.uint<4>, out io_rw_resp_bits_rdata: !firrtl.uint<64>, out io_meip: !firrtl.uint<1>, in io_dma_aw_ready: !firrtl.uint<1>, out io_dma_aw_valid: !firrtl.uint<1>, out io_dma_aw_bits_addr: !firrtl.uint<32>, in io_dma_w_ready: !firrtl.uint<1>, out io_dma_w_valid: !firrtl.uint<1>, out io_dma_w_bits_data: !firrtl.uint<64>, out io_dma_w_bits_strb: !firrtl.uint<8>, out io_dma_b_ready: !firrtl.uint<1>, in io_dma_b_valid: !firrtl.uint<1>, in io_dma_ar_ready: !firrtl.uint<1>, out io_dma_ar_valid: !firrtl.uint<1>, out io_dma_ar_bits_addr: !firrtl.uint<32>, out io_dma_r_ready: !firrtl.uint<1>, in io_dma_r_valid: !firrtl.uint<1>, in io_dma_r_bits_data: !firrtl.uint<64>, out io_uart_out_valid: !firrtl.uint<1>, out io_uart_out_ch: !firrtl.uint<8>, out io_uart_in_valid: !firrtl.uint<1>, in io_uart_in_ch: !firrtl.uint<8>)
      %87 = firrtl.wire : !firrtl.uint<1>
      %88 = firrtl.wire : !firrtl.uint<1>
      %89 = firrtl.wire : !firrtl.uint<32>
      %90 = firrtl.wire : !firrtl.uint<3>
      %91 = firrtl.wire : !firrtl.uint<4>
      %92 = firrtl.wire : !firrtl.uint<8>
      %93 = firrtl.wire : !firrtl.uint<64>
      %94 = firrtl.wire : !firrtl.uint<1>
      %95 = firrtl.wire : !firrtl.uint<1>
      %96 = firrtl.wire : !firrtl.uint<4>
      %97 = firrtl.wire : !firrtl.uint<64>
      %98 = firrtl.wire : !firrtl.uint<1>
      %99 = firrtl.wire : !firrtl.uint<1>
      %100 = firrtl.wire : !firrtl.uint<1>
      %101 = firrtl.wire : !firrtl.uint<32>
      %102 = firrtl.wire : !firrtl.uint<1>
      %103 = firrtl.wire : !firrtl.uint<1>
      %104 = firrtl.wire : !firrtl.uint<64>
      %105 = firrtl.wire : !firrtl.uint<8>
      %106 = firrtl.wire : !firrtl.uint<1>
      %107 = firrtl.wire : !firrtl.uint<1>
      %108 = firrtl.wire : !firrtl.uint<1>
      %109 = firrtl.wire : !firrtl.uint<1>
      %110 = firrtl.wire : !firrtl.uint<32>
      %111 = firrtl.wire : !firrtl.uint<1>
      %112 = firrtl.wire : !firrtl.uint<1>
      %113 = firrtl.wire : !firrtl.uint<64>
      %114 = firrtl.wire : !firrtl.uint<1>
      %115 = firrtl.wire : !firrtl.uint<8>
      %116 = firrtl.wire : !firrtl.uint<1>
      firrtl.strictconnect %87, %mmio_io_rw_req_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_rw_req_valid, %88 : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_rw_req_bits_addr, %89 : !firrtl.uint<32>
      firrtl.strictconnect %mmio_io_rw_req_bits_size, %90 : !firrtl.uint<3>
      firrtl.strictconnect %mmio_io_rw_req_bits_cmd, %91 : !firrtl.uint<4>
      firrtl.strictconnect %mmio_io_rw_req_bits_wmask, %92 : !firrtl.uint<8>
      firrtl.strictconnect %mmio_io_rw_req_bits_wdata, %93 : !firrtl.uint<64>
      firrtl.strictconnect %mmio_io_rw_resp_ready, %94 : !firrtl.uint<1>
      firrtl.strictconnect %95, %mmio_io_rw_resp_valid : !firrtl.uint<1>
      firrtl.strictconnect %96, %mmio_io_rw_resp_bits_cmd : !firrtl.uint<4>
      firrtl.strictconnect %97, %mmio_io_rw_resp_bits_rdata : !firrtl.uint<64>
      firrtl.strictconnect %98, %mmio_io_meip : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_dma_aw_ready, %99 : !firrtl.uint<1>
      firrtl.strictconnect %100, %mmio_io_dma_aw_valid : !firrtl.uint<1>
      firrtl.strictconnect %101, %mmio_io_dma_aw_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %mmio_io_dma_w_ready, %102 : !firrtl.uint<1>
      firrtl.strictconnect %103, %mmio_io_dma_w_valid : !firrtl.uint<1>
      firrtl.strictconnect %104, %mmio_io_dma_w_bits_data : !firrtl.uint<64>
      firrtl.strictconnect %105, %mmio_io_dma_w_bits_strb : !firrtl.uint<8>
      firrtl.strictconnect %106, %mmio_io_dma_b_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_dma_b_valid, %107 : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_dma_ar_ready, %108 : !firrtl.uint<1>
      firrtl.strictconnect %109, %mmio_io_dma_ar_valid : !firrtl.uint<1>
      firrtl.strictconnect %110, %mmio_io_dma_ar_bits_addr : !firrtl.uint<32>
      firrtl.strictconnect %111, %mmio_io_dma_r_ready : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_dma_r_valid, %112 : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_dma_r_bits_data, %113 : !firrtl.uint<64>
      firrtl.strictconnect %114, %mmio_io_uart_out_valid : !firrtl.uint<1>
      firrtl.strictconnect %115, %mmio_io_uart_out_ch : !firrtl.uint<8>
      firrtl.strictconnect %116, %mmio_io_uart_in_valid : !firrtl.uint<1>
      firrtl.strictconnect %mmio_io_uart_in_ch, %difftest_uart_in_ch : !firrtl.uint<8>
      firrtl.strictconnect %mmio_clock, %clock : !firrtl.clock
      firrtl.strictconnect %mmio_reset, %reset : !firrtl.uint<1>
      firrtl.strictconnect %99, %27 : !firrtl.uint<1>
      firrtl.strictconnect %28, %100 : !firrtl.uint<1>
      firrtl.strictconnect %29, %101 : !firrtl.uint<32>
      firrtl.strictconnect %102, %30 : !firrtl.uint<1>
      firrtl.strictconnect %31, %103 : !firrtl.uint<1>
      firrtl.strictconnect %32, %104 : !firrtl.uint<64>
      firrtl.strictconnect %33, %105 : !firrtl.uint<8>
      firrtl.strictconnect %34, %106 : !firrtl.uint<1>
      firrtl.strictconnect %107, %35 : !firrtl.uint<1>
      firrtl.strictconnect %108, %36 : !firrtl.uint<1>
      firrtl.strictconnect %37, %109 : !firrtl.uint<1>
      firrtl.strictconnect %38, %110 : !firrtl.uint<32>
      firrtl.strictconnect %39, %111 : !firrtl.uint<1>
      firrtl.strictconnect %112, %40 : !firrtl.uint<1>
      firrtl.strictconnect %113, %41 : !firrtl.uint<64>
      firrtl.strictconnect %0, %57 : !firrtl.uint<1>
      firrtl.strictconnect %58, %1 : !firrtl.uint<1>
      firrtl.strictconnect %59, %2 : !firrtl.uint<32>
      firrtl.strictconnect %60, %3 : !firrtl.uint<8>
      firrtl.strictconnect %4, %61 : !firrtl.uint<1>
      firrtl.strictconnect %62, %5 : !firrtl.uint<1>
      firrtl.strictconnect %63, %6 : !firrtl.uint<64>
      firrtl.strictconnect %64, %7 : !firrtl.uint<1>
      firrtl.strictconnect %8, %65 : !firrtl.uint<1>
      firrtl.strictconnect %9, %66 : !firrtl.uint<1>
      firrtl.strictconnect %67, %10 : !firrtl.uint<1>
      firrtl.strictconnect %68, %11 : !firrtl.uint<32>
      firrtl.strictconnect %69, %12 : !firrtl.uint<8>
      firrtl.strictconnect %13, %70 : !firrtl.uint<1>
      firrtl.strictconnect %14, %71 : !firrtl.uint<64>
      firrtl.strictconnect %15, %72 : !firrtl.uint<1>
      firrtl.strictconnect %73, %43 : !firrtl.uint<1>
      firrtl.strictconnect %44, %74 : !firrtl.uint<1>
      firrtl.strictconnect %45, %75 : !firrtl.uint<32>
      firrtl.strictconnect %76, %46 : !firrtl.uint<1>
      firrtl.strictconnect %47, %77 : !firrtl.uint<1>
      firrtl.strictconnect %48, %78 : !firrtl.uint<64>
      firrtl.strictconnect %49, %79 : !firrtl.uint<1>
      firrtl.strictconnect %80, %50 : !firrtl.uint<1>
      firrtl.strictconnect %51, %81 : !firrtl.uint<1>
      firrtl.strictconnect %52, %82 : !firrtl.uint<32>
      firrtl.strictconnect %53, %83 : !firrtl.uint<8>
      firrtl.strictconnect %84, %54 : !firrtl.uint<1>
      firrtl.strictconnect %85, %55 : !firrtl.uint<64>
      firrtl.strictconnect %86, %56 : !firrtl.uint<1>
      firrtl.strictconnect %16, %87 : !firrtl.uint<1>
      firrtl.strictconnect %88, %17 : !firrtl.uint<1>
      firrtl.strictconnect %89, %18 : !firrtl.uint<32>
      firrtl.strictconnect %90, %19 : !firrtl.uint<3>
      firrtl.strictconnect %91, %20 : !firrtl.uint<4>
      firrtl.strictconnect %92, %21 : !firrtl.uint<8>
      firrtl.strictconnect %93, %22 : !firrtl.uint<64>
      firrtl.strictconnect %94, %23 : !firrtl.uint<1>
      firrtl.strictconnect %24, %95 : !firrtl.uint<1>
      firrtl.strictconnect %25, %96 : !firrtl.uint<4>
      firrtl.strictconnect %26, %97 : !firrtl.uint<64>
      firrtl.strictconnect %42, %98 : !firrtl.uint<1>
      %difftest_timer = firrtl.regreset %clock, %reset, %c0_ui64 {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}], firrtl.random_init_start = 0 : ui64} : !firrtl.clock, !firrtl.uint<1>, !firrtl.uint<64>, !firrtl.uint<64>
      %_difftest_timer_T = firrtl.add %difftest_timer, %c1_ui1 {name = "_difftest_timer_T"} : (!firrtl.uint<64>, !firrtl.uint<1>) -> !firrtl.uint<65>
      %_difftest_timer_T_1 = firrtl.bits %_difftest_timer_T 63 to 0 {name = "_difftest_timer_T_1"} : (!firrtl.uint<65>) -> !firrtl.uint<64>
      firrtl.strictconnect %difftest_timer, %_difftest_timer_T_1 : !firrtl.uint<64>
      %difftest_log_enable = firrtl.wire {annotations = [{class = "firrtl.transforms.DontTouchAnnotation"}]} : !firrtl.uint<1>
      %_difftest_log_enable_en_T = firrtl.geq %difftest_timer, %difftest_logCtrl_begin {name = "_difftest_log_enable_en_T"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<1>
      %_difftest_log_enable_en_T_1 = firrtl.lt %difftest_timer, %difftest_logCtrl_end {name = "_difftest_log_enable_en_T_1"} : (!firrtl.uint<64>, !firrtl.uint<64>) -> !firrtl.uint<1>
      %_difftest_log_enable_en_T_2 = firrtl.and %_difftest_log_enable_en_T, %_difftest_log_enable_en_T_1 {name = "_difftest_log_enable_en_T_2"} : (!firrtl.uint<1>, !firrtl.uint<1>) -> !firrtl.uint<1>
      firrtl.strictconnect %difftest_log_enable, %_difftest_log_enable_en_T_2 : !firrtl.uint<1>
      firrtl.strictconnect %difftest_uart_in_valid_2, %116 : !firrtl.uint<1>
      firrtl.strictconnect %difftest_uart_out_valid_0, %114 : !firrtl.uint<1>
      firrtl.strictconnect %difftest_uart_out_ch_1, %115 : !firrtl.uint<8>
    }
    sv.verbatim "`ifndef SIM_TOP_MODULE_NAME\0A  `define SIM_TOP_MODULE_NAME SimTop\0A`endif\0A\0A/*verilator tracing_off*/\0A/*verilator coverage_off*/\0A\0Amodule LogPerfHelper(\0A  output [63:0] timer,\0A  output        logEnable,\0A  output        clean,\0A  output        dump\0A);\0A\0Aassign timer     = `SIM_TOP_MODULE_NAME.difftest_timer;\0Aassign logEnable = `SIM_TOP_MODULE_NAME.difftest_log_enable;\0Aassign clean     = `SIM_TOP_MODULE_NAME.difftest_perfCtrl_clean;\0Aassign dump      = `SIM_TOP_MODULE_NAME.difftest_perfCtrl_dump;\0A\0Aendmodule\0A\0A" {output_file = #hw.output_file<"./LogPerfHelper.v">}
    sv.verbatim "\0Amodule DifftestArchIntRegState(\0A  input         clock,\0A  input         enable,\0A  input  [63:0] io_value_0,\0A  input  [63:0] io_value_1,\0A  input  [63:0] io_value_2,\0A  input  [63:0] io_value_3,\0A  input  [63:0] io_value_4,\0A  input  [63:0] io_value_5,\0A  input  [63:0] io_value_6,\0A  input  [63:0] io_value_7,\0A  input  [63:0] io_value_8,\0A  input  [63:0] io_value_9,\0A  input  [63:0] io_value_10,\0A  input  [63:0] io_value_11,\0A  input  [63:0] io_value_12,\0A  input  [63:0] io_value_13,\0A  input  [63:0] io_value_14,\0A  input  [63:0] io_value_15,\0A  input  [63:0] io_value_16,\0A  input  [63:0] io_value_17,\0A  input  [63:0] io_value_18,\0A  input  [63:0] io_value_19,\0A  input  [63:0] io_value_20,\0A  input  [63:0] io_value_21,\0A  input  [63:0] io_value_22,\0A  input  [63:0] io_value_23,\0A  input  [63:0] io_value_24,\0A  input  [63:0] io_value_25,\0A  input  [63:0] io_value_26,\0A  input  [63:0] io_value_27,\0A  input  [63:0] io_value_28,\0A  input  [63:0] io_value_29,\0A  input  [63:0] io_value_30,\0A  input  [63:0] io_value_31,\0A  input  [ 7:0] io_coreid\0A);\0A`ifndef SYNTHESIS\0A`ifdef DIFFTEST\0A\0Aimport \22DPI-C\22 function void v_difftest_ArchIntRegState (\0A  input   longint io_value_0,\0A  input   longint io_value_1,\0A  input   longint io_value_2,\0A  input   longint io_value_3,\0A  input   longint io_value_4,\0A  input   longint io_value_5,\0A  input   longint io_value_6,\0A  input   longint io_value_7,\0A  input   longint io_value_8,\0A  input   longint io_value_9,\0A  input   longint io_value_10,\0A  input   longint io_value_11,\0A  input   longint io_value_12,\0A  input   longint io_value_13,\0A  input   longint io_value_14,\0A  input   longint io_value_15,\0A  input   longint io_value_16,\0A  input   longint io_value_17,\0A  input   longint io_value_18,\0A  input   longint io_value_19,\0A  input   longint io_value_20,\0A  input   longint io_value_21,\0A  input   longint io_value_22,\0A  input   longint io_value_23,\0A  input   longint io_value_24,\0A  input   longint io_value_25,\0A  input   longint io_value_26,\0A  input   longint io_value_27,\0A  input   longint io_value_28,\0A  input   longint io_value_29,\0A  input   longint io_value_30,\0A  input   longint io_value_31,\0A  input      byte io_coreid\0A);\0A\0A\0A  always @(posedge clock) begin\0A    if (enable)\0A      v_difftest_ArchIntRegState (io_value_0, io_value_1, io_value_2, io_value_3, io_value_4, io_value_5, io_value_6, io_value_7, io_value_8, io_value_9, io_value_10, io_value_11, io_value_12, io_value_13, io_value_14, io_value_15, io_value_16, io_value_17, io_value_18, io_value_19, io_value_20, io_value_21, io_value_22, io_value_23, io_value_24, io_value_25, io_value_26, io_value_27, io_value_28, io_value_29, io_value_30, io_value_31, io_coreid);\0A  end\0A`endif\0A`endif\0Aendmodule\0A" {output_file = #hw.output_file<"./DifftestArchIntRegState.v">}
    sv.verbatim "\0Amodule DifftestCSRState(\0A  input         clock,\0A  input         enable,\0A  input  [63:0] io_priviledgeMode,\0A  input  [63:0] io_mstatus,\0A  input  [63:0] io_sstatus,\0A  input  [63:0] io_mepc,\0A  input  [63:0] io_sepc,\0A  input  [63:0] io_mtval,\0A  input  [63:0] io_stval,\0A  input  [63:0] io_mtvec,\0A  input  [63:0] io_stvec,\0A  input  [63:0] io_mcause,\0A  input  [63:0] io_scause,\0A  input  [63:0] io_satp,\0A  input  [63:0] io_mip,\0A  input  [63:0] io_mie,\0A  input  [63:0] io_mscratch,\0A  input  [63:0] io_sscratch,\0A  input  [63:0] io_mideleg,\0A  input  [63:0] io_medeleg,\0A  input  [ 7:0] io_coreid\0A);\0A`ifndef SYNTHESIS\0A`ifdef DIFFTEST\0A\0Aimport \22DPI-C\22 function void v_difftest_CSRState (\0A  input   longint io_priviledgeMode,\0A  input   longint io_mstatus,\0A  input   longint io_sstatus,\0A  input   longint io_mepc,\0A  input   longint io_sepc,\0A  input   longint io_mtval,\0A  input   longint io_stval,\0A  input   longint io_mtvec,\0A  input   longint io_stvec,\0A  input   longint io_mcause,\0A  input   longint io_scause,\0A  input   longint io_satp,\0A  input   longint io_mip,\0A  input   longint io_mie,\0A  input   longint io_mscratch,\0A  input   longint io_sscratch,\0A  input   longint io_mideleg,\0A  input   longint io_medeleg,\0A  input      byte io_coreid\0A);\0A\0A\0A  always @(posedge clock) begin\0A    if (enable)\0A      v_difftest_CSRState (io_priviledgeMode, io_mstatus, io_sstatus, io_mepc, io_sepc, io_mtval, io_stval, io_mtvec, io_stvec, io_mcause, io_scause, io_satp, io_mip, io_mie, io_mscratch, io_sscratch, io_mideleg, io_medeleg, io_coreid);\0A  end\0A`endif\0A`endif\0Aendmodule\0A" {output_file = #hw.output_file<"./DifftestCSRState.v">}
    sv.verbatim "\0Amodule DifftestArchEvent(\0A  input         clock,\0A  input         enable,\0A  input         io_valid,\0A  input  [31:0] io_interrupt,\0A  input  [31:0] io_exception,\0A  input  [63:0] io_exceptionPC,\0A  input  [31:0] io_exceptionInst,\0A  input  [ 7:0] io_coreid\0A);\0A`ifndef SYNTHESIS\0A`ifdef DIFFTEST\0A\0Aimport \22DPI-C\22 function void v_difftest_ArchEvent (\0A  input       int io_interrupt,\0A  input       int io_exception,\0A  input   longint io_exceptionPC,\0A  input       int io_exceptionInst,\0A  input      byte io_coreid\0A);\0A\0A\0A  always @(posedge clock) begin\0A    if (enable)\0A      v_difftest_ArchEvent (io_interrupt, io_exception, io_exceptionPC, io_exceptionInst, io_coreid);\0A  end\0A`endif\0A`endif\0Aendmodule\0A" {output_file = #hw.output_file<"./DifftestArchEvent.v">}
    sv.verbatim "\0Amodule DifftestTrapEvent(\0A  input         clock,\0A  input         enable,\0A  input         io_hasTrap,\0A  input  [63:0] io_cycleCnt,\0A  input  [63:0] io_instrCnt,\0A  input         io_hasWFI,\0A  input  [ 2:0] io_code,\0A  input  [63:0] io_pc,\0A  input  [ 7:0] io_coreid\0A);\0A`ifndef SYNTHESIS\0A`ifdef DIFFTEST\0A\0Aimport \22DPI-C\22 function void v_difftest_TrapEvent (\0A  input       bit io_hasTrap,\0A  input   longint io_cycleCnt,\0A  input   longint io_instrCnt,\0A  input       bit io_hasWFI,\0A  input      byte io_code,\0A  input   longint io_pc,\0A  input      byte io_coreid\0A);\0A\0A\0A  always @(posedge clock) begin\0A    if (enable)\0A      v_difftest_TrapEvent (io_hasTrap, io_cycleCnt, io_instrCnt, io_hasWFI, io_code, io_pc, io_coreid);\0A  end\0A`endif\0A`endif\0Aendmodule\0A" {output_file = #hw.output_file<"./DifftestTrapEvent.v">}
    sv.verbatim "\0Amodule DifftestInstrCommit(\0A  input         clock,\0A  input         enable,\0A  input         io_valid,\0A  input         io_skip,\0A  input         io_isRVC,\0A  input         io_rfwen,\0A  input         io_fpwen,\0A  input         io_vecwen,\0A  input  [ 4:0] io_wpdest,\0A  input  [ 7:0] io_wdest,\0A  input  [63:0] io_pc,\0A  input  [31:0] io_instr,\0A  input  [ 9:0] io_robIdx,\0A  input  [ 6:0] io_lqIdx,\0A  input  [ 6:0] io_sqIdx,\0A  input         io_isLoad,\0A  input         io_isStore,\0A  input  [ 7:0] io_nFused,\0A  input  [ 7:0] io_special,\0A  input  [ 7:0] io_coreid,\0A  input  [ 7:0] io_index\0A);\0A`ifndef SYNTHESIS\0A`ifdef DIFFTEST\0A\0Aimport \22DPI-C\22 function void v_difftest_InstrCommit (\0A  input       bit io_skip,\0A  input       bit io_isRVC,\0A  input       bit io_rfwen,\0A  input       bit io_fpwen,\0A  input       bit io_vecwen,\0A  input      byte io_wpdest,\0A  input      byte io_wdest,\0A  input   longint io_pc,\0A  input       int io_instr,\0A  input       int io_robIdx,\0A  input      byte io_lqIdx,\0A  input      byte io_sqIdx,\0A  input       bit io_isLoad,\0A  input       bit io_isStore,\0A  input      byte io_nFused,\0A  input      byte io_special,\0A  input      byte io_coreid,\0A  input      byte io_index\0A);\0A\0A\0A  always @(posedge clock) begin\0A    if (enable)\0A      v_difftest_InstrCommit (io_skip, io_isRVC, io_rfwen, io_fpwen, io_vecwen, io_wpdest, io_wdest, io_pc, io_instr, io_robIdx, io_lqIdx, io_sqIdx, io_isLoad, io_isStore, io_nFused, io_special, io_coreid, io_index);\0A  end\0A`endif\0A`endif\0Aendmodule\0A" {output_file = #hw.output_file<"./DifftestInstrCommit.v">}
    sv.verbatim "\0Amodule DifftestIntWriteback(\0A  input         clock,\0A  input         enable,\0A  input         io_valid,\0A  input  [ 4:0] io_address,\0A  input  [63:0] io_data,\0A  input  [ 7:0] io_coreid\0A);\0A`ifndef SYNTHESIS\0A`ifdef DIFFTEST\0A\0Aimport \22DPI-C\22 function void v_difftest_IntWriteback (\0A  input      byte io_address,\0A  input   longint io_data,\0A  input      byte io_coreid\0A);\0A\0A\0A  always @(posedge clock) begin\0A    if (enable)\0A      v_difftest_IntWriteback (io_address, io_data, io_coreid);\0A  end\0A`endif\0A`endif\0Aendmodule\0A" {output_file = #hw.output_file<"./DifftestIntWriteback.v">}
    sv.verbatim "\0A`ifdef SYNTHESIS\0A  `define DISABLE_DIFFTEST_RAM_DPIC\0A`endif\0A\0A`ifndef DISABLE_DIFFTEST_RAM_DPIC\0Aimport \22DPI-C\22 function longint difftest_ram_read(input longint rIdx);\0A`endif // DISABLE_DIFFTEST_RAM_DPIC\0A\0A\0A`ifndef DISABLE_DIFFTEST_RAM_DPIC\0Aimport \22DPI-C\22 function void difftest_ram_write\0A(\0A  input  longint index,\0A  input  longint data,\0A  input  longint mask\0A);\0A`endif // DISABLE_DIFFTEST_RAM_DPIC\0A\0Amodule MemRWHelper(\0A  \0Ainput             r_enable,\0Ainput      [63:0] r_index,\0Aoutput reg [63:0] r_data,\0A\0A  \0Ainput         w_enable,\0Ainput  [63:0] w_index,\0Ainput  [63:0] w_data,\0Ainput  [63:0] w_mask,\0A\0A  input clock\0A);\0A  \0A`ifdef DISABLE_DIFFTEST_RAM_DPIC\0A`ifdef PALLADIUM\0A  initial $ixc_ctrl(\22tb_import\22, \22$display\22);\0A`endif // PALLADIUM\0A\0A// 1536MB memory\0A`define RAM_SIZE (1536 * 1024 * 1024)\0Areg [63:0] memory [0 : `RAM_SIZE / 8 - 1];\0A\0A`define MEM_TARGET memory\0A\0A  string bin_file;\0A  integer memory_image = 0, n_read = 0, byte_read = 1;\0A  byte data;\0A  initial begin\0A    if ($test$plusargs(\22workload\22)) begin\0A      $value$plusargs(\22workload=%s\22, bin_file);\0A      memory_image = $fopen(bin_file, \22rb\22);\0A    if (memory_image == 0) begin\0A      $display(\22Error: failed to open %s\22, bin_file);\0A      $finish;\0A    end\0A    foreach (`MEM_TARGET[i]) begin\0A      if (byte_read == 0) break;\0A      for (integer j = 0; j < 8; j++) begin\0A        byte_read = $fread(data, memory_image);\0A        if (byte_read == 0) break;\0A        n_read += 1;\0A        `MEM_TARGET[i][j * 8 +: 8] = data;\0A      end\0A    end\0A    $fclose(memory_image);\0A    $display(\22%m: load %d bytes from %s.\22, n_read, bin_file);\0A  end\0Aend\0A\0A`endif // DISABLE_DIFFTEST_RAM_DPIC\0A\0A  always @(posedge clock) begin\0A    \0A`ifndef DISABLE_DIFFTEST_RAM_DPIC\0Aif (r_enable) begin\0A  r_data <= difftest_ram_read(r_index);\0Aend\0A`else\0Aif (r_enable) begin\0A  r_data <= `MEM_TARGET[r_index];\0Aend\0A`endif // DISABLE_DIFFTEST_RAM_DPIC\0A\0A    \0A`ifndef DISABLE_DIFFTEST_RAM_DPIC\0Aif (w_enable) begin\0A  difftest_ram_write(w_index, w_data, w_mask);\0Aend\0A`else\0Aif (w_enable) begin\0A  `MEM_TARGET[w_index] <= (w_data & w_mask) | (`MEM_TARGET[w_index] & ~w_mask);\0Aend\0A`endif // DISABLE_DIFFTEST_RAM_DPIC\0A\0A  end\0Aendmodule\0A     " {output_file = #hw.output_file<"./MemRWHelper.v">}
    sv.verbatim "\0Aimport \22DPI-C\22 function void put_pixel(input int pixel);\0Aimport \22DPI-C\22 function void vmem_sync();\0A\0Amodule FBHelper (\0A  input clk,\0A  input valid,\0A  input [31:0] pixel,\0A  input sync\0A);\0A\0A  always@(posedge clk) begin\0A    if (valid) put_pixel(pixel);\0A    if (sync) vmem_sync();\0A  end\0A\0Aendmodule\0A     " {output_file = #hw.output_file<"./FBHelper.v">}
    sv.verbatim "\0Aimport \22DPI-C\22 function void sd_setaddr(input int addr);\0Aimport \22DPI-C\22 function void sd_read(output int data);\0A\0Amodule SDHelper (\0A  input clk,\0A  input setAddr,\0A  input [31:0] addr,\0A  input ren,\0A  output reg [31:0] data\0A);\0A\0A  always @(negedge clk) begin\0A    if (ren) sd_read(data);\0A  end\0A  always@(posedge clk) begin\0A    if (setAddr) sd_setaddr(addr);\0A  end\0A\0Aendmodule\0A     " {output_file = #hw.output_file<"./SDHelper.v">}
    sv.verbatim "DifftestArchEvent.v\0ADifftestArchIntRegState.v\0ADifftestCSRState.v\0ADifftestInstrCommit.v\0ADifftestIntWriteback.v\0ADifftestTrapEvent.v\0AFBHelper.v\0ALogPerfHelper.v\0AMemRWHelper.v\0ASDHelper.v" {output_file = #hw.output_file<"firrtl_black_box_resource_files.f", excludeFromFileList>}
  }
}
